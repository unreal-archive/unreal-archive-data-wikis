---
parse:
  title: "Legacy:Compiler Errors"
  text:
    text: "<table style=\"\" class=\"metadata plainlinks ambox ambox-notice\">\n<tr>\n\
      <td class=\"ambox-image\">\n<div style=\"width:52px;\"><a href=\"/File:Oldwikilogo.png\"\
      \ class=\"image\" title=\"Legacy content notice\"><img alt=\"Legacy content\
      \ notice\" src=\"/w/images/thumb/Oldwikilogo.png/52px-Oldwikilogo.png\" width=\"\
      52\" height=\"37\" srcset=\"/w/images/Oldwikilogo.png 1.5x, /w/images/Oldwikilogo.png\
      \ 2x\" /></a></div>\n</td>\n<td class=\"ambox-text\">\n<p><b>This is a <a href=\"\
      /Unreal_Wiki:Namespaces#Legacy\" title=\"Unreal Wiki:Namespaces\">legacy</a>\
      \ page <a href=\"/Unreal_Wiki:MediaWiki_conversion\" title=\"Unreal Wiki:MediaWiki\
      \ conversion\">imported</a> from the old Unreal Wiki.</b></p>\n<p><i>Please\
      \ avoid editing or moving it and improve <a href=\"/Compiler_Error\" title=\"\
      Compiler Error\" class=\"mw-redirect\">Compiler Error</a> instead.</i></p>\n\
      </td>\n</tr>\n</table>\n<p>The warnings and errors described on this page are\
      \ generated only by the compiler. If you need information about logged in-game\
      \ warnings see <a href=\"/Legacy:Log_Warnings\" title=\"Legacy:Log Warnings\"\
      >Log Warnings</a>.</p>\n<p>The <a href=\"/Legacy:Ucc\" title=\"Legacy:Ucc\"\
      >Ucc</a> Make <a href=\"/Legacy:Commandlet\" title=\"Legacy:Commandlet\">commandlet</a>\
      \ outputs warning and critical error messages in the form</p>\n<pre><i>&lt;path\
      \ and filename&gt;</i>(<i>line number</i>) : <i>error message</i>\n</pre>\n\
      <p>Usually the problem can be found by opening the specified file and looking\
      \ at the specified line number. Exceptions are missing declarations or braces\
      \ further up in the file or missing declarations in a superclass (if it's part\
      \ of your code). The Wiki recommends the <a href=\"/Legacy:UMake\" title=\"\
      Legacy:UMake\">UMake</a> compiling tool&#160;:D.</p>\n<p></p>\n<div id=\"toc\"\
      \ class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li\
      \ class=\"toclevel-1 tocsection-1\"><a href=\"#Warnings\"><span class=\"tocnumber\"\
      >1</span> <span class=\"toctext\">Warnings</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-2\"><a href=\"#Syntax_Errors\"><span class=\"tocnumber\">2</span>\
      \ <span class=\"toctext\">Syntax Errors</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-3\"><a href=\"#General_Structure\"><span class=\"tocnumber\">2.1</span>\
      \ <span class=\"toctext\">General Structure</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-4\"><a href=\"#Functions\"><span class=\"tocnumber\">2.2</span>\
      \ <span class=\"toctext\">Functions</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-5\"><a href=\"#Variables\"><span class=\"tocnumber\">2.3</span>\
      \ <span class=\"toctext\">Variables</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#Typecasting\"><span class=\"tocnumber\">2.4</span>\
      \ <span class=\"toctext\">Typecasting</span></a></li>\n</ul>\n</li>\n<li class=\"\
      toclevel-1 tocsection-7\"><a href=\"#Exec_Warnings\"><span class=\"tocnumber\"\
      >3</span> <span class=\"toctext\">Exec Warnings</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-8\"><a href=\"#Bizarre_Compiler_Errors\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Bizarre Compiler Errors</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#Unknown\"><span class=\"\
      tocnumber\">4.1</span> <span class=\"toctext\">Unknown</span></a></li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"#Related_Topics\"><span\
      \ class=\"tocnumber\">5</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-11\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">6</span> <span class=\"toctext\">Discussion</span></a>\n<ul>\n<li\
      \ class=\"toclevel-2 tocsection-12\"><a href=\"#Script_serialization_mismatch\"\
      ><span class=\"tocnumber\">6.1</span> <span class=\"toctext\">Script serialization\
      \ mismatch</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Warnings\">Warnings</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=1\"\
      \ title=\"Edit section: Warnings\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>Warning, '<i>name</i>' obscures '<i>name</i>'\
      \ defined in base class&#160;</dt>\n<dd>You declared a class variable, struct\
      \ or enum with the same name as a class variable, struct or enum of a superclass.\
      \ This will obscure the object in the superclass so you can't access it in the\
      \ code of your class anymore.<br />\nIn UT2004 this warning also applies to\
      \ local function variables which obscure class variables in the same class or\
      \ one of its superclasses.</dd>\n</dl>\n<p><b>Foxpaw:</b> Could you get around\
      \ this by simply using Self.? IE, if variable A was obscured by local variable\
      \ A, you should be able to access local A with A, and global A with Self.A.\
      \ Seems like it would work.</p>\n<p><b>Wormbo:</b> Of course you could, but\
      \ the warning is there because the usual way to access the class varaible is\
      \ blocked. It's easier to find the problem with this warning when you access\
      \ the obscuring variable instead of the obscured one in you code.</p>\n<dl>\n\
      <dt>Warning, '<i>variable name</i>' - unreferenced local variable&#160;</dt>\n\
      <dd>A function declares a local variable but doesn't use it beyond that – you\
      \ may as well remove it if <a href=\"http://c2.com/cgi/wiki?YouArentGonnaNeedIt\"\
      \ class=\"extiw\" title=\"wiki:YouArentGonnaNeedIt\">Wiki:YouArentGonnaNeedIt</a></dd>\n\
      </dl>\n<dl>\n<dt>Warning, <i>function name</i> - Missing return value&#160;</dt>\n\
      <dd>The function is declared as returning a value, but there's no <b>return</b>\
      \ statement in the function. The default value of that variable type will be\
      \ returned (e.g. false, 0, \"\", None; also see <a href=\"/Legacy:Variable_Syntax\"\
      \ title=\"Legacy:Variable Syntax\">Variable Syntax</a>)</dd>\n</dl>\n<dl>\n\
      <dt>ExecWarning, Reference to deprecated property '<i>variable name</i>'&#160;</dt>\n\
      <dd>You are using a variable marked as deprecated in your code.</dd>\n</dl>\n\
      <dl>\n<dt>Warning, Class names shouldn't end in a digit</dt>\n<dd>This warning\
      \ appears harmless enough. Classes with names ending in a digit (IE BloodFX2)\
      \ seem to work fine.</dd>\n</dl>\n<dl>\n<dt>Warning, Missing Function&#160;</dt>\n\
      <dd>You are calling a function that has not been defined.</dd>\n</dl>\n<h2><span\
      \ class=\"mw-headline\" id=\"Syntax_Errors\">Syntax Errors</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=2\"\
      \ title=\"Edit section: Syntax Errors\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"General_Structure\"\
      >General Structure</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Compiler_Errors?section=3\" title=\"Edit section:\
      \ General Structure\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <dl>\n<dt>Bad class definition '<i>class name</i>'&#160;</dt>\n<dd>In <a href=\"\
      /Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>, the\
      \ most common cause for this error is that you accidentally used \"expands\"\
      \ instead of \"extends.\" The old keyword \"expands\" is not supported anymore.\
      \ (It has been considered deprecated for a long while already.)</dd>\n</dl>\n\
      <dl>\n<dt>Superclass <i>class name</i> of class <i>other class name</i> not\
      \ found&#160;</dt>\n<dd>The superclass of one of your classes couldn't be found.\
      \ Check the class header of the second class for typos. If the superclass is\
      \ in the same package also check its class header, if not check the <a href=\"\
      /Legacy:Game_Ini_File\" title=\"Legacy:Game Ini File\">Game Ini File</a>'s EditPackages\
      \ lines for missing packages.</dd>\n</dl>\n<dl>\n<dt>Unexpected end of file\
      \ at end of class&#160;</dt>\n<dd>This is usually caused by one or more missing\
      \ \"<code>}</code>\". This error can be quite annoying in large classes. Most\
      \ of it is prevented by proper code indentation and (what experienced coders\
      \ frequently do) writing <i>both</i> the opening and the closing brace at the\
      \ same time and then filling in code between them.</dd>\n</dl>\n<dl>\n<dt>Unexpected\
      \ 'defaultproperties'&#160;</dt>\n<dd>The <a href=\"/Legacy:Default_Properties\"\
      \ title=\"Legacy:Default Properties\">default properties</a> block can only\
      \ be used outside of <a href=\"/Legacy:UnrealEd\" title=\"Legacy:UnrealEd\"\
      \ class=\"mw-redirect\">UnrealEd</a>. Within UnrealEd, they have to be set from\
      \ the <a href=\"/Legacy:Actor_Classes_Browser\" title=\"Legacy:Actor Classes\
      \ Browser\" class=\"mw-redirect\">Actor Classes Browser</a> interface; hidden\
      \ variables (not declared to show up in any of the property groups) can have\
      \ their defaults set via the <a href=\"/Legacy:UnrealEd_Console\" title=\"Legacy:UnrealEd\
      \ Console\">UnrealEd console</a>. Use <a href=\"/Legacy:Compiling_With_UCC\"\
      \ title=\"Legacy:Compiling With UCC\">UCC Make</a> instead of UnrealEd to compile\
      \ your classes if you want to use this feature. This error can also happen when\
      \ you use a weird commenting style like:\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"coMULTI\">/* some comment</span></pre></div>\n</div>\n</dd>\n\
      </dl>\n<ul>\n<li><span class=\"coMULTI\">/</span><span class=\"co1\">//===========</span>Basically\
      \ using a multi-line comment immediately followed by a single-line comment anywhere\
      \ in your class breaks the parser and makes it complain about the defaultproperties\
      \ keyword. Add a whitespace or linebreak or think about your commenting style\
      \ in general.&#160;;)</li>\n</ul>\n<dl>\n<dt>Unexpected '<i>} or identifier</i>'&#160;</dt>\n\
      <dd>This is caused by one or more missing \"<code>{</code>\" or too many \"\
      <code>}</code>\". See suggestions above.</dd>\n</dl>\n<dl>\n<dt>Call to '<i>function</i>':\
      \ Type mismatch in parameter <i>number</i>&#160;</dt>\n<dd>One of the parameters\
      \ in your function call doesn't have the right type and can't be automatically\
      \ <a href=\"/Legacy:Typecasting\" title=\"Legacy:Typecasting\">casted</a> to\
      \ it. Look up the original declaration of the function (in the original UnrealScript\
      \ source code or here on the Wiki) and double-check against the types of the\
      \ values you're actually using.</dd>\n</dl>\n<dl>\n<dt>Error, Call to '<i>function\
      \ name</i>': bad or missing parameter 1</dt>\n<dd>Due to Non-Existing Variable\
      \ or Spelling mistake Example:\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\">TriggerEvent<span\
      \ class=\"br0\">(</span><span class=\"st0\">'SomethingWrongHere'</span>, <span\
      \ class=\"kw6\">Self</span>, <span class=\"kw7\">Instigator</span><span class=\"\
      br0\">)</span></pre></div>\n</div>\n</dd>\n</dl>\n<dl>\n<dt>Error, Call to '<i>function\
      \ name</i>': Bad ',' or missing ')'&#160;</dt>\n<dd>This error is reported if\
      \ you attempt to call a function with more parameters than it was declared with.\
      \ In other words, there should be no comma where the compiler found it, maybe\
      \ the call is simply missing a right parenthesis there. For example the <a href=\"\
      /Legacy:Global_Function\" title=\"Legacy:Global Function\">global function</a>\
      \ <b>Atan</b> was defined with only one parameter in UT1, but with two parameters\
      \ in later engine generations.</dd>\n</dl>\n<dl>\n<dt>Internal fixup error 0&#160;</dt>\n\
      <dd>This error occurs when using <code>break</code> in an <code>if</code> statement\
      \ inside a <code>case</code> block.</dd>\n</dl>\n<dl>\n<dt>'Else': Bad command\
      \ or expression&#160;</dt>\n<dd>Make sure there is an <code>If</code> right\
      \ before the mentioned <code>else</code>. If that <code>If</code> block executes\
      \ more that one line of code, make sure the block is enclosed in braces. See\
      \ <a href=\"/Legacy:Flow_Syntax\" title=\"Legacy:Flow Syntax\">Flow Syntax</a>.</dd>\n\
      </dl>\n<dl>\n<dt>Error, Bad or missing expression in '(some expression)'</dt>\n\
      <dd>Check whatever comes after the expression mentioned in the message. For\
      \ example, a \"Bad or missing expression in 'If'\" could mean the condition\
      \ does not evaluate to a boolean value (True or False), and generally you might\
      \ have mistyped the function or variable name.</dd>\n</dl>\n<dl>\n<dt>Error,\
      \ Right type is incompatable with \"$\"</dt>\n<dd>Usually when you have only\
      \ specified the name of an array and not the variable contained inside.</dd>\n\
      </dl>\n<dl>\n<dt>Error, Missing '(' in 'if'&#160;</dt>\n<dd>Usually due to wrong\
      \ operator eg. using If(a=b) instead of if(a==B).</dd>\n</dl>\n<dl>\n<dt>Error,Missing\
      \ '(' in 'struct'&#160;</dt>\n<dd>Can be caused by leaving Blank spaces in a\
      \ variable name inside a struct.</dd>\n</dl>\n<dl>\n<dt>'Else If' is not allowed\
      \ here<br />\n'Else' is not allowed here&#160;</dt>\n<dd>Most likely you have\
      \ the wrong number of braces after an <code>If</code> statement.</dd>\n</dl>\n\
      <dl>\n<dt>'class' is not allowed here&#160;</dt>\n<dd>Generally caused by having\
      \ your class statement in the wrong place. However, I got this error as well\
      \ in a switch statement by putting something after default, like so:</dd>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw2\">switch</span><span\
      \ class=\"br0\">(</span> CameraMode <span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  <span class=\"kw2\">case</span> CAM_FocusFollowLOS:\n<span\
      \ class=\"co1\">//  ... lots of stuff skipped here</span>\n  <span class=\"\
      kw1\">default</span>:\n  <span class=\"kw2\">case</span> CAM_Still:\n    <span\
      \ class=\"kw2\">break</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <dl>\n<dt>Enum is not allowed here.&#160;</dt>\n<dd>You have an enum declaration\
      \ appearing after functions. Enums must be defined at the top of the class along\
      \ with variables.</dd>\n</dl>\n<dl>\n<dt>Bad variable or function '<i>name</i>'\
      \ in replication definition&#160;</dt>\n<dd>The variable or function isn't declared\
      \ in this class. Check for spelling errors and make sure the specified variable\
      \ or function isn't already declared in a superclass.</dd>\n</dl>\n<dl>\n<dt>Error,\
      \ 'class': Limitor '<i>name</i>' is not a class name&#160;</dt>\n<dd>The <i>class\
      \ name</i> in <tt>class&lt;<i>class name</i>&gt;</tt> does not point to an existing\
      \ class. Make sure that the specified class is ed at the time the script is\
      \ compiled.</dd>\n</dl>\n<dl>\n<dt>Can't find Class '<i>class name</i>'&#160;</dt>\n\
      <dd>This error can also occur for <a href=\"/Legacy:Texture\" title=\"Legacy:Texture\"\
      >Textures</a>, <a href=\"/Legacy:Sound\" title=\"Legacy:Sound\">Sounds</a>,\
      \ <a href=\"/Legacy:Mesh\" title=\"Legacy:Mesh\">Meshes</a>, etc. Make sure\
      \ the specified class is ed at compile time by either adding its package to\
      \ the EditPackages <i>above</i> your package's entry or using an <code>#exec\
      \ OBJ LOAD</code> line.</dd>\n</dl>\n<dl>\n<dt><i>Package1.ClassName</i>'s superclass\
      \ must be <i>Package1.SuperClassName</i>, not <i>Package2.SuperClassName</i>&#160;</dt>\n\
      <dd>I got this weird error message when compiling two packages with similar\
      \ class structures. <i>Package1</i> contained a class <i>ClassName</i> with\
      \ the superclass <i>SuperClassName</i> (both in <i>Package1</i>) and <i>Package2</i>\
      \ contained the same classes. <i>Package2</i> was compiled before <i>Package1</i>\
      \ and the error occured during parsing of <i>ClassName</i> in <i>Package1</i>.<br\
      \ />\nAlways change the class names when copying them from one project to another.\
      \ It's fine as long as you compile them seperately, but as soon as you need\
      \ both of them problems like this start occuring.<br />\n<br />\n<b>j3rky:</b>\
      \ This error message also appears if you changed the ancestor class of native\
      \ actors and objects (e.g. <i>class A extends B</i> changed to <i>class A extends\
      \ C</i>), without having rebuilt the native DLL. In that case, the native DLL\
      \ still references the old class <i>B</i> while the script compiler is trying\
      \ to bind to the new class <i>C</i>. Fix this by deleting the old DLL, or by\
      \ running <i>ucc make</i> with the <i>-nobind</i> option. Rebuild the DLL with\
      \ the new generated header file.</dd>\n</dl>\n<dl>\n<dt>Unterminated string\
      \ constant&#160;</dt>\n<dd>This error occurs, when the closing double quotation\
      \ marks for a string are missing. Note that while strings may contain line breaks,\
      \ they may not span several lines in your code. Use the <code>Chr</code> function\
      \ to generate the line break characters if you need them.</dd>\n</dl>\n<p><b>fataoverdose</b>You\
      \ can also get this error if you put one to many double quotation marks in the\
      \ string.</p>\n<dl>\n<dt>BEGIN OBJECT: name <i>objectname</i> redefined.&#160;</dt>\n\
      <dd>This error occures if two or more objects declared in the <a href=\"/Legacy:Default_Properties\"\
      \ title=\"Legacy:Default Properties\">default properties</a> of the same class\
      \ have the same name. The objects must have unique names.</dd>\n</dl>\n<dl>\n\
      <dt>redundant data: <i>defaultproperty declaration</i>&#160;</dt>\n<dd>You get\
      \ this error when you redefine the default value of a property in the same class,\
      \ like:\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">defaultproperties</span></pre></div>\n\
      </div>\n</dd>\n</dl>\n<p><span class=\"br0\">{</span></p>\n<pre> somearray<span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">=</span><span class=\"st0\">\"this will be reported by the compiler\"\
      </span>\n somearray<span class=\"br0\">(</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"st0\">\"this\
      \ won't be reported\"</span>\n</pre>\n<p><span class=\"br0\">}</span></p>\n\
      <p><b>Foxpaw:</b> I accidentally did something similar, but the second variable\
      \ was reported, not the first. However, since the variable in your example is\
      \ an array, it may be treated differently. My code was (trimmed down a bit):</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n  <span class=\"kw7\">Skins</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">=</span><span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'PlayerSkins.JuggMaleABodyA'</span>\n  <span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">=</span><span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'PlayerSkins.JuggMaleAHeadA'</span>\n  <span class=\"kw7\">CollisionRadius</span><span\
      \ class=\"sy0\">=+</span><span class=\"nu0\">00050.000000</span>\n  <span class=\"\
      kw7\">CollisionHeight</span><span class=\"sy0\">=+</span><span class=\"nu0\"\
      >00050.000000</span>\n \n  <span class=\"kw7\">CollisionRadius</span><span class=\"\
      sy0\">=+</span><span class=\"nu0\">00034.000000</span>\n  <span class=\"kw7\"\
      >CollisionHeight</span><span class=\"sy0\">=+</span><span class=\"nu0\">00078.000000</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>In this code it reported\
      \ that the 34 and 78 were the redundant data.</p>\n<dl>\n<dt>Missing '(' in\
      \ 'Remove(...)'&#160;</dt>\n<dd>A dynamic array's Remove method expects the\
      \ index of the first element and the number of elements to be removed in parentheses,\
      \ like \"Remove(2,4)\".</dd>\n</dl>\n<p>}</p>\n<dl>\n<dt>Missing \"(\" in editable\
      \ member variable</dt>\n<dd>Don't put anything in the parentheses next to a\
      \ variable name when defining a struct ie.</dd>\n</dl>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">struct</span> mystruct\n<span class=\"\
      br0\">{</span>\n<span class=\"kw1\">Var</span><span class=\"br0\">(</span>myvalues<span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span> ValueA;\n<span class=\"\
      kw1\">Var</span><span class=\"br0\">(</span>myvalues<span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span> ValueB;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>This will work;</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">struct</span> mystruct\n<span class=\"br0\">{</span>\n<span class=\"kw1\"\
      >Var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">float</span> ValueA;\n<span class=\"kw1\">Var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span> ValueB;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Error, ArrayCount\
      \ argument is not an array&#160;</dt>\n<dd>The syntax <tt>ArrayCount(<i>arrayname</i>)</tt>\
      \ only applies to static arrays. Use <tt><i>arrayname</i>.Length</tt> for dynamic\
      \ arrays instead.</dd>\n</dl>\n<dl>\n<dt>Map are not supported in UnrealScript\
      \ yet&#160;</dt>\n<dd>You felt like experimenting, huh?&#160;:) The <code>map</code>\
      \ variable type isn't supported in UnrealScript.</dd>\n</dl>\n<dl>\n<dt>General\
      \ protection fault!, ScriptCompiler::CompileSecondPass&#160;</dt>\n<dd>There's\
      \ actually quite a string that acoompanies this, but this part should signal\
      \ you that this is what you've got. You did something that the compiler can't\
      \ handle but Epic never imagined you'd try. I got this error from trying to\
      \ use an unconditional replication. I wanted this function to be replicated\
      \ to the other party regardless of which machine it originated on, so I tried:\
      \ reliable AddAction,RemoveAction; This will generate the above error. You MUST\
      \ use the if part of the replication statement even if it will always be true.\
      \ There isn't any way to know exactly what is causing this error in your code,\
      \ but by looking at the ucc.log, you can at least determine which class the\
      \ unexpected error was encountered (it will be the last class listed prior to\
      \ the stack trace).\n<dl>\n<dd>Another way to get the GFP failt is using [dependsOn]\
      \ with a class that doesn't exists.</dd>\n</dl>\n</dd>\n</dl>\n<h3><span class=\"\
      mw-headline\" id=\"Functions\">Functions</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=4\"\
      \ title=\"Edit section: Functions\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>Redefinition of '<i>function name</i>' differs\
      \ from original&#160;</dt>\n<dd>When overriding functions you are not allowed\
      \ to change the return type, the number or type of parameters or some of the\
      \ function modifiers, e.g. static functions must stay static, public functions\
      \ can't become protected. (E.g. simulated or native functions can become non-simulated\
      \ or non-native in subclasses though, because those keywords only apply to the\
      \ actual implementation in that single class.)<br />\nFunctions can't be over\
      \ ed in UnrealScript.</dd>\n</dl>\n<dl>\n<dt>'<i>function name</i>': too many\
      \ parameters&#160;</dt>\n<dd>In UnrealScript functions can have a maximum of\
      \ 16 parameters. If you need more parameters you will have to put them in a\
      \ struct or array and pass that to the function.</dd>\n</dl>\n<dl>\n<dt>Function\
      \ '<i>function name</i>' specifiers differ from original&#160;</dt>\n<dd>This\
      \ error occurs when you try to override a final function or try to override\
      \ a public function with a protected or private one or a protected function\
      \ with a private or public one. (see <a href=\"/Legacy:Function_Syntax\" title=\"\
      Legacy:Function Syntax\">Function Syntax</a>)</dd>\n</dl>\n<dl>\n<dt>'<i>identifier</i>'\
      \ conflicts with '<i>other identifier</i>'&#160;</dt>\n<dd>You can have only\
      \ one function of the same name within the same state of a class, and you can't\
      \ have variables and functions with the same name in the same class at all.\
      \ Rename or remove one of the conflicting identifiers.</dd>\n</dl>\n<dl>\n<dt>Can't\
      \ call instance functions from within static functions&#160;</dt>\n<dd><a href=\"\
      /Legacy:Static_Function\" title=\"Legacy:Static Function\">Static functions</a>\
      \ can only call other static functions. Check if your function really needs\
      \ to be static or whether you forgot to declare the other function as static.<br\
      \ />\nYou can also get this error when trying to call a non-static function\
      \ via the <tt>class'SomeClass'.static.FunctionName()</tt> syntax.</dd>\n</dl>\n\
      <dl>\n<dt>Bad preoperator definition</dt>\n<dd>Your declaration of a preoperator\
      \ is invalid. This is most often caused by attempting to set a priority for\
      \ a preoperator, as preoperators and postoperators do not take a priority value.\
      \ See <a href=\"/Legacy:Scripting_Operators\" title=\"Legacy:Scripting Operators\"\
      >Scripting Operators</a> for the proper declaration.</dd>\n</dl>\n<dl>\n<dt>Bad\
      \ postoperator definition</dt>\n<dd>This is the same as \"Bad preoperator definition,\"\
      \ but for postoperators.</dd>\n</dl>\n<dl>\n<dt>Unknown Function '<i>function\
      \ name</i>' in 'Class <i>Package1.ClassName</i>'</dt>\n<dd>This error comes\
      \ up when your code attempts to call a function that does not exist. You may\
      \ have forgot the parenthesis when using the <code>super</code> keyword to call\
      \ a function that have no parameters. This can also be caused by forgetting\
      \ the cast on an object reference. Sometimes it is also caused by a misspelled\
      \ function name.</dd>\n</dl>\n<dl>\n<dt><i>Function name</i> mismatches delegate\
      \ <i>delegate name</i>&#160;</dt>\n<dd>You tried to assign a function to a delegate\
      \ property, but the function's parameters and/or return value don't match the\
      \ delegate's parameters and/or return value.</dd>\n</dl>\n<dl>\n<dt>Delegate\
      \ assignment failed</dt>\n<dd>You tried to assign a function to a delegate property,\
      \ but the function's parameters and/or return value don't match the delegate's\
      \ parameters and/or return value.</dd>\n</dl>\n<dl>\n<dt>Error, operator must\
      \ have 2 parameters&#160;</dt>\n<dd>Binary operators must be declared with two\
      \ parameters and a return value. See <a href=\"/Legacy:Scripting_Operators\"\
      \ title=\"Legacy:Scripting Operators\">Scripting Operators</a>.</dd>\n</dl>\n\
      <h3><span class=\"mw-headline\" id=\"Variables\">Variables</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=5\"\
      \ title=\"Edit section: Variables\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>Can't assign Const variables&#160;</dt>\n<dd>You\
      \ are not allowed to assign class variables declared with the const modifier.\
      \ (See <a href=\"/Legacy:Variable_Syntax\" title=\"Legacy:Variable Syntax\"\
      >Variable Syntax</a>.) Instead find a native function which can set this variable.\
      \ (e.g. SetDrawScale() for the DrawScale property)</dd>\n<dt>Error, Missing\
      \ '&gt;' in 'class limitor'&#160;</dt>\n<dd></dd>\n</dl>\n<p>I got this problem\
      \ with the following code:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">var</span> array<span class=\"sy0\">&lt;</span>class<span class=\"sy0\"\
      >&lt;</span>WeaponFire<span class=\"sy0\">&gt;&gt;</span> WFCs;</pre></div>\n\
      </div>\n<p>which was easily fixed by changing it to the following:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>class<span class=\"sy0\">&lt;</span>WeaponFire<span\
      \ class=\"sy0\">&gt;</span> <span class=\"sy0\">&gt;</span> WFCs;</pre></div>\n\
      </div>\n<p>Presumably, it parses \"&gt;&gt;\" as an <a href=\"/Legacy:Operator\"\
      \ title=\"Legacy:Operator\" class=\"mw-redirect\">operator</a> and then can't\
      \ find the closing \"&gt;\".</p>\n<p><br /></p>\n<dl>\n<dt>Can't save <i>class</i>:\
      \ Graph is linked to external private object <i>object</i>&#160;</dt>\n<dd>One\
      \ of your classes is making a reference to an object in another package without\
      \ the RF_Public flag set. This is not permitted in Unreal Packages. Check your\
      \ class for references to private or protected variables in other classes or\
      \ to other object constants. This error can also occur if you reference a protected\
      \ variable in a superclass *if* your derived class resides in a different package\
      \ from the class where the protected member is declared (even though this is\
      \ technically supposed to work).</dd>\n</dl>\n<dl>\n<dt>Enums can only be declared\
      \ in class or struct scope&#160;</dt>\n<dd>Like the message says. Enums can't\
      \ be declared in functions or operators.</dd>\n</dl>\n<dl>\n<dt>Variable declaration:\
      \ '<i>variable name</i>' already defined&#160;</dt>\n<dd>You tried to declare\
      \ two variables with the same name in the same function.</dd>\n</dl>\n<dl>\n\
      <dt>Expression has no effect&#160;</dt>\n<dd>Expressions like <code>Int1 + Int2;</code>\
      \ have no effect, i.e. they don't change anything when not assigned to a variable.\
      \ This error can also be caused by using an incorrect syntax for assigning values\
      \ to array elements like <code>anArray(0) = anything;</code> (the correct syntax\
      \ is <code>anArray[0] = anything;</code>)</dd>\n</dl>\n<dl>\n<dt>')' Expression\
      \ has no effect&#160;</dt>\n<dd>You could be missing the first '(' in a log\
      \ command. You could also be typecasting wrong. Also, make sure a function parameter\
      \ does not have the same name as a function you're calling in that function.\
      \ Example:</dd>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> ThisIsWrong<span class=\"br0\">(</span><span class=\"\
      kw5\">int</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n   <span class=\"kw2\">If</span><span class=\"\
      br0\">(</span><span class=\"kw4\">Spawn</span> <span class=\"sy0\">==</span>\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span>\n   <span class=\"\
      kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'AClass'</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Unrecognized member '<i>variable\
      \ name</i>' in class '<i>class name</i>'</dt>\n<dd>You're attempting to use\
      \ a <i>variable name</i> that is not defined as a global variable in class <i>class\
      \ name</i>. This usually occurs when you've typecasted a class variable, such\
      \ as PlayerPawn(P) where P was defined as a Pawn. In this situation, at the\
      \ line this error mentions, you've probably forgotten to typecast your P variable.</dd>\n\
      </dl>\n<dl>\n<dt>Unrecognized type '<i>variable type</i>'&#160;</dt>\n<dd>The\
      \ class, enum or struct you wanted to use is not declared or not visible from\
      \ this point. Also check for typos.</dd>\n</dl>\n<dl>\n<dt>Type mismatch in\
      \ '<i>operator</i>'&#160;</dt>\n<dd>The variable type you specified doesn't\
      \ match the type the operatore requires and can't be automatically casted to\
      \ the required type.</dd>\n</dl>\n<dl>\n<dt>Type mismatch in 'If'&#160;</dt>\n\
      <dd>Similar to the type mismatch in operator. The condition must be a boolean\
      \ value, it will not be <a href=\"/Legacy:Typecasting\" title=\"Legacy:Typecasting\"\
      >typecasted</a> automatically. Often the use of <code>=</code> instead of <code>----</code>\
      \ causes this error.</dd>\n</dl>\n<dl>\n<dt>Array mismatch in '='&#160;</dt>\n\
      <dd>This error is thrown when some code attempts to copy a static array. Static\
      \ arrays can be passed as function parameters but can't be copied. This implies\
      \ that static arrays also can't be used as return types because they cannot\
      \ be assigned to a more permanent var. Consider using a <a href=\"/Legacy:Dynamic_Array\"\
      \ title=\"Legacy:Dynamic Array\">Dynamic_Array</a> instead.</dd>\n</dl>\n<dl>\n\
      <dt>Unrecognized variable '<i>variable name</i>' name in replication definition&#160;</dt>\n\
      <dd>You tried to replicate a variable or function which was not declared in\
      \ this class. Check for typos.</dd>\n</dl>\n<dl>\n<dt>Bool arrays are not allowed&#160;</dt>\n\
      <dd>Well, they are not allowed.&#160;:) Use <i>byte</i> arrays instead.</dd>\n\
      </dl>\n<dl>\n<dt>Can only assign individual booleans, not boolean arrays&#160;</dt>\n\
      <dd>You tried to assign a static array to another static array. This message\
      \ always says \"boolean\" although you can't even declare boolean arrays. ArrayOne\
      \ = ArrayTwo is only allowed for dynamic arrays. Instead use a loop and assign\
      \ element by element.</dd>\n</dl>\n<dl>\n<dt>Variable is too large (<i>x</i>\
      \ bytes, 255 max)&#160;</dt>\n<dd>Static arrays and large structs can only be\
      \ accessed from outside the object containing them when they use less than 255\
      \ bytesx of memory. This restriction may seem weird, but you'll have to live\
      \ with it. Try using a dynamic array instead of a static one, break doen the\
      \ struct into several class properties or use accessor functions to work around\
      \ this restriction.</dd>\n</dl>\n<dl>\n<dt>Arrays within arrays not supported.&#160;</dt>\n\
      <dd>You can't use declarations like \"array&lt; array&lt;string&gt; &gt;\",\
      \ otherwise the compiler throws this error. You could however create a struct\
      \ with an array as the only element and create an array of this struct.</dd>\n\
      </dl>\n<dl>\n<dt>ObjectProperty '<i>Property Name</i>' : unresolved reference\
      \ to '<i>Some Texture or Something</i>'&#160;</dt>\n<dd>This is usually caused\
      \ by having a reference to a texture or other resource that is spelled incorrectly,\
      \ you forgot to create, or something similar. However, this can also have an\
      \ interesting cause: If the texture/whatever package contains a resource of\
      \ a type that is not in a package above this one. (IE you made a custom Material\
      \ class and the package has a material of that class in it, and the code for\
      \ that Material class hasn't been compiled yet) then the entire package will\
      \ fail to.<br />\nThis can also happen if you have multiple paths, both containing\
      \ the offending package. For example: let's say you have a texture package called\
      \ mytex.utx, and for some reason you put it in your mod\\textures\\ directory,\
      \ as well as your ut200x\\system directory. You then add a texture to the copy\
      \ in your mod\\textures\\ directory, and forget to add it to the other one(sloppy,\
      \ but I've done this on accident before.) And let's say that in your .ini file\
      \ you have your mod\\textures\\ directory listed AFTER the ut200x\\textures\
      \ directory. Then ucc will the first version of the package, thinking that's\
      \ what you meant, but won't find the new texture, and spit this error at you.\
      \ The solution: always only use one version of every package. Learn how to use\
      \ ini files to tell UCC where to look for packages, rather than putting a copy\
      \ in your mod directory to run, and your system directory to compile.<b>FatalOverdose</b>-note.\
      \ one spelling mistake in a parent class can cause this error for all its children.\
      \ This can be very frustrating when ucc tells you there are errors in scripts\
      \ that seem to be totally correct. This can also occure if you try to put \"\
      new class'name'\" in the defaultproperties.</dd>\n</dl>\n<dl>\n<dt>Variable\
      \ declaration <i>variable name</i>: Bad or missing array size&#160;</dt>\n<dd>You\
      \ have to specify a numeric value as the size of a static array. It seems in\
      \ UT the compiler doesn't recognize constants as the array size, but this works\
      \ in UT2003. Also remember that you have to specify an integer value as the\
      \ array size and the largest positive integer number UnrealScript knows is 2147483647.\
      \ (Use the constant MaxInt if you can't remember this value, but why the heck\
      \ would you create a static array this large?)</dd>\n</dl>\n<p><b>Foxpaw:</b>\
      \ It wouldn't let me use even 65536 elements in a static array. I needed the\
      \ former number because I wanted to make something like a trig table, only for\
      \ coordinate rotation instead of regular trig.</p>\n<p><b>Wormbo:</b> Try 65535\
      \ (maximum unsigned short) or 32767 (maximum signed short). What about using\
      \ a dynamic array instead?</p>\n<p><b>Foxpaw:</b> I considered that, but then\
      \ I figured that a dynamic array that large probrably would not be allocated\
      \ a contiguous block of memory (unless it was a static array) and so there would\
      \ be a lot of skipping around.</p>\n<p><b>Wormbo:</b> Dynamic arrays allocate\
      \ a single block of memory. They just might decide to allocate a larger block\
      \ if more space is required and release the previously used block.</p>\n<dl>\n\
      <dt>Variable '<i>variable name</i>' already has a replication definition&#160;</dt>\n\
      <dd>The variable appears more than once in the replication block. You can specify\
      \ only one replication statement per variable.</dd>\n</dl>\n<dl>\n<dt>'struct':\
      \ Expecting 'Var', got '<i>identifier</i>'&#160;</dt>\n<dd>Structs have to be\
      \ declared in a certain way and all delcarations within the struct have to begin\
      \ with <code>var</code>. See also <a href=\"/Legacy:Variable_Syntax\" title=\"\
      Legacy:Variable Syntax\">Variable Syntax</a>.</dd>\n</dl>\n<dl>\n<dt>Invalid\
      \ property or function call on a dynamic array&#160;</dt>\n<dd>Dynamic arrays\
      \ only have three properties and methods: Length, Insert() and Remove(). See\
      \ <a href=\"/Legacy:Variable_Syntax\" title=\"Legacy:Variable Syntax\">Variable\
      \ Syntax</a> for details. The most common cause of this error is attempting\
      \ to do something to an element in an array and forgetting the array index delimiter.\
      \ For example, doing something like <tt>MyArray.bDeleteMe</tt> instead of <tt>MyArray[i].bDeleteMe</tt>.</dd>\n\
      </dl>\n<dl>\n<dt>You can only access default values of variables here&#160;</dt>\n\
      <dd>In <a href=\"/Legacy:Static_Function\" title=\"Legacy:Static Function\"\
      >static functions</a> you do not have direct access to class-level variables.\
      \ You can only access function parameters, local variables and, through the\
      \ <tt>default.<i>VariableName</i></tt> syntax, the default values of class variables.</dd>\n\
      </dl>\n<h3><span class=\"mw-headline\" id=\"Typecasting\">Typecasting</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Compiler_Errors?section=6\" title=\"Edit section: Typecasting\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n\
      <dt>Cast from '<i>class name</i>' to '<i>other class name</i>' will always fail&#160;</dt>\n\
      <dd>You're attempting to perform a <a href=\"/Legacy:Typecasting\" title=\"\
      Legacy:Typecasting\">typecast</a> which will always fail because the class you're\
      \ casting to is not a subclass of the variable's class. (That's the case, for\
      \ instance, if you try to cast a variable of type <code>class&lt;Something&gt;</code>\
      \ to an <i>object</i> of a different class.)</dd>\n</dl>\n<dl>\n<dt>Cast from\
      \ '<i>class name</i>' to '<i>other class name</i>' is unneccessary&#160;</dt>\n\
      <dd><i>other class name</i> is either the same class as <i>class name</i> or\
      \ a superclass of it. This kind of <a href=\"/Legacy:Typecasting\" title=\"\
      Legacy:Typecasting\">typecasting</a> is not neccessary.</dd>\n</dl>\n<dl>\n\
      <dt>No need to cast '<i>property type</i>' to itself&#160;</dt>\n<dd>When a\
      \ property already is of e.g. type <i>int</i> there is no need to cast it to\
      \ <i>int</i> again when using it. This error also occurs when you work with\
      \ a \"subclass\" of a struct (e.g. <i>plane</i> extends <i>vector</i>) and try\
      \ to cast it to its \"superclass\" (e.g. <tt>vector(aPlaneStuct)</tt>).</dd>\n\
      </dl>\n<dl>\n<dt>Can't convert '<i>property type</i>' to '<i>other property\
      \ type</i>'&#160;</dt>\n<dd>This error occurs when you try to typecast between\
      \ incompatible variable types like e.g. <i>Object</i> -&gt; <i>Int</i> (\"ObjectProperty\
      \ to IntProperty\") or <i>vector</i> -&gt; <i>float</i> (\"StructProperty to\
      \ FloatProperty\").</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Exec_Warnings\"\
      >Exec Warnings</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Compiler_Errors?section=7\" title=\"Edit section:\
      \ Exec Warnings\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>ExecWarning, Import Texture <i>name</i> from <i>filename</i> failed<br\
      \ />\nExecWarning, Failed factoring: NEW SOUND FILE=<i>filename</i> PACKAGE=<i>packagename</i>\
      \ NAME=<i>name</i>&#160;</dt>\n<dd>Usually these errors are caused by missing\
      \ files or typos. Check the spelling of the file name and make sure the file\
      \ really is where <i>filename</i> points to. Remember that the UT\\MyMod directory\
      \ is the base for specifying file names in #exec lines.</dd>\n</dl>\n<dl>\n\
      <dt>Failed ing package: Can't find file '<i>filename</i>'&#160;</dt>\n<dd>The\
      \ package you specified in an <code>#exec obj</code> line could not be found.\
      \ Check the spelling of the file name.</dd>\n</dl>\n<dl>\n<dt>ExecWarning, Bad\
      \ MESH LODPARAMS<br />\nExecWarning, Bad MESH ORIGIN<br />\nExecWarning, Bad\
      \ MESH SEQUENCE<br />\nExecWarning, Missing meshmap<br />\nExecWarning, Missing\
      \ meshmap, texture, or num (MESHMAP=<i>meshmap name</i> NUM=<i>number</i> TEXTURE=<i>texture\
      \ name</i>)&#160;</dt>\n<dd>All these errors can be caused by a missing file\
      \ for the mesh. Check for typos and check the log for details about which file\
      \ is missing.<br />\nThe last error can also be caused by a missing texture.\
      \ Make sure the texture is either imported or the texture's package is ed before\
      \ assigning it to a mesh.</dd>\n</dl>\n<dl>\n<dt>Texture dimensions are not\
      \ powers of two<br />\nCan't find file '<i>texture file</i>' for import<br />\n\
      <i>path and filename of class file</i>(<i>line number</i>) : ExecWarning, Import\
      \ texture <i>texture name</i> from <i>texture file</i> failed&#160;</dt>\n<dd>These\
      \ errors always show up together. They are caused, like the message says, when\
      \ your textures are not sized in a power of two (i.e 32x32, 64x128, etc.).</dd>\n\
      </dl>\n<dl>\n<dt>Unknown property in defaults: <i>the line in defaultproperties</i>&#160;</dt>\n\
      <dd>Mostly the variable is not declared or there are spaces around the \"<code>=</code>\"\
      . Also see <a href=\"/Legacy:Default_Properties\" title=\"Legacy:Default Properties\"\
      >Default Properties</a>.</dd>\n</dl>\n<dl>\n<dt>Warning: Failed to '<i>package</i>':\
      \ Can't find file for package '<i>package</i>'<br />\nWarning: Failed to '<i>texture\
      \ package</i>': Can't find file for package '<i>package</i>'<br />\nWarning:\
      \ Failed ing package: Can't find file for package '<i>package</i>'&#160;</dt>\n\
      <dd><b>Pingz:</b> I'm getting these warnings from a single #exec statement in\
      \ my project which intends to a texture package. The package does exist and\
      \ the url is correct. As a test i deleted the texture package file and the warning\
      \ changed to the correct <i>Can't find file 'texture package'</i> message. Anyone\
      \ got a clue as to what this means? Please replace my comment here with some\
      \ sort of explanation.<a href=\"/Category:Legacy_Answer_Needed\" title=\"Category:Legacy\
      \ Answer Needed\">Category:Legacy Answer Needed</a></dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Bizarre_Compiler_Errors\">Bizarre Compiler Errors</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Compiler_Errors?section=8\" title=\"Edit section: Bizarre\
      \ Compiler Errors\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Compiler Hangs/Freezes&#160;</dt>\n<dd>This is obviously a difficult\
      \ type of error to troubleshoot. Simply put, the compiler simply ceases compiling,\
      \ generally as soon as opening your package or while it is \"Analysing...\"\
      \ I'm not certain what causes this, generally I remove classes from the package\
      \ until eventually it stops doing it, then see which classes it hangs with and\
      \ which it does not to help isolate the problem. I've found that sometimes I'll\
      \ accidentally make my classes extend themselves or extend their own subclasses\
      \ (a result of not paying attention) and this will cause this type of problem.\
      \ Any further information on what specific conditions can cause this would certainately\
      \ be appreciated.</dd>\n</dl>\n<p><b>Faithful:</b> Having \\\" anywhere (<i>including</i>\
      \ inside either style comment) except inside a set of \"\" will cause the compiler\
      \ to hang at \"Analyzing...\" . I have noticed that using \\\\\" in place of\
      \ \\\" will prevent this problem.</p>\n<dl>\n<dt>Compiler suddenly drops back\
      \ to DOS prompt/whatever&#160;</dt>\n<dd>This is a weird one. It compiles as\
      \ normal, and while in the \"Parsing\" section, simply stops. No error message,\
      \ nothing. Just drops back to the DOS prompt. UCC.log ends mid-comment. The\
      \ problem turned out to be a struct that I was using – which contained an array\
      \ of that same struct. The compiler is capable of warping its head around that\
      \ notion but if you try to actually declare a variable of that struct it doesn't\
      \ know what to do – kind of like infinite recursion.</dd>\n</dl>\n<p>Error:\
      \ VelocityScale::ImportText failed in: -</p>\n<p>Error: Unknown member X in\
      \ StartSizeRangeStartSizeRange →Can be all due to incorrect spacing in the defaultproperties</p>\n\
      <p>Error: Unknown member RelativeSize in SizeScale – may be due to using global\
      \ search and replace in ude</p>\n<p>Error: Unknown member b in Color -</p>\n\
      <p>-Fataloverdose.-</p>\n<h3><span class=\"mw-headline\" id=\"Unknown\">Unknown</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Compiler_Errors?section=9\" title=\"Edit section: Unknown\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<h2><span\
      \ class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=10\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Log_Warnings\" title=\"Legacy:Log\
      \ Warnings\">Log Warnings</a></li>\n<li><a href=\"/Legacy:Unreal_Coding_FAQ\"\
      \ title=\"Legacy:Unreal Coding FAQ\">Unreal Coding FAQ</a></li>\n<li><a href=\"\
      /Legacy:Compiling_With_UCC\" title=\"Legacy:Compiling With UCC\">Compiling With\
      \ UCC</a></li>\n<li><a href=\"/Legacy:UnrealScript_Language_Test\" title=\"\
      Legacy:UnrealScript Language Test\">UnrealScript Language Test</a></li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Compiler_Errors?section=11\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Tenative answer here... gurus feel free to confirm\
      \ or deny this:</p>\n<dl>\n<dt>Variable is too large (xxx bytes, 255 max)</dt>\n\
      <dd><br />\nThese occur when you try to access a data structure that is greater\
      \ then 255 bytes from another object.You might only be trying to access a little\
      \ bool but if that bool is part of an array of structs whose total size is bigger\
      \ than 255 bytes then you're not going to be able to code stuff like:</dd>\n\
      </dl>\n<p>bMyvar = otheractor.bigarray[i].bTheirVar&#160;;</p>\n<p>Without the\
      \ compiler choking and giving that \"context: variable is too large\" error.</p>\n\
      <p>To work round this you can code a method into the object that contains the\
      \ large structure that returns the element you're after (or, if the object is\
      \ part of a package you can't recompile, then make a subclass and impliment\
      \ the method there) like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// this is in the actor that contains the large array you\
      \ need to access</span>\n \n<span class=\"kw1\">function</span> <span class=\"\
      kw5\">bool</span> checktheirvar<span class=\"br0\">(</span><span class=\"kw5\"\
      >int</span> index<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \  <span class=\"kw2\">return</span><span class=\"br0\">(</span>bigarray<span\
      \ class=\"br0\">[</span>index<span class=\"br0\">]</span>.<span class=\"me0\"\
      >bTheirVar</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"co1\">// and this goes in the other object that's trying to\
      \ access that data</span>\n \nbMyvar<span class=\"sy0\">=</span>otheractor.<span\
      \ class=\"me0\">Checktheirvar</span><span class=\"br0\">(</span>i<span class=\"\
      br0\">)</span>;</pre></div>\n</div>\n<p><b>El Muerte TDS:</b> afaik the <i>variable\
      \ too large</i> only happens with static arrays and structs, so when you use\
      \ dynamic arrays it won't happen. With dynamic arrays only a pointer it passed,\
      \ while with static arrays and structs the whole array/struct will be passed.\
      \ Yes dynamic arrays are slower, but with a big array it doesn't matter much.</p>\n\
      <dl>\n<dd><b>Mychaeel:</b> \"Dynamic arrays are slower\"? Only if you count\
      \ adding and removing elements, but that's plain impossible with static arrays.\
      \ Accessing existing array elements is just as fast as with static arrays.</dd>\n\
      </dl>\n<dl>\n<dd><b>JoeDark:</b> Accessing existing array elements in a dynamic\
      \ array is only as fast as a static array if they are handled like Vectors in\
      \ Java where it is actually a static array disguised as a dynamic array. If\
      \ it's done as a linked list then access is O(n) compared to the static array's\
      \ O(1) access time so static access is obviously faster, though unless your\
      \ dealing with a large n not that much faster.</dd>\n</dl>\n<dl>\n<dd><b>Foxpaw:</b>\
      \ Well, there's more than just two possible implementations of the dynamic arrays.\
      \ The Unreal engine is chock full of caching schemes, tables, and other methods\
      \ of storing and retrieving data that are far more complex than what one would\
      \ generally assume of the implementation, and render speculation about the number\
      \ of operations required for a given operation shaky at best. I wouldn't be\
      \ surprised if static arrays and dynamic arrays are both stored in a relational\
      \ database and looked up that way. The only way to really tell which is faster\
      \ is to time them, but even that wouldn't really be accurate, because there's\
      \ other stuff to consider.</dd>\n</dl>\n<dl>\n<dd>For instance, if the implementation\
      \ is as you suggested, (block of memory for array, linked list for dynamic arrays)\
      \ then you would be doing a great number of operations on the stack. Anyways,\
      \ I don't know how dynamic arrays or even static arrays are implemented in the\
      \ Unreal Engine, but I'd question the notion that dynamic arrays are a linked\
      \ list - because when you pass one to a function you get a duplicate array,\
      \ not a pointer into an array.</dd>\n</dl>\n<dl>\n<dd><b>JoeDark:</b> Fair enough,\
      \ esp. because uscript is an interpreted language arrays might be implemented\
      \ any number of ways, including relational databases&#160;;)</dd>\n</dl>\n<dl>\n\
      <dd><b>Red:</b> I presume the issue is because of how the array is stored in\
      \ memory. and because dynamic ones only pass a pointer rather than the whole\
      \ array.still getting the infor be accessing with a method is one workable soultion,\
      \ but i'm not sure if it would be faster than passing a pointer to a dynamic\
      \ array.... both methods essentially allow you access the pieces of info you\
      \ want, in sligthly different ways.</dd>\n</dl>\n<hr />\n<p>So why don't try</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>mystruct<span class=\"sy0\">&gt;</span> big<span\
      \ class=\"re1\">array</span>&lt; SEMI &gt;</pre></div>\n</div>\n<p><b>Zedsquared:</b>\
      \ ok, thanks, cool for UT2003, but UT dosen't properly support dynamic arrays\
      \ does it? Anyone know any other way around this in UT classic?</p>\n<p><b>Mychaeel:</b>\
      \ Other than an accessor method, no.</p>\n<p><b>Foxpaw:</b> There is a way around\
      \ this and it is very graceful, iffin you ask me. It uses a little thing called\
      \ a <a href=\"/Legacy:Linked_List\" title=\"Legacy:Linked List\">linked list</a>\
      \ which is detailed elsewhere on the Wiki.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Script_serialization_mismatch\">Script serialization mismatch</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Compiler_Errors?section=12\" title=\"Edit section: Script\
      \ serialization mismatch\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>This is an Error I'm getting while trying to compile with UMake, using the\
      \ standard directories stated in the compiling with UCC page. I'm basically\
      \ using the Bulldog scripts as REF.. changing the Tex, Models, and classes names..</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\">Parsing WarthogHeadlight\n \nScript\
      \ serialization mismatch: Got <span class=\"nu0\">0</span>, expected <span class=\"\
      sy0\">-</span><span class=\"nu0\">2147483612</span>\n \nHistory: UStruct::Serialize\
      \ <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><span class=\"\
      kw1\">Class</span> WHSkins.<span class=\"me0\">TexAlignerPlanar0</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> UState::Serialize\
      \ <span class=\"sy0\">&lt;-</span> UClass::Serialize\n <span class=\"sy0\">&lt;-</span>\
      \ <span class=\"br0\">(</span><span class=\"kw1\">Class</span> WHSkins.<span\
      \ class=\"me0\">TexAlignerPlanar0</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">&lt;-</span> LoadObject\n <span class=\"sy0\">&lt;-</span> <span class=\"\
      br0\">(</span><span class=\"kw1\">Class</span> WHSkins.<span class=\"me0\">TexAlignerPlanar0</span>\
      \ <span class=\"nu0\">5595020</span><span class=\"sy0\">==</span><span class=\"\
      nu0\">5595020</span><span class=\"sy0\">/</span><span class=\"nu0\">5939846</span>\
      \ <span class=\"nu0\">5594999</span> <span class=\"nu0\">16</span><span class=\"\
      br0\">)</span> \n<span class=\"sy0\">&lt;-</span> ULinkerLoad::Pre     <span\
      \ class=\"sy0\">&lt;-</span> PreLoadObjects <span class=\"sy0\">&lt;-</span>\
      \ UObject::EndLoad <span class=\"sy0\">&lt;-</span> UObject::LoadPackage <span\
      \ class=\"sy0\">&lt;-</span> UEditorEngine::SafeExec \n<span class=\"sy0\">&lt;-</span>\
      \ <span class=\"br0\">(</span>LOAD FILE<span class=\"sy0\">=</span>WHSkins.<span\
      \ class=\"me0\">utx</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span>\
      \ UEditorEngine::SafeExec <span class=\"sy0\">&lt;-</span> <span class=\"br0\"\
      >(</span>OBJ LOAD FILE<span class=\"sy0\">=</span>WHSkins.<span class=\"me0\"\
      >utx</span><span class=\"br0\">)</span> \n<span class=\"sy0\">&lt;-</span> FScriptCompiler::ProcessCompilerDirective\
      \ <span class=\"sy0\">&lt;-</span> Directive <span class=\"sy0\">&lt;-</span>\
      \ FScriptCompiler::CompileDeclaration \n<span class=\"sy0\">&lt;-</span> FScriptCompiler::CompileStatement\
      \ <span class=\"sy0\">&lt;-</span> FirstPass <span class=\"sy0\">&lt;-</span>\
      \ TryCompile <span class=\"sy0\">&lt;-</span> FScriptCompiler::CompileScript\
      \ \n<span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><span class=\"\
      kw1\">Class</span> Halo.<span class=\"me0\">WarthogHeadlight</span>, Pass <span\
      \ class=\"nu0\">0</span>, Line <span class=\"nu0\">1</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">&lt;-</span> MakeScript <span class=\"sy0\">&lt;-</span>\
      \ MakeScript <span class=\"sy0\">&lt;-</span> MakeScript <span class=\"sy0\"\
      >&lt;-</span> MakeScript \n<span class=\"sy0\">&lt;-</span> MakeScript <span\
      \ class=\"sy0\">&lt;-</span> DoScripts <span class=\"sy0\">&lt;-</span> UEditorEngine::MakeScripts\
      \ <span class=\"sy0\">&lt;-</span> UMakeCommandlet::Main\n \nExiting due to\
      \ <span class=\"kw4\">error</span></pre></div>\n</div>\n<p><b>Wormbo:</b> The\
      \ error message itself doesn't help solving the problem. At least the WarthogHeadlight\
      \ class' code should be posted, too.</p>\n<p><b>Adam1972:</b> Actually, I've\
      \ been hammering away at finding the answer... When I posted the problem I couldn't\
      \ make</p>\n<p>sense of what was happening... This is what I have so far.. I\
      \ have a texture file called WHSkins.utx, and a mesh file</p>\n<p>called WHMeshes.usx\
      \ That I've created to replace the Bulldog textures and also A Warthog mesh\
      \ from Halo to replace the</p>\n<p>Warthog... So I assume I should be able to\
      \ basically plug in the diffrences, at least to get it to go. When You look\
      \ at</p>\n<p>the Bulldog.uc ....</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co2\">#exec OBJ LOAD FILE=..\\staticmeshes\\BulldogMeshes.usx</span>\n\
      <span class=\"co2\">#exec OBJ LOAD FILE=..\\sounds\\WeaponSounds.uax</span>\n\
      <span class=\"co2\">#exec OBJ LOAD FILE=..\\textures\\VehicleFX.utx</span></pre></div>\n\
      </div>\n<p><b>Adam1972:</b> Then comparing it to my Warthog.uc:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"co2\">#exec OBJ LOAD FILE=..\\staticmeshes\\\
      WHMeshes.usx</span>\n<span class=\"co2\">#exec OBJ LOAD FILE=..\\sounds\\WeaponSounds.uax</span>\n\
      <span class=\"co2\">#exec OBJ LOAD FILE=..\\textures\\WHSkins.utx</span></pre></div>\n\
      </div>\n<p><b>Adam1972:</b> You'll see I only changed the filename.. I followed\
      \ the Instructions on compiling with UCC and figure that the directories inside\
      \ the project should match what is listed in the UCC compiling page.. so I made\
      \ a Halo directory and placed a Class, Textures, and Models folder inside. Umake\
      \ begins to parse the files and when it hits the WarthogHeadlight.uc file which\
      \ looks like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co2\">#exec OBJ LOAD FILE=WHSkins.utx</span>\n \n<span class=\"kw1\">class</span>\
      \ WarthogHeadlight <span class=\"kw1\">extends</span> <span class=\"kw9\">DynamicProjector</span>;\n\
      \ \n<span class=\"co1\">// Empty tick here - do detach/attach in Warthog tick</span>\n\
      <span class=\"kw1\">function</span> <span class=\"kw4\">Tick</span><span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> Delta<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n \n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>It returns a WHSkins.utx not found. This script is exactly like the\
      \ original BulldogHeadlight.uc script. I get the same</p>\n<p>with the scripts\
      \ calling on the WHMeshes.usx.</p>\n<p>If I change it to #exec OBJ LOAD FILE=..\\\
      textures\\WHSkins.utx it still does not find the files. If I place those same\
      \ 2</p>\n<p>files into the UT2003 folder in their respective folders.. Well\
      \ that's when I get the \"Script serialization mismatch\"</p>\n<p>error. I get\
      \ no errors associated with the script itself, the only problem I found with\
      \ that was the \"defaultproperties\"</p>\n<p>that all the decompiled originals\
      \ have.. my warthog ones seemed to cause errors until I deleted those \"defaultproperties\"\
      .</p>\n<p>I'm stumped.... Please help&#160;:S</p>\n<p><b>Foxpaw:</b> I don't\
      \ have UT2003 but I have found something that I think may be the problem. It\
      \ doesn't surprise me that neither FILE=WHSkins.utx nor FILE=..\\textures\\\
      WHSkins.utx finds the headlight. The former will look in the base directory\
      \ of your class, the \"Halo\" directory, and the second goes up a step then\
      \ looks in the base directory of your UT2003 install to find a package called\
      \ \"textures.\" Remember it starts from \"Halo,\" not \"Halo\\classes.\" \"\
      ..\" means up one directory. What you need to put to reference \"Halo\\textures\"\
      \ is \"FILE=.\\textures\\WHSkins.utx.\" Scratch the last dot, that's just for\
      \ correct punctuation. \"..\" means go up one directory, \".\" means look in\
      \ this directory. It's basically the same as writing \"FILE=\\textures\\WHSkins.utx\"\
      \ except that the compiler won't accept that, so the single dot is used to denote\
      \ a subdirectory of the one it starts in.</p>\n<p><b>Languard:</b> Minor correction:\
      \ UT2003 does accept \"FILE=\\textures\\ect\" I don't think having the current\
      \ directory dot will hurt, but it isn't needed. Not on XP at least, it might\
      \ be different for the other OS's. As a side note, I'm not sure why they the\
      \ object files with exec statments, since it is not needed. I know this because\
      \ for my sword attachment class, I use an animated mesh that I've placed in\
      \ the Animations directory, but I do not have any exec statments to it, and\
      \ it works fine. The only thing I can think of is maybe it is for performance\
      \ reasons.</p>\n<p><b>Languard:</b> Correction to previous satement, you do\
      \ need the statments. My misconception was due to some really bad coding on\
      \ my part, and I forgot about this one statement I had in a wierd spot. Yet\
      \ another reason why you should always code neatly, even if it is throwaway\
      \ code.</p>\n<p><b>Foxpaw:</b> Yes, I don't think you need the dots, the problem\
      \ with the code that was listed was that it had a double dot and was going up\
      \ one directory isntead of going fromt he current directory. You actually don't\
      \ need the statements if you have the thing you were going to already in another\
      \ package, so long as you refer to that package at compile-time. I never use\
      \ statements and it works fine for me.</p>\n<p><b>Lilguy:</b> just added some\
      \ stuff to the \"unresolved reference\" error.</p>\n<p><b>FatalOverdose</b>\
      \ Added \"just added 'Error, Bad or missing expression in 'If'\". This a very\
      \ usfull page but its getting to big.</p>\n<p><b>Tarquin:</b> All the comments\
      \ and chat need to be refactored into document mode. That would slim it down\
      \ a bit!&#160;:)</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.327 seconds\n\
      Real time usage: 0.526 seconds\nPreprocessor visited node count: 466/1000000\n\
      Preprocessor generated node count: 1138/1000000\nPost‐expand include size: 1026/2097152\
      \ bytes\nTemplate argument size: 344/2097152 bytes\nHighest expansion depth:\
      \ 4/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%   20.098      1 - -total\n100.00%\
      \   20.098      1 - Template:Legacy_page\n 71.14%   14.298      1 - Template:Ambox\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:736-0!*!0!!en!5!*\
      \ and timestamp 20221117193004 and revision id 43150\n -->\n"
  categories:
  - sortkey: "Compiler Errors"
    name: "Legacy_Troubleshooting"
  - sortkey: "Compiler Errors"
    name: "Legacy_Answer_Needed"
  - sortkey: "Compiler Errors"
    name: "Legacy_Refactor_Me"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Unreal Coding FAQ"
  - ns: 100
    exists: true
    name: "Legacy:Typecasting"
  - ns: 100
    exists: true
    name: "Legacy:Operator"
  - ns: 100
    exists: true
    name: "Legacy:Flow Syntax"
  - ns: 4
    exists: true
    name: "Unreal Wiki:MediaWiki conversion"
  - ns: 100
    exists: true
    name: "Legacy:Sound"
  - ns: 100
    exists: true
    name: "Legacy:UMake"
  - ns: 100
    exists: true
    name: "Legacy:Commandlet"
  - ns: 100
    exists: true
    name: "Legacy:Log Warnings"
  - ns: 100
    exists: true
    name: "Legacy:Scripting Operators"
  - ns: 100
    exists: true
    name: "Legacy:Default Properties"
  - ns: 0
    exists: true
    name: "Compiler Error"
  - ns: 14
    exists: true
    name: "Category:Legacy Answer Needed"
  - ns: 100
    exists: true
    name: "Legacy:Actor Classes Browser"
  - ns: 100
    exists: true
    name: "Legacy:Game Ini File"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Linked List"
  - ns: 100
    exists: true
    name: "Legacy:Compiling With UCC"
  - ns: 100
    exists: true
    name: "Legacy:Variable Syntax"
  - ns: 4
    exists: true
    name: "Unreal Wiki:Namespaces"
  - ns: 100
    exists: true
    name: "Legacy:Static Function"
  - ns: 100
    exists: true
    name: "Legacy:Ucc"
  - ns: 100
    exists: true
    name: "Legacy:Function Syntax"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Language Test"
  - ns: 100
    exists: true
    name: "Legacy:Dynamic Array"
  - ns: 100
    exists: true
    name: "Legacy:Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Texture"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:Global Function"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Console"
  templates:
  - ns: 10
    exists: true
    name: "Template:Ambox"
  - ns: 10
    exists: true
    name: "Template:Legacy page"
  images:
  - "Oldwikilogo.png"
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Warnings"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 709
    anchor: "Warnings"
  - toclevel: 1
    level: "2"
    line: "Syntax Errors"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 2506
    anchor: "Syntax_Errors"
  - toclevel: 2
    level: "3"
    line: "General Structure"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 2526
    anchor: "General_Structure"
  - toclevel: 2
    level: "3"
    line: "Functions"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 12881
    anchor: "Functions"
  - toclevel: 2
    level: "3"
    line: "Variables"
    number: "2.3"
    index: "5"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 16067
    anchor: "Variables"
  - toclevel: 2
    level: "3"
    line: "Typecasting"
    number: "2.4"
    index: "6"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 25271
    anchor: "Typecasting"
  - toclevel: 1
    level: "2"
    line: "Exec Warnings"
    number: "3"
    index: "7"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 26535
    anchor: "Exec_Warnings"
  - toclevel: 1
    level: "2"
    line: "Bizarre Compiler Errors"
    number: "4"
    index: "8"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 29257
    anchor: "Bizarre_Compiler_Errors"
  - toclevel: 2
    level: "3"
    line: "Unknown"
    number: "4.1"
    index: "9"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 31146
    anchor: "Unknown"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "5"
    index: "10"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 31161
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "6"
    index: "11"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 31388
    anchor: "Discussion"
  - toclevel: 2
    level: "3"
    line: "Script serialization mismatch"
    number: "6.1"
    index: "12"
    fromtitle: "Legacy:Compiler_Errors"
    byteoffset: 35635
    anchor: "Script_serialization_mismatch"
  displaytitle: "Legacy:Compiler Errors"
  iwlinks:
  - prefix: "wiki"
    url: "http://c2.com/cgi/wiki?YouArentGonnaNeedIt"
    name: "wiki:YouArentGonnaNeedIt"
  wikitext:
    text: "{{legacy page|new=[[Compiler Error]]}}\nThe warnings and errors described\
      \ on this page are generated only by the compiler. If you need information about\
      \ logged in-game warnings see [[Legacy:Log Warnings|Log Warnings]].\n\nThe [[Legacy:Ucc|Ucc]]\
      \ Make [[Legacy:Commandlet|commandlet]] outputs warning and critical error messages\
      \ in the form\n ''<path and filename>''(''line number'') : ''error message''\n\
      \nUsually the problem can be found by opening the specified file and looking\
      \ at the specified line number. Exceptions are missing declarations or braces\
      \ further up in the file or missing declarations in a superclass (if it's part\
      \ of your code). The Wiki recommends the [[Legacy:UMake|UMake]] compiling tool\
      \ :D.\n\n==Warnings ==\n\n; Warning, '<i>name</i>' obscures '<i>name</i>' defined\
      \ in base class : You declared a class variable, struct or enum with the same\
      \ name as a class variable, struct or enum of a superclass. This will obscure\
      \ the object in the superclass so you can't access it in the code of your class\
      \ anymore.<br />In UT2004 this warning also applies to local function variables\
      \ which obscure class variables in the same class or one of its superclasses.\n\
      \n'''Foxpaw:''' Could you get around this by simply using Self.? IE, if variable\
      \ A was obscured by local variable A, you should be able to access local A with\
      \ A, and global A with Self.A. Seems like it would work.\n\n'''Wormbo:''' Of\
      \ course you could, but the warning is there because the usual way to access\
      \ the class varaible is blocked. It's easier to find the problem with this warning\
      \ when you access the obscuring variable instead of the obscured one in you\
      \ code.\n\n; Warning, '<i>variable name</i>' - unreferenced local variable :\
      \ A function declares a local variable but doesn't use it beyond that &ndash;\
      \ you may as well remove it if [[Wiki:YouArentGonnaNeedIt]]\n\n; Warning, <i>function\
      \ name</i> - Missing return value : The function is declared as returning a\
      \ value, but there's no '''return''' statement in the function. The default\
      \ value of that variable type will be returned (e.g. false, 0, \"\", None; also\
      \ see [[Legacy:Variable Syntax|Variable Syntax]])\n\n; ExecWarning, Reference\
      \ to deprecated property '<i>variable name</i>' : You are using a variable marked\
      \ as deprecated in your code.\n\n; Warning, Class names shouldn't end in a digit:\
      \ This warning appears harmless enough. Classes with names ending in a digit\
      \ (IE BloodFX2) seem to work fine.\n\n; Warning, Missing Function : You are\
      \ calling a function that has not been defined.\n\n==Syntax Errors ==\n\n===General\
      \ Structure ===\n; Bad class definition '<i>class name</i>' : In [[Legacy:UT2003|UT2003]],\
      \ the most common cause for this error is that you accidentally used \"expands\"\
      \ instead of \"extends.\"  The old keyword \"expands\" is not supported anymore.\
      \  (It has been considered deprecated for a long while already.)\n\n; Superclass\
      \ <i>class name</i> of class <i>other class name</i> not found : The superclass\
      \ of one of your classes couldn't be found. Check the class header of the second\
      \ class for typos. If the superclass is in the same package also check its class\
      \ header, if not check the [[Legacy:Game Ini File|Game Ini File]]'s EditPackages\
      \ lines for missing packages. \n\n; Unexpected end of file at end of class :\
      \ This is usually caused by one or more missing \"<code>}</code>\". This error\
      \ can be quite annoying in large classes. Most of it is prevented by proper\
      \ code indentation and (what experienced coders frequently do) writing ''both''\
      \ the opening and the closing brace at the same time and then filling in code\
      \ between them.\n\n; Unexpected 'defaultproperties' : The [[Legacy:Default Properties|default\
      \ properties]] block can only be used outside of [[Legacy:UnrealEd|UnrealEd]].\
      \ Within UnrealEd, they have to be set from the [[Legacy:Actor Classes Browser|Actor\
      \ Classes Browser]] interface; hidden variables (not declared to show up in\
      \ any of the property groups) can have their defaults set via the [[Legacy:UnrealEd\
      \ Console|UnrealEd console]]. Use [[Legacy:Compiling With UCC|UCC Make]] instead\
      \ of UnrealEd to compile your classes if you want to use this feature. This\
      \ error can also happen when you use a weird commenting style like:<uscript>\n\
      /* some comment\n*///===========\n</uscript>Basically using a multi-line comment\
      \ immediately followed by a single-line comment anywhere in your class breaks\
      \ the parser and makes it complain about the </code>defaultproperties</code>\
      \ keyword. Add a whitespace or linebreak or think about your commenting style\
      \ in general. ;)\n\n; Unexpected '<i>} or identifier</i>' : This is caused by\
      \ one or more missing \"<code>{</code>\" or too many \"<code>}</code>\". See\
      \ suggestions above.\n\n; Call to '<i>function</i>'<nowiki>:</nowiki> Type mismatch\
      \ in parameter <i>number</i> : One of the parameters in your function call doesn't\
      \ have the right type and can't be automatically [[Legacy:Typecasting|casted]]\
      \ to it.  Look up the original declaration of the function (in the original\
      \ UnrealScript source code or here on the Wiki) and double-check against the\
      \ types of the values you're actually using.\n\n;Error, Call to '<i>function\
      \ name</i>'<nowiki>:</nowiki> bad or missing parameter 1:Due to Non-Existing\
      \ Variable or Spelling mistake Example:<uscript>TriggerEvent('SomethingWrongHere',\
      \ Self, Instigator)</uscript>\n\n;Error, Call to '<i>function name</i>'<nowiki>:</nowiki>\
      \ Bad ',' or missing ')' : This error is reported if you attempt to call a function\
      \ with more parameters than it was declared with. In other words, there should\
      \ be no comma where the compiler found it, maybe the call is simply missing\
      \ a right parenthesis there. For example the [[Legacy:Global Function|global\
      \ function]] '''Atan''' was defined with only one parameter in UT1, but with\
      \ two parameters in later engine generations.\n\n; Internal fixup error 0 :\
      \ This error occurs when using <code>break</code> in an <code>if</code> statement\
      \ inside a <code>case</code> block.\n\n; 'Else'<nowiki>:</nowiki> Bad command\
      \ or expression : Make sure there is an <code>If</code> right before the mentioned\
      \ <code>else</code>. If that <code>If</code> block executes more that one line\
      \ of code, make sure the block is enclosed in braces. See [[Legacy:Flow Syntax|Flow\
      \ Syntax]].\n\n; Error, Bad or missing expression in '(some expression)': Check\
      \ whatever comes after the expression mentioned in the message. For example,\
      \ a \"Bad or missing expression in 'If'\" could mean the condition does not\
      \ evaluate to a boolean value (True or False), and generally you might have\
      \ mistyped the function or variable name.\n\n; Error, Right type is incompatable\
      \ with \"$\": Usually when you have only specified the name of an array and\
      \ not the variable contained inside.\n\n; Error, Missing '(' in 'if' : Usually\
      \ due to wrong operator eg. using If(a=b) instead of if(a==B).\n\n;Error,Missing\
      \ '(' in 'struct' : Can be caused by leaving Blank spaces in a variable name\
      \ inside a struct.\n\n; 'Else If' is not allowed here <br />'Else' is not allowed\
      \ here : Most likely you have the wrong number of braces after an <code>If</code>\
      \ statement.\n\n; 'class' is not allowed here : Generally caused by having your\
      \ class statement in the wrong place. However, I got this error as well in a\
      \ switch statement by putting something after default, like so:\n\n<uscript>\n\
      switch( CameraMode )\n{\n  case CAM_FocusFollowLOS:\n//  ... lots of stuff skipped\
      \ here\n  default:\n  case CAM_Still:\n    break;\n}\n</uscript>\n\n; Enum is\
      \ not allowed here. : You have an enum declaration appearing after functions.\
      \ Enums must be defined at the top of the class along with variables.\n\n; Bad\
      \ variable or function '<i>name</i>' in replication definition : The variable\
      \ or function isn't declared in this class. Check for spelling errors and make\
      \ sure the specified variable or function isn't already declared in a superclass.\n\
      \n; Error, 'class'<nowiki>:</nowiki> Limitor '<i>name</i>' is not a class name\
      \ : The ''class name'' in <tt>class<''class name''></tt> does not point to an\
      \ existing class. Make sure that the specified class is     ed at the time the\
      \ script is compiled.\n\n; Can't find Class '<i>class name</i>' : This error\
      \ can also occur for [[Legacy:Texture|Texture]]s, [[Legacy:Sound|Sound]]s, [[Legacy:Mesh|Mesh]]es,\
      \ etc. Make sure the specified class is     ed at compile time by either adding\
      \ its package to the EditPackages ''above'' your package's entry or using an\
      \ <code>#exec OBJ LOAD</code> line.\n\n; <i>Package1.ClassName</i>'s superclass\
      \ must be <i>Package1.SuperClassName</i>, not <i>Package2.SuperClassName</i>\
      \ : I got this weird error message when compiling two packages with similar\
      \ class structures. ''Package1'' contained a class ''ClassName'' with the superclass\
      \ ''SuperClassName'' (both in ''Package1'') and ''Package2'' contained the same\
      \ classes. ''Package2'' was compiled before ''Package1'' and the error occured\
      \ during parsing of ''ClassName'' in ''Package1''.<br />Always change the class\
      \ names when copying them from one project to another. It's fine as long as\
      \ you compile them seperately, but as soon as you need both of them problems\
      \ like this start occuring.<br /><br />'''j3rky:''' This error message also\
      \ appears if you changed the ancestor class of native actors and objects (e.g.\
      \ ''class A extends B'' changed to ''class A extends C''), without having rebuilt\
      \ the native DLL. In that case, the native DLL still references the old class\
      \ ''B'' while the script compiler is trying to bind to the new class ''C''.\
      \ Fix this by deleting the old DLL, or by running ''ucc make'' with the ''-nobind''\
      \ option. Rebuild the DLL with the new generated header file.\n\n; Unterminated\
      \ string constant : This error occurs, when the closing double quotation marks\
      \ for a string are missing. Note that while strings may contain line breaks,\
      \ they may not span several lines in your code. Use the <code>Chr</code> function\
      \ to generate the line break characters if you need them.\n\n'''fataoverdose'''You\
      \ can also get this error if you put one to many double quotation marks in the\
      \ string. \n\n; BEGIN OBJECT<nowiki>:</nowiki> name <i>objectname</i> redefined.\
      \ : This error occures if two or more objects declared in the [[Legacy:Default\
      \ Properties|default properties]] of the same class have the same name. The\
      \ objects must have unique names.\n\n; redundant data<nowiki>:</nowiki> <i>defaultproperty\
      \ declaration</i> : You get this error when you redefine the default value of\
      \ a property in the same class, like:<uscript>\ndefaultproperties\n{\n  somearray(0)=\"\
      this will be reported by the compiler\"\n  somearray(0)=\"this won't be reported\"\
      \n}\n</uscript>\n\n'''Foxpaw:''' I accidentally did something similar, but the\
      \ second variable was reported, not the first. However, since the variable in\
      \ your example is an array, it may be treated differently. My code was (trimmed\
      \ down a bit):\n\n<uscript>\ndefaultproperties\n{\n  Skins(0)=Texture'PlayerSkins.JuggMaleABodyA'\n\
      \  Skins(1)=Texture'PlayerSkins.JuggMaleAHeadA'\n  CollisionRadius=+00050.000000\n\
      \  CollisionHeight=+00050.000000\n\n  CollisionRadius=+00034.000000\n  CollisionHeight=+00078.000000\n\
      }\n</uscript>\n\nIn this code it reported that the 34 and 78 were the redundant\
      \ data.\n\n; Missing '(' in 'Remove(...)' : A dynamic array's Remove method\
      \ expects the index of the first element and the number of elements to be removed\
      \ in parentheses, like \"Remove(2,4)\".\n\n}\n; Missing \"(\" in editable member\
      \ variable: Don't put anything in the parentheses next to a variable name when\
      \ defining a struct ie.\n\n<uscript>\nstruct mystruct\n{\nVar(myvalues) float\
      \ ValueA;\nVar(myvalues) float ValueB;\n}\n</uscript>\n\nThis will work;\n\n\
      <uscript>\nstruct mystruct\n{\nVar() float ValueA;\nVar() float ValueB;\n}\n\
      </uscript>\n\n; Error, ArrayCount argument is not an array : The syntax <tt>ArrayCount(''arrayname'')</tt>\
      \ only applies to static arrays. Use <tt>''arrayname''.Length</tt> for dynamic\
      \ arrays instead.\n\n; Map are not supported in UnrealScript yet : You felt\
      \ like experimenting, huh? :) The <code>map</code> variable type isn't supported\
      \ in UnrealScript.\n\n; General protection fault!, ScriptCompiler<nowiki>::</nowiki>CompileSecondPass\
      \ : There's actually quite a string that acoompanies this, but this part should\
      \ signal you that this is what you've got. You did something that the compiler\
      \ can't handle but Epic never imagined you'd try. I got this error from trying\
      \ to use an unconditional replication. I wanted this function to be replicated\
      \ to the other party regardless of which machine it originated on, so I tried:\
      \ reliable AddAction,RemoveAction; This will generate the above error. You MUST\
      \ use the if part of the replication statement even if it will always be true.\
      \  There isn't any way to know exactly what is causing this error in your code,\
      \ but by looking at the ucc.log, you can at least determine which class the\
      \ unexpected error was encountered (it will be the last class listed prior to\
      \ the stack trace).\n::Another way to get the GFP failt is using [dependsOn]\
      \ with a class that doesn't exists.\n\n===Functions ===\n; Redefinition of '<i>function\
      \ name</i>' differs from original : When overriding functions you are not allowed\
      \ to change the return type, the number or type of parameters or some of the\
      \ function modifiers, e.g. static functions must stay static, public functions\
      \ can't become protected. (E.g. simulated or native functions can become non-simulated\
      \ or non-native in subclasses though, because those keywords only apply to the\
      \ actual implementation in that single class.)<br />Functions can't be over\
      \    ed in UnrealScript.\n\n; '<i>function name</i>'<nowiki>:</nowiki> too many\
      \ parameters : In UnrealScript functions can have a maximum of 16 parameters.\
      \ If you need more parameters you will have to put them in a struct or array\
      \ and pass that to the function.\n\n; Function '<i>function name</i>' specifiers\
      \ differ from original : This error occurs when you try to override a final\
      \ function or try to override a public function with a protected or private\
      \ one or a protected function with a private or public one. (see [[Legacy:Function\
      \ Syntax|Function Syntax]])\n\n; '<i>identifier</i>' conflicts with '<i>other\
      \ identifier</i>' : You can have only one function of the same name within the\
      \ same state of a class, and you can't have variables and functions with the\
      \ same name in the same class at all.  Rename or remove one of the conflicting\
      \ identifiers.\n\n; Can't call instance functions from within static functions\
      \ : [[Legacy:Static Function|Static function]]s can only call other static functions.\
      \ Check if your function really needs to be static or whether you forgot to\
      \ declare the other function as static.<br />You can also get this error when\
      \ trying to call a non-static function via the <tt>class'SomeClass'.static.FunctionName()</tt>\
      \ syntax.\n\n; Bad preoperator definition: Your declaration of a preoperator\
      \ is invalid. This is most often caused by attempting to set a priority for\
      \ a preoperator, as preoperators and postoperators do not take a priority value.\
      \ See [[Legacy:Scripting Operators|Scripting Operators]] for the proper declaration.\n\
      \n; Bad postoperator definition: This is the same as \"Bad preoperator definition,\"\
      \ but for postoperators.\n\n; Unknown Function '<i>function name</i>' in 'Class\
      \ <i>Package1.ClassName</i>': This error comes up when your code attempts to\
      \ call a function that does not exist. You may have forgot the parenthesis when\
      \ using the <code>super</code> keyword to call a function that have no parameters.\
      \ This can also be caused by forgetting the cast on an object reference. Sometimes\
      \ it is also caused by a misspelled function name.\n\n; <i>Function name</i>\
      \ mismatches delegate <i>delegate name</i> : You tried to assign a function\
      \ to a delegate property, but the function's parameters and/or return value\
      \ don't match the delegate's parameters and/or return value.\n\n; Delegate assignment\
      \ failed: You tried to assign a function to a delegate property, but the function's\
      \ parameters and/or return value don't match the delegate's parameters and/or\
      \ return value.\n\n; Error, operator must have 2 parameters : Binary operators\
      \ must be declared with two parameters and a return value. See [[Legacy:Scripting\
      \ Operators|Scripting Operators]].\n\n===Variables ===\n; Can't assign Const\
      \ variables : You are not allowed to assign class variables declared with the\
      \ const modifier. (See [[Legacy:Variable Syntax|Variable Syntax]].) Instead\
      \ find a native function which can set this variable. (e.g. SetDrawScale() for\
      \ the DrawScale property)\n; Error, Missing <nowiki>'>'</nowiki> in <nowiki>'</nowiki>class\
      \ limitor<nowiki>'</nowiki> : \nI got this problem with the following code:\n\
      \n<uscript>\nvar array<class<WeaponFire>> WFCs;\n</uscript>\n\nwhich was easily\
      \ fixed by changing it to the following:\n\n<uscript>\nvar array<class<WeaponFire>\
      \ > WFCs;\n</uscript>\n\nPresumably, it parses \">>\" as an [[Legacy:Operator|operator]]\
      \ and then can't find the closing \">\".\n\n\n; Can't save <i>class</i><nowiki>:</nowiki>\
      \ Graph is linked to external private object <i>object</i> : One of your classes\
      \ is making a reference to an object in another package without the RF_Public\
      \ flag set.  This is not permitted in Unreal Packages.  Check your class for\
      \ references to private or protected variables in other classes or to other\
      \ object constants.   This error can also occur if you reference a protected\
      \ variable in a superclass *if* your derived class resides in a different package\
      \ from the class where the protected member is declared (even though this is\
      \ technically supposed to work).\n\n; Enums can only be declared in class or\
      \ struct scope : Like the message says. Enums can't be declared in functions\
      \ or operators.\n\n; Variable declaration<nowiki>:</nowiki> '<i>variable name</i>'\
      \ already defined : You tried to declare two variables with the same name in\
      \ the same function.\n\n; Expression has no effect : Expressions like <code>Int1\
      \ + Int2;</code> have no effect, i.e. they don't change anything when not assigned\
      \ to a variable. This error can also be caused by using an incorrect syntax\
      \ for assigning values to array elements like <code>anArray(0) = anything;</code>\
      \ (the correct syntax is <code>anArray[0] = anything;</code>)\n\n; ')' Expression\
      \ has no effect : You could be missing the first '(' in a log command.  You\
      \ could also be typecasting wrong.  Also, make sure a function parameter does\
      \ not have the same name as a function you're calling in that function.  Example:\n\
      \n<uscript>\nfunction ThisIsWrong(int Spawn)\n{\n   If(Spawn == 1)\n   Spawn(class'AClass');\n\
      }\n</uscript>\n\n; Unrecognized member '<i>variable name</i>' in class '<i>class\
      \ name</i>': You're attempting to use a <i>variable name</i> that is not defined\
      \ as a global variable in class <i>class name</i>.  This usually occurs when\
      \ you've typecasted a class variable, such as PlayerPawn(P) where P was defined\
      \ as a Pawn.  In this situation, at the line this error mentions, you've probably\
      \ forgotten to typecast your P variable.\n\n; Unrecognized type '<i>variable\
      \ type</i>' : The class, enum or struct you wanted to use is not declared or\
      \ not visible from this point. Also check for typos.\n\n; Type mismatch in '<i>operator</i>'\
      \ : The variable type you specified doesn't match the type the operatore requires\
      \ and can't be automatically casted to the required type.\n\n; Type mismatch\
      \ in 'If' : Similar to the type mismatch in operator. The condition must be\
      \ a boolean value, it will not be [[Legacy:Typecasting|typecasted]] automatically.\
      \ Often the use of <code>=</code> instead of <code>----</code> causes this error.\n\
      \n; Array mismatch in '=' : This error is thrown when some code attempts to\
      \ copy a static array. Static arrays can be passed as function parameters but\
      \ can't be copied. This implies that static arrays also can't be used as return\
      \ types because they cannot be assigned to a more permanent var. Consider using\
      \ a [[Legacy:Dynamic_Array|Dynamic_Array]] instead.\n\n; Unrecognized variable\
      \ '<i>variable name</i>' name in replication definition : You tried to replicate\
      \ a variable or function which was not declared in this class. Check for typos.\n\
      \n; Bool arrays are not allowed : Well, they are not allowed. :) Use ''byte''\
      \ arrays instead.\n\n; Can only assign individual booleans, not boolean arrays\
      \ : You tried to assign a static array to another static array. This message\
      \ always says \"boolean\" although you can't even declare boolean arrays. ArrayOne\
      \ = ArrayTwo is only allowed for dynamic arrays. Instead use a loop and assign\
      \ element by element.\n\n; Variable is too large (<i>x</i> bytes, 255 max) :\
      \ Static arrays and large structs can only be accessed from outside the object\
      \ containing them when they use less than 255 bytesx of memory. This restriction\
      \ may seem weird, but you'll have to live with it. Try using a dynamic array\
      \ instead of a static one, break doen the struct into several class properties\
      \ or use accessor functions to work around this restriction.\n\n; Arrays within\
      \ arrays not supported. : You can't use declarations like \"array< array<string>\
      \ >\", otherwise the compiler throws this error. You could however create a\
      \ struct with an array as the only element and create an array of this struct.\n\
      \n; ObjectProperty '<i>Property Name</i>' <nowiki>:</nowiki> unresolved reference\
      \ to '<i>Some Texture or Something</i>' : This is usually caused by having a\
      \ reference to a texture or other resource that is spelled incorrectly, you\
      \ forgot to create, or something similar. However, this can also have an interesting\
      \ cause: If the texture/whatever package contains a resource of a type that\
      \ is not in a package above this one. (IE you made a custom Material class and\
      \ the package has a material of that class in it, and the code for that Material\
      \ class hasn't been compiled yet) then the entire package will fail to.<br />This\
      \ can also happen if you have multiple paths, both containing the offending\
      \ package. For example: let's say you have a texture package called mytex.utx,\
      \ and for some reason you put it in your mod\\textures\\ directory, as well\
      \ as your ut200x\\system directory. You then add a texture to the copy in your\
      \ mod\\textures\\ directory, and forget to add it to the other one(sloppy, but\
      \ I've done this on accident before.) And let's say that in your .ini file you\
      \ have your mod\\textures\\ directory listed AFTER the ut200x\\textures directory.\
      \ Then ucc will      the first version of the package, thinking that's what\
      \ you meant, but won't find the new texture, and spit this error at you. The\
      \ solution: always only use one version of every package. Learn how to use ini\
      \ files to tell UCC where to look for packages, rather than putting a copy in\
      \ your mod directory to run, and your system directory to compile.'''FatalOverdose'''-note.\
      \ one spelling mistake in a parent class can cause this error for all its children.\
      \ This can be very frustrating when ucc tells you there are errors in scripts\
      \ that seem to be totally correct. This can also occure if you try to put \"\
      new class'name'\" in the defaultproperties.\n\n; Variable declaration <i>variable\
      \ name</i><nowiki>:</nowiki> Bad or missing array size : You have to specify\
      \ a numeric value as the size of a static array. It seems in UT the compiler\
      \ doesn't recognize constants as the array size, but this works in UT2003. Also\
      \ remember that you have to specify an integer value as the array size and the\
      \ largest positive integer number UnrealScript knows is 2147483647. (Use the\
      \ constant MaxInt if you can't remember this value, but why the heck would you\
      \ create a static array this large?)\n\n'''Foxpaw:''' It wouldn't let me use\
      \ even 65536 elements in a static array. I needed the former number because\
      \ I wanted to make something like a trig table, only for coordinate rotation\
      \ instead of regular trig.\n\n'''Wormbo:''' Try 65535 (maximum unsigned short)\
      \ or 32767 (maximum signed short). What about using a dynamic array instead?\n\
      \n'''Foxpaw:''' I considered that, but then I figured that a dynamic array that\
      \ large probrably would not be allocated a contiguous block of memory (unless\
      \ it was a static array) and so there would be a lot of skipping around.\n\n\
      '''Wormbo:''' Dynamic arrays allocate a single block of memory. They just might\
      \ decide to allocate a larger block if more space is required and release the\
      \ previously used block.\n\n; Variable '<i>variable name</i>' already has a\
      \ replication definition : The variable appears more than once in the replication\
      \ block. You can specify only one replication statement per variable.\n\n; 'struct'<nowiki>:</nowiki>\
      \ Expecting 'Var', got '<i>identifier</i>' : Structs have to be declared in\
      \ a certain way and all delcarations within the struct have to begin with <code>var</code>.\
      \ See also [[Legacy:Variable Syntax|Variable Syntax]].\n\n; Invalid property\
      \ or function call on a dynamic array : Dynamic arrays only have three properties\
      \ and methods: Length, Insert() and Remove(). See [[Legacy:Variable Syntax|Variable\
      \ Syntax]] for details.  The most common cause of this error is attempting to\
      \ do something to an element in an array and forgetting the array index delimiter.\
      \  For example, doing something like <tt>MyArray.bDeleteMe</tt> instead of <tt>MyArray[i].bDeleteMe</tt>.\n\
      \n; You can only access default values of variables here : In [[Legacy:Static\
      \ Function|static function]]s you do not have direct access to class-level variables.\
      \ You can only access function parameters, local variables and, through the\
      \ <tt>default.''VariableName''</tt> syntax, the default values of class variables.\n\
      \n===Typecasting ===\n; Cast from '<i>class name</i>' to '<i>other class name</i>'\
      \ will always fail : You're attempting to perform a [[Legacy:Typecasting|typecast]]\
      \ which will always fail because the class you're casting to is not a subclass\
      \ of the variable's class.  (That's the case, for instance, if you try to cast\
      \ a variable of type <code>class<Something></code> to an ''object'' of a different\
      \ class.)\n\n; Cast from '<i>class name</i>' to '<i>other class name</i>' is\
      \ unneccessary : ''other class name'' is either the same class as ''class name''\
      \ or a superclass of it. This kind of [[Legacy:Typecasting|typecasting]] is\
      \ not neccessary.\n\n; No need to cast '<i>property type</i>' to itself : When\
      \ a property already is of e.g. type ''int'' there is no need to cast it to\
      \ ''int'' again when using it. This error also occurs when you work with a \"\
      subclass\" of a struct (e.g. ''plane'' extends ''vector'') and try to cast it\
      \ to its \"superclass\" (e.g. <tt>vector(aPlaneStuct)</tt>).\n\n; Can't convert\
      \ '<i>property type</i>' to '<i>other property type</i>' : This error occurs\
      \ when you try to typecast between incompatible variable types like e.g. ''Object''\
      \ -> ''Int'' (\"ObjectProperty to IntProperty\") or ''vector'' -> ''float''\
      \ (\"StructProperty to FloatProperty\").\n\n==Exec Warnings ==\n; ExecWarning,\
      \ Import Texture <i>name</i> from <i>filename</i> failed<br />ExecWarning, Failed\
      \ factoring<nowiki>:</nowiki> NEW SOUND FILE=<i>filename</i> PACKAGE=<i>packagename</i>\
      \ NAME=<i>name</i> : Usually these errors are caused by missing files or typos.\
      \ Check the spelling of the file name and make sure the file really is where\
      \ ''filename'' points to. Remember that the UT\\MyMod directory is the base\
      \ for specifying file names in #exec lines.\n\n; Failed     ing package<nowiki>:</nowiki>\
      \ Can't find file '<i>filename</i>' : The package you specified in an <code>#exec\
      \ obj     </code> line could not be found. Check the spelling of the file name.\n\
      \n; ExecWarning, Bad MESH LODPARAMS<br />ExecWarning, Bad MESH ORIGIN<br />ExecWarning,\
      \ Bad MESH SEQUENCE<br />ExecWarning, Missing meshmap<br />ExecWarning, Missing\
      \ meshmap, texture, or num (MESHMAP=<i>meshmap name</i> NUM=<i>number</i> TEXTURE=<i>texture\
      \ name</i>) : All these errors can be caused by a missing file for the mesh.\
      \ Check for typos and check the log for details about which file is missing.<br\
      \ />The last error can also be caused by a missing texture. Make sure the texture\
      \ is either imported or the texture's package is     ed before assigning it\
      \ to a mesh.\n\n; Texture dimensions are not powers of two<br />Can't find file\
      \ '<i>texture file</i>' for import<br /><i>path and filename of class file</i>(<i>line\
      \ number</i>) <nowiki>:</nowiki> ExecWarning, Import texture <i>texture name</i>\
      \ from <i>texture file</i> failed : These errors always show up together. They\
      \ are caused, like the message says, when your textures are not sized in a power\
      \ of two (i.e 32x32, 64x128, etc.).\n\n; Unknown property in defaults<nowiki>:</nowiki>\
      \ <i>the line in defaultproperties</i> : Mostly the variable is not declared\
      \ or there are spaces around the \"<code>=</code>\". Also see [[Legacy:Default\
      \ Properties|Default Properties]].\n\n; Warning<nowiki>:</nowiki> Failed to\
      \      '<i>package</i>'<nowiki>:</nowiki> Can't find file for package '<i>package</i>'<br\
      \ />Warning<nowiki>:</nowiki> Failed to      '<i>texture package</i>'<nowiki>:</nowiki>\
      \ Can't find file for package '<i>package</i>'<br />Warning<nowiki>:</nowiki>\
      \ Failed     ing package<nowiki>:</nowiki> Can't find file for package '<i>package</i>'\
      \ : '''Pingz:'''  I'm getting these warnings from a single #exec statement in\
      \ my project which intends to      a texture package.  The package does exist\
      \ and the url is correct.  As a test i deleted the texture package file and\
      \ the warning changed to the correct <i>Can't find file 'texture package'</i>\
      \ message.  Anyone got a clue as to what this means?  Please replace my comment\
      \ here with some sort of explanation.[[:Category:Legacy Answer Needed]]\n\n\
      ==Bizarre Compiler Errors ==\n; Compiler Hangs/Freezes : This is obviously a\
      \ difficult type of error to troubleshoot. Simply put, the compiler simply ceases\
      \ compiling, generally as soon as opening your package or while it is \"Analysing...\"\
      \ I'm not certain what causes this, generally I remove classes from the package\
      \ until eventually it stops doing it, then see which classes it hangs with and\
      \ which it does not to help isolate the problem. I've found that sometimes I'll\
      \ accidentally make my classes extend themselves or extend their own subclasses\
      \ (a result of not paying attention) and this will cause this type of problem.\
      \ Any further information on what specific conditions can cause this would certainately\
      \ be appreciated.\n\n'''Faithful:''' Having \\\" anywhere (<i>including</i>\
      \ inside either style comment) except inside a set of \"\" will cause the compiler\
      \ to hang at \"Analyzing...\" . I have noticed that using \\\\\" in place of\
      \ \\\" will prevent this problem.\n\n; Compiler suddenly drops back to DOS prompt/whatever\
      \ : This is a weird one. It compiles as normal, and while in the \"Parsing\"\
      \ section, simply stops. No error message, nothing. Just drops back to the DOS\
      \ prompt. UCC.log ends mid-comment. The problem turned out to be a struct that\
      \ I was using &ndash; which contained an array of that same struct. The compiler\
      \ is capable of warping its head around that notion but if you try to actually\
      \ declare a variable of that struct it doesn't know what to do &ndash; kind\
      \ of like infinite recursion.\n\nError: VelocityScale::ImportText failed in:\
      \               -\n\nError: Unknown member  X  in StartSizeRangeStartSizeRange\
      \ &rarr;Can be all due to incorrect spacing in the defaultproperties\n\nError:\
      \ Unknown member  RelativeSize in SizeScale          &ndash; may be due to using\
      \ global search and replace in ude\n\nError: Unknown member  b in Color    \
      \                     -\n\n-Fataloverdose.-\n\n===Unknown===\n\n==Related Topics\
      \ ==\n* [[Legacy:Log Warnings|Log Warnings]]\n* [[Legacy:Unreal Coding FAQ|Unreal\
      \ Coding FAQ]]\n* [[Legacy:Compiling With UCC|Compiling With UCC]]\n* [[Legacy:UnrealScript\
      \ Language Test|UnrealScript Language Test]]\n\n==Discussion==\n\nTenative answer\
      \ here... gurus feel free to confirm or deny this:\n\n;  Variable is too large\
      \ (xxx bytes, 255 max): <br />These occur when you try to access a data structure\
      \ that is greater then 255 bytes from another object.You might only be trying\
      \ to access a little bool but if that bool is part of an array of structs whose\
      \ total size is bigger than 255 bytes then you're not going to be able to code\
      \ stuff like:\n\nbMyvar = otheractor.bigarray[i].bTheirVar ;\n\nWithout the\
      \ compiler choking and giving that \"context: variable is too large\" error.\n\
      \nTo work round this you can code a method into the object that contains the\
      \ large structure that returns the element you're after (or, if the object is\
      \ part of a package you can't recompile, then make a subclass and impliment\
      \ the method there) like this:\n\n<uscript>\n\n// this is in the actor that\
      \ contains the large array you need to access\n\nfunction bool checktheirvar(int\
      \ index)\n{\n  return(bigarray[index].bTheirVar);\n}\n\n// and this goes in\
      \ the other object that's trying to access that data\n\nbMyvar=otheractor.Checktheirvar(i);\n\
      \n</uscript>\n\n'''El Muerte TDS:''' afaik the ''variable too large'' only happens\
      \ with static arrays and structs, so when you use dynamic arrays it won't happen.\
      \ With dynamic arrays only a pointer it passed, while with static arrays and\
      \ structs the whole array/struct will be passed. Yes dynamic arrays are slower,\
      \ but with a big array it doesn't matter much.\n\n:'''Mychaeel:''' \"Dynamic\
      \ arrays are slower\"?  Only if you count adding and removing elements, but\
      \ that's plain impossible with static arrays.  Accessing existing array elements\
      \ is just as fast as with static arrays.\n\n:'''JoeDark:''' Accessing existing\
      \ array elements in a dynamic array is only as fast as a static array if they\
      \ are handled like Vectors in Java where it is actually a static array disguised\
      \ as a dynamic array. If it's done as a linked list then access is O(n) compared\
      \ to the static array's O(1) access time so static access is obviously faster,\
      \ though unless your dealing with a large n not that much faster.\n\n:'''Foxpaw:'''\
      \ Well, there's more than just two possible implementations of the dynamic arrays.\
      \ The Unreal engine is chock full of caching schemes, tables, and other methods\
      \ of storing and retrieving data that are far more complex than what one would\
      \ generally assume of the implementation, and render speculation about the number\
      \ of operations required for a given operation shaky at best. I wouldn't be\
      \ surprised if static arrays and dynamic arrays are both stored in a relational\
      \ database and looked up that way. The only way to really tell which is faster\
      \ is to time them, but even that wouldn't really be accurate, because there's\
      \ other stuff to consider.\n\n:For instance, if the implementation is as you\
      \ suggested, (block of memory for array, linked list for dynamic arrays) then\
      \ you would be doing a great number of operations on the stack. Anyways, I don't\
      \ know how dynamic arrays or even static arrays are implemented in the Unreal\
      \ Engine, but I'd question the notion that dynamic arrays are a linked list\
      \ - because when you pass one to a function you get a duplicate array, not a\
      \ pointer into an array.\n\n:'''JoeDark:''' Fair enough, esp. because uscript\
      \ is an interpreted language arrays might be implemented any number of ways,\
      \ including relational databases ;)\n\n:'''Red:''' I presume the issue is because\
      \ of how the array is stored in memory. and because dynamic ones only pass a\
      \ pointer rather than the whole array.still getting the infor be accessing with\
      \ a method is one workable soultion, but i'm not sure if it would be faster\
      \ than passing a pointer to a dynamic array.... both methods essentially allow\
      \ you access the pieces of info you want, in sligthly different ways.\n\n----\n\
      \nSo why don't try\n\n<uscript>\nvar array<mystruct> bigarray;\n</uscript>\n\
      \n'''Zedsquared:''' ok, thanks, cool for UT2003, but UT dosen't properly support\
      \ dynamic arrays does it?  Anyone know any other way around this in UT classic?\n\
      \n'''Mychaeel:''' Other than an accessor method, no.\n\n'''Foxpaw:''' There\
      \ is a way around this and it is very graceful, iffin you ask me. It uses a\
      \ little thing called a [[Legacy:Linked List|linked list]] which is detailed\
      \ elsewhere on the Wiki.\n\n===Script serialization mismatch===\n\nThis is an\
      \ Error I'm getting while trying to compile with UMake, using the standard directories\
      \ stated in the compiling with UCC page. I'm basically using the Bulldog scripts\
      \ as REF.. changing the Tex, Models, and classes names..\n\n<uscript>\n\nParsing\
      \ WarthogHeadlight\n\nScript serialization mismatch: Got 0, expected -2147483612\n\
      \nHistory: UStruct::Serialize <- (Class WHSkins.TexAlignerPlanar0) <- UState::Serialize\
      \ <- UClass::Serialize\n <- (Class WHSkins.TexAlignerPlanar0) <- LoadObject\n\
      \ <- (Class WHSkins.TexAlignerPlanar0 5595020==5595020/5939846 5594999 16) \n\
      <- ULinkerLoad::Pre     <- PreLoadObjects <- UObject::EndLoad <- UObject::LoadPackage\
      \ <- UEditorEngine::SafeExec \n<- (LOAD FILE=WHSkins.utx) <- UEditorEngine::SafeExec\
      \ <- (OBJ LOAD FILE=WHSkins.utx) \n<- FScriptCompiler::ProcessCompilerDirective\
      \ <- Directive <- FScriptCompiler::CompileDeclaration \n<- FScriptCompiler::CompileStatement\
      \ <- FirstPass <- TryCompile <- FScriptCompiler::CompileScript \n<- (Class Halo.WarthogHeadlight,\
      \ Pass 0, Line 1) <- MakeScript <- MakeScript <- MakeScript <- MakeScript \n\
      <- MakeScript <- DoScripts <- UEditorEngine::MakeScripts <- UMakeCommandlet::Main\n\
      \nExiting due to error\n\n</uscript>\n\n'''Wormbo:''' The error message itself\
      \ doesn't help solving the problem. At least the WarthogHeadlight class' code\
      \ should be posted, too.\n\n'''Adam1972:''' Actually, I've been hammering away\
      \ at finding the answer... When I posted the problem I couldn't make\n\nsense\
      \ of what was happening... This is what I have so far.. I have a texture file\
      \ called WHSkins.utx, and a mesh file\n\ncalled WHMeshes.usx That I've created\
      \ to replace the Bulldog textures and also A Warthog mesh from Halo to replace\
      \ the\n\nWarthog... So I assume I should be able to basically plug in the diffrences,\
      \ at least to get it to go. When You look at\n\nthe Bulldog.uc ....\n\n<uscript>\n\
      #exec OBJ LOAD FILE=..\\staticmeshes\\BulldogMeshes.usx\n#exec OBJ LOAD FILE=..\\\
      sounds\\WeaponSounds.uax\n#exec OBJ LOAD FILE=..\\textures\\VehicleFX.utx\n\n\
      </uscript>\n\n'''Adam1972:''' Then comparing it to my Warthog.uc:\n\n<uscript>\n\
      #exec OBJ LOAD FILE=..\\staticmeshes\\WHMeshes.usx\n#exec OBJ LOAD FILE=..\\\
      sounds\\WeaponSounds.uax\n#exec OBJ LOAD FILE=..\\textures\\WHSkins.utx\n</uscript>\n\
      \n'''Adam1972:''' You'll see I only changed the filename.. I followed the Instructions\
      \ on compiling with UCC and figure that the directories inside the project should\
      \ match what is listed in the UCC compiling page.. so I made a Halo directory\
      \ and placed a Class, Textures, and Models folder inside. Umake begins to parse\
      \ the files and when it hits the WarthogHeadlight.uc file which looks like this:\n\
      \n<uscript>\n#exec OBJ LOAD FILE=WHSkins.utx\n\nclass WarthogHeadlight extends\
      \ DynamicProjector;\n\n// Empty tick here - do detach/attach in Warthog tick\n\
      function Tick(float Delta)\n{\n\n}\n</uscript>\n\nIt returns a WHSkins.utx not\
      \ found. This script is exactly like the original BulldogHeadlight.uc script.\
      \ I get the same\n\nwith the scripts calling on the WHMeshes.usx. \n\nIf I change\
      \ it to #exec OBJ LOAD FILE=..\\textures\\WHSkins.utx it still does not find\
      \ the files. If I place those same 2\n\nfiles into the UT2003 folder in their\
      \ respective folders.. Well that's when I get the \"Script serialization mismatch\"\
      \ \n\nerror. I get no errors associated with the script itself, the only problem\
      \ I found with that was the \"defaultproperties\"\n\nthat all the decompiled\
      \ originals have.. my warthog ones seemed to cause errors until I deleted those\
      \ \"defaultproperties\".\n\nI'm stumped.... Please help :S\n\n'''Foxpaw:'''\
      \ I don't have UT2003 but I have found something that I think may be the problem.\
      \ It doesn't surprise me that neither FILE=WHSkins.utx nor FILE=..\\textures\\\
      WHSkins.utx finds the headlight. The former will look in the base directory\
      \ of your class, the \"Halo\" directory, and the second goes up a step then\
      \ looks in the base directory of your UT2003 install to find a package called\
      \ \"textures.\" Remember it starts from \"Halo,\" not \"Halo\\classes.\" \"\
      ..\" means up one directory. What you need to put to reference \"Halo\\textures\"\
      \ is \"FILE=.\\textures\\WHSkins.utx.\" Scratch the last dot, that's just for\
      \ correct punctuation. \"..\" means go up one directory, \".\" means look in\
      \ this directory. It's basically the same as writing \"FILE=\\textures\\WHSkins.utx\"\
      \ except that the compiler won't accept that, so the single dot is used to denote\
      \ a subdirectory of the one it starts in.\n\n'''Languard:''' Minor correction:\
      \ UT2003 does accept \"FILE=\\textures\\ect\" I don't think having the current\
      \ directory dot will hurt, but it isn't needed.  Not on XP at least, it might\
      \ be different for the other OS's.  As a side note, I'm not sure why they  \
      \    the object files with exec statments, since it is not needed.  I know this\
      \ because for my sword attachment class, I use an animated mesh that I've placed\
      \ in the Animations directory, but I do not have any exec statments to     \
      \ it, and it works fine.  The only thing I can think of is maybe it is for performance\
      \ reasons.\n\n'''Languard:''' Correction to previous satement, you do need the\
      \      statments.  My misconception was due to some really bad coding on my\
      \ part, and I forgot about this one      statement I had in a wierd spot.  Yet\
      \ another reason why you should always code neatly, even if it is throwaway\
      \ code.\n\n'''Foxpaw:''' Yes, I don't think you need the dots, the problem with\
      \ the code that was listed was that it had a double dot and was going up one\
      \ directory isntead of going fromt he current directory. You actually don't\
      \ need the      statements if you have the thing you were going to      already\
      \ in another package, so long as you refer to that package at compile-time.\
      \ I never use      statements and it works fine for me.\n\n'''Lilguy:''' just\
      \ added some stuff to the \"unresolved reference\" error.\n\n'''FatalOverdose'''\
      \ Added \"just added 'Error, Bad or missing expression in 'If'\". This a very\
      \ usfull page but its getting to big.\n\n'''Tarquin:''' All the comments and\
      \ chat need to be refactored into document mode. That would slim it down a bit!\
      \ :)\n\n[[Category:Legacy Answer Needed|{{PAGENAME}}]]\n[[Category:Legacy Troubleshooting|{{PAGENAME}}]]\n\
      [[Category:Legacy Refactor Me|{{PAGENAME}}]]"
  properties: []
  revId: 43150
name: "Legacy:Compiler Errors"
revision:
  revid: 43150
  parentid: 2116
  user: "00zX"
  timestamp: 1272581893.000000000
  comment: ""
timestamp: 1668763518.239085000
