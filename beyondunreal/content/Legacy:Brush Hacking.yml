---
parse:
  title: "Legacy:Brush Hacking"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Filthy_brush_hacking_techniques\"\
      >Filthy brush hacking techniques</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Brush_Hacking?section=1\"\
      \ title=\"Edit section: Filthy brush hacking techniques\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>A quote from <a href=\"/Legacy:Brush\"\
      \ title=\"Legacy:Brush\">Brush</a>...</p>\n<blockquote class=\"legacyquote\"\
      >\n<p><i>...you can do some pretty interesting things by manually editing what\
      \ has been copied to the clipboard. If you, for instance, give two brushes the\
      \ same model reference, vertex editing one instance of that brush will automagically\
      \ vertex-edit all other instances as well (and real-time). Since I guess that\
      \ unused model objects won't be saved along with the map, I suppose that can\
      \ indeed serve to save some file space (not too much though since the rendered,\
      \ cut world polygons are stored separately) and probably even as a comfortable\
      \ editing tool. —<a href=\"/Legacy:Mychaeel\" title=\"Legacy:Mychaeel\">Mychaeel</a></i></p>\n\
      </blockquote>\n<dl>\n<dd><i>Tarquin</i>: I have just successfully edited a brush\
      \ in Textpad. I've removed the two cap surfaces of a quarter-torus to make a\
      \ bendy sheet tube! wahey!</dd>\n</dl>\n<p>Pasting back to Ued takes an age,\
      \ be patient.</p>\n<p>It's also possible to change the class of the brush actor,\
      \ and get a <a href=\"/Legacy:CSG\" title=\"Legacy:CSG\">CSG</a> entity of another\
      \ class. I've tried this with a subclass of Brush and the geometry build treats\
      \ it like a normal brush. I have no idea if this would work with other classes,\
      \ and I have no idea if this might actually be useful for something.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"ReCasting_Movers\">ReCasting Movers</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Brush_Hacking?section=2\" title=\"Edit section: ReCasting\
      \ Movers\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Situation: you have a mover all made and set up nicely, keyframes and all,\
      \ but you now find it should be a different <a href=\"/Legacy:Mover\" title=\"\
      Legacy:Mover\">Mover</a> class. Do this:</p>\n<ol>\n<li>copy it</li>\n<li>paste\
      \ to a text editor (eg TextPad)</li>\n<li>change the class there</li>\n<li>subtract\
      \ 32.0 from Location X,Y,Z (because when pasting back into the map, UnrealEd\
      \ moves it by that amount. This counters that effect)</li>\n<li>select all the\
      \ text and copy it</li>\n<li>paste in UnrealEd</li>\n</ol>\n<h2><span class=\"\
      mw-headline\" id=\"The_Model_info_in_Brushes\">The Model info in Brushes</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Brush_Hacking?section=3\" title=\"Edit section: The Model\
      \ info in Brushes\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>Tarquin:</b> Weirdness: I've copied the same mover object twice. the only\
      \ difference was that I moved it away from the origin and the 2nd time there\
      \ is no Model information in Textpad</p>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.025 seconds\nReal time usage: 0.027 seconds\nPreprocessor visited\
      \ node count: 22/1000000\nPreprocessor generated node count: 77/1000000\nPost‐\
      expand include size: 1297/2097152 bytes\nTemplate argument size: 594/2097152\
      \ bytes\nHighest expansion depth: 3/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    5.422      1 - -total\n100.00%    5.422      1 - Template:Innerbox\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:556-0!*!0!!*!*!* and\
      \ timestamp 20221118033357 and revision id 1713\n -->\n"
  categories:
  - sortkey: "Brush Hacking"
    name: "Legacy_Mapping"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:Brush"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel"
  - ns: 100
    exists: true
    name: "Legacy:CSG"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Filthy brush hacking techniques"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Brush_Hacking"
    byteoffset: 0
    anchor: "Filthy_brush_hacking_techniques"
  - toclevel: 1
    level: "2"
    line: "ReCasting Movers"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Brush_Hacking"
    byteoffset: 1219
    anchor: "ReCasting_Movers"
  - toclevel: 1
    level: "2"
    line: "The Model info in Brushes"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Brush_Hacking"
    byteoffset: 1664
    anchor: "The_Model_info_in_Brushes"
  displaytitle: "Legacy:Brush Hacking"
  iwlinks: []
  wikitext:
    text: "==Filthy brush hacking techniques ==\n\nA quote from [[Legacy:Brush|Brush]]...\n\
      \n{{innerbox|''...you can do some pretty interesting things by manually editing\
      \ what has been copied to the clipboard.  If you, for instance, give two brushes\
      \ the same model reference, vertex editing one instance of that brush will automagically\
      \ vertex-edit all other instances as well (and real-time).  Since I guess that\
      \ unused model objects won't be saved along with the map, I suppose that can\
      \ indeed serve to save some file space (not too much though since the rendered,\
      \ cut world polygons are stored separately) and probably even as a comfortable\
      \ editing tool.  &mdash;[[Legacy:Mychaeel|Mychaeel]]''\n\n}}\n\n:''Tarquin'':\
      \ I have just successfully edited a brush in Textpad. I've removed the two cap\
      \ surfaces of a quarter-torus to make a bendy sheet tube! wahey!\n\nPasting\
      \ back to Ued takes an age, be patient.\n\nIt's also possible to change the\
      \ class of the brush actor, and get a [[Legacy:CSG|CSG]] entity of another class.\
      \ I've tried this with a subclass of Brush and the geometry build treats it\
      \ like a normal brush. I have no idea if this would work with other classes,\
      \ and I have no idea if this might actually be useful for something.\n\n==ReCasting\
      \ Movers ==\n\nSituation: you have a mover all made and set up nicely, keyframes\
      \ and all, but you now find it should be a different [[Legacy:Mover|Mover]]\
      \ class. Do this:\n# copy it\n# paste to a text editor (eg TextPad)\n# change\
      \ the class there\n# subtract 32.0 from Location X,Y,Z (because when pasting\
      \ back into the map, UnrealEd moves it by that amount. This counters that effect)\n\
      # select all the text and copy it\n# paste in UnrealEd\n\n==The Model info in\
      \ Brushes ==\n\n'''Tarquin:''' Weirdness: I've copied the same mover object\
      \ twice. the only difference was that I moved it away from the origin and the\
      \ 2nd time there is no Model information in Textpad\n\n[[Category:Legacy Mapping|{{PAGENAME}}]]"
  properties: []
  revId: 1713
name: "Legacy:Brush Hacking"
revision:
  revid: 1713
  parentid: 1715
  user: "Mychaeel"
  timestamp: 1053855785.000000000
  comment: "[[Category Mapping]]"
timestamp: 1668762693.848829000
