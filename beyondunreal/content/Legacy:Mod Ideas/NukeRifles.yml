---
parse:
  title: "Legacy:Mod Ideas/NukeRifles"
  text:
    text: "<h3><span class=\"mw-headline\" id=\"NukeRifles_mutator\">NukeRifles mutator</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/NukeRifles?section=1\" title=\"Edit section:\
      \ NukeRifles mutator\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <h4><span class=\"mw-headline\" id=\"Combat_using_modified_Sniperifles_that_fire_nuclear_bullets.21\"\
      >Combat using modified Sniperifles that fire nuclear bullets!</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/NukeRifles?section=2\"\
      \ title=\"Edit section: Combat using modified Sniperifles that fire nuclear\
      \ bullets!\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>Just as devastating as the Redeemer, but instant hit, and zoom too&#160;;-)</p>\n\
      <p>Yes, I know it's totally silly, but it' good fun for about 5 minutes...</p>\n\
      <p>I'd like to do a version of it for UT2003, but am having trouble figuring\
      \ out how the new Redeemer code works – specifically it uses states to gradually\
      \ move the damage radius out as the shockwaves expand, so the victims get gibbed\
      \ when the wave hits them. Each time I try to use states, the compiler throws\
      \ up some error or other...&#160;:-( So at the moment, in my mut they just get\
      \ gibbed instantly, which looks really lame. In good old UT, I could just spawn\
      \ a <i>Shockwave</i> object, this did the whole lot automatically... &#160;:-)</p>\n\
      <p>Thanks, \\</p>\n<p><b>Electric Mini:</b></p>\n<hr />\n<p>Update... I've got\
      \ it (mostly) working</p>\n<p>I've managed to get it to work after poking around\
      \ the Net all day&#160;:-)</p>\n<p>I've had to spawn a custom class <i>NukeRifleExplosion</i>,\
      \ based on the <i>RedeemerFire</i> stuff.</p>\n<p>This spawns a nuke explosion,\
      \ which is allowed to have states, so I get the nice shockwaves and huge <b>BOOM</b>\
      \ explosion noise...</p>\n<p>But... I can't get the kills to register properly!\
      \ Up until 10 minutes ago I couldn't score a single kill with this mut, only\
      \ suicides were counted (DOH!). The only way I've found to do this so far is\
      \ to call <i>Other.TakeDamage</i>, this passes the <i>Instigator</i> along so\
      \ kills are recorded for whichever victim you hit. But this sucks, 'cos it's\
      \ instant, and you only get credit for killing the poor sucker the beam actually\
      \ hits!</p>\n<p>Everyone else that dies gets counted as a suicide (ugh!).</p>\n\
      <p>The Redeemer code uses <i>HurtRadius</i>, but I can't see how this gets info\
      \ on who fired the thing to the victim (like <i>Other.TakeDamage</i> would).</p>\n\
      <p>Is there some easy way to hurt all the actors within a radius of a target,\
      \ making sure that if they die the person who fired the shot gets the credit?</p>\n\
      <p>Am I just barking up the wrong tree here? Or am I just barking mad? &#160;;-)</p>\n\
      <p>P.S. If anyone wants the NukeRifles mut, put a comment here and I'll put\
      \ it up on the www somewhere. Oh yes, I've now got zooming working too, like\
      \ Zoom-Instagib.</p>\n<p>P.P.S. I've also done NukeRifles for UT and a Nuclear-War\
      \ mut for UT (replaces all weapons with 2-shot Redeemers... better run for cover).\
      \ Again, if anyone wants them, shout.</p>\n<p><b>Electric Mini</b></p>\n<hr\
      \ />\n<p><b>Eldhrin:</b> Use HurtRadius for initiating the damage – I'm not\
      \ sure how, but somehow it Just Works. Most of the time at least&#160;:-)</p>\n\
      <p><b>Electric Mini:</b> That's what it does at the moment. I think the problem\
      \ may be that I just \"borrowed\" the Redeemer code, and that spawns the Redeemer\
      \ missile as a separate Pawn, which then explodes when it hits something. My\
      \ hack just spawns it, and it explodes immediately ( gross hack or what?&#160;;-).</p>\n\
      <p>So I think the kills are getting attributed to this Redeemer missile actor,\
      \ rather than to the player who fired it (somewhere the chain of ownership is\
      \ getting broken).</p>\n<p>I guess I really should dig deeper and learn how\
      \ the Redeemer stuff works, then think of a decent way to code it. A task to\
      \ prove me worthy, eh?</p>\n<p><b>Eldhrin:</b> lol yes. However, it sounds like\
      \ what you should really be doing is using a subclass of InstantFire, with code\
      \ pulled out of the Redeemer's missile class in its hit-the-target routine.\
      \ Or, have a look at the code in the Redeemer (or rather in one of its superclasses)\
      \ which actually spawns the missile, and see if there's anything in that which\
      \ looks like how the chain of ownership is preserved. It might be as simple\
      \ as one of the optional parameters passed to Spawn.</p>\n<p><b>Electric Mini:</b>\
      \ I've got it working properly now, I must have been doing something stupid\
      \ before (no surprises there!&#160;;-)). I'm using the SuperShockRifle (a.k.a\
      \ InstaGib Rifle) as the basis for the weapon, so it is a weird hybrid of an\
      \ instant-hit weapon (InstaGib Rifle) and a projectile weapon (Redeemer).</p>\n\
      <p>I've modified the TracePart() routine so it won't recursively trace until\
      \ it hits the level (that was how you could shoot through one enemy and kill\
      \ a second one with just one shot) now it spawns a modified Redeemer projectile\
      \ (no skins or static meshes, so it's invisible).</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">function</span> TracePart<span class=\"\
      br0\">(</span><span class=\"kw5\">Vector</span> Start, <span class=\"kw5\">Vector</span>\
      \ End, <span class=\"kw5\">Vector</span> X, <span class=\"kw5\">Rotator</span>\
      \ Dir, <span class=\"kw9\">Pawn</span> Ignored<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"\
      kw5\">Vector</span> HitLocation, HitNormal;\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw9\">Actor</span> Other;\n    <span class=\"kw1\">local</span>\
      \ NukeRifleProjectile big_bang;\n \n    Other <span class=\"sy0\">=</span> Ignored.<span\
      \ class=\"kw4\">Trace</span><span class=\"br0\">(</span>HitLocation, HitNormal,\
      \ End, Start, <span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n\
      \ \n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"\
      br0\">(</span>Other <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      br0\">(</span>Other <span class=\"sy0\">!=</span> Ignored<span class=\"br0\"\
      >)</span> <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n \
      \       <span class=\"co1\">//if ( !Other.bWorldGeometry )</span>\n        <span\
      \ class=\"co1\">//{</span>\n            HitNormal <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Vect</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n            <span class=\"co1\">//if ( (Pawn(Other)\
      \ != None) &amp;&amp; (HitLocation != Start) &amp;&amp; Weapon.IsA('NukeRifle')\
      \ )</span>\n\t\t\t<span class=\"co1\">//\tTracePart(HitLocation,End,X,Dir,Pawn(Other));</span>\n\
      \        <span class=\"co1\">//}</span>\n    <span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n   \
      \     HitLocation <span class=\"sy0\">=</span> End;\n        HitNormal <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Vect</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n\
      \tSpawnBeamEffect<span class=\"br0\">(</span>Start, Dir, HitLocation, HitNormal,\
      \ <span class=\"nu0\">0</span><span class=\"br0\">)</span>;\n\t<span class=\"\
      kw2\">if</span><span class=\"br0\">(</span> <span class=\"kw7\">Instigator</span>.<span\
      \ class=\"me0\">bDeleteMe</span> <span class=\"sy0\">!=</span> <span class=\"\
      kw6\">true</span> <span class=\"br0\">)</span>\n\t\tbig_bang <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'my_mod2.NukeRifleProjectile'</span>,<span\
      \ class=\"kw7\">Instigator</span>,, HitLocation <span class=\"sy0\">-</span>\
      \ <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\"\
      >*</span><span class=\"kw3\">Normal</span><span class=\"br0\">(</span>HitLocation\
      \ <span class=\"sy0\">-</span> Start<span class=\"br0\">)</span><span class=\"\
      br0\">)</span> , Dir<span class=\"br0\">)</span>;                      \n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p>Am I right about what I think\
      \ <i>TracePart()</i> is doing? The commented-out bits are how it did the recursive\
      \ tracing, right?</p>\n<p><i>NukeRifleProjectile</i> is a copy of <i>RedeemerProjectile</i>,\
      \ with a few of the default properties changed. It also blows up with a full-sized\
      \ nuke explosion if it is damaged, rather than a small explosion like the Redeemer\
      \ missile does.</p>\n<p>In my previous attempts this projectile would automatically\
      \ go into the Dying state, but it'd only produce a pretty explosion if you directly\
      \ shot someone. If you hit something else, you'd get the damage but no visual\
      \ explosion (weird).</p>\n<p>This time, I've left its states alone, but I'm\
      \ spawning it about 100 units back along the line of fire, so the projectile\
      \ will slam into the target and explode normally.</p>\n<p>Yeehaa! It works!&#160;:-)</p>\n\
      <p>It's also very deadly!&#160;:-)&#160;:-)</p>\n<p>Now the real challenge is\
      \ to see if it'll work over a network....</p>\n<p>I can't test this – haven't\
      \ got a network, and my ISP won't allow servers to be run off their cablemodem\
      \ connections (bummer).</p>\n<p>I've put the whole of the <a href=\"/Legacy:NukeRifles_Code\"\
      \ title=\"Legacy:NukeRifles Code\">NukeRifles Code</a> up.</p>\n<p>Thanks \\\
      </p>\n<p><b>Electric Mini</b></p>\n<p><b>Eldhrin:</b> yes, you've commented\
      \ out the bits that caused recursive tracing&#160;:-) Congratulations</p>\n\
      <p><b>Wormbo:</b> There are several other pages belonging to this one: <a href=\"\
      /Legacy:MutNukeRifles\" title=\"Legacy:MutNukeRifles\">MutNukeRifles</a>, <a\
      \ href=\"/Legacy:NukeRifle\" title=\"Legacy:NukeRifle\">NukeRifle</a>, <a href=\"\
      /Legacy:NukeRifleFire\" title=\"Legacy:NukeRifleFire\">NukeRifleFire</a>, <a\
      \ href=\"/Legacy:NukeRiflePickup\" title=\"Legacy:NukeRiflePickup\">NukeRiflePickup</a>\
      \ and <a href=\"/Legacy:NukeRifleProjectile\" title=\"Legacy:NukeRifleProjectile\"\
      >NukeRifleProjectile</a>. Those are custom class pages but not in the wiki's\
      \ usualy class page format. What to do with those?</p>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.052 seconds\nReal time usage: 0.053 seconds\nPreprocessor\
      \ visited node count: 9/1000000\nPreprocessor generated node count: 32/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1944-0!*!0!!*!*!*\
      \ and timestamp 20221118031405 and revision id 4760\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:MutNukeRifles"
  - ns: 100
    exists: true
    name: "Legacy:NukeRifleFire"
  - ns: 100
    exists: true
    name: "Legacy:NukeRifleProjectile"
  - ns: 100
    exists: true
    name: "Legacy:NukeRifles Code"
  - ns: 100
    exists: true
    name: "Legacy:NukeRifle"
  - ns: 100
    exists: true
    name: "Legacy:NukeRiflePickup"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "NukeRifles mutator"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Ideas/NukeRifles"
    byteoffset: 0
    anchor: "NukeRifles_mutator"
  - toclevel: 2
    level: "4"
    line: "Combat using modified Sniperifles that fire nuclear bullets!"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Mod_Ideas/NukeRifles"
    byteoffset: 27
    anchor: "Combat_using_modified_Sniperifles_that_fire_nuclear_bullets.21"
  displaytitle: "Legacy:Mod Ideas/NukeRifles"
  iwlinks: []
  wikitext:
    text: "===NukeRifles mutator ===\n\n====Combat using modified Sniperifles that\
      \ fire nuclear bullets! ====\n\nJust as devastating as the Redeemer, but instant\
      \ hit, and zoom too ;-)\n\nYes, I know it's totally silly, but it' good fun\
      \ for about 5 minutes...\n\nI'd like to do a version of it for UT2003, but am\
      \ having trouble figuring out how the new Redeemer code works &ndash; specifically\
      \ it uses states to gradually move the damage  radius out as the shockwaves\
      \ expand, so the victims get gibbed when the wave hits them.  Each time I try\
      \ to use states, the compiler throws up some error or other... :-( So at the\
      \ moment, in my mut they just get gibbed instantly, which looks really lame.\
      \  In good old UT, I could just spawn a ''Shockwave'' object, this did the whole\
      \ lot automatically...  :-)\n\nThanks, \\\n\n'''Electric Mini:'''\n\n----\n\n\
      Update... I've got it (mostly) working\n\nI've managed to get it to work after\
      \ poking around the Net all day :-)\n\nI've had to spawn a custom class ''NukeRifleExplosion'',\
      \ based on the ''RedeemerFire'' stuff.\n\nThis spawns a nuke explosion, which\
      \ is allowed to have states, so I get the nice shockwaves and huge '''BOOM'''\
      \ explosion noise...\n\nBut... I can't get the kills to register properly! Up\
      \ until 10 minutes ago I couldn't score a single kill with this mut, only suicides\
      \ were counted (DOH!). The only way I've found to do this so far is to call\
      \ ''Other.TakeDamage'', this passes the ''Instigator'' along so kills are recorded\
      \ for whichever victim you hit. But this sucks, 'cos it's instant, and you only\
      \ get credit for killing the poor sucker the beam actually hits! \n\nEveryone\
      \ else that dies gets counted as a suicide (ugh!).\n\nThe Redeemer code uses\
      \ ''HurtRadius'', but I can't see how this gets info on who fired the thing\
      \ to the victim (like ''Other.TakeDamage'' would).\n\nIs there some easy way\
      \ to hurt all the actors within a radius of a target, making sure that if they\
      \ die the person who fired the shot gets the credit?\n\nAm I just barking up\
      \ the wrong tree here? Or am I just barking mad?  ;-)\n\nP.S. If anyone wants\
      \ the NukeRifles mut, put a comment here and I'll put it up on the www somewhere.\
      \ Oh yes, I've now got zooming working too, like Zoom-Instagib.\n\nP.P.S. I've\
      \ also done NukeRifles for UT and a Nuclear-War mut for UT (replaces all weapons\
      \ with 2-shot Redeemers... better run for cover).   Again, if anyone wants them,\
      \ shout.\n\n'''Electric Mini'''\n\n----\n\n'''Eldhrin:''' Use HurtRadius for\
      \ initiating the damage &ndash; I'm not sure how, but somehow it Just Works.\
      \ Most of the time at least :-)\n\n'''Electric Mini:''' That's what it does\
      \ at the moment. I think the problem may be  that I just \"borrowed\" the Redeemer\
      \ code, and that spawns the Redeemer missile as a separate Pawn, which then\
      \ explodes when it hits something. My hack just spawns it, and it explodes immediately\
      \ ( gross hack or what? ;-). \n\nSo I think the kills are getting attributed\
      \ to this Redeemer missile actor, rather than to the player who fired it (somewhere\
      \ the chain of ownership is getting broken).\n\nI guess I really should dig\
      \ deeper and learn how the Redeemer stuff works, then think of a decent way\
      \ to code it. A task to prove me worthy, eh?\n\n'''Eldhrin:''' lol yes. However,\
      \ it sounds like what you should really be doing is using a subclass of InstantFire,\
      \ with code pulled out of the Redeemer's missile class in its hit-the-target\
      \ routine. Or, have a look at the code in the Redeemer (or rather in one of\
      \ its superclasses) which actually spawns the missile, and see if there's anything\
      \ in that which looks like how the chain of ownership is preserved. It might\
      \ be as simple as one of the optional parameters passed to Spawn.\n\n'''Electric\
      \ Mini:''' I've got it working properly now, I must have been doing something\
      \ stupid before (no surprises there! ;-)).  I'm using the SuperShockRifle (a.k.a\
      \ InstaGib Rifle) as the basis for the weapon, so it is a weird hybrid of an\
      \ instant-hit weapon (InstaGib Rifle) and a projectile weapon (Redeemer).\n\n\
      I've modified the TracePart() routine so it won't recursively trace until it\
      \ hits the level (that was how you could shoot through one enemy and kill a\
      \ second one with just one shot) now it spawns a modified Redeemer projectile\
      \ (no skins or static meshes, so it's invisible).\n\n<uscript>\nfunction TracePart(Vector\
      \ Start, Vector End, Vector X, Rotator Dir, Pawn Ignored)\n{\n    local Vector\
      \ HitLocation, HitNormal;\n    local Actor Other;\n    local NukeRifleProjectile\
      \ big_bang;\n\n    Other = Ignored.Trace(HitLocation, HitNormal, End, Start,\
      \ true);\n\n    if ( (Other != None) && (Other != Ignored) )\n    {\n      \
      \  //if ( !Other.bWorldGeometry )\n        //{\n            HitNormal = Vect(0,0,0);\n\
      \            //if ( (Pawn(Other) != None) && (HitLocation != Start) && Weapon.IsA('NukeRifle')\
      \ )\n\t\t\t//\tTracePart(HitLocation,End,X,Dir,Pawn(Other));\n        //}\n\
      \    }\n    else\n    {\n        HitLocation = End;\n        HitNormal = Vect(0,0,0);\n\
      \    }\n\tSpawnBeamEffect(Start, Dir, HitLocation, HitNormal, 0);\n\tif( Instigator.bDeleteMe\
      \ != true )\n\t\tbig_bang = Spawn(class'my_mod2.NukeRifleProjectile',Instigator,,\
      \ HitLocation - (100*Normal(HitLocation - Start)) , Dir);                  \
      \    \n}\n</uscript>\n\nAm I right about what I think ''TracePart()'' is doing?\
      \ The commented-out bits are how it did the recursive tracing, right?\n\n''NukeRifleProjectile''\
      \ is a copy of ''RedeemerProjectile'', with a few of the default properties\
      \ changed. It also blows up with a full-sized nuke explosion if it is damaged,\
      \ rather than a small explosion like the Redeemer missile does.\n\nIn my previous\
      \ attempts this projectile would automatically go into the Dying state, but\
      \ it'd only produce a pretty explosion if you directly shot someone. If you\
      \ hit something else, you'd get the damage but no visual explosion (weird).\
      \ \n\nThis time, I've left its states alone, but I'm spawning it about 100 units\
      \ back along the line of fire, so the projectile will slam into the target and\
      \ explode normally.\n\nYeehaa! It works! :-)\n\nIt's also very deadly! :-) :-)\n\
      \nNow the real challenge is to see if it'll work over a network....\n\nI can't\
      \ test this &ndash; haven't got a network, and my ISP won't allow servers to\
      \ be run off their cablemodem connections (bummer).\n\nI've put the whole of\
      \ the [[Legacy:NukeRifles Code|NukeRifles Code]] up.\n\nThanks \\\n\n'''Electric\
      \ Mini'''\n\n'''Eldhrin:''' yes, you've commented out the bits that caused recursive\
      \ tracing :-) Congratulations\n\n'''Wormbo:''' There are several other pages\
      \ belonging to this one: [[Legacy:MutNukeRifles|MutNukeRifles]], [[Legacy:NukeRifle|NukeRifle]],\
      \ [[Legacy:NukeRifleFire|NukeRifleFire]], [[Legacy:NukeRiflePickup|NukeRiflePickup]]\
      \ and [[Legacy:NukeRifleProjectile|NukeRifleProjectile]]. Those are custom class\
      \ pages but not in the wiki's usualy class page format. What to do with those?"
  properties: []
  revId: 4760
name: "Legacy:Mod Ideas/NukeRifles"
revision:
  revid: 4760
  parentid: 4762
  user: "Wormbo"
  timestamp: 1153252607.000000000
  comment: "reverted"
timestamp: 1668765848.527249000
