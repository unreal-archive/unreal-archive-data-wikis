---
parse:
  title: "Legacy:Mod Ideas/LocalGravity"
  text:
    text: "<p>Moved from my Personal Projects page</p>\n<p></p>\n<div id=\"toc\" class=\"\
      toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"\
      toclevel-1 tocsection-1\"><a href=\"#Local_Gravity\"><span class=\"tocnumber\"\
      >1</span> <span class=\"toctext\">Local Gravity</span></a>\n<ul>\n<li class=\"\
      toclevel-2 tocsection-2\"><a href=\"#The_Idea\"><span class=\"tocnumber\">1.1</span>\
      \ <span class=\"toctext\">The Idea</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#The_Progress\"><span class=\"tocnumber\">1.2</span> <span class=\"\
      toctext\">The Progress</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#To_Do\"><span class=\"tocnumber\">1.3</span> <span class=\"toctext\"\
      >To Do</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#Comments\"\
      ><span class=\"tocnumber\">1.4</span> <span class=\"toctext\">Comments</span></a></li>\n\
      </ul>\n</li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"\
      Local_Gravity\">Local Gravity</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/LocalGravity?section=1\"\
      \ title=\"Edit section: Local Gravity\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"The_Idea\">The Idea</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/LocalGravity?section=2\" title=\"Edit section:\
      \ The Idea\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>The Idea is to allow mappers greater control of the gravity in the map, allowing\
      \ people to walk on walls, around a planet, or in general whatever can make\
      \ a level more fun.</p>\n<h3><span class=\"mw-headline\" id=\"The_Progress\"\
      >The Progress</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Ideas/LocalGravity?section=3\" title=\"\
      Edit section: The Progress\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>My progress thus far has been with editing the PlayerSpidering\
      \ state of the Playercontroller, and here is most of my code thus far.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//=============================================================================</span>\n\
      \ \n<span class=\"co1\">// GravPlayer.uc</span>\n \n<span class=\"co1\">//=============================================================================</span>\n\
      \ \n<span class=\"kw1\">class</span> GravPlayer <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">xPlayer</span>;\n \n<span class=\"kw1\">var</span> <span\
      \ class=\"kw5\">float</span> MaxAcceleration, AccelerationDampening;\n \n<span\
      \ class=\"kw1\">function</span> Possess<span class=\"br0\">(</span><span class=\"\
      kw9\">Pawn</span> aPawn<span class=\"br0\">)</span>\n \n<span class=\"br0\"\
      >{</span>\n \n\t<span class=\"kw6\">Super</span>.<span class=\"me0\">Possess</span><span\
      \ class=\"br0\">(</span>aPawn<span class=\"br0\">)</span>;\n \n\t<span class=\"\
      kw3\">GoToState</span><span class=\"br0\">(</span><span class=\"st0\">'PlayerSpidering'</span><span\
      \ class=\"br0\">)</span>;\n \n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">state</span> PlayerSpidering\n \n<span class=\"br0\">{</span>\n \n<span\
      \ class=\"kw1\">function</span> ProcessMove<span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> DeltaTime, <span class=\"kw5\">vector</span> NewAccel,\
      \ eDoubleClickDir DoubleClickMove, <span class=\"kw5\">rotator</span> DeltaRot<span\
      \ class=\"br0\">)</span>\n \n<span class=\"br0\">{</span>\n \n\t<span class=\"\
      kw1\">local</span> <span class=\"kw5\">vector</span> OldAccel;\n \n\tOldAccel\
      \ <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span>.<span class=\"\
      kw7\">Acceleration</span>;\n \n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"kw9\">Pawn</span>.<span class=\"kw7\">Acceleration</span>\
      \ <span class=\"sy0\">!=</span> NewAccel <span class=\"br0\">)</span>\n \n\t\
      \t<span class=\"kw9\">Pawn</span>.<span class=\"kw7\">Acceleration</span> <span\
      \ class=\"sy0\">=</span> NewAccel;\n \n\t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> bPressedJump <span class=\"br0\">)</span>\n \n\t\t\
      DoJump<span class=\"br0\">(</span>bUpdating<span class=\"br0\">)</span>;\n \n\
      <span class=\"br0\">}</span>\n \n<span class=\"co1\">//Should put in the Pawn\
      \ if possible, to eaise bot Implementation.</span>\n \n<span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">bool</span> DoJump<span class=\"br0\">(</span> <span class=\"\
      kw5\">bool</span> bUpdating <span class=\"br0\">)</span>\n \n<span class=\"\
      br0\">{</span>\n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ <span class=\"sy0\">!</span><span class=\"kw9\">Pawn</span>.<span class=\"\
      me0\">bIsCrouched</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      sy0\">!</span><span class=\"kw9\">Pawn</span>.<span class=\"me0\">bWantsToCrouch</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Physics</span> <span class=\"sy0\">==</span> <span class=\"\
      kw7\">PHYS_Spider</span> <span class=\"br0\">)</span>\n  <span class=\"br0\"\
      >{</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span\
      \ class=\"kw9\">Pawn</span>.<span class=\"kw7\">Role</span> <span class=\"sy0\"\
      >==</span> <span class=\"kw7\">ROLE_Authority</span> <span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n      <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"kw7\">Level</span>.<span\
      \ class=\"kw7\">Game</span> <span class=\"sy0\">!=</span> <span class=\"kw5\"\
      >None</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ <span class=\"br0\">(</span><span class=\"kw7\">Level</span>.<span class=\"\
      kw7\">Game</span>.<span class=\"me0\">GameDifficulty</span> <span class=\"sy0\"\
      >&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n        <span class=\"kw4\">MakeNoise</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0.1</span> <span class=\"sy0\">*</span>\
      \ <span class=\"kw7\">Level</span>.<span class=\"kw7\">Game</span>.<span class=\"\
      me0\">GameDifficulty</span><span class=\"br0\">)</span>;\n      <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span> <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"me0\">bCountJumps</span> <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span class=\"kw9\"\
      >Inventory</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span>\n        <span class=\"\
      kw9\">Pawn</span>.<span class=\"kw9\">Inventory</span>.<span class=\"me0\">OwnerEvent</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'Jumped'</span><span class=\"br0\"\
      >)</span>;\n    <span class=\"br0\">}</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"kw9\">Pawn</span>.<span class=\"\
      kw7\">Physics</span> <span class=\"sy0\">==</span> <span class=\"kw7\">PHYS_Spider</span>\
      \ <span class=\"br0\">)</span>\n      <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Velocity</span> <span class=\"sy0\">+=</span> <span class=\"\
      kw9\">Pawn</span>.<span class=\"me0\">JumpZ</span> <span class=\"sy0\">*</span>\
      \ <span class=\"kw9\">Pawn</span>.<span class=\"me0\">Floor</span>;\n     <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">Pawn</span>.<span class=\"kw7\">Base</span> <span class=\"sy0\"\
      >!=</span> <span class=\"kw5\">None</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"\
      kw9\">Pawn</span>.<span class=\"kw7\">Base</span>.<span class=\"me0\">bWorldGeometry</span>\
      \ <span class=\"br0\">)</span>\n      <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Velocity</span>.<span class=\"me0\">Z</span> <span class=\"\
      sy0\">+=</span> <span class=\"kw9\">Pawn</span>.<span class=\"kw7\">Base</span>.<span\
      \ class=\"kw7\">Velocity</span>.<span class=\"me0\">Z</span>;\n \n\t   <span\
      \ class=\"kw9\">Pawn</span>.<span class=\"kw9\">PhysicsVolume</span>.<span class=\"\
      me0\">Gravity</span> <span class=\"sy0\">=</span> <span class=\"kw3\">vect</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>;\n    <span class=\"kw9\"\
      >Pawn</span>.<span class=\"kw4\">SetPhysics</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">PHYS_Falling</span><span class=\"br0\">)</span>;\n        <span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">true</span>;\n  <span class=\"\
      br0\">}</span>\n    <span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      \ \n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> UpdateRotation<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> DeltaTime, <span class=\"\
      kw5\">float</span> maxPitch<span class=\"br0\">)</span>\n \n<span class=\"br0\"\
      >{</span>\n  <span class=\"kw1\">local</span> <span class=\"kw5\">rotator</span>\
      \ ViewRotation;\n  <span class=\"kw1\">local</span> <span class=\"kw5\">vector</span>\
      \ MyFloor, CrossDir, FwdDir, OldFwdDir, OldX, RealFloor, PawnX, PawnZ;\n \n\
      \  <span class=\"kw2\">if</span> <span class=\"br0\">(</span> bInterpolating\
      \ <span class=\"sy0\">||</span> <span class=\"kw9\">Pawn</span>.<span class=\"\
      me0\">bInterpolating</span> <span class=\"br0\">)</span>\n  <span class=\"br0\"\
      >{</span>\n      ViewShake<span class=\"br0\">(</span>deltaTime<span class=\"\
      br0\">)</span>;\n      <span class=\"kw2\">return</span>;\n  <span class=\"\
      br0\">}</span>\n \n  TurnTarget <span class=\"sy0\">=</span> <span class=\"\
      kw5\">None</span>;\n  bRotateToDesired <span class=\"sy0\">=</span> <span class=\"\
      kw6\">false</span>;\n  bSetTurnRot <span class=\"sy0\">=</span> <span class=\"\
      kw6\">false</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Base</span> <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >None</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span\
      \ class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span class=\"me0\"\
      >Floor</span> <span class=\"sy0\">==</span> <span class=\"kw3\">vect</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n    <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>OldFloor <span class=\"sy0\">==</span>\
      \ <span class=\"kw3\">vect</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n    OldFloor <span class=\"\
      sy0\">=</span> <span class=\"kw3\">vect</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>;\n    MyFloor <span class=\"sy0\">=</span> OldFloor;\n\
      \  <span class=\"br0\">}</span>\n  <span class=\"kw2\">else</span>\n      MyFloor\
      \ <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span>.<span class=\"\
      me0\">Floor</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> MyFloor <span class=\"sy0\">!=</span> OldFloor <span class=\"br0\"\
      >)</span>\n  <span class=\"br0\">{</span>\n      <span class=\"co1\">// smoothly\
      \ change floor</span>\n      RealFloor <span class=\"sy0\">=</span> MyFloor;\n\
      \      MyFloor <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy0\">*</span>DeltaTime\
      \ <span class=\"sy0\">*</span> MyFloor <span class=\"sy0\">+</span> <span class=\"\
      br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span\
      \ class=\"nu0\">6</span><span class=\"sy0\">*</span>DeltaTime<span class=\"\
      br0\">)</span> <span class=\"sy0\">*</span> OldFloor<span class=\"br0\">)</span>;\n\
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"\
      br0\">(</span>RealFloor Dot MyFloor<span class=\"br0\">)</span> <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">0.999</span> <span class=\"br0\">)</span>\n\
      \          MyFloor <span class=\"sy0\">=</span> RealFloor;\n      <span class=\"\
      kw2\">else</span>\n      <span class=\"br0\">{</span>\n      <span class=\"\
      co1\">// translate view direction</span>\n        CrossDir <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">Normal</span><span class=\"br0\">(</span>RealFloor\
      \ Cross OldFloor<span class=\"br0\">)</span>;\n        FwdDir <span class=\"\
      sy0\">=</span> CrossDir Cross MyFloor;\n        OldFwdDir <span class=\"sy0\"\
      >=</span> CrossDir Cross OldFloor;\n        ViewX <span class=\"sy0\">=</span>\
      \ MyFloor <span class=\"sy0\">*</span> <span class=\"br0\">(</span>OldFloor\
      \ Dot ViewX<span class=\"br0\">)</span>\n              <span class=\"sy0\">+</span>\
      \ CrossDir <span class=\"sy0\">*</span> <span class=\"br0\">(</span>CrossDir\
      \ Dot ViewX<span class=\"br0\">)</span>\n              <span class=\"sy0\">+</span>\
      \ FwdDir <span class=\"sy0\">*</span> <span class=\"br0\">(</span>OldFwdDir\
      \ Dot ViewX<span class=\"br0\">)</span>;\n        ViewX <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">Normal</span><span class=\"br0\">(</span>ViewX<span\
      \ class=\"br0\">)</span>;\n \n        ViewZ <span class=\"sy0\">=</span> MyFloor\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span>OldFloor Dot ViewZ<span\
      \ class=\"br0\">)</span>\n              <span class=\"sy0\">+</span> CrossDir\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span>CrossDir Dot ViewZ<span\
      \ class=\"br0\">)</span>\n              <span class=\"sy0\">+</span> FwdDir\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span>OldFwdDir Dot ViewZ<span\
      \ class=\"br0\">)</span>;\n        ViewZ <span class=\"sy0\">=</span> <span\
      \ class=\"kw3\">Normal</span><span class=\"br0\">(</span>ViewZ<span class=\"\
      br0\">)</span>;\n        OldFloor <span class=\"sy0\">=</span> MyFloor;\n  \
      \      ViewY <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span>MyFloor Cross ViewX<span class=\"br0\">)</span>;\n \
      \     <span class=\"br0\">}</span>\n  <span class=\"br0\">}</span>\n \n  <span\
      \ class=\"co1\">//Moved here because it is already calculated here</span>\n\
      \  <span class=\"co1\">//Pawn.FaceRotation(OrthoRotation(ViewX,ViewY,ViewZ),\
      \ deltaTime );</span>\n \n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"br0\">(</span>aTurn <span class=\"sy0\">!=</span> <span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span>\
      \ <span class=\"br0\">(</span>aLookUp <span class=\"sy0\">!=</span> <span class=\"\
      nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n  <span\
      \ class=\"br0\">{</span>\n    <span class=\"co1\">// adjust Yaw based on aTurn</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span> aTurn <span\
      \ class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>\n\
      \        ViewX <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span>ViewX <span class=\"sy0\">+</span>  ViewY <span class=\"\
      sy0\">*</span> <span class=\"kw3\">Sin</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.0031</span><span class=\"sy0\">*</span>DeltaTime<span class=\"\
      sy0\">*</span>aTurn<span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n    <span class=\"co1\">// adjust Pitch based on aLookUp</span>\n    <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span> aLookUp <span class=\"\
      sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n        OldX <span class=\"sy0\">=</span>\
      \ ViewX;\n        ViewX <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span>ViewX <span class=\"sy0\">+</span>  ViewZ <span class=\"\
      sy0\">*</span> <span class=\"kw3\">Sin</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.0031</span><span class=\"sy0\">*</span>DeltaTime<span class=\"\
      sy0\">*</span>aLookUp<span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \        ViewZ <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span>ViewX Cross ViewY<span class=\"br0\">)</span>;\n \n\
      \        <span class=\"co1\">//bound max pitch</span>\n        <span class=\"\
      co1\">//Redo this now</span>\n        <span class=\"coMULTI\">/*if ( (ViewZ\
      \ Dot MyFloor) &lt; 0.1   )\n        {\n            OldX = Normal(OldX - MyFloor\
      \ * (MyFloor Dot OldX));\n            if ( (ViewX Dot MyFloor) &gt; 0)\n   \
      \             ViewX = Normal(OldX + MyFloor);\n            else\n          \
      \      ViewX = Normal(OldX - MyFloor);\n \n            ViewZ = Normal(ViewX\
      \ Cross ViewY);\n        }*/</span>\n    <span class=\"br0\">}</span>\n \n \
      \   <span class=\"co1\">// calculate new Y axis</span>\n    ViewY <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Normal</span><span class=\"br0\">(</span>MyFloor\
      \ Cross ViewX<span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \  ViewRotation <span class=\"sy0\">=</span>  <span class=\"kw3\">OrthoRotation</span><span\
      \ class=\"br0\">(</span>ViewX,ViewY,ViewZ<span class=\"br0\">)</span>;\n  <span\
      \ class=\"kw4\">SetRotation</span><span class=\"br0\">(</span>ViewRotation<span\
      \ class=\"br0\">)</span>;\n  ViewShake<span class=\"br0\">(</span>deltaTime<span\
      \ class=\"br0\">)</span>;\n  ViewFlash<span class=\"br0\">(</span>deltaTime<span\
      \ class=\"br0\">)</span>;\n  PawnX <span class=\"sy0\">=</span> <span class=\"\
      kw3\">Normal</span><span class=\"br0\">(</span>ViewY Cross MyFloor<span class=\"\
      br0\">)</span>;\n  PawnZ <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span>PawnX Cross ViewY<span class=\"br0\">)</span>;\n  <span\
      \ class=\"kw9\">Pawn</span>.<span class=\"me0\">FaceRotation</span><span class=\"\
      br0\">(</span><span class=\"kw3\">OrthoRotation</span><span class=\"br0\">(</span>PawnX,ViewY,PawnZ<span\
      \ class=\"br0\">)</span>, deltaTime <span class=\"br0\">)</span>;\n  <span class=\"\
      co1\">//Pawn.FaceRotation(ViewRotation, deltaTime );</span>\n \n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">function</span> PlayerTick<span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> DeltaTime<span class=\"br0\"\
      >)</span>\n \n<span class=\"br0\">{</span>\n \n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">Vector</span> HitLocation, HitNormal, X, Y, Z;\n \n\t\
      <span class=\"kw1\">local</span> <span class=\"kw9\">Actor</span> HitActor;\n\
      \ \n\t<span class=\"kw6\">Super</span>.<span class=\"me0\">PlayerTick</span><span\
      \ class=\"br0\">(</span>DeltaTime<span class=\"br0\">)</span>;\n \n\t<span class=\"\
      kw3\">GetAxes</span><span class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Rotation</span>, X, Y, Z<span class=\"br0\">)</span>;\n \n\t\
      <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"kw9\"\
      >Pawn</span>.<span class=\"kw7\">Physics</span> <span class=\"sy0\">==</span>\
      \ <span class=\"kw7\">PHYS_Falling</span><span class=\"br0\">)</span>\n \n\t\
      <span class=\"br0\">{</span>\n \n\t  <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"kw3\">VSize</span><span class=\"br0\">(</span><span\
      \ class=\"kw9\">Pawn</span>.<span class=\"kw7\">Acceleration</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">&gt;</span> MaxAcceleration<span class=\"\
      br0\">)</span>\n \n\t   <span class=\"kw9\">Pawn</span>.<span class=\"kw7\"\
      >Acceleration</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span class=\"kw7\"\
      >Acceleration</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ MaxAcceleration;\n \n\t  <span class=\"kw2\">else</span>\n \n\t   <span class=\"\
      kw9\">Pawn</span>.<span class=\"kw7\">Acceleration</span> <span class=\"sy0\"\
      >*=</span> AccelerationDampening;\n \n\t  <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Acceleration</span> <span class=\"sy0\">+=</span> Z <span class=\"\
      sy0\">*</span> <span class=\"kw9\">Pawn</span>.<span class=\"kw9\">PhysicsVolume</span>.<span\
      \ class=\"kw1\">default</span>.<span class=\"me0\">Gravity</span>.<span class=\"\
      me0\">Z</span>;\n \n\t  <span class=\"kw9\">Pawn</span>.<span class=\"kw7\"\
      >Velocity</span> <span class=\"sy0\">+=</span> <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Acceleration</span><span class=\"sy0\">*</span>DeltaTime;\n\
      \ \n\t  <span class=\"co1\">//Pawn.Acceleration = vect(0,0,0);</span>\n \n\t\
      \  <span class=\"co1\">//Change 70 to something less, static.</span>\n     \
      \ HitActor <span class=\"sy0\">=</span> <span class=\"kw4\">Trace</span><span\
      \ class=\"br0\">(</span>HitLocation, HitNormal, <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Location</span><span class=\"sy0\">+</span><span class=\"kw3\"\
      >Normal</span><span class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Velocity</span><span class=\"br0\">)</span><span class=\"sy0\"\
      >*</span><span class=\"nu0\">100</span>, <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n      <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>HitActor <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span> <span class=\"sy0\">&amp;&amp;</span> HitActor.<span\
      \ class=\"me0\">bWorldGeometry</span><span class=\"br0\">)</span>\n      <span\
      \ class=\"br0\">{</span>\n        <span class=\"kw3\">Log</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"Here2\"</span><span class=\"br0\">)</span>;\n\
      \        <span class=\"kw9\">Pawn</span>.<span class=\"kw4\">SetPhysics</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">PHYS_Spider</span><span class=\"\
      br0\">)</span>;\n        <span class=\"kw9\">Pawn</span>.<span class=\"kw4\"\
      >SetBase</span><span class=\"br0\">(</span>HitActor , HitNormal<span class=\"\
      br0\">)</span>;\n      <span class=\"br0\">}</span>\n \n\t<span class=\"br0\"\
      >}</span>\n \n<span class=\"br0\">}</span>\n \n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">defaultproperties</span>\n \n<span class=\"br0\">{</span>\n\
      \  AccelerationDampening<span class=\"sy0\">=</span><span class=\"nu0\">0.1</span>\n\
      \  MaxAcceleration<span class=\"sy0\">=</span><span class=\"nu0\">200</span>\n\
      \  PawnClass<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'LocalGravity.GravPawn'</span>\n \n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>ProcessMove is overridden to use a DoJump in this class, will probally\
      \ get rid of this when I move that code back to the Pawn.</p>\n<p>UpdateRotation\
      \ is mostly the same as in PlayerController.uc, except for a bit of math, that\
      \ being in the middle of the function, no real way I could reuse it without\
      \ copying it.</p>\n<p>Now, what I would like some suggestions on, are in my\
      \ PlayerTick. the Trace that I am doing has a static number in there, I kinda\
      \ need a better way, this will make you stick to soon when falling straight\
      \ down, or not at all when falling too diagonal.</p>\n<p>Ohh yes, and we want\
      \ to be able to get it into our map. So, an Actor!</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co1\">//=============================================================================</span>\n\
      \ \n<span class=\"co1\">// LocalGravActor.uc</span>\n \n<span class=\"co1\"\
      >//=============================================================================</span>\n\
      \ \n<span class=\"kw1\">class</span> LocalGravActor <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Actor</span>\n  <span class=\"kw1\">placeable</span>;\n\
      \ \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> Class<span class=\"sy0\">&lt;</span>PlayerController<span class=\"\
      sy0\">&gt;</span> PC<span class=\"re0\">Class</span>&lt; SEMI &gt;\n \n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">string</span> PlayerClassName;\n \n<span class=\"kw1\"\
      >function</span> <span class=\"kw4\">PreBeginPlay</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n \n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw7\">Level</span>.<span class=\"kw7\">Game</span>.<span class=\"\
      me0\">PlayerControllerClass</span> <span class=\"sy0\">=</span> PC<span class=\"\
      re0\">Class</span>&lt; SEMI &gt;\n  <span class=\"kw7\">Level</span>.<span class=\"\
      kw7\">Game</span>.<span class=\"me0\">DefaultPlayerClassName</span> <span class=\"\
      sy0\">=</span> PlayerClassName;\n \n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">defaultproperties</span>\n \n<span class=\"br0\">{</span>\n  PCClass<span\
      \ class=\"sy0\">=</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'LocalGravity.GravPlayer'</span>\n  PlayerClassName<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"LocalGravity.GravPawn\"</span>\n  bHidden<span class=\"sy0\"\
      >=</span><span class=\"kw6\">true</span>\n \n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"To_Do\">To Do</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/LocalGravity?section=4\"\
      \ title=\"Edit section: To Do\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The most pressing matters are finding a better way\
      \ to see if we should be on something then</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\">      HitActor <span class=\"sy0\">=</span> <span class=\"kw4\">Trace</span><span\
      \ class=\"br0\">(</span>HitLocation, HitNormal, <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Location</span><span class=\"sy0\">+</span><span class=\"kw3\"\
      >Normal</span><span class=\"br0\">(</span><span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Velocity</span><span class=\"br0\">)</span><span class=\"sy0\"\
      >*</span><span class=\"nu0\">100</span>, <span class=\"kw9\">Pawn</span>.<span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n      <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>HitActor <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span> <span class=\"sy0\">&amp;&amp;</span> HitActor.<span\
      \ class=\"me0\">bWorldGeometry</span><span class=\"br0\">)</span></pre></div>\n\
      </div>\n<p>Then fix thirdperson camera, allow more flexibality when creating\
      \ the level, and giving bots the same flexibility</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Comments\">Comments</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/LocalGravity?section=5\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>Glacian:</b> I am working on a similar mod, maybe\
      \ we could combine forces....muwahaha! I fixed the bounded view angle problem\
      \ by substituting in quaternion rotation, and I've coded up some modified gravity,\
      \ doublejumping, and dodging code to work at any angle. I stuck only on the\
      \ problem of getting the physics to allow the pawn to walk on the wall, and\
      \ phys_spidering has some behaviors I don't like. If you (or anyone else) are\
      \ interested, my email is focusgir (at) yahoo (dot) com.</p>\n\n<!-- \nNewPP\
      \ limit report\nCPU time usage: 0.132 seconds\nReal time usage: 0.397 seconds\n\
      Preprocessor visited node count: 46/1000000\nPreprocessor generated node count:\
      \ 84/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate argument size:\
      \ 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2013-0!*!*!!en!*!* and timestamp 20221118031109 and revision\
      \ id 4918\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Local Gravity"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Ideas/LocalGravity"
    byteoffset: 38
    anchor: "Local_Gravity"
  - toclevel: 2
    level: "3"
    line: "The Idea"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Mod_Ideas/LocalGravity"
    byteoffset: 57
    anchor: "The_Idea"
  - toclevel: 2
    level: "3"
    line: "The Progress"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Mod_Ideas/LocalGravity"
    byteoffset: 247
    anchor: "The_Progress"
  - toclevel: 2
    level: "3"
    line: "To Do"
    number: "1.3"
    index: "4"
    fromtitle: "Legacy:Mod_Ideas/LocalGravity"
    byteoffset: 6793
    anchor: "To_Do"
  - toclevel: 2
    level: "3"
    line: "Comments"
    number: "1.4"
    index: "5"
    fromtitle: "Legacy:Mod_Ideas/LocalGravity"
    byteoffset: 7195
    anchor: "Comments"
  displaytitle: "Legacy:Mod Ideas/LocalGravity"
  iwlinks: []
  wikitext:
    text: "Moved from my Personal Projects page\n\n==Local Gravity==\n\n===The Idea===\n\
      \nThe Idea is to allow mappers greater control of the gravity in the map, allowing\
      \ people to walk on walls, around a planet, or in general whatever can make\
      \ a level more fun.\n\n===The Progress===\n\nMy progress thus far has been with\
      \ editing the PlayerSpidering state of the Playercontroller, and here is most\
      \ of my code thus far.\n\n<UScript>\n\n//=============================================================================\n\
      \n// GravPlayer.uc\n\n//=============================================================================\n\
      \nclass GravPlayer extends xPlayer;\n\nvar float MaxAcceleration, AccelerationDampening;\n\
      \nfunction Possess(Pawn aPawn)\n\n{\n\n\tSuper.Possess(aPawn);\n\n\tGoToState('PlayerSpidering');\n\
      \n}\n\nstate PlayerSpidering\n\n{\n\nfunction ProcessMove(float DeltaTime, vector\
      \ NewAccel, eDoubleClickDir DoubleClickMove, rotator DeltaRot)\n\n{\n\n\tlocal\
      \ vector OldAccel;\n\n\tOldAccel = Pawn.Acceleration;\n\n\tif ( Pawn.Acceleration\
      \ != NewAccel )\n\n\t\tPawn.Acceleration = NewAccel;\n\n\tif ( bPressedJump\
      \ )\n\n\t\tDoJump(bUpdating);\n\n}\n\n//Should put in the Pawn if possible,\
      \ to eaise bot Implementation.\n\nfunction bool DoJump( bool bUpdating )\n\n\
      {\n  if ( !Pawn.bIsCrouched && !Pawn.bWantsToCrouch && Pawn.Physics == PHYS_Spider\
      \ )\n  {\n    if ( Pawn.Role == ROLE_Authority )\n    {\n      if ( (Level.Game\
      \ != None) && (Level.Game.GameDifficulty > 2) )\n        MakeNoise(0.1 * Level.Game.GameDifficulty);\n\
      \      if ( Pawn.bCountJumps && (Pawn.Inventory != None) )\n        Pawn.Inventory.OwnerEvent('Jumped');\n\
      \    }\n    if ( Pawn.Physics == PHYS_Spider )\n      Pawn.Velocity += Pawn.JumpZ\
      \ * Pawn.Floor;\n     if ( (Pawn.Base != None) && !Pawn.Base.bWorldGeometry\
      \ )\n      Pawn.Velocity.Z += Pawn.Base.Velocity.Z;\n\n\t   Pawn.PhysicsVolume.Gravity\
      \ = vect(0,0,0);\n    Pawn.SetPhysics(PHYS_Falling);\n        return true;\n\
      \  }\n    return false;\n\n}\n\nfunction UpdateRotation(float DeltaTime, float\
      \ maxPitch)\n\n{\n  local rotator ViewRotation;\n  local vector MyFloor, CrossDir,\
      \ FwdDir, OldFwdDir, OldX, RealFloor, PawnX, PawnZ;\n\n  if ( bInterpolating\
      \ || Pawn.bInterpolating )\n  {\n      ViewShake(deltaTime);\n      return;\n\
      \  }\n\n  TurnTarget = None;\n  bRotateToDesired = false;\n  bSetTurnRot = false;\n\
      \n  if ( (Pawn.Base == None) || (Pawn.Floor == vect(0,0,0)) )\n  {\n    if(OldFloor\
      \ == vect(0,0,0))\n    OldFloor = vect(0,0,1);\n    MyFloor = OldFloor;\n  }\n\
      \  else\n      MyFloor = Pawn.Floor;\n\n  if ( MyFloor != OldFloor )\n  {\n\
      \      // smoothly change floor\n      RealFloor = MyFloor;\n      MyFloor =\
      \ Normal(6*DeltaTime * MyFloor + (1 - 6*DeltaTime) * OldFloor);\n      if (\
      \ (RealFloor Dot MyFloor) > 0.999 )\n          MyFloor = RealFloor;\n      else\n\
      \      {\n      // translate view direction\n        CrossDir = Normal(RealFloor\
      \ Cross OldFloor);\n        FwdDir = CrossDir Cross MyFloor;\n        OldFwdDir\
      \ = CrossDir Cross OldFloor;\n        ViewX = MyFloor * (OldFloor Dot ViewX)\n\
      \              + CrossDir * (CrossDir Dot ViewX)\n              + FwdDir * (OldFwdDir\
      \ Dot ViewX);\n        ViewX = Normal(ViewX);\n\n        ViewZ = MyFloor * (OldFloor\
      \ Dot ViewZ)\n              + CrossDir * (CrossDir Dot ViewZ)\n            \
      \  + FwdDir * (OldFwdDir Dot ViewZ);\n        ViewZ = Normal(ViewZ);\n     \
      \   OldFloor = MyFloor;\n        ViewY = Normal(MyFloor Cross ViewX);\n    \
      \  }\n  }\n\n  //Moved here because it is already calculated here\n  //Pawn.FaceRotation(OrthoRotation(ViewX,ViewY,ViewZ),\
      \ deltaTime );\n\n  if ( (aTurn != 0) || (aLookUp != 0) )\n  {\n    // adjust\
      \ Yaw based on aTurn\n    if ( aTurn != 0 )\n        ViewX = Normal(ViewX +\
      \  ViewY * Sin(0.0031*DeltaTime*aTurn));\n\n    // adjust Pitch based on aLookUp\n\
      \    if ( aLookUp != 0 )\n    {\n        OldX = ViewX;\n        ViewX = Normal(ViewX\
      \ +  ViewZ * Sin(0.0031*DeltaTime*aLookUp));\n        ViewZ = Normal(ViewX Cross\
      \ ViewY);\n\n        //bound max pitch\n        //Redo this now\n        /*if\
      \ ( (ViewZ Dot MyFloor) < 0.1   )\n        {\n            OldX = Normal(OldX\
      \ - MyFloor * (MyFloor Dot OldX));\n            if ( (ViewX Dot MyFloor) > 0)\n\
      \                ViewX = Normal(OldX + MyFloor);\n            else\n       \
      \         ViewX = Normal(OldX - MyFloor);\n\n            ViewZ = Normal(ViewX\
      \ Cross ViewY);\n        }*/\n    }\n\n    // calculate new Y axis\n    ViewY\
      \ = Normal(MyFloor Cross ViewX);\n  }\n  ViewRotation =  OrthoRotation(ViewX,ViewY,ViewZ);\n\
      \  SetRotation(ViewRotation);\n  ViewShake(deltaTime);\n  ViewFlash(deltaTime);\n\
      \  PawnX = Normal(ViewY Cross MyFloor);\n  PawnZ = Normal(PawnX Cross ViewY);\n\
      \  Pawn.FaceRotation(OrthoRotation(PawnX,ViewY,PawnZ), deltaTime );\n  //Pawn.FaceRotation(ViewRotation,\
      \ deltaTime );\n\n}\n\nfunction PlayerTick(float DeltaTime)\n\n{\n\n\tlocal\
      \ Vector HitLocation, HitNormal, X, Y, Z;\n\n\tlocal Actor HitActor;\n\n\tSuper.PlayerTick(DeltaTime);\n\
      \n\tGetAxes(Pawn.Rotation, X, Y, Z);\n\n\tif(Pawn.Physics == PHYS_Falling)\n\
      \n\t{\n\n\t  if(VSize(Pawn.Acceleration) > MaxAcceleration)\n\n\t   Pawn.Acceleration\
      \ = Normal(Pawn.Acceleration) * MaxAcceleration;\n\n\t  else\n\n\t   Pawn.Acceleration\
      \ *= AccelerationDampening;\n\n\t  Pawn.Acceleration += Z * Pawn.PhysicsVolume.default.Gravity.Z;\n\
      \n\t  Pawn.Velocity += Pawn.Acceleration*DeltaTime;\n\n\t  //Pawn.Acceleration\
      \ = vect(0,0,0);\n\n\t  //Change 70 to something less, static.\n      HitActor\
      \ = Trace(HitLocation, HitNormal, Pawn.Location+Normal(Pawn.Velocity)*100, Pawn.Location);\n\
      \      if(HitActor != None && HitActor.bWorldGeometry)\n      {\n        Log(\"\
      Here2\");\n        Pawn.SetPhysics(PHYS_Spider);\n        Pawn.SetBase(HitActor\
      \ , HitNormal);\n      }\n\n\t}\n\n}\n\n}\n\ndefaultproperties\n\n{\n  AccelerationDampening=0.1\n\
      \  MaxAcceleration=200\n  PawnClass=class'LocalGravity.GravPawn'\n\n}\n\n</UScript>\n\
      \nProcessMove is overridden to use a DoJump in this class, will probally get\
      \ rid of this when I move that code back to the Pawn.\n\nUpdateRotation is mostly\
      \ the same as in PlayerController.uc, except for a bit of math, that being in\
      \ the middle of the function, no real way I could reuse it without copying it.\n\
      \nNow, what I would like some suggestions on, are in my PlayerTick. the Trace\
      \ that I am doing has a static number in there, I kinda need a better way, this\
      \ will make you stick to soon when falling straight down, or not at all when\
      \ falling too diagonal.\n\nOhh yes, and we want to be able to get it into our\
      \ map. So, an Actor!\n\n<UScript>\n\n//=============================================================================\n\
      \n// LocalGravActor.uc\n\n//=============================================================================\n\
      \nclass LocalGravActor extends Actor\n  placeable;\n\nvar() Class<PlayerController>\
      \ PCClass;\n\nvar() string PlayerClassName;\n\nfunction PreBeginPlay()\n\n{\n\
      \  Level.Game.PlayerControllerClass = PCClass;\n  Level.Game.DefaultPlayerClassName\
      \ = PlayerClassName;\n\n}\n\ndefaultproperties\n\n{\n  PCClass=class'LocalGravity.GravPlayer'\n\
      \  PlayerClassName=\"LocalGravity.GravPawn\"\n  bHidden=true\n\n}\n\n</UScript>\n\
      \n===To Do===\n\nThe most pressing matters are finding a better way to see if\
      \ we should be on something then\n\n<UScript>\n      HitActor = Trace(HitLocation,\
      \ HitNormal, Pawn.Location+Normal(Pawn.Velocity)*100, Pawn.Location);\n    \
      \  if(HitActor != None && HitActor.bWorldGeometry)\n</UScript>\n\nThen fix thirdperson\
      \ camera, allow more flexibality when creating the level, and giving bots the\
      \ same flexibility \n\n===Comments===\n\n'''Glacian:''' I am working on a similar\
      \ mod, maybe we could combine forces....muwahaha!  I fixed the bounded view\
      \ angle problem by substituting in quaternion rotation, and I've coded up some\
      \ modified gravity, doublejumping, and dodging code to work at any angle.  I\
      \ stuck only on the problem of getting the physics to allow the pawn to walk\
      \ on the wall, and phys_spidering has some behaviors I don't like.  If you (or\
      \ anyone else) are interested, my email is focusgir (at) yahoo (dot) com."
  properties: []
  revId: 4918
name: "Legacy:Mod Ideas/LocalGravity"
revision:
  revid: 4918
  parentid: 4919
  user: "C-24-34-41-6.hsd1.ma.comcast.net"
  timestamp: 1118532840.000000000
  comment: "*"
timestamp: 1668765450.835932000
