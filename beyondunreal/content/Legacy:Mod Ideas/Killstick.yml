---
parse:
  title: "Legacy:Mod Ideas/Killstick"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#NOTE:\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">NOTE:</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Description\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Description</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-3\"><a href=\"#How_it_works\"><span class=\"\
      tocnumber\">3</span> <span class=\"toctext\">How it works</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Unreal_Script_Code\"><span\
      \ class=\"tocnumber\">4</span> <span class=\"toctext\">Unreal Script Code</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#General_Description\"\
      ><span class=\"tocnumber\">4.1</span> <span class=\"toctext\">General Description</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-6\"><a href=\"#Killstick.uc\"><span class=\"\
      tocnumber\">4.2</span> <span class=\"toctext\">Killstick.uc</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-7\"><a href=\"#KillstickFire.uc\"><span class=\"\
      tocnumber\">4.3</span> <span class=\"toctext\">KillstickFire.uc</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-8\"><a href=\"#KillstickDummy.uc\"><span class=\"\
      tocnumber\">4.4</span> <span class=\"toctext\">KillstickDummy.uc</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"#TODO\"><span\
      \ class=\"tocnumber\">5</span> <span class=\"toctext\">TODO</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-10\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">6</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h3><span class=\"mw-headline\" id=\"NOTE:\">NOTE:</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/Killstick?section=1\" title=\"Edit section:\
      \ NOTE:\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Currently in the process of a complete recode, will post once complete</p>\n\
      <h2><span class=\"mw-headline\" id=\"Description\">Description</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=2\"\
      \ title=\"Edit section: Description\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The Killstick is based off of a weapon used in the\
      \ online comic <a rel=\"nofollow\" class=\"external text\" href=\"http://www.megatokyo.com\"\
      >Megatokyo</a>.</p>\n<h2><span class=\"mw-headline\" id=\"How_it_works\">How\
      \ it works</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=3\" title=\"Edit\
      \ section: How it works\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Here's the basics: this weapon works much like the normal sniper rifle. however,\
      \ when this weapon is fully charged, it consumes all ammo to create a huge explosion,\
      \ simmilar to the ion cannnon. To charge the weapon you hold the trigger, pull\
      \ trigger normally for normal shots</p>\n<h2><span class=\"mw-headline\" id=\"\
      Unreal_Script_Code\">Unreal Script Code</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=4\"\
      \ title=\"Edit section: Unreal Script Code\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>I already have the majority of the code for this down.</p>\n\
      <h3><span class=\"mw-headline\" id=\"General_Description\">General Description</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/Killstick?section=5\" title=\"Edit section:\
      \ General Description\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>This weapons combines code from at least 4 different weapons in UT2003: the\
      \ zoom super shock rifle, the sniper rifle, the shield gun (charging), and the\
      \ redeemer/ion cannon. I started by extending my main weapon class from zoom\
      \ super shock rifle so the gun could zoom, this also allowed me to use the shock\
      \ rifle beam code for the fire effect. I then started working on adding the\
      \ charge function by looking at the code for the shield gun and grabbing bits\
      \ of what i needed. I attempted to use the code from the shield gun for the\
      \ charge effect, but things got weird (see code once it's up). I then looked\
      \ at the sniper rilfe code and found what lines enabled headshots and copied\
      \ those. Finally, i found the <a href=\"/Legacy:Mod_Ideas/NukeRifles\" title=\"\
      Legacy:Mod Ideas/NukeRifles\">Mod_Ideas/NukeRifles</a> here and liked how he\
      \ did the spawning of a dummy projectile to get the redeemer explosion, and\
      \ i did the same.</p>\n<h3><span class=\"mw-headline\" id=\"Killstick.uc\">Killstick.uc</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/Killstick?section=6\" title=\"Edit section:\
      \ Killstick.uc\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//Created by Syntax_Error</span>\n\
      <span class=\"kw1\">class</span> Killstick <span class=\"kw1\">extends</span>\
      \ ZoomSuperShockRifle\n<span class=\"kw1\">config</span><span class=\"br0\"\
      >(</span>user<span class=\"br0\">)</span>; <span class=\"co1\">//So weapon preference\
      \ settings are stored alongside all the standard weapons.</span>\n \n<span class=\"\
      kw1\">simulated</span> <span class=\"kw1\">function</span> <span class=\"kw5\"\
      >float</span> ChargeBar<span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \  <span class=\"co1\">//this sets what the charge bar measures</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"\
      kw3\">FMin</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">HoldTime</span><span class=\"sy0\">/</span>KillstickFire<span\
      \ class=\"br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"\
      me0\">MaxHoldTime</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      <span class=\"kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n\
      \    ItemName<span class=\"sy0\">=</span><span class=\"st0\">\"Killstick\"</span>\
      \ <span class=\"co1\">//The text you see when you switch to the weapon and in\
      \ various other places.</span>\n    IconMaterial<span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Material</span><span class=\"st0\">'InterfaceContent.Hud.SkinA'</span>\
      \ <span class=\"co1\">//Texture where the icon to be show in the weapon bar\
      \ is.</span>\n    IconCoords<span class=\"sy0\">=</span><span class=\"br0\"\
      >(</span>X1<span class=\"sy0\">=</span><span class=\"nu0\">322</span>,Y1<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">372</span>,X2<span class=\"sy0\"\
      >=</span><span class=\"nu0\">444</span>,Y2<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">462</span><span class=\"br0\">)</span> <span class=\"co1\">//Position\
      \ of icon in that texture.</span>\n \n    <span class=\"co1\">//vars for zoom\
      \ reticle</span>\n    innerArrowsX<span class=\"sy0\">=</span><span class=\"\
      nu0\">42.000000</span>\n    innerArrowsY<span class=\"sy0\">=</span><span class=\"\
      nu0\">42.000000</span>\n    ArrowColor<span class=\"sy0\">=</span><span class=\"\
      br0\">(</span>R<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,A<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\
      \    TargetColor<span class=\"sy0\">=</span><span class=\"br0\">(</span>B<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"nu0\">255</span><span\
      \ class=\"br0\">)</span>\n    NoTargetColor<span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">200</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">200</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">200</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>\n    FocusColor<span class=\"sy0\"\
      >=</span><span class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"\
      nu0\">126</span>,G<span class=\"sy0\">=</span><span class=\"nu0\">90</span>,R<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">71</span>,A<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">215</span><span class=\"br0\">)</span>\n    ChargeColor<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>B<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">255</span>,G<span class=\"sy0\">=</span><span class=\"nu0\"\
      >255</span>,R<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,A<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\
      \    RechargeOrigin<span class=\"sy0\">=</span><span class=\"br0\">(</span>X<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">600.000000</span>,Y<span class=\"\
      sy0\">=</span><span class=\"nu0\">330.000000</span><span class=\"br0\">)</span>\n\
      \    RechargeSize<span class=\"sy0\">=</span><span class=\"br0\">(</span>X<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">10.000000</span>,Y<span class=\"\
      sy0\">=-</span><span class=\"nu0\">180.000000</span><span class=\"br0\">)</span>\n\
      \ \n    bShowChargingBar<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\
      \ <span class=\"co1\">//shows charge bar</span>\n    FireModeClass<span class=\"\
      br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">=</span>KillstickFire\n    FireModeClass<span class=\"br0\"\
      >(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"\
      sy0\">=</span>KillstickZoom\n    <span class=\"kw7\">DrawScale</span><span class=\"\
      sy0\">=</span><span class=\"nu0\">0.4</span>\n    <span class=\"kw5\">Mesh</span><span\
      \ class=\"sy0\">=</span><span class=\"kw5\">mesh</span><span class=\"st0\">'mtWeapon.killstick'</span>\
      \ <span class=\"co1\">//What you see in 1st person.</span>\n    BobDamping<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">2.3</span> <span class=\"co1\">//How\
      \ much the weapon moves about as you walk.</span>\n \n    PickupClass<span class=\"\
      sy0\">=</span><span class=\"kw1\">class</span><span class=\"st0\">'KillstickPickup'</span>\n\
      \    EffectOffset<span class=\"sy0\">=</span><span class=\"br0\">(</span>X<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">100</span>,Y<span class=\"sy0\"\
      >=</span><span class=\"nu0\">10</span>,Z<span class=\"sy0\">=</span><span class=\"\
      nu0\">7.5</span><span class=\"br0\">)</span> <span class=\"co1\">//Where effects\
      \ are drawn. Used for start location of InstantFire beam effects.</span>\n \n\
      \    <span class=\"co1\">//animations</span>\n    SelectAnim<span class=\"sy0\"\
      >=</span><span class=\"st0\">\"Select\"</span>\n    PutDownAnim<span class=\"\
      sy0\">=</span><span class=\"st0\">\"PutDown\"</span>\n    DisplayFOV<span class=\"\
      sy0\">=</span><span class=\"nu0\">60</span>\n \n    PlayerViewOffset<span class=\"\
      sy0\">=</span><span class=\"br0\">(</span>X<span class=\"sy0\">=-</span><span\
      \ class=\"nu0\">3</span>,Y<span class=\"sy0\">=</span><span class=\"nu0\">6</span>,Z<span\
      \ class=\"sy0\">=-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\
      \ <span class=\"co1\">//Position of the weapon in 1st person</span>\n    PlayerViewPivot<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Pitch<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0</span>,Roll<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>,Yaw<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span> <span class=\"co1\">//Rotation of the\
      \ model in 1st person.</span>\n    UV2Texture<span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Material</span><span class=\"st0\">'XGameShaders.WeaponEnvShader'</span>\
      \ <span class=\"co1\">//What does this do?</span>\n \n    AttachmentClass<span\
      \ class=\"sy0\">=</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'KillstickAttachment'</span><span class=\"co1\">//third person mesh</span>\n\
      \ \n    SelectSound<span class=\"sy0\">=</span><span class=\"kw5\">Sound</span><span\
      \ class=\"st0\">'WeaponSounds.LinkGun.SwitchToLinkGun'</span>\n    SelectForce<span\
      \ class=\"sy0\">=</span><span class=\"st0\">\"SwitchToLightningGun\"</span>\
      \ <span class=\"co1\">//The various 'Force' variables are for force feedback\
      \ mice etc.</span>\n \n    AIRating<span class=\"sy0\">=</span><span class=\"\
      nu0\">0.69</span> <span class=\"co1\">//How much bots want to use this weapon.</span>\n\
      \    CurrentRating<span class=\"sy0\">=</span><span class=\"nu0\">0.69</span>\n\
      \ \n    <span class=\"co1\">//priority of weapon</span>\n    Priority<span class=\"\
      sy0\">=</span><span class=\"nu0\">13</span>\n    DefaultPriority<span class=\"\
      sy0\">=</span><span class=\"nu0\">13</span>\n \n    InventoryGroup<span class=\"\
      sy0\">=</span><span class=\"nu0\">9</span> <span class=\"co1\">//Which slot\
      \ the weapon occupies.</span>\n    GroupOffset<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">4</span> <span class=\"co1\">//This must be different to all\
      \ other weapons that occupy the same InventoryGroup.</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\" id=\"KillstickFire.uc\"\
      >KillstickFire.uc</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=7\" title=\"Edit\
      \ section: KillstickFire.uc\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co1\">//Created by Syntax_Error</span>\n<span class=\"co1\">//::TODO:: bigger\
      \ beam on charged shot, adjust damage on charged shot</span>\n<span class=\"\
      co1\">//:::::::: no double charge/flash effects</span>\n \n \n<span class=\"\
      kw1\">class</span> KillstickFire <span class=\"kw1\">extends</span> ShockBeamFire;\n\
      \ \n<span class=\"kw1\">var</span> <span class=\"kw5\">sound</span> ChargeSound;\n\
      <span class=\"kw1\">var</span> <span class=\"kw9\">Emitter</span> ChargeEmitter;\n\
      \ \n<span class=\"coMULTI\">/********this is the code i used for the charge\
      \ effect*********\nsimulated function DestroyEffects() //destorys effects\n\
      {\n    if (chargingemitter != None)\n    {\n        chargingemitter.Destroy();\n\
      \    }\n\tSuper.DestroyEffects();\n}\n \nsimulated function InitEffects() //initalises\
      \ effects\n{\n\tif ( Level.NetMode != NM_DedicatedServer )\n\t{\n\t\tChargingEmitter=\
      \ Spawn(class'KillstickChargeEffect');\n\t\t//chargingemitter.mRegenPause =\
      \ true; //::part of xEffects::\n\t}\n    Super.InitEffects();\n}\n \n \nfunction\
      \ DrawMuzzleFlash(Canvas Canvas) //draws and places charge effect\n{\n \n  \
      \  if (ChargeEmitter != None &amp;&amp; HoldTime &gt; 0.0 &amp;&amp; !bNowWaiting)\n\
      \    {\n\t\tChargeEmitter.SetLocation( Weapon.GetEffectStart() );\n        Canvas.DrawActor(\
      \ ChargeEmitter, false, false, Weapon.DisplayFOV );\n    }\n \n    if (FlashEmitter\
      \ != None)\n    {\n        FlashEmitter.SetLocation( Weapon.GetEffectStart()\
      \ );\n        if ( Weapon.WeaponCentered() )\n \t\t\tFlashEmitter.SetRotation(Weapon.Instigator.GetViewRotation());\n\
      \        else\n\t\t\tFlashEmitter.SetRotation(Weapon.Rotation);\n        Canvas.DrawActor(\
      \ FlashEmitter, false, false, Weapon.DisplayFOV );\n    }\n \n    if ( (Instigator.AmbientSound\
      \ == ChargeSound)\n\t\t&amp;&amp; ((HoldTime &lt;= 0.0) || bNowWaiting) )\n\
      \        Instigator.AmbientSound = None;\n \n}\n********************************************************************/</span>\n\
      <span class=\"kw1\">function</span> PlayPreFire<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"co1\">//this execs when the trigger is\
      \ pulled</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw9\">Weapon</span>.<span\
      \ class=\"kw4\">LoopAnim</span><span class=\"br0\">(</span><span class=\"st0\"\
      >'Charge'</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>; <span class=\"co1\">//loop charging animation until\
      \ trigger is released</span>\n    <span class=\"kw9\">weapon</span>.<span class=\"\
      kw4\">PlayOwnedSound</span><span class=\"br0\">(</span>ChargeSound, <span class=\"\
      kw7\">SLOT_Interact</span>, <span class=\"kw7\">TransientSoundVolume</span>,,,,\
      \ <span class=\"kw6\">false</span><span class=\"br0\">)</span>; <span class=\"\
      co1\">//plays charging sound</span>\n<span class=\"br0\">}</span>\n \n<span\
      \ class=\"kw1\">function</span> DoFireEffect<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">Vector</span> StartTrace;\n    <span class=\"\
      kw1\">local</span> <span class=\"kw5\">Rotator</span> R, Aim;\n \n \n    <span\
      \ class=\"kw7\">Instigator</span>.<span class=\"kw4\">MakeNoise</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span>;\n\
      \ \n    <span class=\"co1\">// the to-hit trace always starts right in front\
      \ of the eye</span>\n    StartTrace <span class=\"sy0\">=</span> <span class=\"\
      kw7\">Instigator</span>.<span class=\"kw7\">Location</span> <span class=\"sy0\"\
      >+</span> <span class=\"kw7\">Instigator</span>.<span class=\"me0\">EyePosition</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n    Aim <span class=\"\
      sy0\">=</span> AdjustAim<span class=\"br0\">(</span>StartTrace, AimError<span\
      \ class=\"br0\">)</span>;\n\tR <span class=\"sy0\">=</span> <span class=\"kw5\"\
      >rotator</span><span class=\"br0\">(</span><span class=\"kw5\">vector</span><span\
      \ class=\"br0\">(</span>Aim<span class=\"br0\">)</span> <span class=\"sy0\"\
      >+</span> <span class=\"kw3\">VRand</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw3\">FRand</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>Spread<span\
      \ class=\"br0\">)</span>;\n    DoTrace<span class=\"br0\">(</span>StartTrace,\
      \ R<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">function</span> DoTrace<span class=\"br0\">(</span><span class=\"kw5\"\
      >Vector</span> Start, <span class=\"kw5\">Rotator</span> Dir<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">Vector</span> X;\n \n\tX <span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">vector</span><span class=\"br0\">(</span>Dir<span class=\"\
      br0\">)</span>;\n \n \n\tTracePart<span class=\"br0\">(</span>Start,Start<span\
      \ class=\"sy0\">+</span>X<span class=\"sy0\">*</span>TraceRange,X,Dir,<span\
      \ class=\"kw7\">Instigator</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span>\
      \ AllowMultiHit<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"\
      kw6\">false</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ TracePart<span class=\"br0\">(</span><span class=\"kw5\">Vector</span> Start,\
      \ <span class=\"kw5\">Vector</span> End, <span class=\"kw5\">Vector</span> X,\
      \ <span class=\"kw5\">Rotator</span> Dir, <span class=\"kw9\">Pawn</span> Ignored<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">Vector</span> HitLocation, HitNormal;\n  \
      \  <span class=\"kw1\">local</span> <span class=\"kw9\">Actor</span> Other;\n\
      \    <span class=\"kw1\">local</span> <span class=\"kw5\">float</span> dist;\n\
      \ \n \n    Other <span class=\"sy0\">=</span> Ignored.<span class=\"kw4\">Trace</span><span\
      \ class=\"br0\">(</span>HitLocation, HitNormal, End, Start, <span class=\"kw6\"\
      >true</span><span class=\"br0\">)</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"br0\">(</span>Other <span class=\"\
      sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>Other <span\
      \ class=\"sy0\">!=</span> Ignored<span class=\"br0\">)</span> <span class=\"\
      br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> <span class=\"sy0\">!</span>Other.<span\
      \ class=\"me0\">bWorldGeometry</span> <span class=\"br0\">)</span>\n       \
      \ <span class=\"br0\">{</span>\n            Other.<span class=\"kw4\">TakeDamage</span><span\
      \ class=\"br0\">(</span>DamageMax, <span class=\"kw7\">Instigator</span>, HitLocation,\
      \ Momentum<span class=\"sy0\">*</span>X, <span class=\"kw9\">DamageType</span><span\
      \ class=\"br0\">)</span>;\n            HitNormal <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Vect</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"br0\">(</span><span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span> <span class=\"sy0\"\
      >!=</span> <span class=\"kw5\">None</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>HitLocation <span\
      \ class=\"sy0\">!=</span> Start<span class=\"br0\">)</span> <span class=\"sy0\"\
      >&amp;&amp;</span> AllowMultiHit<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"br0\">)</span>\n\t\t\t\tTracePart<span class=\"br0\"\
      >(</span>HitLocation,End,X,Dir,<span class=\"kw9\">Pawn</span><span class=\"\
      br0\">(</span>Other<span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \        <span class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n  \
      \  <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n     \
      \   HitLocation <span class=\"sy0\">=</span> End;\n        HitNormal <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Vect</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n    SpawnBeamEffect<span\
      \ class=\"br0\">(</span>Start, Dir, HitLocation, HitNormal, <span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>;\n    \t<span class=\"co1\">//headshot\
      \ check and damage def</span>\n    <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>Other.<span class=\"me0\">GetClosestBone</span><span class=\"\
      br0\">(</span> HitLocation, X, dist, <span class=\"st0\">'head'</span>, <span\
      \ class=\"nu0\">8</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span>\
      \ <span class=\"st0\">'head'</span><span class=\"br0\">)</span>\n        Other.<span\
      \ class=\"kw4\">TakeDamage</span><span class=\"br0\">(</span><span class=\"\
      nu0\">70</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span>, <span\
      \ class=\"kw7\">Instigator</span>, HitLocation, Momentum<span class=\"sy0\"\
      >*</span>X, <span class=\"kw1\">Class</span><span class=\"st0\">'DamTypeKillstickHeadShot'</span><span\
      \ class=\"br0\">)</span>;\n \n    <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span> <span class=\"kw7\">Instigator</span>.<span class=\"me0\">bDeleteMe</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw6\">true</span> <span class=\"\
      br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>HoldTime<span class=\"sy0\">&gt;=</span><span\
      \ class=\"nu0\">2.4</span><span class=\"br0\">)</span>           <span class=\"\
      co1\">//spawn the dummy if weapon is fully charged</span>\n        <span class=\"\
      br0\">{</span>\n           <span class=\"kw4\">Spawn</span><span class=\"br0\"\
      >(</span><span class=\"kw1\">class</span><span class=\"st0\">'KillstickDummy'</span>,<span\
      \ class=\"kw7\">Instigator</span>,, HitLocation <span class=\"sy0\">-</span>\
      \ <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\"\
      >*</span><span class=\"kw3\">Normal</span><span class=\"br0\">(</span>HitLocation\
      \ <span class=\"sy0\">-</span> Start<span class=\"br0\">)</span><span class=\"\
      br0\">)</span> , Dir<span class=\"br0\">)</span>;\n           <span class=\"\
      kw9\">Weapon</span>.<span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me0\">UseAmmo</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">50</span>,<span class=\"kw6\">true</span><span\
      \ class=\"br0\">)</span>; <span class=\"co1\">//consumes all ammo if fully charged</span>\n\
      \        <span class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> SpawnBeamEffect<span\
      \ class=\"br0\">(</span><span class=\"kw5\">Vector</span> Start, <span class=\"\
      kw5\">Rotator</span> Dir, <span class=\"kw5\">Vector</span> HitLocation, <span\
      \ class=\"kw5\">Vector</span> HitNormal, <span class=\"kw5\">int</span> ReflectNum<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >local</span> ShockBeamEffect Beam;\n \n    <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span\
      \ class=\"me0\">PlayerReplicationInfo</span>.<span class=\"me0\">Team</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span\
      \ class=\"kw7\">Instigator</span>.<span class=\"me0\">PlayerReplicationInfo</span>.<span\
      \ class=\"me0\">Team</span>.<span class=\"me0\">TeamIndex</span> <span class=\"\
      sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n\t\tBeam <span class=\"sy0\">=</span> <span class=\"\
      kw4\">Spawn</span><span class=\"br0\">(</span>BeamEffectClass,,, Start, Dir<span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw2\">else</span>\n\t\tBeam <span\
      \ class=\"sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\"\
      >(</span>BeamEffectClass,,, Start, Dir<span class=\"br0\">)</span>;\n    <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>ReflectNum <span class=\"\
      sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> Beam.<span\
      \ class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span> <span class=\"\
      kw5\">None</span>; <span class=\"co1\">// prevents client side repositioning\
      \ of beam start</span>\n    Beam.<span class=\"me0\">AimAt</span><span class=\"\
      br0\">(</span>HitLocation, HitNormal<span class=\"br0\">)</span>;\n \n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> PlayFiring<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\">//this\
      \ execs when trigger is released</span>\n<span class=\"br0\">{</span>\n    <span\
      \ class=\"co1\">//DestroyEffects(); //destroy charging effect</span>\n    <span\
      \ class=\"kw6\">Super</span>.<span class=\"me0\">PlayFiring</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n\
      \ \n    BeamEffectClass<span class=\"sy0\">=</span><span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'KillstickFireEffect'</span>\n    <span class=\"co1\">//FireSound=Sound'WeaponSounds.TAGRifle.IonCannonBlast'</span>\n\
      \    ChargeSound<span class=\"sy0\">=</span><span class=\"kw5\">Sound</span><span\
      \ class=\"st0\">'WeaponSounds.TAGRifle.TAGFireB'</span>\n    FireForce<span\
      \ class=\"sy0\">=</span><span class=\"st0\">\"LightningGunFire\"</span>\n  \
      \  PreFireAnim<span class=\"sy0\">=</span><span class=\"st0\">\"charge\"</span>\n\
      \    bFireOnRelease<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\
      \  <span class=\"co1\">//don't fire untill trigger is released</span>\n    MaxHoldTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">2.5</span> <span class=\"co1\">//\
      \ how long trigger must be held to fully charge</span>\n \n    TraceRange<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">17000</span> <span class=\"co1\"\
      >//Maximum range of the weapon.</span>\n    Momentum<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1000</span> <span class=\"co1\">//How much the victim is pushed\
      \ when hit.</span>\n    AmmoClass<span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'KillstickAmmo'</span> <span class=\"\
      co1\">//ammo class call</span>\n    AmmoPerFire<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1</span> <span class=\"co1\">//how much ammo used per shot</span>\n\
      \    <span class=\"kw9\">DamageType</span><span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'DamTypeKillstick'</span> <span\
      \ class=\"co1\">//damage type class call</span>\n    DamageMin<span class=\"\
      sy0\">=</span><span class=\"nu0\">70</span> <span class=\"co1\">//same damage\
      \ as sniper rifle</span>\n    DamageMax<span class=\"sy0\">=</span><span class=\"\
      nu0\">70</span>\n \n    FireRate<span class=\"sy0\">=</span><span class=\"nu0\"\
      >1.800000</span><span class=\"co1\">//How fast it fires. same rate as sniper\
      \ rifle</span>\n    BotRefireRate<span class=\"sy0\">=</span><span class=\"\
      nu0\">1.8</span> <span class=\"co1\">//How fast bots should try to fire.</span>\n\
      \    AimError<span class=\"sy0\">=</span><span class=\"nu0\">800</span> <span\
      \ class=\"co1\">//How accurate bots are.</span>\n    bPawnRapidFireAnim<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>\n \n    <span class=\"\
      co1\">//These settings controll how your view shakes when you fire.</span>\n\
      \    ShakeOffsetMag<span class=\"sy0\">=</span><span class=\"br0\">(</span>X<span\
      \ class=\"sy0\">=-</span><span class=\"nu0\">15.0</span>,Y<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0.0</span>,Z<span class=\"sy0\">=</span><span class=\"\
      nu0\">10.0</span><span class=\"br0\">)</span>\n    ShakeOffsetRate<span class=\"\
      sy0\">=</span><span class=\"br0\">(</span>X<span class=\"sy0\">=-</span><span\
      \ class=\"nu0\">4000.0</span>,Y<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0.0</span>,Z<span class=\"sy0\">=</span><span class=\"nu0\">4000.0</span><span\
      \ class=\"br0\">)</span>\n    ShakeOffsetTime<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1.6</span>\n    ShakeRotMag<span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>X<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span>,Y<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.0</span>,Z<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n    ShakeRotRate<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>X<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0.0</span>,Y<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0.0</span>,Z<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span\
      \ class=\"br0\">)</span>\n    ShakeRotTime<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">2</span>\n \n    FlashEmitterClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">Class</span><span class=\"st0\">'KillstickFlash1st'</span> <span\
      \ class=\"co1\">//mussle flash effect</span>\n \n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"KillstickDummy.uc\">KillstickDummy.uc</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/Killstick?section=8\" title=\"Edit section:\
      \ KillstickDummy.uc\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//Created by Syntax_Error</span>\n\
      <span class=\"co1\">//dummy projectile class for spawning the explosion</span>\n\
      <span class=\"co1\">//borrowed lotsa code from the redemmer</span>\n<span class=\"\
      kw1\">class</span> KillstickDummy <span class=\"kw1\">extends</span> <span class=\"\
      kw9\">Projectile</span>;\n \n<span class=\"kw1\">var</span>\tRedeemerTrail SmokeTrail;\n\
      \ \n<span class=\"co1\">// camera shakes //</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">vector</span>\
      \ ShakeRotMag;           <span class=\"co1\">// how far to rot view</span>\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">vector</span> ShakeRotRate;          <span class=\"\
      co1\">// how fast to rot view</span>\n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \  ShakeRotTime;          <span class=\"co1\">// how much time to rot the instigator's\
      \ view</span>\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">vector</span> ShakeOffsetMag; \
      \       <span class=\"co1\">// max view offset vertically</span>\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">vector</span> ShakeOffsetRate;       <span class=\"co1\">//\
      \ how fast to offset view vertically</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \  ShakeOffsetTime;       <span class=\"co1\">// how much time to offset view</span>\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bExploded;\n\
      \ \n<span class=\"kw1\">auto</span> <span class=\"kw1\">state</span> InstantBoom\
      \ <span class=\"co1\">//go immediatly to explosion state</span>\n<span class=\"\
      br0\">{</span>\n<span class=\"kw2\">Begin</span>:\n\tBlowUp<span class=\"br0\"\
      >(</span><span class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"coMULTI\">/**************commented\
      \ out, not used****************\nsimulated function Destroyed()\n{\n\tif ( SmokeTrail\
      \ != None )\n\t\tSmokeTrail.Destroy();\n\tSuper.Destroyed();\n}\n \nsimulated\
      \ function PostBeginPlay()\n{\n\tlocal vector Dir;\n \n\tif ( bDeleteMe || IsInState('Dying')\
      \ )\n\t\treturn;\n \n\tDir = vector(Rotation);\n\tVelocity = speed * Dir;\n\
      \ \n\tif ( Level.NetMode != NM_DedicatedServer)\n\t{\n\t\tSmokeTrail = Spawn(class'RedeemerTrail',self,,Location\
      \ - 40 * Dir);\n\t\tSmokeTrail.SetBase(self);\n\t}\n}\n \nevent bool EncroachingOn(\
      \ actor Other )\n{\n\tif ( Other.bWorldGeometry )\n\t\treturn true;\n \n\treturn\
      \ false;\n}\n**************************************************/</span>\n \n\
      <span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> ProcessTouch\
      \ <span class=\"br0\">(</span><span class=\"kw9\">Actor</span> Other, <span\
      \ class=\"kw5\">Vector</span> HitLocation<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> Other <span class=\"sy0\">!=</span> <span class=\"kw7\">instigator</span>\
      \ <span class=\"br0\">)</span>\n\t\tExplode<span class=\"br0\">(</span>HitLocation,<span\
      \ class=\"kw3\">Vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\"\
      >simulated</span> <span class=\"kw1\">function</span> Explode<span class=\"\
      br0\">(</span><span class=\"kw5\">vector</span> HitLocation, <span class=\"\
      kw5\">vector</span> HitNormal<span class=\"br0\">)</span>\n<span class=\"br0\"\
      >{</span>\n\tBlowUp<span class=\"br0\">(</span>HitLocation<span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw4\">PhysicsVolumeChange</span><span\
      \ class=\"br0\">(</span> <span class=\"kw9\">PhysicsVolume</span> <span class=\"\
      kw9\">Volume</span> <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw4\">Landed</span><span class=\"\
      br0\">(</span> <span class=\"kw5\">vector</span> HitNormal <span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\tBlowUp<span class=\"br0\">(</span><span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> <span class=\"kw4\">HitWall</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">vector</span> HitNormal, <span class=\"kw9\">actor</span> Wall<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\tBlowUp<span class=\"\
      br0\">(</span><span class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> <span class=\"\
      kw4\">TakeDamage</span><span class=\"br0\">(</span> <span class=\"kw5\">int</span>\
      \ Damage, <span class=\"kw9\">Pawn</span> instigatedBy, <span class=\"kw5\"\
      >Vector</span> hitlocation,\n\t\t\t\t\t\t\t<span class=\"kw5\">Vector</span>\
      \ momentum, class<span class=\"sy0\">&lt;</span>DamageType<span class=\"sy0\"\
      >&gt;</span> <span class=\"kw9\">damageType</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> Damage <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>\
      \ <span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span> InstigatedBy <span class=\"sy0\"\
      >==</span> <span class=\"kw5\">None</span> <span class=\"br0\">)</span>\n\t\t\
      \tBlowUp<span class=\"br0\">(</span><span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n\t\t<span class=\"kw2\">else</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t \t\t<span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'SmallRedeemerExplosion'</span><span\
      \ class=\"br0\">)</span>;\n\t\t    <span class=\"kw4\">SetCollision</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">false</span>,<span class=\"kw6\"\
      >false</span>,<span class=\"kw6\">false</span><span class=\"br0\">)</span>;\n\
      \t\t    <span class=\"kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage,\
      \ DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">0.125</span>,\
      \ MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span class=\"\
      br0\">)</span>;\n\t\t    <span class=\"kw4\">Destroy</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>;\n\t\t<span class=\"br0\">}</span>\n\t\
      <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">simulated</span> <span class=\"kw1\">event</span> <span class=\"kw4\"\
      >FellOutOfWorld</span><span class=\"br0\">(</span>eKillZType KillType<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\tBlowUp<span class=\"br0\">(</span><span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">function</span> BlowUp<span class=\"\
      br0\">(</span><span class=\"kw5\">vector</span> HitLocation<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">Spawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'NewIonEffect'</span>,,, HitLocation <span class=\"sy0\">-</span> <span class=\"\
      nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"kw3\">Normal</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Velocity</span><span class=\"br0\"\
      >)</span>, <span class=\"kw3\">Rot</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>,<span class=\"nu0\">16384</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;\n\t<span class=\"kw4\"\
      >MakeNoise</span><span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw4\">SetPhysics</span><span class=\"\
      br0\">(</span><span class=\"kw7\">PHYS_None</span><span class=\"br0\">)</span>;\n\
      \tbHidden <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n  \
      \  <span class=\"kw3\">GotoState</span><span class=\"br0\">(</span><span class=\"\
      st0\">'Dying'</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">state</span> Dying\n<span class=\"br0\">{</span>\n\t\
      <span class=\"kw1\">function</span> <span class=\"kw4\">TakeDamage</span><span\
      \ class=\"br0\">(</span> <span class=\"kw5\">int</span> Damage, <span class=\"\
      kw9\">Pawn</span> instigatedBy, <span class=\"kw5\">Vector</span> hitlocation,\n\
      \t\t\t\t\t\t\t<span class=\"kw5\">Vector</span> momentum, class<span class=\"\
      sy0\">&lt;</span>DamageType<span class=\"sy0\">&gt;</span> <span class=\"kw9\"\
      >damageType</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span\
      \ class=\"br0\">}</span>\n \n    <span class=\"kw1\">function</span> <span class=\"\
      kw3\">BeginState</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n\t\tbHidden <span class=\"sy0\">=</span>\
      \ <span class=\"kw6\">true</span>;\n\t\t<span class=\"kw4\">SetPhysics</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">PHYS_None</span><span class=\"br0\"\
      >)</span>;\n\t\t<span class=\"kw4\">SetCollision</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">false</span>,<span class=\"kw6\">false</span>,<span class=\"\
      kw6\">false</span><span class=\"br0\">)</span>;\n\t\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"sy0\">!</span>bExploded <span class=\"\
      br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\t<span class=\"kw4\"\
      >Spawn</span><span class=\"br0\">(</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'IonCore'</span>,,, <span class=\"kw7\">Location</span>, <span\
      \ class=\"kw7\">Rotation</span><span class=\"br0\">)</span>;\n\t\t\tShakeView<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n\t\t<span class=\"br0\"\
      >}</span>\n\t\tInitialState <span class=\"sy0\">=</span> <span class=\"st0\"\
      >'Dying'</span>;\n\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ SmokeTrail <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span> <span\
      \ class=\"br0\">)</span>\n\t\t\tSmokeTrail.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n    <span class=\"br0\"\
      >}</span>\n \n    <span class=\"kw1\">function</span> ShakeView<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw1\">local</span> <span class=\"kw9\">Controller</span>\
      \ C;\n        <span class=\"kw1\">local</span> <span class=\"kw9\">PlayerController</span>\
      \ PC;\n        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span>\
      \ Dist, <span class=\"kw5\">Scale</span>;\n \n        <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span> C<span class=\"sy0\">=</span><span class=\"kw7\"\
      >Level</span>.<span class=\"me0\">ControllerList</span>; C<span class=\"sy0\"\
      >!=</span><span class=\"kw5\">None</span>; C<span class=\"sy0\">=</span>C.<span\
      \ class=\"me0\">NextController</span> <span class=\"br0\">)</span>\n       \
      \ <span class=\"br0\">{</span>\n            PC <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">PlayerController</span><span class=\"br0\">(</span>C<span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> PC <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> PC.<span class=\"me0\">ViewTarget</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span> <span class=\"\
      br0\">)</span>\n            <span class=\"br0\">{</span>\n                Dist\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">VSize</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Location</span> <span class=\"sy0\">-</span>\
      \ PC.<span class=\"me0\">ViewTarget</span>.<span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n                <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> Dist <span class=\"sy0\">&lt;</span> DamageRadius <span\
      \ class=\"sy0\">*</span> <span class=\"nu0\">2.0</span><span class=\"br0\">)</span>\n\
      \                <span class=\"br0\">{</span>\n                    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>Dist <span class=\"sy0\">&lt;</span>\
      \ DamageRadius<span class=\"br0\">)</span>\n                        <span class=\"\
      kw5\">Scale</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span>;\n\
      \                    <span class=\"kw2\">else</span>\n                     \
      \   <span class=\"kw5\">Scale</span> <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span>DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">2.0</span>\
      \ <span class=\"sy0\">-</span> Dist<span class=\"br0\">)</span> <span class=\"\
      sy0\">/</span> <span class=\"br0\">(</span>DamageRadius<span class=\"br0\">)</span>;\n\
      \                    C.<span class=\"me0\">ShakeView</span><span class=\"br0\"\
      >(</span>ShakeRotMag<span class=\"sy0\">*</span><span class=\"kw5\">Scale</span>,\
      \ ShakeRotRate, ShakeRotTime, ShakeOffsetMag<span class=\"sy0\">*</span><span\
      \ class=\"kw5\">Scale</span>, ShakeOffsetRate, ShakeOffsetTime<span class=\"\
      br0\">)</span>;\n                <span class=\"br0\">}</span>\n            <span\
      \ class=\"br0\">}</span>\n        <span class=\"br0\">}</span>\n    <span class=\"\
      br0\">}</span>\n \n<span class=\"kw2\">Begin</span>:\n    <span class=\"kw4\"\
      >PlaySound</span><span class=\"br0\">(</span><span class=\"kw5\">sound</span><span\
      \ class=\"st0\">'WeaponSounds.TAGRifle.IonCannonBlast'</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span class=\"br0\"\
      >(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\"\
      >0.125</span>, MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage,\
      \ DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">0.300</span>,\
      \ MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.2</span><span class=\"br0\">)</span>;\n    <span class=\"\
      kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage, DamageRadius<span\
      \ class=\"sy0\">*</span><span class=\"nu0\">0.475</span>, MyDamageType, MomentumTransfer,\
      \ <span class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n    <span\
      \ class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0.2</span><span class=\"br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span\
      \ class=\"br0\">(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span\
      \ class=\"nu0\">0.650</span>, MyDamageType, MomentumTransfer, <span class=\"\
      kw7\">Location</span><span class=\"br0\">)</span>;\n    <span class=\"kw4\"\
      >Sleep</span><span class=\"br0\">(</span><span class=\"nu0\">0.2</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span class=\"\
      br0\">(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span class=\"\
      nu0\">0.825</span>, MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage,\
      \ DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">1.000</span>,\
      \ MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\"\
      >defaultproperties</span>\n<span class=\"br0\">{</span>\n     ShakeRotMag<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">250.000000</span><span class=\"br0\">)</span>\n     ShakeRotRate<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">2500.000000</span><span class=\"br0\">)</span>\n     ShakeRotTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">6.000000</span>\n     ShakeOffsetMag<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">10.000000</span><span class=\"br0\">)</span>\n     ShakeOffsetRate<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">200.000000</span><span class=\"br0\">)</span>\n     ShakeOffsetTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">10.000000</span>\n     Speed<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1000.000000</span>\n     MaxSpeed<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1000.000000</span>\n     Damage<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">250.000000</span>\n     DamageRadius<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1500.000000</span>\n     MomentumTransfer<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">200000.000000</span>\n     MyDamageType<span\
      \ class=\"sy0\">=</span><span class=\"kw1\">Class</span><span class=\"st0\"\
      >'DamTypeKillstick'</span>\n     LightType<span class=\"sy0\">=</span>LT_Steady\n\
      \     LightEffect<span class=\"sy0\">=</span>LE_QuadraticNonIncidence\n    \
      \ LightBrightness<span class=\"sy0\">=</span><span class=\"nu0\">255.000000</span>\n\
      \     LightRadius<span class=\"sy0\">=</span><span class=\"nu0\">6.000000</span>\n\
      \     LightHue<span class=\"sy0\">=</span><span class=\"nu0\">28</span>\n  \
      \   <span class=\"co1\">//DrawType=DT_StaticMesh  //removed mesh</span>\n  \
      \   <span class=\"co1\">//StaticMesh=StaticMesh'WeaponStaticMesh.RedeemerMissile'</span>\n\
      \     bDynamicLight<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\n\
      \     bNetTemporary<span class=\"sy0\">=</span><span class=\"kw6\">False</span>\n\
      \     <span class=\"co1\">//AmbientSound=Sound'WeaponSounds.Misc.redeemer_flight'</span>\n\
      \     <span class=\"kw7\">DrawScale</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0.500000</span>\n     AmbientGlow<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">96</span>\n     bUnlit<span class=\"sy0\">=</span><span class=\"\
      kw6\">False</span>\n     <span class=\"kw7\">SoundRadius</span><span class=\"\
      sy0\">=</span><span class=\"nu0\">100.000000</span>\n     <span class=\"kw7\"\
      >SoundVolume</span><span class=\"sy0\">=</span><span class=\"nu0\">255</span>\n\
      \     <span class=\"kw7\">TransientSoundVolume</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1.000000</span>\n     <span class=\"kw7\">TransientSoundRadius</span><span\
      \ class=\"sy0\">=</span><span class=\"nu0\">5000.000000</span>\n     <span class=\"\
      kw7\">CollisionRadius</span><span class=\"sy0\">=</span><span class=\"nu0\"\
      >24.000000</span>\n     <span class=\"kw7\">CollisionHeight</span><span class=\"\
      sy0\">=</span><span class=\"nu0\">12.000000</span>\n     bProjTarget<span class=\"\
      sy0\">=</span><span class=\"kw6\">True</span>\n     bFixedRotationDir<span class=\"\
      sy0\">=</span><span class=\"kw6\">True</span>\n     <span class=\"kw7\">RotationRate</span><span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Roll<span class=\"sy0\"\
      >=</span><span class=\"nu0\">50000</span><span class=\"br0\">)</span>\n    \
      \ <span class=\"kw7\">DesiredRotation</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>Roll<span class=\"sy0\">=</span><span class=\"nu0\"\
      >30000</span><span class=\"br0\">)</span>\n     ForceType<span class=\"sy0\"\
      >=</span>FT_DragAlong\n     ForceRadius<span class=\"sy0\">=</span><span class=\"\
      nu0\">100.000000</span>\n     ForceScale<span class=\"sy0\">=</span><span class=\"\
      nu0\">5.000000</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<h2><span\
      \ class=\"mw-headline\" id=\"TODO\">TODO</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=9\"\
      \ title=\"Edit section: TODO\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>-charging effect either will not display or will spawn\
      \ in the wrong location until weapon is charged <b>&lt;– Experiment with PlayerOffset\
      \ and SmallWeaponOffset to align the effect up with the weapon</b></p>\n<p>-damage\
      \ adjustment for ammo on charged shot not yet implimented-</p>\n<p>-larger beam\
      \ for charged shot (is this possible?) –done, spawning larger beam now and in\
      \ the right direction&#160;:D</p>\n<p>-texturing on all meshes –started texturing,\
      \ going inda slow for now</p>\n<hr />\n<p><b>Syntax_Error</b></p>\n<p><a rel=\"\
      nofollow\" class=\"external free\" href=\"http://www.devildogsoft.com\">http://www.devildogsoft.com</a></p>\n\
      <h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/Killstick?section=10\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>EntropicLqd:</b> Sounds very similar to <a href=\"\
      /Legacy:Mod_Ideas/Charging_Shock_Rifle\" title=\"Legacy:Mod Ideas/Charging Shock\
      \ Rifle\">Mod Ideas/Charging Shock Rifle</a></p>\n<p><b>Syntax_Error:</b> It\
      \ is, except it doesn't auto charge, you must hold the trigger to charge, much\
      \ like the shield gun</p>\n<p>lemme restate the charge effect problem: when\
      \ the effect initializes, it auto spawns on the weapon base, and only attaches\
      \ to the weapon when it is charged... weird huh O_o</p>\n<p>still have not had\
      \ a chance to get to my own computer yet &gt;_&lt; it'll put the code up as\
      \ soon as i get a chance</p>\n<p><b>Syntax_Error:</b> Yeay, code is up, this\
      \ isnt everything, but it's a start. I'll put up individual pages as soon as\
      \ i can.</p>\n<p><b>Syntax_Error:</b> Sorry for the long time away, doing taxes\
      \ isnt much fun. looking for the Special DVD ed. of 2004 now, and will transfer\
      \ all MOD stuff to it.</p>\n<p><b>Syntax_Error:</b> Holy #$&amp;^ it has been\
      \ a long time since i update here. Major changes to code, and most of the problems\
      \ have been fixed. only annoying one left is the whole double charge/mussleflash\
      \ effect (i'll get a screen up to show you) planning on putting in reload so\
      \ if u have 50 ammo you can fire multiple large blasts (just not quickly&#160;;))\
      \ also starting up the dual shotgun weapon, suggestions for alt-fire are welcome.</p>\n\
      <p><b>Foxpaw:</b> For a shotgun weapon, there's a couple of things that come\
      \ to mind for a secondary fire. Basically, shotguns are neat because there is\
      \ a variety of ammunition available for them. Their lack of rifling allows for\
      \ much more flexible ammunition. Anyways, although it wouldn't be entirely realistic,\
      \ you could have primary fire be one type of ammo, while secondary fire was\
      \ the other. For instance, one could be slugs and the other buckshot. Or one\
      \ could fire \"less lethal\" beanbag rounds that would slow down or otherwise\
      \ hinder your opponent to set up for another (more lethal) shot. Flares would\
      \ be somewhat less useful. Flechette rounds are available, but would behave\
      \ similar to buckshot in-game (only better!) Incendiary rounds are available,\
      \ though I'm not really sure what they're for. I think smaller slug-bearing\
      \ sabots may also be available.</p>\n<p>Also you could have one fire be semi-auto\
      \ and the other pump-action. Select fire shotguns have more power in pump-action\
      \ mode because in semi-auto mode a significant amount of the expanding powder\
      \ gases are used to cycle the weapon, leaving less to propel the projectile.</p>\n\
      <p>Anyways, just thought I'd toss out some ideas. A good secondary fire is essential\
      \ to prevent it from being just a tracefire flak cannon.</p>\n<p><b>Syntax_Error:</b>\
      \ Thanks for the suggestions, I really like the semi-auto and pump-aciton idea.\
      \ That should work well with what i had planned for dual wielding: where primary\
      \ fire is a powerful double shot, and alt is rapid, alternating single shots.\
      \ If you only have one shotgun, primary would be pump, while alt would be the\
      \ less powerful semi-auto. Would the spead change for each one? To say it another\
      \ way, which type is more accurate? FYI, once I get this started I'll put up\
      \ a seperate wiki page, and maybe start a page for my info.</p>\n<p><b>Foxpaw:</b>\
      \ Hmm, that's a tough question. Pump action would have higher chamber pressures\
      \ which would give the buckshot more momentum leaving the barrel. That might\
      \ cause it to stay on course more, making it have less spread. On the other\
      \ hand, the faster moving pump-action buckshot would be less stable in flight\
      \ due to it's higher velocity. One of these factors would likely outweigh the\
      \ other - but I don't know which one.</p>\n\n<!-- \nNewPP limit report\nCPU\
      \ time usage: 0.188 seconds\nReal time usage: 0.190 seconds\nPreprocessor visited\
      \ node count: 65/1000000\nPreprocessor generated node count: 104/1000000\nPost‐\
      expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1992-0!*!0!!en!*!*\
      \ and timestamp 20221118031229 and revision id 4870\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mod Ideas/Charging Shock Rifle"
  - ns: 100
    exists: true
    name: "Legacy:Mod Ideas/NukeRifles"
  templates: []
  images: []
  externallinks:
  - "http://www.devildogsoft.com"
  - "http://www.megatokyo.com"
  sections:
  - toclevel: 1
    level: "3"
    line: "NOTE:"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 0
    anchor: "NOTE:"
  - toclevel: 1
    level: "2"
    line: "Description"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 85
    anchor: "Description"
  - toclevel: 1
    level: "2"
    line: "How it works"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 205
    anchor: "How_it_works"
  - toclevel: 1
    level: "2"
    line: "Unreal Script Code"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 500
    anchor: "Unreal_Script_Code"
  - toclevel: 2
    level: "3"
    line: "General Description"
    number: "4.1"
    index: "5"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 580
    anchor: "General_Description"
  - toclevel: 2
    level: "3"
    line: "Killstick.uc"
    number: "4.2"
    index: "6"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 1482
    anchor: "Killstick.uc"
  - toclevel: 2
    level: "3"
    line: "KillstickFire.uc"
    number: "4.3"
    index: "7"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 3814
    anchor: "KillstickFire.uc"
  - toclevel: 2
    level: "3"
    line: "KillstickDummy.uc"
    number: "4.4"
    index: "8"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 9468
    anchor: "KillstickDummy.uc"
  - toclevel: 1
    level: "2"
    line: "TODO"
    number: "5"
    index: "9"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 15139
    anchor: "TODO"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "6"
    index: "10"
    fromtitle: "Legacy:Mod_Ideas/Killstick"
    byteoffset: 15672
    anchor: "Discussion"
  displaytitle: "Legacy:Mod Ideas/Killstick"
  iwlinks: []
  wikitext:
    text: "===NOTE:===\n\nCurrently in the process of a complete recode, will post\
      \ once complete\n\n==Description==\n\nThe Killstick is based off of a weapon\
      \ used in the online comic [http://www.megatokyo.com Megatokyo].\n\n==How it\
      \ works==\n\nHere's the basics: this weapon works much like the normal sniper\
      \ rifle. however, when this weapon is fully charged, it consumes all ammo to\
      \ create a huge explosion, simmilar to the ion cannnon. To charge the weapon\
      \ you hold the trigger, pull trigger normally for normal shots\n\n==Unreal Script\
      \ Code==\n\nI already have the majority of the code for this down.\n\n===General\
      \ Description===\n\nThis weapons combines code from at least 4 different weapons\
      \ in UT2003: the zoom super shock rifle, the sniper rifle, the shield gun (charging),\
      \ and the redeemer/ion cannon. I started by extending my main weapon class from\
      \ zoom super shock rifle so the gun could zoom, this also allowed me to use\
      \ the shock rifle beam code for the fire effect. I then started working on adding\
      \ the charge function by looking at the code for the shield gun and grabbing\
      \ bits of what i needed. I attempted to use the code from the shield gun for\
      \ the charge effect, but things got weird (see code once it's up). I then looked\
      \ at the sniper rilfe code and found what lines enabled headshots and copied\
      \ those. Finally, i found the [[Legacy:Mod_Ideas/NukeRifles|Mod_Ideas/NukeRifles]]\
      \ here and liked how he did the spawning of a dummy projectile to get the redeemer\
      \ explosion, and i did the same.\n\n===Killstick.uc===\n\n<uscript>\n//Created\
      \ by Syntax_Error\nclass Killstick extends ZoomSuperShockRifle\nconfig(user);\
      \ //So weapon preference settings are stored alongside all the standard weapons.\n\
      \nsimulated function float ChargeBar()  //this sets what the charge bar measures\n\
      {\n\treturn FMin(1,FireMode[0].HoldTime/KillstickFire(FireMode[0]).MaxHoldTime);\n\
      }\ndefaultproperties\n{\n    ItemName=\"Killstick\" //The text you see when\
      \ you switch to the weapon and in various other places.\n    IconMaterial=Material'InterfaceContent.Hud.SkinA'\
      \ //Texture where the icon to be show in the weapon bar is.\n    IconCoords=(X1=322,Y1=372,X2=444,Y2=462)\
      \ //Position of icon in that texture.\n\n    //vars for zoom reticle\n    innerArrowsX=42.000000\n\
      \    innerArrowsY=42.000000\n    ArrowColor=(R=255,A=255)\n    TargetColor=(B=255,G=255,R=255,A=255)\n\
      \    NoTargetColor=(B=200,G=200,R=200,A=255)\n    FocusColor=(B=126,G=90,R=71,A=215)\n\
      \    ChargeColor=(B=255,G=255,R=255,A=255)\n    RechargeOrigin=(X=600.000000,Y=330.000000)\n\
      \    RechargeSize=(X=10.000000,Y=-180.000000)\n\n    bShowChargingBar=True //shows\
      \ charge bar\n    FireModeClass(0)=KillstickFire\n    FireModeClass(1)=KillstickZoom\n\
      \    DrawScale=0.4\n    Mesh=mesh'mtWeapon.killstick' //What you see in 1st\
      \ person.\n    BobDamping=2.3 //How much the weapon moves about as you walk.\n\
      \n    PickupClass=class'KillstickPickup'\n    EffectOffset=(X=100,Y=10,Z=7.5)\
      \ //Where effects are drawn. Used for start location of InstantFire beam effects.\n\
      \n    //animations\n    SelectAnim=\"Select\"\n    PutDownAnim=\"PutDown\"\n\
      \    DisplayFOV=60\n\n    PlayerViewOffset=(X=-3,Y=6,Z=-3) //Position of the\
      \ weapon in 1st person\n    PlayerViewPivot=(Pitch=0,Roll=0,Yaw=0) //Rotation\
      \ of the model in 1st person.\n    UV2Texture=Material'XGameShaders.WeaponEnvShader'\
      \ //What does this do?\n\n    AttachmentClass=class'KillstickAttachment'//third\
      \ person mesh\n\n    SelectSound=Sound'WeaponSounds.LinkGun.SwitchToLinkGun'\n\
      \    SelectForce=\"SwitchToLightningGun\" //The various 'Force' variables are\
      \ for force feedback mice etc.\n\n    AIRating=0.69 //How much bots want to\
      \ use this weapon.\n    CurrentRating=0.69\n\n    //priority of weapon\n   \
      \ Priority=13\n    DefaultPriority=13\n\n    InventoryGroup=9 //Which slot the\
      \ weapon occupies.\n    GroupOffset=4 //This must be different to all other\
      \ weapons that occupy the same InventoryGroup.\n}\n</uscript>\n\n===KillstickFire.uc===\n\
      \n<uscript>\n//Created by Syntax_Error\n//::TODO:: bigger beam on charged shot,\
      \ adjust damage on charged shot\n//:::::::: no double charge/flash effects\n\
      \n\nclass KillstickFire extends ShockBeamFire;\n\nvar sound ChargeSound;\nvar\
      \ Emitter ChargeEmitter;\n\n/********this is the code i used for the charge\
      \ effect*********\nsimulated function DestroyEffects() //destorys effects\n\
      {\n    if (chargingemitter != None)\n    {\n        chargingemitter.Destroy();\n\
      \    }\n\tSuper.DestroyEffects();\n}\n\nsimulated function InitEffects() //initalises\
      \ effects\n{\n\tif ( Level.NetMode != NM_DedicatedServer )\n\t{\n\t\tChargingEmitter=\
      \ Spawn(class'KillstickChargeEffect');\n\t\t//chargingemitter.mRegenPause =\
      \ true; //::part of xEffects::\n\t}\n    Super.InitEffects();\n}\n\n\nfunction\
      \ DrawMuzzleFlash(Canvas Canvas) //draws and places charge effect\n{\n\n   \
      \ if (ChargeEmitter != None && HoldTime > 0.0 && !bNowWaiting)\n    {\n\t\t\
      ChargeEmitter.SetLocation( Weapon.GetEffectStart() );\n        Canvas.DrawActor(\
      \ ChargeEmitter, false, false, Weapon.DisplayFOV );\n    }\n\n    if (FlashEmitter\
      \ != None)\n    {\n        FlashEmitter.SetLocation( Weapon.GetEffectStart()\
      \ );\n        if ( Weapon.WeaponCentered() )\n \t\t\tFlashEmitter.SetRotation(Weapon.Instigator.GetViewRotation());\n\
      \        else\n\t\t\tFlashEmitter.SetRotation(Weapon.Rotation);\n        Canvas.DrawActor(\
      \ FlashEmitter, false, false, Weapon.DisplayFOV );\n    }\n\n    if ( (Instigator.AmbientSound\
      \ == ChargeSound)\n\t\t&& ((HoldTime <= 0.0) || bNowWaiting) )\n        Instigator.AmbientSound\
      \ = None;\n\n}\n********************************************************************/\n\
      function PlayPreFire() //this execs when the trigger is pulled\n{\n    Weapon.LoopAnim('Charge',\
      \ 1, 0); //loop charging animation until trigger is released\n    weapon.PlayOwnedSound(ChargeSound,\
      \ SLOT_Interact, TransientSoundVolume,,,, false); //plays charging sound\n}\n\
      \nfunction DoFireEffect()\n{\n    local Vector StartTrace;\n    local Rotator\
      \ R, Aim;\n\n\n    Instigator.MakeNoise(1.0);\n\n    // the to-hit trace always\
      \ starts right in front of the eye\n    StartTrace = Instigator.Location + Instigator.EyePosition();\n\
      \    Aim = AdjustAim(StartTrace, AimError);\n\tR = rotator(vector(Aim) + VRand()*FRand()*Spread);\n\
      \    DoTrace(StartTrace, R);\n}\n\nfunction DoTrace(Vector Start, Rotator Dir)\n\
      {\n\tlocal Vector X;\n\n\tX = vector(Dir);\n\n\n\tTracePart(Start,Start+X*TraceRange,X,Dir,Instigator);\n\
      }\n\nfunction bool AllowMultiHit()\n{\n\treturn false;\n}\n\nfunction TracePart(Vector\
      \ Start, Vector End, Vector X, Rotator Dir, Pawn Ignored)\n{\n    local Vector\
      \ HitLocation, HitNormal;\n    local Actor Other;\n    local float dist;\n\n\
      \n    Other = Ignored.Trace(HitLocation, HitNormal, End, Start, true);\n\n \
      \   if ( (Other != None) && (Other != Ignored) )\n    {\n        if ( !Other.bWorldGeometry\
      \ )\n        {\n            Other.TakeDamage(DamageMax, Instigator, HitLocation,\
      \ Momentum*X, DamageType);\n            HitNormal = Vect(0,0,0);\n         \
      \   if ( (Pawn(Other) != None) && (HitLocation != Start) && AllowMultiHit()\
      \ )\n\t\t\t\tTracePart(HitLocation,End,X,Dir,Pawn(Other));\n        }\n    }\n\
      \    else\n    {\n        HitLocation = End;\n        HitNormal = Vect(0,0,0);\n\
      \    }\n    SpawnBeamEffect(Start, Dir, HitLocation, HitNormal, 0);\n    \t\
      //headshot check and damage def\n    if(Other.GetClosestBone( HitLocation, X,\
      \ dist, 'head', 8 ) == 'head')\n        Other.TakeDamage(70 * 2, Instigator,\
      \ HitLocation, Momentum*X, Class'DamTypeKillstickHeadShot');\n\n    if( Instigator.bDeleteMe\
      \ != true )\n    {\n        if(HoldTime>=2.4)           //spawn the dummy if\
      \ weapon is fully charged\n        {\n           Spawn(class'KillstickDummy',Instigator,,\
      \ HitLocation - (100*Normal(HitLocation - Start)) , Dir);\n           Weapon.Ammo[0].UseAmmo(50,true);\
      \ //consumes all ammo if fully charged\n        }\n    }\n}\n\nfunction SpawnBeamEffect(Vector\
      \ Start, Rotator Dir, Vector HitLocation, Vector HitNormal, int ReflectNum)\n\
      {\n    local ShockBeamEffect Beam;\n\n    if ( (Instigator.PlayerReplicationInfo.Team\
      \ != None) && (Instigator.PlayerReplicationInfo.Team.TeamIndex == 1) )\n\t\t\
      Beam = Spawn(BeamEffectClass,,, Start, Dir);\n\telse\n\t\tBeam = Spawn(BeamEffectClass,,,\
      \ Start, Dir);\n    if (ReflectNum != 0) Beam.Instigator = None; // prevents\
      \ client side repositioning of beam start\n    Beam.AimAt(HitLocation, HitNormal);\n\
      \n}\n\nfunction PlayFiring()  //this execs when trigger is released\n{\n   \
      \ //DestroyEffects(); //destroy charging effect\n    Super.PlayFiring();\n}\n\
      \ndefaultproperties\n{\n\n    BeamEffectClass=Class'KillstickFireEffect'\n \
      \   //FireSound=Sound'WeaponSounds.TAGRifle.IonCannonBlast'\n    ChargeSound=Sound'WeaponSounds.TAGRifle.TAGFireB'\n\
      \    FireForce=\"LightningGunFire\"\n    PreFireAnim=\"charge\"\n    bFireOnRelease=True\
      \  //don't fire untill trigger is released\n    MaxHoldTime=2.5 // how long\
      \ trigger must be held to fully charge\n\n    TraceRange=17000 //Maximum range\
      \ of the weapon.\n    Momentum=1000 //How much the victim is pushed when hit.\n\
      \    AmmoClass=class'KillstickAmmo' //ammo class call\n    AmmoPerFire=1 //how\
      \ much ammo used per shot\n    DamageType=class'DamTypeKillstick' //damage type\
      \ class call\n    DamageMin=70 //same damage as sniper rifle\n    DamageMax=70\n\
      \n    FireRate=1.800000//How fast it fires. same rate as sniper rifle\n    BotRefireRate=1.8\
      \ //How fast bots should try to fire.\n    AimError=800 //How accurate bots\
      \ are.\n    bPawnRapidFireAnim=false\n\n    //These settings controll how your\
      \ view shakes when you fire.\n    ShakeOffsetMag=(X=-15.0,Y=0.0,Z=10.0)\n  \
      \  ShakeOffsetRate=(X=-4000.0,Y=0.0,Z=4000.0)\n    ShakeOffsetTime=1.6\n   \
      \ ShakeRotMag=(X=0.0,Y=0.0,Z=0.0)\n    ShakeRotRate=(X=0.0,Y=0.0,Z=0.0)\n  \
      \  ShakeRotTime=2\n\n    FlashEmitterClass=Class'KillstickFlash1st' //mussle\
      \ flash effect\n\n}\n</uscript>\n\n===KillstickDummy.uc===\n\n<uscript>\n//Created\
      \ by Syntax_Error\n//dummy projectile class for spawning the explosion\n//borrowed\
      \ lotsa code from the redemmer\nclass KillstickDummy extends Projectile;\n\n\
      var\tRedeemerTrail SmokeTrail;\n\n// camera shakes //\nvar() vector ShakeRotMag;\
      \           // how far to rot view\nvar() vector ShakeRotRate;          // how\
      \ fast to rot view\nvar() float  ShakeRotTime;          // how much time to\
      \ rot the instigator's view\nvar() vector ShakeOffsetMag;        // max view\
      \ offset vertically\nvar() vector ShakeOffsetRate;       // how fast to offset\
      \ view vertically\nvar() float  ShakeOffsetTime;       // how much time to offset\
      \ view\nvar bool bExploded;\n\nauto state InstantBoom //go immediatly to explosion\
      \ state\n{\nBegin:\n\tBlowUp(Location);\n}\n\n/**************commented out,\
      \ not used****************\nsimulated function Destroyed()\n{\n\tif ( SmokeTrail\
      \ != None )\n\t\tSmokeTrail.Destroy();\n\tSuper.Destroyed();\n}\n\nsimulated\
      \ function PostBeginPlay()\n{\n\tlocal vector Dir;\n\n\tif ( bDeleteMe || IsInState('Dying')\
      \ )\n\t\treturn;\n\n\tDir = vector(Rotation);\n\tVelocity = speed * Dir;\n\n\
      \tif ( Level.NetMode != NM_DedicatedServer)\n\t{\n\t\tSmokeTrail = Spawn(class'RedeemerTrail',self,,Location\
      \ - 40 * Dir);\n\t\tSmokeTrail.SetBase(self);\n\t}\n}\n\nevent bool EncroachingOn(\
      \ actor Other )\n{\n\tif ( Other.bWorldGeometry )\n\t\treturn true;\n\n\treturn\
      \ false;\n}\n**************************************************/\n\nsimulated\
      \ function ProcessTouch (Actor Other, Vector HitLocation)\n{\n\tif ( Other !=\
      \ instigator )\n\t\tExplode(HitLocation,Vect(0,0,1));\n}\n\nsimulated function\
      \ Explode(vector HitLocation, vector HitNormal)\n{\n\tBlowUp(HitLocation);\n\
      }\n\nsimulated function PhysicsVolumeChange( PhysicsVolume Volume )\n{\n}\n\n\
      simulated function Landed( vector HitNormal )\n{\n\tBlowUp(Location);\n}\n\n\
      simulated function HitWall(vector HitNormal, actor Wall)\n{\n\tBlowUp(Location);\n\
      }\n\nfunction TakeDamage( int Damage, Pawn instigatedBy, Vector hitlocation,\n\
      \t\t\t\t\t\t\tVector momentum, class<DamageType> damageType)\n{\n\tif ( Damage\
      \ > 0 )\n\t{\n\t\tif ( InstigatedBy == None )\n\t\t\tBlowUp(Location);\n\t\t\
      else\n\t\t{\n\t \t\tSpawn(class'SmallRedeemerExplosion');\n\t\t    SetCollision(false,false,false);\n\
      \t\t    HurtRadius(Damage, DamageRadius*0.125, MyDamageType, MomentumTransfer,\
      \ Location);\n\t\t    Destroy();\n\t\t}\n\t}\n}\n\nsimulated event FellOutOfWorld(eKillZType\
      \ KillType)\n{\n\tBlowUp(Location);\n}\n\nfunction BlowUp(vector HitLocation)\n\
      {\n    Spawn(class'NewIonEffect',,, HitLocation - 100 * Normal(Velocity), Rot(0,16384,0));\n\
      \tMakeNoise(1.0);\n\tSetPhysics(PHYS_None);\n\tbHidden = true;\n    GotoState('Dying');\n\
      }\n\nstate Dying\n{\n\tfunction TakeDamage( int Damage, Pawn instigatedBy, Vector\
      \ hitlocation,\n\t\t\t\t\t\t\tVector momentum, class<DamageType> damageType)\
      \ {}\n\n    function BeginState()\n    {\n\t\tbHidden = true;\n\t\tSetPhysics(PHYS_None);\n\
      \t\tSetCollision(false,false,false);\n\t\tif ( !bExploded )\n\t\t{\n\t\t\tSpawn(class'IonCore',,,\
      \ Location, Rotation);\n\t\t\tShakeView();\n\t\t}\n\t\tInitialState = 'Dying';\n\
      \t\tif ( SmokeTrail != None )\n\t\t\tSmokeTrail.Destroy();\n    }\n\n    function\
      \ ShakeView()\n    {\n        local Controller C;\n        local PlayerController\
      \ PC;\n        local float Dist, Scale;\n\n        for ( C=Level.ControllerList;\
      \ C!=None; C=C.NextController )\n        {\n            PC = PlayerController(C);\n\
      \            if ( PC != None && PC.ViewTarget != None )\n            {\n   \
      \             Dist = VSize(Location - PC.ViewTarget.Location);\n           \
      \     if ( Dist < DamageRadius * 2.0)\n                {\n                 \
      \   if (Dist < DamageRadius)\n                        Scale = 1.0;\n       \
      \             else\n                        Scale = (DamageRadius*2.0 - Dist)\
      \ / (DamageRadius);\n                    C.ShakeView(ShakeRotMag*Scale, ShakeRotRate,\
      \ ShakeRotTime, ShakeOffsetMag*Scale, ShakeOffsetRate, ShakeOffsetTime);\n \
      \               }\n            }\n        }\n    }\n\nBegin:\n    PlaySound(sound'WeaponSounds.TAGRifle.IonCannonBlast');\n\
      \    HurtRadius(Damage, DamageRadius*0.125, MyDamageType, MomentumTransfer,\
      \ Location);\n    Sleep(0.5);\n    HurtRadius(Damage, DamageRadius*0.300, MyDamageType,\
      \ MomentumTransfer, Location);\n    Sleep(0.2);\n    HurtRadius(Damage, DamageRadius*0.475,\
      \ MyDamageType, MomentumTransfer, Location);\n    Sleep(0.2);\n    HurtRadius(Damage,\
      \ DamageRadius*0.650, MyDamageType, MomentumTransfer, Location);\n    Sleep(0.2);\n\
      \    HurtRadius(Damage, DamageRadius*0.825, MyDamageType, MomentumTransfer,\
      \ Location);\n    Sleep(0.2);\n    HurtRadius(Damage, DamageRadius*1.000, MyDamageType,\
      \ MomentumTransfer, Location);\n    Destroy();\n}\n\ndefaultproperties\n{\n\
      \     ShakeRotMag=(Z=250.000000)\n     ShakeRotRate=(Z=2500.000000)\n     ShakeRotTime=6.000000\n\
      \     ShakeOffsetMag=(Z=10.000000)\n     ShakeOffsetRate=(Z=200.000000)\n  \
      \   ShakeOffsetTime=10.000000\n     Speed=1000.000000\n     MaxSpeed=1000.000000\n\
      \     Damage=250.000000\n     DamageRadius=1500.000000\n     MomentumTransfer=200000.000000\n\
      \     MyDamageType=Class'DamTypeKillstick'\n     LightType=LT_Steady\n     LightEffect=LE_QuadraticNonIncidence\n\
      \     LightBrightness=255.000000\n     LightRadius=6.000000\n     LightHue=28\n\
      \     //DrawType=DT_StaticMesh  //removed mesh\n     //StaticMesh=StaticMesh'WeaponStaticMesh.RedeemerMissile'\n\
      \     bDynamicLight=True\n     bNetTemporary=False\n     //AmbientSound=Sound'WeaponSounds.Misc.redeemer_flight'\n\
      \     DrawScale=0.500000\n     AmbientGlow=96\n     bUnlit=False\n     SoundRadius=100.000000\n\
      \     SoundVolume=255\n     TransientSoundVolume=1.000000\n     TransientSoundRadius=5000.000000\n\
      \     CollisionRadius=24.000000\n     CollisionHeight=12.000000\n     bProjTarget=True\n\
      \     bFixedRotationDir=True\n     RotationRate=(Roll=50000)\n     DesiredRotation=(Roll=30000)\n\
      \     ForceType=FT_DragAlong\n     ForceRadius=100.000000\n     ForceScale=5.000000\n\
      }\n</uscript>\n\n==TODO==\n\n-charging effect either will not display or will\
      \ spawn in the wrong location until weapon is charged '''<&ndash; Experiment\
      \ with PlayerOffset and SmallWeaponOffset to align the effect up with the weapon'''\n\
      \n-damage adjustment for ammo on charged shot not yet implimented-\n\n-larger\
      \ beam for charged shot (is this possible?) &ndash;done, spawning larger beam\
      \ now and in the right direction :D\n\n-texturing on all meshes &ndash;started\
      \ texturing, going inda slow for now\n\n----\n\n'''Syntax_Error'''\n\nhttp://www.devildogsoft.com\n\
      \n==Discussion==\n\n'''EntropicLqd:''' Sounds very similar to [[Legacy:Mod Ideas/Charging\
      \ Shock Rifle|Mod Ideas/Charging Shock Rifle]]\n\n'''Syntax_Error:''' It is,\
      \ except it doesn't auto charge, you must hold the trigger to charge, much like\
      \ the shield gun\n\nlemme restate the charge effect problem: when the effect\
      \ initializes, it auto spawns on the weapon base, and only attaches to the weapon\
      \ when it is charged... weird huh O_o\n\nstill have not had a chance to get\
      \ to my own computer yet >_< it'll put the code up as soon as i get a chance\n\
      \n'''Syntax_Error:''' Yeay, code is up, this isnt everything, but it's a start.\
      \ I'll put up individual pages as soon as i can.\n\n'''Syntax_Error:''' Sorry\
      \ for the long time away, doing taxes isnt much fun. looking for the Special\
      \ DVD ed. of 2004 now, and will transfer all MOD stuff to it.\n\n'''Syntax_Error:'''\
      \ Holy #$&^ it has been a long time since i update here. Major changes to code,\
      \ and most of the problems have been fixed. only annoying one left is the whole\
      \ double charge/mussleflash effect (i'll get a screen up to show you) planning\
      \ on putting in reload so if u have 50 ammo you can fire multiple large blasts\
      \ (just not quickly ;)) also starting up the dual shotgun weapon, suggestions\
      \ for alt-fire are welcome.\n\n'''Foxpaw:''' For a shotgun weapon, there's a\
      \ couple of things that come to mind for a secondary fire. Basically, shotguns\
      \ are neat because there is a variety of ammunition available for them. Their\
      \ lack of rifling allows for much more flexible ammunition. Anyways, although\
      \ it wouldn't be entirely realistic, you could have primary fire be one type\
      \ of ammo, while secondary fire was the other. For instance, one could be slugs\
      \ and the other buckshot. Or one could fire \"less lethal\" beanbag rounds that\
      \ would slow down or otherwise hinder your opponent to set up for another (more\
      \ lethal) shot. Flares would be somewhat less useful. Flechette rounds are available,\
      \ but would behave similar to buckshot in-game (only better!) Incendiary rounds\
      \ are available, though I'm not really sure what they're for. I think smaller\
      \ slug-bearing sabots may also be available.\n\nAlso you could have one fire\
      \ be semi-auto and the other pump-action. Select fire shotguns have more power\
      \ in pump-action mode because in semi-auto mode a significant amount of the\
      \ expanding powder gases are used to cycle the weapon, leaving less to propel\
      \ the projectile.\n\nAnyways, just thought I'd toss out some ideas. A good secondary\
      \ fire is essential to prevent it from being just a tracefire flak cannon.\n\
      \n'''Syntax_Error:''' Thanks for the suggestions, I really like the semi-auto\
      \ and pump-aciton idea. That should work well with what i had planned for dual\
      \ wielding: where primary fire is a powerful double shot, and alt is rapid,\
      \ alternating single shots. If you only have one shotgun, primary would be pump,\
      \ while alt would be the less powerful semi-auto. Would the spead change for\
      \ each one? To say it another way, which type is more accurate? FYI, once I\
      \ get this started I'll put up a seperate wiki page, and maybe start a page\
      \ for my info.\n\n'''Foxpaw:''' Hmm, that's a tough question. Pump action would\
      \ have higher chamber pressures which would give the buckshot more momentum\
      \ leaving the barrel. That might cause it to stay on course more, making it\
      \ have less spread. On the other hand, the faster moving pump-action buckshot\
      \ would be less stable in flight due to it's higher velocity. One of these factors\
      \ would likely outweigh the other - but I don't know which one."
  properties: []
  revId: 4870
name: "Legacy:Mod Ideas/Killstick"
revision:
  revid: 4870
  parentid: 4872
  user: "Prospero"
  timestamp: 1124873402.000000000
  comment: ""
timestamp: 1668765311.235451000
