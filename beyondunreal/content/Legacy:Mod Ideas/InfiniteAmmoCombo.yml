---
parse:
  title: "Legacy:Mod Ideas/InfiniteAmmoCombo"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Infinite_Ammo_Combo\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Infinite Ammo Combo</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#The_Idea\"><span class=\"\
      tocnumber\">1.1</span> <span class=\"toctext\">The Idea</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-3\"><a href=\"#The_Problem\"><span class=\"\
      tocnumber\">1.2</span> <span class=\"toctext\">The Problem</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-4\"><a href=\"#Comments\"><span class=\"tocnumber\"\
      >1.3</span> <span class=\"toctext\">Comments</span></a></li>\n</ul>\n</li>\n\
      </ul>\n</div>\n<p></p>\n<h3><span class=\"mw-headline\" id=\"Infinite_Ammo_Combo\"\
      >Infinite Ammo Combo</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Ideas/InfiniteAmmoCombo?section=1\" title=\"\
      Edit section: Infinite Ammo Combo\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<h4><span class=\"mw-headline\" id=\"The_Idea\">The Idea</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Ideas/InfiniteAmmoCombo?section=2\" title=\"Edit section:\
      \ The Idea\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>I am trying to make an adrenaline combo for the rapidly dying UT2003. When\
      \ activated, it will either return any ammo used instantly or stop ammo from\
      \ being used in firing.</p>\n<p>I have tried some thing out but I can't get\
      \ it to work:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> InfinAmmoCombo <span class=\"kw1\">extends</span> <span class=\"\
      kw9\">Combo</span>;\n \n<span class=\"kw1\">var</span> <span class=\"kw9\">xEmitter</span>\
      \ Effect;\n<span class=\"kw1\">var</span> <span class=\"kw9\">xEmitter</span>\
      \ Effect2;\n<span class=\"kw1\">var</span> <span class=\"kw9\">Ammunition</span>\
      \ LastAmmo;\n \n \n<span class=\"kw1\">function</span> StartEffect<span class=\"\
      br0\">(</span><span class=\"kw9\">xPawn</span> P<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>P.<span class=\"kw7\">Role</span> <span class=\"sy0\">==</span>\
      \ <span class=\"kw7\">ROLE_Authority</span><span class=\"br0\">)</span>\n  \
      \  <span class=\"br0\">{</span>\n        Effect <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'OffensiveEffect'</span>, P,, P.<span\
      \ class=\"kw7\">Location</span>, P.<span class=\"kw7\">Rotation</span><span\
      \ class=\"br0\">)</span>;\n        Effect2 <span class=\"sy0\">=</span> <span\
      \ class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'RegenCrosses'</span>, P,, P.<span class=\"\
      kw7\">Location</span>, P.<span class=\"kw7\">Rotation</span><span class=\"br0\"\
      >)</span>;\n    <span class=\"br0\">}</span>\n    LastAmmo <span class=\"sy0\"\
      >=</span> <span class=\"kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Owner</span><span class=\"br0\">)</span>.<span class=\"kw9\">Weapon</span>.<span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>;\n<span class=\"co1\">//    AmmoHeal(P);</span>\n \
      \   <span class=\"kw4\">SetTimer</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0.01</span>, <span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw4\">Timer</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span>\n \n \n<span class=\"co1\">//function\
      \ AmmoHeal(xPawn P)</span>\n<span class=\"kw1\">function</span> <span class=\"\
      kw4\">Timer</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"\
      kw9\">Inventory</span> Inv;\n \n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"kw9\">Pawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span class=\"kw7\"\
      >Role</span> <span class=\"sy0\">==</span> <span class=\"kw7\">ROLE_Authority</span><span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span> inv.<span class=\"kw3\">IsA</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'Weapon'</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>inv.<span class=\"kw3\">IsA</span><span class=\"br0\"\
      >(</span><span class=\"st0\">'TransLauncher'</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>inv.<span class=\"kw3\">IsA</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'ShieldGun'</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ <span class=\"br0\">(</span><span class=\"sy0\">!</span>inv.<span class=\"\
      kw3\">IsA</span><span class=\"br0\">(</span><span class=\"st0\">'ShieldGun'</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ <span class=\"br0\">(</span><span class=\"sy0\">!</span>inv.<span class=\"\
      kw3\">IsA</span><span class=\"br0\">(</span><span class=\"st0\">'ShieldGun'</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>LastAmmo <span class=\"sy0\">!=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"kw9\">Weapon</span>.<span class=\"kw9\"\
      >Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span><span class=\"br0\">)</span>\n            <span class=\"br0\"\
      >{</span>\n               <span class=\"kw9\">Pawn</span><span class=\"br0\"\
      >(</span><span class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span\
      \ class=\"kw9\">Weapon</span>.<span class=\"kw9\">Ammo</span><span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span\
      \ class=\"sy0\">=</span> LastAmmo;\n               <span class=\"kw3\">Log</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"Ammo is good\"</span><span class=\"\
      br0\">)</span>;\n            <span class=\"br0\">}</span>\n           LastAmmo\
      \ <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span\
      \ class=\"kw9\">Inventory</span>.<span class=\"kw9\">Ammo</span><span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>;\n  \
      \      <span class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> StopEffect<span\
      \ class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> Effect <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span> <span class=\"br0\">)</span>\n        Effect.<span class=\"\
      kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n    ExecMessage<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"Infinite Ammo! Go Berserk!!\"</span>\n\tComboAnnouncement<span\
      \ class=\"sy0\">=</span><span class=\"kw5\">sound</span><span class=\"st0\"\
      >'AnnouncerMain.Berzerk'</span>\n    keys<span class=\"br0\">(</span><span class=\"\
      nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1</span>\n    keys<span class=\"br0\">(</span><span class=\"\
      nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">1</span>\n    keys<span class=\"br0\">(</span><span class=\"\
      nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">2</span>\n    keys<span class=\"br0\">(</span><span class=\"\
      nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span\
      \ class=\"nu0\">2</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <h4><span class=\"mw-headline\" id=\"The_Problem\">The Problem</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/InfiniteAmmoCombo?section=3\"\
      \ title=\"Edit section: The Problem\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>I'm not too good with UnrealScript and would like\
      \ some advice on this matter. I have tried looking at mods and mutators which\
      \ regenerate ammo but they work on all ammo. I just want it on the current weapon.\
      \ If it does compile, nothing happens. Any ideas?</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"Comments\">Comments</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Ideas/InfiniteAmmoCombo?section=4\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p><b>T1:</b> First of all, could you provide some of\
      \ the errors UCC gives you? And why do you check the shieldgun thrice? And Maybe\
      \ a Shieldgun(Inv)&#160;!= none would be faster (not sure about this, some of\
      \ the other wiki people would have to confirm this).</p>\n<p>Oh wait, I think\
      \ I just found your problem. Inv isn't being given any values. You have to say\
      \ somewhere Inv=Pawn(Owner).Inventory; or something like that. I'll go check\
      \ in the wiki.</p>\n<p><b>ShadowRaven:</b> I got rid of the multiple Shield\
      \ Gun calls, I was going to replace them with redeemer and ion painer ammo after\
      \ I got the ammo system working itself. Common errors are (aside from syntax)\
      \ Unrecognized member \"Ammo\" in \"Inventory and Unrecognized member \"AmmoAmount\"\
      \ in Weapon\" (AmmoAmount worked in the StartEffect function, variable scope\
      \ is stoppping me from using it in Timer().</p>\n<p>I know Ammo[0] isn't it\
      \ as the array indicates number of fire modes.</p>\n<p>I'm thinking to have\
      \ to call each weapon seperately however that loses the mod compatability.</p>\n\
      <p><b>porkmanii:</b> Ammunition objects (as in Weapon.Ammo[]) store the amount\
      \ of ammo, and usually don't change throughout the lifetime of a weapon. I'm\
      \ not sure about UT2003, but in UT2004 Ammunition generally isn't used. Weapons\
      \ have a property called \"bNoAmmoInstances\" which, if true (the default value),\
      \ disables Ammunition and uses AmmoCharge (var int AmmoCharge[2]) instead. If\
      \ you want the amount of ammo to remain constant, you may have to record the\
      \ value returned by Weapon.AmmoAmount(mode), and add back some amount to keep\
      \ it at that level every time it changes.</p>\n<p>One other problem I can see\
      \ is that if the player changes weapons, your code assigns the Ammunition from\
      \ the previous weapon. If you implement this as an Inventory item, you could\
      \ detect when the player changes weapons - an OwnerEvent() call where EventName\
      \ == 'ChangedWeapon'. Alternatively you could watch the weapon's ammo class,\
      \ resetting the \"LastAmmo\" every time the class changes. This would also allow\
      \ compatibility with weapons with multiple ammo types, like ChaosUT's Crossbow.</p>\n\
      <p>Pawn.Inventory refers to the first Inventory item in the Pawn's inventory\
      \ chain. Even if Ammo[] was declared in Inventory and not Weapon, why would\
      \ you want to use Pawn.Inventory's Ammo[] property?</p>\n<p><b>Mad:</b> I managed\
      \ to get this combo working the way you intended to, where the current weapon\
      \ the player is holding is the only weapon with infinite ammo. The problem is,\
      \ I managed to get this working in UT2004, so I don't know of any differences\
      \ within the code between 2003 and 2004.</p>\n<p>The xPawn class has access\
      \ to the current weapon being used by calling xPawn.Weapon. Within the weapon\
      \ class contains an array of WeaponFire classes called FireModeClasses. The\
      \ WeaponFire classes handle the amount of ammo being used for a particular weapon.\
      \ Use the function GetFireMode to obtain access to the specific Weapon's WeaponFire\
      \ and adjust the AmmoPerFire accordingly. Here is the code that I used to make\
      \ this work.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> ComboUnlimitedAmmo <span class=\"kw1\">extends</span> <span\
      \ class=\"kw9\">Combo</span>;\n \n<span class=\"kw1\">var</span> <span class=\"\
      kw5\">int</span> nAmmoPerFireOne;         <span class=\"co1\">//For primary\
      \ ammo</span>\n<span class=\"kw1\">var</span> <span class=\"kw5\">int</span>\
      \ nAmmoPerFireTwo;         <span class=\"co1\">//For seondary ammo</span>\n\
      \ \n<span class=\"coMULTI\">/*\nThis function will get called when right combination\
      \ is entered.\n*/</span>\n<span class=\"kw1\">function</span> StartEffect<span\
      \ class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n     nAmmoPerFireOne <span class=\"\
      sy0\">=</span> P.<span class=\"kw9\">Weapon</span>.<span class=\"me0\">GetFireMode</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">AmmoPerFire</span>;\n     nAmmoPerFireTwo <span class=\"sy0\"\
      >=</span> P.<span class=\"kw9\">Weapon</span>.<span class=\"me0\">GetFireMode</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">AmmoPerFire</span>;\n     P.<span class=\"kw9\">Weapon</span>.<span\
      \ class=\"me0\">GetFireMode</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me0\">AmmoPerFire</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n     P.<span class=\"\
      kw9\">Weapon</span>.<span class=\"me0\">GetFireMode</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"\
      me0\">AmmoPerFire</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"coMULTI\">/*\nThis function\
      \ gets called when adrenaline is all gone.\n*/</span>\n<span class=\"kw1\">function</span>\
      \ StopEffect<span class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n     P.<span class=\"\
      kw9\">Weapon</span>.<span class=\"me0\">GetFireMode</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"\
      me0\">AmmoPerFire</span> <span class=\"sy0\">=</span> nAmmoPerFireOne;\n   \
      \  P.<span class=\"kw9\">Weapon</span>.<span class=\"me0\">GetFireMode</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">AmmoPerFire</span> <span class=\"sy0\">=</span> nAmmoPerFireTwo;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n     nAmmoPerFireOne <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n     nAmmoPerFireTwo <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n     Duration <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">20</span>;\n     ExecMessage <span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"Unlimited Ammo!\"</span>\n     keys<span class=\"br0\"\
      >[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">4</span>;<span class=\"co1\">//CK_LEFT;</span>\n\
      \     keys<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span>;<span\
      \ class=\"co1\">//CK_RIGHT;</span>\n     keys<span class=\"br0\">[</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">4</span>;<span class=\"co1\">//CK_LEFT;</span>\n     keys<span\
      \ class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">8</span>;<span class=\"co1\"\
      >//CK_RIGHT;</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The\
      \ problem with the code is, once the combo is initiated, the current gun the\
      \ player is holding will only have unlimited ammo. Also, the ammo count will\
      \ decrement by one before going to \"infinite\" mode. These are both an easy\
      \ fix, and I will update the code once I figure out how. I hope this helps anyone\
      \ out.</p>\n<p><b>Eliot:</b> ForEach maybe can fix this i havent tested it though&#160;:p,\
      \ anyway this will work for everybody ingame:/ anyway its good for a mutator\
      \ then.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div\
      \ class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\"\
      >function</span> StartEffect<span class=\"br0\">(</span><span class=\"kw9\"\
      >xPawn</span> P<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"kw1\">local</span> <span class=\"kw9\">Weapon</span> W;\n\
      \ \n    <span class=\"kw2\">ForEach</span> <span class=\"kw2\">DynamicActors</span><span\
      \ class=\"br0\">(</span> <span class=\"kw1\">Class</span><span class=\"st0\"\
      >'Weapon'</span>, W <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \      <span class=\"co1\">//nAmmoPerFireOne = W.GetFireMode(0).AmmoPerFire;</span>\n\
      \      <span class=\"co1\">//nAmmoPerFireTwo = W.GetFireMode(1).AmmoPerFire;</span>\n\
      \        W.<span class=\"me0\">GetFireMode</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me0\">AmmoPerFire</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n        W.<span\
      \ class=\"me0\">GetFireMode</span><span class=\"br0\">(</span><span class=\"\
      nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me0\">AmmoPerFire</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n    <span class=\"\
      br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ StopEffect<span class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >local</span> <span class=\"kw9\">Weapon</span> W;\n \n    <span class=\"kw2\"\
      >ForEach</span> <span class=\"kw2\">DynamicActors</span><span class=\"br0\"\
      >(</span> <span class=\"kw1\">Class</span><span class=\"st0\">'Weapon'</span>,\
      \ W <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n       \
      \ W.<span class=\"me0\">GetFireMode</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me0\">AmmoPerFire</span>\
      \ <span class=\"sy0\">=</span> W.<span class=\"me0\">GetFireMode</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span\
      \ class=\"kw1\">Default</span>.<span class=\"me0\">AmmoPerFire</span>;\n   \
      \     W.<span class=\"me0\">GetFireMode</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me0\">AmmoPerFire</span>\
      \ <span class=\"sy0\">=</span> W.<span class=\"me0\">GetFireMode</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span\
      \ class=\"kw1\">Default</span>.<span class=\"me0\">AmmoPerFire</span>;\n   \
      \ <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n    Duration <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">20</span>;\n    ExecMessage <span\
      \ class=\"sy0\">=</span> <span class=\"st0\">\"Unlimited Ammo!\"</span>\n  \
      \  keys<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>;<span\
      \ class=\"co1\">//CK_LEFT;</span>\n    keys<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">8</span>;<span class=\"co1\">//CK_RIGHT;</span>\n    keys<span\
      \ class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>;<span class=\"co1\"\
      >//CK_LEFT;</span>\n    keys<span class=\"br0\">[</span><span class=\"nu0\"\
      >3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">8</span>;<span class=\"co1\">//CK_RIGHT;</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.096 seconds\nReal time\
      \ usage: 0.196 seconds\nPreprocessor visited node count: 30/1000000\nPreprocessor\
      \ generated node count: 88/1000000\nPost‐expand include size: 27/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:1999-0!*!*!!en!*!* and timestamp\
      \ 20221118031341 and revision id 4887\n -->\n"
  categories:
  - sortkey: "Mod Ideas/InfiniteAmmoCombo"
    name: "Legacy_Journal"
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "Infinite Ammo Combo"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Ideas/InfiniteAmmoCombo"
    byteoffset: 0
    anchor: "Infinite_Ammo_Combo"
  - toclevel: 2
    level: "4"
    line: "The Idea"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Mod_Ideas/InfiniteAmmoCombo"
    byteoffset: 27
    anchor: "The_Idea"
  - toclevel: 2
    level: "4"
    line: "The Problem"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Mod_Ideas/InfiniteAmmoCombo"
    byteoffset: 1519
    anchor: "The_Problem"
  - toclevel: 2
    level: "4"
    line: "Comments"
    number: "1.3"
    index: "4"
    fromtitle: "Legacy:Mod_Ideas/InfiniteAmmoCombo"
    byteoffset: 1796
    anchor: "Comments"
  displaytitle: "Legacy:Mod Ideas/InfiniteAmmoCombo"
  iwlinks: []
  wikitext:
    text: "===Infinite Ammo Combo===\n\n====The Idea====\n\nI am trying to make an\
      \ adrenaline combo for the rapidly dying UT2003. When activated, it will either\
      \ return any ammo used instantly or stop ammo from being used in firing.\n\n\
      I have tried some thing out but I can't get it to work:\n\n<uscript>\nclass\
      \ InfinAmmoCombo extends Combo;\n\nvar xEmitter Effect;\nvar xEmitter Effect2;\n\
      var Ammunition LastAmmo;\n\n\nfunction StartEffect(xPawn P)\n{\n    if (P.Role\
      \ == ROLE_Authority)\n    {\n        Effect = Spawn(class'OffensiveEffect',\
      \ P,, P.Location, P.Rotation);\n        Effect2 = Spawn(class'RegenCrosses',\
      \ P,, P.Location, P.Rotation);\n    }\n    LastAmmo = Pawn(Owner).Weapon.Ammo[0];\n\
      //    AmmoHeal(P);\n    SetTimer(0.01, true);\n    Timer();\n}\n\n\n//function\
      \ AmmoHeal(xPawn P)\nfunction Timer()\n{\n    local Inventory Inv;\n\n    if\
      \ (Pawn(Owner).Role == ROLE_Authority)\n    {\n        if( inv.IsA('Weapon')\
      \ && (!inv.IsA('TransLauncher')) && (!inv.IsA('ShieldGun')) && (!inv.IsA('ShieldGun'))\
      \ && (!inv.IsA('ShieldGun')) )\n        {\n            if (LastAmmo != Pawn(Owner).Weapon.Ammo[0])\n\
      \            {\n               Pawn(Owner).Weapon.Ammo[0] = LastAmmo;\n    \
      \           Log(\"Ammo is good\");\n            }\n           LastAmmo = Pawn(Owner).Inventory.Ammo[0];\n\
      \        }\n    }\n}\n\nfunction StopEffect(xPawn P)\n{\n    if ( Effect !=\
      \ None )\n        Effect.Destroy();\n}\n\ndefaultproperties\n{\n    ExecMessage=\"\
      Infinite Ammo! Go Berserk!!\"\n\tComboAnnouncement=sound'AnnouncerMain.Berzerk'\n\
      \    keys(0)=1\n    keys(1)=1\n    keys(2)=2\n    keys(3)=2\n}\n</uscript>\n\
      \n====The Problem====\n\nI'm not too good with UnrealScript and would like some\
      \ advice on this matter. I have tried looking at mods and mutators which regenerate\
      \ ammo but they work on all ammo. I just want it on the current weapon. If it\
      \ does compile, nothing happens. Any ideas?\n\n====Comments====\n\n'''T1:'''\
      \ First of all, could you provide some of the errors UCC gives you? And why\
      \ do you check the shieldgun thrice? And Maybe a Shieldgun(Inv) != none would\
      \ be faster (not sure about this, some of the other wiki people would have to\
      \ confirm this).\n\nOh wait, I think I just found your problem. Inv isn't being\
      \ given any values. You have to say somewhere Inv=Pawn(Owner).Inventory; or\
      \ something like that. I'll go check in the wiki.\n\n'''ShadowRaven:''' I got\
      \ rid of the multiple Shield Gun calls, I was going to replace them with redeemer\
      \ and ion painer ammo after I got the ammo system working itself. Common errors\
      \ are (aside from syntax) Unrecognized member \"Ammo\" in \"Inventory and Unrecognized\
      \ member \"AmmoAmount\" in Weapon\" (AmmoAmount worked in the StartEffect function,\
      \ variable scope is stoppping me from using it in Timer().\n\nI know Ammo[0]\
      \ isn't it as the array indicates number of fire modes.\n\nI'm thinking to have\
      \ to call each weapon seperately however that loses the mod compatability.\n\
      \n'''porkmanii:''' Ammunition objects (as in Weapon.Ammo[]) store the amount\
      \ of ammo, and usually don't change throughout the lifetime of a weapon.  I'm\
      \ not sure about UT2003, but in UT2004 Ammunition generally isn't used.  Weapons\
      \ have a property called \"bNoAmmoInstances\" which, if true (the default value),\
      \ disables Ammunition and uses AmmoCharge (var int AmmoCharge[2]) instead. \
      \ If you want the amount of ammo to remain constant, you may have to record\
      \ the value returned by Weapon.AmmoAmount(mode), and add back some amount to\
      \ keep it at that level every time it changes.\n\nOne other problem I can see\
      \ is that if the player changes weapons, your code assigns the Ammunition from\
      \ the previous weapon.  If you implement this as an Inventory item, you could\
      \ detect when the player changes weapons - an OwnerEvent() call where EventName\
      \ == 'ChangedWeapon'.  Alternatively you could watch the weapon's ammo class,\
      \ resetting the \"LastAmmo\" every time the class changes.  This would also\
      \ allow compatibility with weapons with multiple ammo types, like ChaosUT's\
      \ Crossbow.\n\nPawn.Inventory refers to the first Inventory item in the Pawn's\
      \ inventory chain.  Even if Ammo[] was declared in Inventory and not Weapon,\
      \ why would you want to use Pawn.Inventory's Ammo[] property?\n\n'''Mad:'''\
      \ I managed to get this combo working the way you intended to, where the current\
      \ weapon the player is holding is the only weapon with infinite ammo. The problem\
      \ is, I managed to get this working in UT2004, so I don't know of any differences\
      \ within the code between 2003 and 2004. \n\nThe xPawn class has access to the\
      \ current weapon being used by calling xPawn.Weapon. Within the weapon class\
      \ contains an array of WeaponFire classes called FireModeClasses. The WeaponFire\
      \ classes handle the amount of ammo being used for a particular weapon. Use\
      \ the function GetFireMode to obtain access to the specific Weapon's WeaponFire\
      \ and adjust the AmmoPerFire accordingly. Here is the code that I used to make\
      \ this work.\n\n<uscript>\nclass ComboUnlimitedAmmo extends Combo;\n\nvar int\
      \ nAmmoPerFireOne;         //For primary ammo\nvar int nAmmoPerFireTwo;    \
      \     //For seondary ammo\n\n/*\nThis function will get called when right combination\
      \ is entered.\n*/\nfunction StartEffect(xPawn P)\n{\n     nAmmoPerFireOne =\
      \ P.Weapon.GetFireMode(0).AmmoPerFire;\n     nAmmoPerFireTwo = P.Weapon.GetFireMode(1).AmmoPerFire;\n\
      \     P.Weapon.GetFireMode(0).AmmoPerFire = 0;\n     P.Weapon.GetFireMode(1).AmmoPerFire\
      \ = 0;\n}\n\n\n/*\nThis function gets called when adrenaline is all gone.\n\
      */\nfunction StopEffect(xPawn P)\n{\n     P.Weapon.GetFireMode(0).AmmoPerFire\
      \ = nAmmoPerFireOne;\n     P.Weapon.GetFireMode(1).AmmoPerFire = nAmmoPerFireTwo;\n\
      }\n\ndefaultproperties\n{\n     nAmmoPerFireOne = 1;\n     nAmmoPerFireTwo =\
      \ 1;\n     Duration = 20;\n     ExecMessage = \"Unlimited Ammo!\"\n     keys[0]\
      \ = 4;//CK_LEFT;\n     keys[1] = 8;//CK_RIGHT;\n     keys[2] = 4;//CK_LEFT;\n\
      \     keys[3] = 8;//CK_RIGHT;\n}\n</uscript>\n\nThe problem with the code is,\
      \ once the combo is initiated, the current gun the player is holding will only\
      \ have unlimited ammo. Also, the ammo count will decrement by one before going\
      \ to \"infinite\" mode. These are both an easy fix, and I will update the code\
      \ once I figure out how. I hope this helps anyone out.\n\n'''Eliot:''' ForEach\
      \ maybe can fix this i havent tested it though :p, anyway this will work for\
      \ everybody ingame:/ anyway its good for a mutator then.\n\n<uscript>\nfunction\
      \ StartEffect(xPawn P)\n{\n    local Weapon W;\n\n    ForEach DynamicActors(\
      \ Class'Weapon', W )\n    {\n      //nAmmoPerFireOne = W.GetFireMode(0).AmmoPerFire;\n\
      \      //nAmmoPerFireTwo = W.GetFireMode(1).AmmoPerFire;\n        W.GetFireMode(0).AmmoPerFire\
      \ = 0;\n        W.GetFireMode(1).AmmoPerFire = 0;\n    }\n}\n\nfunction StopEffect(xPawn\
      \ P)\n{\n    local Weapon W;\n\n    ForEach DynamicActors( Class'Weapon', W\
      \ )\n    {\n        W.GetFireMode(0).AmmoPerFire = W.GetFireMode(0).Default.AmmoPerFire;\n\
      \        W.GetFireMode(1).AmmoPerFire = W.GetFireMode(1).Default.AmmoPerFire;\n\
      \    }\n}\n\ndefaultproperties\n{\n    Duration = 20;\n    ExecMessage = \"\
      Unlimited Ammo!\"\n    keys[0] = 4;//CK_LEFT;\n    keys[1] = 8;//CK_RIGHT;\n\
      \    keys[2] = 4;//CK_LEFT;\n    keys[3] = 8;//CK_RIGHT;\n}\n</uscript>\n\n\
      [[Category:Legacy Journal|{{PAGENAME}}]]"
  properties: []
  revId: 4887
name: "Legacy:Mod Ideas/InfiniteAmmoCombo"
revision:
  revid: 4887
  parentid: 4888
  user: "Sweavo"
  timestamp: 1195490920.000000000
  comment: "*"
timestamp: 1668765381.390808000
