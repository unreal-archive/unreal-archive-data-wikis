---
parse:
  title: "Legacy:Texture Format"
  text:
    text: "<p>Texture data can be stored in a number of different formats, and various\
      \ formats are used for various purposes by <a href=\"/Legacy:UnrealEd\" title=\"\
      Legacy:UnrealEd\" class=\"mw-redirect\">UnrealEd</a> and the game itself. The\
      \ following is a list of the texture formats available for use by the <a href=\"\
      /Legacy:Unreal_Engine\" title=\"Legacy:Unreal Engine\">Unreal Engine</a>, sorted\
      \ by the format code you'll see in the <a href=\"/Legacy:Texture_Browser\" title=\"\
      Legacy:Texture Browser\">Texture Browser</a>.</p>\n<dl>\n<dt>RGBA8 – 32-bit\
      \ RGB with Alpha</dt>\n<dd>This is the simplest \"raw\" format. Each pixel is\
      \ represented by one byte each for the red, green, blue, and alpha channels.\
      \ This format allows for the widest possible range of color and alpha information,\
      \ but at the expense of very large image size in memory and on disk (a 512x512\
      \ texture takes up 1MB of memory). For this reason, it is recommended that this\
      \ format not be used unless absolutely necessary. <b>(Import/export formats:\
      \ BMP, PCX, TGA, UPT)</b></dd>\n<dt>DXT1 – <a href=\"/Legacy:DXT\" title=\"\
      Legacy:DXT\">DXT</a> Compressed, opaque/one-bit alpha</dt>\n<dd>The most compact\
      \ format for texture data supported by the Unreal Engine. DXT1 can store full-color\
      \ textures with a total image size of 4 bits per pixel (half that of P8), but\
      \ does suffer from some loss of image quality. DXT1 textures have either no\
      \ transparency at all or just a single transparent color.<b>(Import/export formats:\
      \ DDS)</b></dd>\n<dt>DXT3 – <a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a>\
      \ Compressed, linear alpha</dt>\n<dd>DXT3 textures offer the same image quality\
      \ as DXT1, but add sixteen-level (4-bit) alpha information for each pixel, making\
      \ this format good for textures with sharply contrasting translucent/opaque\
      \ areas. This does, however, have the drawback of doubling the image size (to\
      \ 8 bits per pixel) over DXT1. <b>(Import/export formats: DDS)</b></dd>\n<dt>DXT5\
      \ – <a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a> Compressed, interpolated\
      \ alpha</dt>\n<dd>DXT5 is another variation of DXT1 with additional alpha information.\
      \ Like DXT3, DXT5 features an image size of 8 bits per pixel (twice that of\
      \ DXT1), however DXT5 uses an interpolated alpha scheme which allows for smoother\
      \ transitions in alpha values than DXT3 (but has less precision for sharp changes\
      \ in alpha). <b>(Import/export formats: DDS)</b></dd>\n<dt>P8 – 8-bit Palletized</dt>\n\
      <dd>P8 textures store each pixel as an index into a table of 256 possible colors\
      \ (similar to the GIF file format). P8 textures can also optionally have 1-bit\
      \ (on or off) transparency information, which is done by considering the color\
      \ index 0 to represent \"transparent\". P8 is one quarter the size of RGBA8,\
      \ while potentially offering substantially better color representation of DXT,\
      \ often offering a good compromise in the middle of the size/quality spectrum.\
      \ <b>(Import/export formats: BMP, PCX)</b></dd>\n<dt>&#160;??? – 8-bit Palletized\
      \ with Alpha</dt>\n<dd>A special variation on P8 is the alpha-palettized format\
      \ where each one of the 256, 32-bit palette entries holds an RGBA value instead\
      \ of RGB. This is mostly relevant only for the PSX2 builds of the engine; given\
      \ the PSX2 architecture, it's the most efficient form of storing a variable-alpha\
      \ texture. The catch is that having to put variable alpha in a palette diminishes\
      \ the already limited color variety available; but in many cases this isn't\
      \ significant, and several font-and user interface textures have been created\
      \ this way. <b>(Import/export formats: Special form of BMP?)</b></dd>\n<dt>G16\
      \ – 16-bit Grayscale</dt>\n<dd>Primarily used for <a href=\"/Legacy:Terrain\"\
      \ title=\"Legacy:Terrain\">terrain</a> heightmaps, G16 textures offer 65536\
      \ levels of gray, providing greatly increased precision of grayscale information\
      \ for those rare cases where it is needed. Most external <a href=\"/Legacy:Graphics_Application\"\
      \ title=\"Legacy:Graphics Application\">graphics applications</a> are not able\
      \ to handle 16-bit grayscale information, however, so manipulating G16 images\
      \ outside of UnrealEd may require specialized software, such as <a href=\"/Legacy:G16ed\"\
      \ title=\"Legacy:G16ed\">G16ed</a>. RGBA8 and P8 textures can be converted to\
      \ G16 in UnrealEd by setting the texture as a heightmap for a <a href=\"/Legacy:Terrain\"\
      \ title=\"Legacy:Terrain\">terrain</a>, and once it's visible in the <a href=\"\
      /Legacy:Terrain_Mode\" title=\"Legacy:Terrain Mode\">Terrain Mode</a> window,\
      \ right-clicking on its thumbnail and selecting \"convert to G16\" from the\
      \ pop-up menu. <b>(Import/export formats: BMP <i>Note: The G16 \"BMP\" format\
      \ is not actually a valid BMP file, and will not work correctly with most programs</i>)</b></dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"Notes\">Notes</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Texture_Format?section=1\"\
      \ title=\"Edit section: Notes\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li>There is apparently a hardware bug in some\
      \ <a href=\"http://en.wikipedia.org/wiki/nVidia\" class=\"extiw\" title=\"wikipedia:nVidia\"\
      >Wikipedia:nVidia</a> chipsets, including the NV20 (GeForce3), which potentially\
      \ makes DXT1 textures display poorly onscreen. Specifically, decompression is\
      \ performed in 16-bit color mode internally, making the resulting texture potentially\
      \ unacceptable for use, especially when combined with other operations. Test\
      \ your DXT1 textures on nVidia hardware before committing to their use. All\
      \ other <a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a> formats on nVidia\
      \ hardware are okay, as textures are decompressed in 32-bit color internally.</li>\n\
      </ul>\n<ul>\n<li>RGBA8 and P8 textures can be converted to DXT1/3/5 in UnrealEd\
      \ by right-clicking on the texture in the <a href=\"/Legacy:Texture_Browser\"\
      \ title=\"Legacy:Texture Browser\">texture browser</a> and selecting the desired\
      \ format from the \"Compress\" item of the pop-up menu.</li>\n</ul>\n<ul>\n\
      <li>Using DXT textures can greatly reduce file sizes. For example 512x512 32bit\
      \ RGBA8 file is 1MB big. DXT1 compressed file will be ~128KB big, image quality\
      \ may not be noticeably decreased, 1-bit alpha may be present. Zipped DXT1 file\
      \ will be ~28KB big. That's only 2.7% of the original file size.</li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Recommendations\">Recommendations</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Texture_Format?section=2\" title=\"Edit section: Recommendations\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>DXT\
      \ compression can offer substantial space savings and should be used whenever\
      \ feasible. See the <a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a> page\
      \ for more information on which type to use when. When DXT compression does\
      \ not provide sufficient image quality, P8 textures should be used if possible.\
      \ RGBA8 textures should only be used when absolutely necessary due to their\
      \ extremely large size.</p>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\"\
      >Related Topics</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Texture_Format?section=3\" title=\"Edit section:\
      \ Related Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Texture_Topics\" title=\"Legacy:Texture Topics\"\
      >Texture Topics</a></li>\n<li><a href=\"/Legacy:Texture_Compression\" title=\"\
      Legacy:Texture Compression\">Texture Compression</a></li>\n<li><a href=\"/Legacy:Texture_Import_And_Export\"\
      \ title=\"Legacy:Texture Import And Export\">Texture Import and Export</a></li>\n\
      <li><a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a> – has a more detailed\
      \ discussion of how DXT textures are represented internally, as well as some\
      \ general rules of thumb for when to use which format.</li>\n<li><a href=\"\
      /Legacy:S3TC\" title=\"Legacy:S3TC\">S3TC</a></li>\n</ul>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.035 seconds\nReal time usage: 0.036 seconds\nPreprocessor\
      \ visited node count: 11/1000000\nPreprocessor generated node count: 16/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3210-0!*!0!!*!*!*\
      \ and timestamp 20221118014521 and revision id 8362\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Texture Compression"
  - ns: 100
    exists: true
    name: "Legacy:Graphics Application"
  - ns: 100
    exists: true
    name: "Legacy:Texture Import And Export"
  - ns: 100
    exists: true
    name: "Legacy:DXT"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:Terrain"
  - ns: 100
    exists: true
    name: "Legacy:S3TC"
  - ns: 100
    exists: true
    name: "Legacy:Terrain Mode"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:G16ed"
  - ns: 100
    exists: true
    name: "Legacy:Texture Browser"
  - ns: 100
    exists: true
    name: "Legacy:Texture Topics"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Notes"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Texture_Format"
    byteoffset: 4171
    anchor: "Notes"
  - toclevel: 1
    level: "2"
    line: "Recommendations"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Texture_Format"
    byteoffset: 5261
    anchor: "Recommendations"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Texture_Format"
    byteoffset: 5656
    anchor: "Related_Topics"
  displaytitle: "Legacy:Texture Format"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/nVidia"
    name: "wikipedia:nVidia"
  wikitext:
    text: "Texture data can be stored in a number of different formats, and various\
      \ formats are used for various purposes by [[Legacy:UnrealEd|UnrealEd]] and\
      \ the game itself.  The following is a list of the texture formats available\
      \ for use by the [[Legacy:Unreal Engine|Unreal Engine]], sorted by the format\
      \ code you'll see in the [[Legacy:Texture Browser|Texture Browser]].\n\n; RGBA8\
      \ &ndash; 32-bit RGB with Alpha:  This is the simplest \"raw\" format.  Each\
      \ pixel is represented by one byte each for the red, green, blue, and alpha\
      \ channels.  This format allows for the widest possible range of color and alpha\
      \ information, but at the expense of very large image size in memory and on\
      \ disk (a 512x512 texture takes up 1MB of memory).  For this reason, it is recommended\
      \ that this format not be used unless absolutely necessary.  '''(Import/export\
      \ formats: BMP, PCX, TGA, UPT)'''\n; DXT1 &ndash; [[Legacy:DXT|DXT]] Compressed,\
      \ opaque/one-bit alpha:  The most compact format for texture data supported\
      \ by the Unreal Engine.  DXT1 can store full-color textures with a total image\
      \ size of 4 bits per pixel (half that of P8), but does suffer from some loss\
      \ of image quality. DXT1 textures have either no transparency at all or just\
      \ a single transparent color.'''(Import/export formats: DDS)'''\n; DXT3 &ndash;\
      \ [[Legacy:DXT|DXT]] Compressed, linear alpha:  DXT3 textures offer the same\
      \ image quality as DXT1, but add sixteen-level (4-bit) alpha information for\
      \ each pixel, making this format good for textures with sharply contrasting\
      \ translucent/opaque areas.  This does, however, have the drawback of doubling\
      \ the image size (to 8 bits per pixel) over DXT1. '''(Import/export formats:\
      \ DDS)'''\n; DXT5 &ndash; [[Legacy:DXT|DXT]] Compressed, interpolated alpha:\
      \  DXT5 is another variation of DXT1 with additional alpha information.  Like\
      \ DXT3, DXT5 features an image size of 8 bits per pixel (twice that of DXT1),\
      \ however DXT5 uses an interpolated alpha scheme which allows for smoother transitions\
      \ in alpha values than DXT3 (but has less precision for sharp changes in alpha).\
      \ '''(Import/export formats: DDS)'''\n; P8 &ndash; 8-bit Palletized:  P8 textures\
      \ store each pixel as an index into a table of 256 possible colors (similar\
      \ to the GIF file format).  P8 textures can also optionally have 1-bit (on or\
      \ off) transparency information, which is done by considering the color index\
      \ 0 to represent \"transparent\".  P8 is one quarter the size of RGBA8, while\
      \ potentially offering substantially better color representation of DXT, often\
      \ offering a good compromise in the middle of the size/quality spectrum. '''(Import/export\
      \ formats: BMP, PCX)'''\n; ??? &ndash; 8-bit Palletized with Alpha:  A special\
      \ variation on P8 is the alpha-palettized format where each one of the 256,\
      \ 32-bit palette entries holds an RGBA value instead of RGB. This is mostly\
      \ relevant only for the PSX2 builds of the engine; given the PSX2 architecture,\
      \ it's the most efficient form of storing a variable-alpha texture. The catch\
      \ is that having to put variable alpha in a palette diminishes the already limited\
      \ color variety available; but in many cases this isn't significant, and several\
      \ font-and user interface textures have been created this way. '''(Import/export\
      \ formats: Special form of BMP?)'''\n; G16 &ndash; 16-bit Grayscale:  Primarily\
      \ used for [[Legacy:Terrain|terrain]] heightmaps, G16 textures offer 65536 levels\
      \ of gray, providing greatly increased precision of grayscale information for\
      \ those rare cases where it is needed.  Most external [[Legacy:Graphics Application|graphics\
      \ application]]s are not able to handle 16-bit grayscale information, however,\
      \ so manipulating G16 images outside of UnrealEd may require specialized software,\
      \ such as [[Legacy:G16ed|G16ed]]. RGBA8 and P8 textures can be converted to\
      \ G16 in UnrealEd by setting the texture as a heightmap for a [[Legacy:Terrain|terrain]],\
      \ and once it's visible in the [[Legacy:Terrain Mode|Terrain Mode]] window,\
      \ right-clicking on its thumbnail and selecting \"convert to G16\" from the\
      \ pop-up menu. '''(Import/export formats: BMP ''Note: The G16 \"BMP\" format\
      \ is not actually a valid BMP file, and will not work correctly with most programs'')'''\n\
      \n==Notes==\n\n* There is apparently a hardware bug in some [[Wikipedia:nVidia]]\
      \ chipsets, including the NV20 (GeForce3), which potentially makes DXT1 textures\
      \ display poorly onscreen. Specifically, decompression is performed in 16-bit\
      \ color mode internally, making the resulting texture potentially unacceptable\
      \ for use, especially when combined with other operations. Test your DXT1 textures\
      \ on nVidia hardware before committing to their use. All other [[Legacy:DXT|DXT]]\
      \ formats on nVidia hardware are okay, as textures are decompressed in 32-bit\
      \ color internally.\n\n* RGBA8 and P8 textures can be converted to DXT1/3/5\
      \ in UnrealEd by right-clicking on the texture in the [[Legacy:Texture Browser|texture\
      \ browser]] and selecting the desired format from the \"Compress\" item of the\
      \ pop-up menu.\n\n* Using DXT textures can greatly reduce file sizes. For example\
      \ 512x512 32bit RGBA8 file is 1MB big. DXT1 compressed file will be ~128KB big,\
      \ image quality may not be noticeably decreased, 1-bit alpha may be present.\
      \ Zipped DXT1 file will be ~28KB big. That's only 2.7% of the original file\
      \ size.\n\n==Recommendations==\n\nDXT compression can offer substantial space\
      \ savings and should be used whenever feasible.  See the [[Legacy:DXT|DXT]]\
      \ page for more information on which type to use when.  When DXT compression\
      \ does not provide sufficient image quality, P8 textures should be used if possible.\
      \  RGBA8 textures should only be used when absolutely necessary due to their\
      \ extremely large size.\n\n==Related Topics==\n* [[Legacy:Texture Topics|Texture\
      \ Topics]]\n* [[Legacy:Texture Compression|Texture Compression]]\n* [[Legacy:Texture\
      \ Import And Export|Texture Import and Export]]\n* [[Legacy:DXT|DXT]] &ndash;\
      \ has a more detailed discussion of how DXT textures are represented internally,\
      \ as well as some general rules of thumb for when to use which format.\n* [[Legacy:S3TC|S3TC]]"
  properties: []
  revId: 8362
name: "Legacy:Texture Format"
revision:
  revid: 8362
  parentid: 8363
  user: "Sopa De Letras"
  timestamp: 1188493831.000000000
  comment: "*"
timestamp: 1668765079.013126000
