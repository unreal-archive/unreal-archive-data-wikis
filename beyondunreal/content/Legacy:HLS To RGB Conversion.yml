---
parse:
  title: "Legacy:HLS To RGB Conversion"
  text:
    text: "<p>This set of functions can convert HLS values to RGB. hls2rgb takes the\
      \ byte values of Hue, Luminosity, and Saturation and returns the Color it represents.\
      \ (HueToRGB is a support function for the main conversion.)</p>\n<p>Very liberally\
      \ adapted from <a rel=\"nofollow\" class=\"external free\" href=\"http://plaza27.mbn.or.jp/~satomii/design/win32/hls2rgb.html\"\
      >http://plaza27.mbn.or.jp/~satomii/design/win32/hls2rgb.html</a></p>\n<blockquote\
      \ class=\"legacyquote\">\n<p><b>How to convert HLS value to RGB value?</b></p>\n\
      <p>This is an useful function extracted from Microsoft's old sample code, modified\
      \ a little by Rei for her own product. Note that this code is copyrighted to\
      \ Microsoft Corporation.</p>\n<dl>\n<dd><i>Quoted from that page.</i></dd>\n\
      </dl>\n</blockquote>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">const</span> HLSMAX <span class=\"sy0\">=</span> <span class=\"nu0\">240</span>;\n\
      <span class=\"kw1\">const</span> RGBMAX <span class=\"sy0\">=</span> <span class=\"\
      nu0\">255</span>;\n \n \n<span class=\"kw1\">final</span> <span class=\"kw1\"\
      >simulated</span> <span class=\"kw1\">function</span> <span class=\"kw5\">float</span>\
      \ HueToRGB<span class=\"br0\">(</span><span class=\"kw5\">float</span> n1, <span\
      \ class=\"kw5\">float</span> n2, <span class=\"kw5\">float</span> hue<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> hue <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">0</span> <span class=\"br0\">)</span> hue <span class=\"sy0\">+=</span>\
      \ HLSMAX;\n\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span> hue\
      \ <span class=\"sy0\">&gt;</span> HLSMAX <span class=\"br0\">)</span> hue <span\
      \ class=\"sy0\">-=</span> HLSMAX;\n \n\t<span class=\"coMULTI\">/* return r,g,\
      \ or b value from this tridrant */</span>\n\t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> hue <span class=\"sy0\">&lt;</span> <span class=\"\
      br0\">(</span>HLSMAX<span class=\"sy0\">/</span><span class=\"nu0\">6</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span>\n\t\t<span class=\"kw2\"\
      >return</span> <span class=\"br0\">(</span> n1 <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\"\
      >(</span>n2<span class=\"sy0\">-</span>n1<span class=\"br0\">)</span><span class=\"\
      sy0\">*</span>hue <span class=\"sy0\">+</span> <span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> hue <span class=\"sy0\">&lt;</span>\
      \ <span class=\"br0\">(</span>HLSMAX<span class=\"sy0\">/</span><span class=\"\
      nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n\t\t\
      <span class=\"kw2\">return</span> n2;\n\t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> hue <span class=\"sy0\">&lt;</span> <span class=\"\
      br0\">(</span><span class=\"br0\">(</span>HLSMAX<span class=\"sy0\">*</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw2\">return</span> <span class=\"br0\">(</span> n1 <span\
      \ class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>n2<span class=\"sy0\">-</span>n1<span class=\"br0\"\
      >)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"\
      br0\">(</span><span class=\"br0\">(</span>HLSMAX<span class=\"sy0\">*</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>hue<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t<span class=\"kw2\"\
      >else</span>\n\t\t<span class=\"kw2\">return</span> n1;\n<span class=\"br0\"\
      >}</span>\n \n \n<span class=\"kw1\">final</span> <span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">Color</span> hls2rgb<span\
      \ class=\"br0\">(</span><span class=\"kw5\">byte</span> hue, <span class=\"\
      kw5\">byte</span> lum, <span class=\"kw5\">byte</span> sat<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">Color</span> C;\n\t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">float</span> Magic1, Magic2;\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> R,G,B;\n \n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> sat<span class=\"sy0\">==</span><span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span> \
      \    <span class=\"coMULTI\">/* achromatic case */</span>\n\t\tC.<span class=\"\
      me0\">R</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>lum<span\
      \ class=\"sy0\">*</span>RGBMAX<span class=\"br0\">)</span> <span class=\"sy0\"\
      >/</span> HLSMAX;\n\t\tC.<span class=\"me0\">G</span> <span class=\"sy0\">=</span>\
      \ C.<span class=\"me0\">R</span>;\n\t\tC.<span class=\"me0\">B</span> <span\
      \ class=\"sy0\">=</span> C.<span class=\"me0\">R</span>;\n \n\t\t<span class=\"\
      coMULTI\">/* Small fix */</span>\n\t\tR <span class=\"sy0\">=</span> C.<span\
      \ class=\"me0\">R</span>;\n\t\tG <span class=\"sy0\">=</span> C.<span class=\"\
      me0\">G</span>;\n\t\tB <span class=\"sy0\">=</span> C.<span class=\"me0\">B</span>;\n\
      \t<span class=\"br0\">}</span>\n\t<span class=\"kw2\">else</span>\n\t<span class=\"\
      br0\">{</span>       <span class=\"coMULTI\">/* chromatic case */</span>\n\t\
      \t<span class=\"coMULTI\">/* set up magic numbers */</span>\n\t\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>lum <span class=\"sy0\">&lt;=</span>\
      \ <span class=\"br0\">(</span>HLSMAX<span class=\"sy0\">/</span><span class=\"\
      nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\t\t\
      \tMagic2 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>lum<span class=\"\
      sy0\">*</span><span class=\"br0\">(</span>HLSMAX<span class=\"sy0\">+</span>sat<span\
      \ class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> HLSMAX;\n\t\t<span class=\"\
      kw2\">else</span>\n\t\t\tMagic2 <span class=\"sy0\">=</span> lum<span class=\"\
      sy0\">+</span>sat <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>lum<span class=\"sy0\">*</span>sat<span class=\"br0\"\
      >)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> HLSMAX;\n \n\t\tMagic1\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\"\
      >*</span>lum <span class=\"sy0\">-</span> Magic2;\n \n\t\t<span class=\"coMULTI\"\
      >/* get RGB, change units from HLSMAX to RGBMAX */</span>\n\t\tR <span class=\"\
      sy0\">=</span> <span class=\"br0\">(</span>HueToRGB<span class=\"br0\">(</span>Magic1,\
      \ Magic2, hue<span class=\"sy0\">+</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n\t\t\t\t<span class=\"sy0\">*</span> RGBMAX <span\
      \ class=\"sy0\">+</span> <span class=\"br0\">(</span>HLSMAX<span class=\"sy0\"\
      >/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">/</span> HLSMAX;\n\t\tG <span class=\"sy0\"\
      >=</span> <span class=\"br0\">(</span>HueToRGB<span class=\"br0\">(</span>Magic1,\
      \ Magic2, hue<span class=\"br0\">)</span>\n\t\t\t\t<span class=\"sy0\">*</span>\
      \ RGBMAX <span class=\"sy0\">+</span> <span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> HLSMAX;\n\t\tB <span class=\"\
      sy0\">=</span> <span class=\"br0\">(</span>HueToRGB<span class=\"br0\">(</span>Magic1,\
      \ Magic2, hue<span class=\"sy0\">-</span><span class=\"br0\">(</span>HLSMAX<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n\t\t\t\t<span class=\"sy0\">*</span> RGBMAX <span\
      \ class=\"sy0\">+</span> <span class=\"br0\">(</span>HLSMAX<span class=\"sy0\"\
      >/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">/</span> HLSMAX;\n\t<span class=\"br0\">}</span>\n\
      \ \n\tC.<span class=\"me0\">R</span> <span class=\"sy0\">=</span> R;\n\tC.<span\
      \ class=\"me0\">G</span> <span class=\"sy0\">=</span> G;\n\tC.<span class=\"\
      me0\">B</span> <span class=\"sy0\">=</span> B;\n\tC.<span class=\"me0\">A</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">255</span>;\n\t<span class=\"\
      kw2\">return</span> C;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// HLStoRGB</span>\n<span class=\"co1\">//</span>\n<span\
      \ class=\"co1\">// Converts the given HLS color value to its RGB equivalent\
      \ and returns it.</span>\n<span class=\"co1\">//</span>\n<span class=\"co1\"\
      >//   H   Hue          from 0 (red) over 80 (green) and 160 (blue) to 240 (red)</span>\n\
      <span class=\"co1\">//   L   Lightness    from 0 (black) over 120 (full color)\
      \ to 240 (white)</span>\n<span class=\"co1\">//   S   Saturation   from 0 (gray)\
      \ to 240 (full color)</span>\n<span class=\"co1\">//</span>\n<span class=\"\
      co1\">// Due to its use of the color scaling operator this function expects\
      \ to be</span>\n<span class=\"co1\">// implemented in an Actor subclass.</span>\n\
      <span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">static</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">Color</span> HLStoRGB<span class=\"br0\">(</span><span class=\"\
      kw5\">int</span> H, <span class=\"kw5\">int</span> L, <span class=\"kw5\">int</span>\
      \ S<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> OffsetLightness;\n  <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> OffsetSaturation;\n\
      \  <span class=\"kw1\">local</span> <span class=\"kw5\">Color</span> <span class=\"\
      kw5\">Color</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>H <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span> H <span class=\"sy0\">=</span> <span class=\"br0\"\
      >(</span><span class=\"nu0\">240</span> <span class=\"sy0\">-</span> H<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">240</span>;\n\
      \        <span class=\"kw2\">else</span> H <span class=\"sy0\">=</span>    \
      \    H  <span class=\"sy0\">%</span> <span class=\"nu0\">240</span>;\n \n  \
      \     <span class=\"kw2\">if</span> <span class=\"br0\">(</span>H <span class=\"\
      sy0\">&lt;</span>  <span class=\"nu0\">80</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">Color</span>.<span class=\"me0\">R</span> <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Min</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">255</span>, <span class=\"nu0\">255</span> <span class=\"sy0\"\
      >*</span> <span class=\"br0\">(</span><span class=\"nu0\">80</span> <span class=\"\
      sy0\">-</span> H<span class=\"br0\">)</span>  <span class=\"sy0\">/</span> <span\
      \ class=\"nu0\">40</span><span class=\"br0\">)</span>;\n  <span class=\"kw2\"\
      >else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span>H <span\
      \ class=\"sy0\">&gt;</span> <span class=\"nu0\">160</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">Color</span>.<span class=\"me0\">R</span> <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Min</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">255</span>, <span class=\"nu0\">255</span> <span class=\"sy0\"\
      >*</span> <span class=\"br0\">(</span>H <span class=\"sy0\">-</span> <span class=\"\
      nu0\">160</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span\
      \ class=\"nu0\">40</span><span class=\"br0\">)</span>;\n \n  <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>H <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">160</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">Color</span>.<span class=\"me0\">G</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Min</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>, <span class=\"nu0\">255</span> <span class=\"sy0\">*</span> <span\
      \ class=\"br0\">(</span><span class=\"nu0\">80</span> <span class=\"sy0\">-</span>\
      \ <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>H <span class=\"\
      sy0\">-</span>  <span class=\"nu0\">80</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">40</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>H <span class=\"sy0\">&gt;</span>  <span class=\"nu0\">80</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">Color</span>.<span class=\"me0\"\
      >B</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Min</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\"\
      >80</span> <span class=\"sy0\">-</span> <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>H <span class=\"sy0\">-</span> <span class=\"nu0\">160</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">40</span><span class=\"br0\">)</span>;\n \n  <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>S <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">240</span><span class=\"br0\">)</span> <span class=\"\
      br0\">{</span>\n    <span class=\"kw5\">Color</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Color</span> <span class=\"sy0\">*</span> <span class=\"\
      br0\">(</span><span class=\"kw5\">float</span><span class=\"br0\">(</span>S<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">240</span><span\
      \ class=\"br0\">)</span>;\n    OffsetSaturation <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">128</span> <span class=\"sy0\">*</span> <span class=\"\
      br0\">(</span><span class=\"nu0\">240</span> <span class=\"sy0\">-</span> S<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">240</span>;\n\
      \    <span class=\"kw5\">Color</span>.<span class=\"me0\">R</span> <span class=\"\
      sy0\">+=</span> OffsetSaturation;\n    <span class=\"kw5\">Color</span>.<span\
      \ class=\"me0\">G</span> <span class=\"sy0\">+=</span> OffsetSaturation;\n \
      \   <span class=\"kw5\">Color</span>.<span class=\"me0\">B</span> <span class=\"\
      sy0\">+=</span> OffsetSaturation;\n    <span class=\"br0\">}</span>\n \n  L\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Min</span><span class=\"\
      br0\">(</span><span class=\"nu0\">240</span>, L<span class=\"br0\">)</span>;\n\
      \  <span class=\"kw5\">Color</span> <span class=\"sy0\">=</span> <span class=\"\
      kw5\">Color</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">120</span> <span class=\"sy0\">-</span>\
      \ <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>L <span class=\"\
      sy0\">-</span> <span class=\"nu0\">120</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">120</span><span\
      \ class=\"br0\">)</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>L <span class=\"sy0\">&gt;</span> <span class=\"nu0\">120</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n    OffsetLightness <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">256</span> <span class=\"sy0\"\
      >*</span> <span class=\"br0\">(</span>L <span class=\"sy0\">-</span> <span class=\"\
      nu0\">120</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span\
      \ class=\"nu0\">120</span>;\n    <span class=\"kw5\">Color</span>.<span class=\"\
      me0\">R</span> <span class=\"sy0\">+=</span> OffsetLightness;\n    <span class=\"\
      kw5\">Color</span>.<span class=\"me0\">G</span> <span class=\"sy0\">+=</span>\
      \ OffsetLightness;\n    <span class=\"kw5\">Color</span>.<span class=\"me0\"\
      >B</span> <span class=\"sy0\">+=</span> OffsetLightness;\n    <span class=\"\
      br0\">}</span>\n \n  <span class=\"kw2\">return</span> <span class=\"kw5\">Color</span>;\n\
      \  <span class=\"br0\">}</span></pre></div>\n</div>\n<p><b>UArch</b> slight\
      \ modification to the above script</p>\n<p>ok changed it now, im using this\
      \ custom version for a script im doing</p>\n<p>input HLS values range from 0-255,\
      \ output vector with ranges 0-1 x=R y=G z=B</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">vector</span> HLStoRGB<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> H,<span class=\"kw5\"\
      >float</span> L,<span class=\"kw5\">float</span> S<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> OffsetLightness;\n\t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">float</span> OffsetSaturation;\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">vector</span> cout;\n \n\tH <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">fclamp</span><span class=\"br0\">(</span>H,<span class=\"\
      nu0\">0</span>,<span class=\"nu0\">255</span><span class=\"br0\">)</span>;\n\
      \tL <span class=\"sy0\">=</span> <span class=\"kw3\">fclamp</span><span class=\"\
      br0\">(</span>L,<span class=\"nu0\">0</span>,<span class=\"nu0\">255</span><span\
      \ class=\"br0\">)</span>;\n\tS <span class=\"sy0\">=</span> <span class=\"kw3\"\
      >fclamp</span><span class=\"br0\">(</span>S,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>;\n\tS <span class=\"\
      sy0\">=</span> <span class=\"nu0\">255</span> <span class=\"sy0\">-</span> S;\n\
      \ \n\t<span class=\"kw2\">if</span><span class=\"br0\">(</span>H <span class=\"\
      sy0\">&lt;</span> <span class=\"nu0\">85</span><span class=\"br0\">)</span>\n\
      \t\tcout.<span class=\"me0\">x</span> <span class=\"sy0\">=</span> <span class=\"\
      kw3\">fMin</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span\
      \ class=\"br0\">(</span><span class=\"nu0\">85</span> <span class=\"sy0\">-</span>\
      \ H<span class=\"br0\">)</span>  <span class=\"sy0\">/</span> <span class=\"\
      nu0\">42.5</span><span class=\"br0\">)</span>;\n \n\t<span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span>H <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">170</span><span class=\"br0\">)</span>\n\
      \t\tcout.<span class=\"me0\">x</span> <span class=\"sy0\">=</span> <span class=\"\
      kw3\">fMin</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span\
      \ class=\"br0\">(</span>H <span class=\"sy0\">-</span> <span class=\"nu0\">170</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">42.5</span><span\
      \ class=\"br0\">)</span>;\n \n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>H <span class=\"sy0\">&lt;</span> <span class=\"nu0\">170</span><span\
      \ class=\"br0\">)</span>\n\t\tcout.<span class=\"me0\">y</span> <span class=\"\
      sy0\">=</span> <span class=\"kw3\">fMin</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">1</span>, <span class=\"br0\">(</span><span class=\"nu0\">85</span>\
      \ <span class=\"sy0\">-</span> <span class=\"kw3\">Abs</span><span class=\"\
      br0\">(</span>H <span class=\"sy0\">-</span>  <span class=\"nu0\">85</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">42.5</span><span class=\"br0\">)</span>;\n \n\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>H <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">85</span><span class=\"br0\">)</span>\n\t\tcout.<span\
      \ class=\"me0\">z</span> <span class=\"sy0\">=</span> <span class=\"kw3\">fMin</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"br0\">(</span><span\
      \ class=\"nu0\">85</span> <span class=\"sy0\">-</span> <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>H <span class=\"sy0\">-</span> <span class=\"nu0\">170</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">42.5</span><span class=\"br0\">)</span>;\n \n\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>S <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\t<span class=\"\
      br0\">{</span>\n\t\tcout <span class=\"sy0\">=</span> cout <span class=\"sy0\"\
      >*</span> <span class=\"br0\">(</span>S <span class=\"sy0\">/</span> <span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>;\n\t\tOffsetSaturation <span class=\"\
      sy0\">=</span> <span class=\"coMULTI\">/*128 **/</span> <span class=\"br0\"\
      >(</span><span class=\"nu0\">255</span> <span class=\"sy0\">-</span> S<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">255</span>;\n\
      \t\tcout.<span class=\"me0\">x</span> <span class=\"sy0\">+=</span> OffsetSaturation;\n\
      \t\tcout.<span class=\"me0\">y</span> <span class=\"sy0\">+=</span> OffsetSaturation;\n\
      \t\tcout.<span class=\"me0\">z</span> <span class=\"sy0\">+=</span> OffsetSaturation;\n\
      \t<span class=\"br0\">}</span>\n \n\tcout <span class=\"sy0\">=</span> cout\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">255</span> <span class=\"sy0\">-</span> <span class=\"\
      kw3\">Abs</span><span class=\"br0\">(</span>L <span class=\"sy0\">-</span> <span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">/</span> <span class=\"nu0\">255</span><span class=\"\
      br0\">)</span>;\n \n\t<span class=\"kw2\">return</span> cout;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>Here's what <a href=\"/Legacy:Sourced_Player_Shadows\"\
      \ title=\"Legacy:Sourced Player Shadows\">Sourced Player Shadows</a> uses to\
      \ determine the light color when casting colored shadows. It's based on direct\
      \ measurements of the color of white walls in a zone with various ambient colors\
      \ set. You'll have to add your own code to scale for light brightness. This\
      \ isn't anything like the scientifically correct way to do the conversion, but\
      \ my guess is they were just kinda guessing when they wrote it the first time.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">// Convert the color\
      \ (not brightness) of an Unreal light to RGB values from 0 to 1</span>\n<span\
      \ class=\"co1\">// inputs are float so I don't have to worry about casting them.</span>\n\
      <span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> Chroma2RGB<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> hue, <span class=\"\
      kw5\">float</span> saturation,\n                     <span class=\"kw1\">out</span>\
      \ <span class=\"kw5\">float</span> r, <span class=\"kw1\">out</span> <span class=\"\
      kw5\">float</span> g, <span class=\"kw1\">out</span> <span class=\"kw5\">float</span>\
      \ b<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n  hue <span class=\"\
      sy0\">/=</span> <span class=\"nu0\">85</span>;\n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>hue <span class=\"sy0\">&lt;=</span> <span class=\"\
      nu0\">1</span><span class=\"br0\">)</span>      <span class=\"br0\">{</span>\
      \ g <span class=\"sy0\">=</span> hue  ; r <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">1</span><span class=\"sy0\">-</span>g; b <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0</span>;<span class=\"br0\">}</span>\n  <span\
      \ class=\"kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>hue <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">2</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span> b <span class=\"sy0\"\
      >=</span> hue<span class=\"sy0\">-</span><span class=\"nu0\">1</span>; g <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">-</span>b;\
      \ r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;<span class=\"\
      br0\">}</span>\n  <span class=\"kw2\">else</span>               <span class=\"\
      br0\">{</span> r <span class=\"sy0\">=</span> hue<span class=\"sy0\">-</span><span\
      \ class=\"nu0\">2</span>; b <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >1</span><span class=\"sy0\">-</span>r; g <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">0</span>;<span class=\"br0\">}</span>\n  saturation <span class=\"\
      sy0\">=</span> <span class=\"kw3\">FClamp</span><span class=\"br0\">(</span>saturation<span\
      \ class=\"sy0\">/</span><span class=\"nu0\">255</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>;\n  r <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">lerp</span><span class=\"br0\">(</span>saturation,r,<span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>;\n  g <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">lerp</span><span class=\"br0\">(</span>saturation,g,<span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>;\n  b <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">lerp</span><span class=\"br0\">(</span>saturation,b,<span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Comments\">Comments</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:HLS_To_RGB_Conversion?section=1\" title=\"Edit section:\
      \ Comments\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>capt.k:</b> HLSMAX and RGBMAX are variables (which can obviously be hard-coded\
      \ into the script) because I wasn't sure at the time of writing what values\
      \ would be appropriate. The UEd color picker uses 240 as the max for HLS values,\
      \ but the slider has 255.</p>\n<p><b>Wormbo:</b> Actor.LightSaturation goes\
      \ from 0 to 255, where 0 means full saturation and 255 indicates a pure grey\
      \ color. LightHue also goes from 0 to 255 and LightBrightness is an unlimited\
      \ float value. The color picker in UEd is somwhat useless for light colors,\
      \ except for the hue value.</p>\n<p><b>Mychaeel:</b> Since in Windows the \"\
      saturation\" property usually goes from 0 for \"no saturation\" (grayscale)\
      \ to 255 for \"full saturation\" (full color), that could be the reason that\
      \ the algorithm posted above doesn't work here without adaptation.</p>\n<p><b>Mychaeel:</b>\
      \ I've posted an alternative implementation created from scratch that also uses\
      \ Windows' HLS definition (see comment header). If Unreal's really differs from\
      \ it, adapt the parameters before passing them to that function.</p>\n<p>Please\
      \ test it. If it works as advertised, let's get rid of the first Microsoft-derived\
      \ implementation (which is longer and not designed for UnrealScript).</p>\n\
      <p><b>inio:</b> Added what I came up with for <a href=\"/Legacy:Sourced_Player_Shadows\"\
      \ title=\"Legacy:Sourced Player Shadows\">Sourced Player Shadows</a>.</p>\n\
      <p><b>Sixpack-Shambler</b> Am I wrong or in the first HLStoRGB function on this\
      \ page, if Sat == 0 (Achromatic case) will the result not turn out with no colours\
      \ at all? Look at the code, at the end of it the local variables R G B are applied\
      \ to C.R, C.G and C.B but if Sat == 0 then the R G B variables are not modifed?</p>\n\
      <p>I've changed the code a bit to 'fix' that</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:HLS_To_RGB_Conversion?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:RGB_To_HLS_Conversion\" title=\"\
      Legacy:RGB To HLS Conversion\">RGB To HLS Conversion</a></li>\n<li><a href=\"\
      /Legacy:Color_Operators\" title=\"Legacy:Color Operators\">Color Operators</a></li>\n\
      <li><a href=\"/Legacy:Open_Source\" title=\"Legacy:Open Source\">Open Source</a>\
      \ – questionable, see quote at the top of this page?</li>\n</ul>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.157 seconds\nReal time usage: 0.163 seconds\n\
      Preprocessor visited node count: 54/1000000\nPreprocessor generated node count:\
      \ 145/1000000\nPost‐expand include size: 604/2097152 bytes\nTemplate argument\
      \ size: 254/2097152 bytes\nHighest expansion depth: 3/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    5.762      1 - -total\n100.00%    5.762      1 - Template:Innerbox\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1407-0!*!0!!*!*!*\
      \ and timestamp 20221117201130 and revision id 3561\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Color Operators"
  - ns: 100
    exists: true
    name: "Legacy:RGB To HLS Conversion"
  - ns: 100
    exists: true
    name: "Legacy:Sourced Player Shadows"
  - ns: 100
    exists: true
    name: "Legacy:Open Source"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://plaza27.mbn.or.jp/~satomii/design/win32/hls2rgb.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "1"
    index: "1"
    fromtitle: "Legacy:HLS_To_RGB_Conversion"
    byteoffset: 5479
    anchor: "Comments"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:HLS_To_RGB_Conversion"
    byteoffset: 7154
    anchor: "Related_Topics"
  displaytitle: "Legacy:HLS To RGB Conversion"
  iwlinks: []
  wikitext:
    text: "This set of functions can convert HLS values to RGB.  hls2rgb takes the\
      \ byte values of Hue, Luminosity, and Saturation and returns the Color it represents.\
      \  (HueToRGB is a support function for the main conversion.)\n\nVery liberally\
      \ adapted from http://plaza27.mbn.or.jp/~satomii/design/win32/hls2rgb.html\n\
      \n{{innerbox|'''How to convert HLS value to RGB value?'''\n\nThis is an useful\
      \ function extracted from Microsoft's old sample code, modified a little by\
      \ Rei for her own product. Note that this code is copyrighted to Microsoft Corporation.\n\
      \n:''Quoted from that page.''\n\n}}\n\n<uscript>\nconst HLSMAX = 240;\nconst\
      \ RGBMAX = 255;\n\n\nfinal simulated function float HueToRGB(float n1, float\
      \ n2, float hue)\n{\n\tif ( hue < 0 ) hue += HLSMAX;\n\tif ( hue > HLSMAX )\
      \ hue -= HLSMAX;\n\n\t/* return r,g, or b value from this tridrant */\n\tif\
      \ ( hue < (HLSMAX/6) )\n\t\treturn ( n1 + (((n2-n1)*hue + (HLSMAX/12))/(HLSMAX/6))\
      \ );\n\tif ( hue < (HLSMAX/2) )\n\t\treturn n2;\n\tif ( hue < ((HLSMAX*2)/3)\
      \ )\n\t\treturn ( n1 + (((n2-n1)*(((HLSMAX*2)/3)-hue) + (HLSMAX/12))/(HLSMAX/6))\
      \ );\n\telse\n\t\treturn n1;\n}\n\n\nfinal simulated function Color hls2rgb(byte\
      \ hue, byte lum, byte sat)\n{\n\tlocal Color C;\n\tlocal float Magic1, Magic2;\n\
      \tlocal int R,G,B;\n\n\tif ( sat==0)\n\t{     /* achromatic case */\n\t\tC.R\
      \ = (lum*RGBMAX) / HLSMAX;\n\t\tC.G = C.R;\n\t\tC.B = C.R;\n\n\t\t/* Small fix\
      \ */\n\t\tR = C.R;\n\t\tG = C.G;\n\t\tB = C.B;\n\t}\n\telse\n\t{       /* chromatic\
      \ case */\n\t\t/* set up magic numbers */\n\t\tif (lum <= (HLSMAX/2))\n\t\t\t\
      Magic2 = (lum*(HLSMAX+sat)+(HLSMAX/2)) / HLSMAX;\n\t\telse\n\t\t\tMagic2 = lum+sat\
      \ - ((lum*sat)+(HLSMAX/2)) / HLSMAX;\n\n\t\tMagic1 = 2*lum - Magic2;\n\n\t\t\
      /* get RGB, change units from HLSMAX to RGBMAX */\n\t\tR = (HueToRGB(Magic1,\
      \ Magic2, hue+(HLSMAX/3))\n\t\t\t\t* RGBMAX + (HLSMAX/2)) / HLSMAX;\n\t\tG =\
      \ (HueToRGB(Magic1, Magic2, hue)\n\t\t\t\t* RGBMAX + (HLSMAX/2)) / HLSMAX;\n\
      \t\tB = (HueToRGB(Magic1, Magic2, hue-(HLSMAX/3))\n\t\t\t\t* RGBMAX + (HLSMAX/2))\
      \ / HLSMAX;\n\t}\n\n\tC.R = R;\n\tC.G = G;\n\tC.B = B;\n\tC.A = 255;\n\treturn\
      \ C;\n}\n</uscript>\n\n<uscript>\n// ============================================================================\n\
      // HLStoRGB\n//\n// Converts the given HLS color value to its RGB equivalent\
      \ and returns it.\n//\n//   H   Hue          from 0 (red) over 80 (green) and\
      \ 160 (blue) to 240 (red)\n//   L   Lightness    from 0 (black) over 120 (full\
      \ color) to 240 (white)\n//   S   Saturation   from 0 (gray) to 240 (full color)\n\
      //\n// Due to its use of the color scaling operator this function expects to\
      \ be\n// implemented in an Actor subclass.\n// ============================================================================\n\
      \nstatic function Color HLStoRGB(int H, int L, int S) {\n\n  local int OffsetLightness;\n\
      \  local int OffsetSaturation;\n  local Color Color;\n  \n  if (H < 0) H = (240\
      \ - H) % 240;\n        else H =        H  % 240;\n\n       if (H <  80) Color.R\
      \ = Min(255, 255 * (80 - H)  / 40);\n  else if (H > 160) Color.R = Min(255,\
      \ 255 * (H - 160) / 40);\n  \n  if (H < 160) Color.G = Min(255, 255 * (80 -\
      \ Abs(H -  80)) / 40);\n  if (H >  80) Color.B = Min(255, 255 * (80 - Abs(H\
      \ - 160)) / 40);\n  \n  if (S < 240) {\n    Color = Color * (float(S) / 240);\n\
      \    OffsetSaturation = 128 * (240 - S) / 240;\n    Color.R += OffsetSaturation;\n\
      \    Color.G += OffsetSaturation;\n    Color.B += OffsetSaturation;\n    }\n\
      \n  L = Min(240, L);\n  Color = Color * ((120 - Abs(L - 120)) / 120);\n\n  if\
      \ (L > 120) {\n    OffsetLightness = 256 * (L - 120) / 120;\n    Color.R +=\
      \ OffsetLightness;\n    Color.G += OffsetLightness;\n    Color.B += OffsetLightness;\n\
      \    }\n\n  return Color;\n  }\n</uscript>\n\n'''UArch''' slight modification\
      \ to the above script\n\nok changed it now, im using this custom version for\
      \ a script im doing\n\ninput HLS values range from 0-255, output vector with\
      \ ranges 0-1 x=R y=G z=B\n\n<uscript>\nsimulated final function vector HLStoRGB(float\
      \ H,float L,float S)\n{\n\tlocal float OffsetLightness;\n\tlocal float OffsetSaturation;\n\
      \tlocal vector cout;\n\n\tH = fclamp(H,0,255);\n\tL = fclamp(L,0,255);\n\tS\
      \ = fclamp(S,0,255);\n\tS = 255 - S;\n\n\tif(H < 85)\n\t\tcout.x = fMin(1, (85\
      \ - H)  / 42.5);\n\n\telse if(H > 170)\n\t\tcout.x = fMin(1, (H - 170) / 42.5);\n\
      \n\tif (H < 170)\n\t\tcout.y = fMin(1, (85 - Abs(H -  85)) / 42.5);\n\n\tif\
      \ (H > 85)\n\t\tcout.z = fMin(1, (85 - Abs(H - 170)) / 42.5);\n\n\tif (S < 255)\n\
      \t{\n\t\tcout = cout * (S / 255);\n\t\tOffsetSaturation = /*128 **/ (255 - S)\
      \ / 255;\n\t\tcout.x += OffsetSaturation;\n\t\tcout.y += OffsetSaturation;\n\
      \t\tcout.z += OffsetSaturation;\n\t}\n\n\tcout = cout * ((255 - Abs(L - 255))\
      \ / 255);\n\n\treturn cout;\n}\n</uscript>\n\nHere's what [[Legacy:Sourced Player\
      \ Shadows|Sourced Player Shadows]] uses to determine the light color when casting\
      \ colored shadows.  It's based on direct measurements of the color of white\
      \ walls in a zone with various ambient colors set.  You'll have to add your\
      \ own code to scale for light brightness.  This isn't anything like the scientifically\
      \ correct way to do the conversion, but my guess is they were just kinda guessing\
      \ when they wrote it the first time.\n\n<uscript>\n// Convert the color (not\
      \ brightness) of an Unreal light to RGB values from 0 to 1\n// inputs are float\
      \ so I don't have to worry about casting them.\nsimulated function Chroma2RGB(float\
      \ hue, float saturation,\n                     out float r, out float g, out\
      \ float b) {\n  hue /= 85;\n  if (hue <= 1)      { g = hue  ; r = 1-g; b = 0;}\n\
      \  else if (hue <= 2) { b = hue-1; g = 1-b; r = 0;}\n  else               {\
      \ r = hue-2; b = 1-r; g = 0;}\n  saturation = FClamp(saturation/255,0,1);\n\
      \  r = lerp(saturation,r,1);\n  g = lerp(saturation,g,1);\n  b = lerp(saturation,b,1);\n\
      }\n\n</uscript>\n\n==Comments==\n\n'''capt.k:'''  HLSMAX and RGBMAX are variables\
      \ (which can obviously be hard-coded into the script) because I wasn't sure\
      \ at the time of writing what values would be appropriate.  The UEd color picker\
      \ uses 240 as the max for HLS values, but the slider has 255.\n\n'''Wormbo:'''\
      \ Actor.LightSaturation goes from 0 to 255, where 0 means full saturation and\
      \ 255 indicates a pure grey color. LightHue also goes from 0 to 255 and LightBrightness\
      \ is an unlimited float value. The color picker in UEd is somwhat useless for\
      \ light colors, except for the hue value.\n\n'''Mychaeel:''' Since in Windows\
      \ the \"saturation\" property usually goes from 0 for \"no saturation\" (grayscale)\
      \ to 255 for \"full saturation\" (full color), that could be the reason that\
      \ the algorithm posted above doesn't work here without adaptation.\n\n'''Mychaeel:'''\
      \ I've posted an alternative implementation created from scratch that also uses\
      \ Windows' HLS definition (see comment header).  If Unreal's really differs\
      \ from it, adapt the parameters before passing them to that function.\n\nPlease\
      \ test it.  If it works as advertised, let's get rid of the first Microsoft-derived\
      \ implementation (which is longer and not designed for UnrealScript).\n\n'''inio:'''\
      \ Added what I came up with for [[Legacy:Sourced Player Shadows|Sourced Player\
      \ Shadows]].\n\n'''Sixpack-Shambler''' Am I wrong or in the first HLStoRGB function\
      \ on this page, if Sat == 0 (Achromatic case) will the result not turn out with\
      \ no colours at all? Look at the code, at the end of it the local variables\
      \ R G B are applied to C.R, C.G and C.B but if Sat == 0  then the R G B variables\
      \ are not modifed?\n\nI've changed the code a bit to 'fix' that\n\n==Related\
      \ Topics==\n* [[Legacy:RGB To HLS Conversion|RGB To HLS Conversion]]\n* [[Legacy:Color\
      \ Operators|Color Operators]]\n* [[Legacy:Open Source|Open Source]] &ndash;\
      \ questionable, see quote at the top of this page?"
  properties: []
  revId: 3561
name: "Legacy:HLS To RGB Conversion"
revision:
  revid: 3561
  parentid: 3563
  user: "82-43-89-237.cable.ubr08.croy.blueyonder.co.uk"
  timestamp: 1152521545.000000000
  comment: "*"
timestamp: 1668764765.662474000
