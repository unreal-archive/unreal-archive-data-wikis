---
parse:
  title: "Legacy:Making Glass Break"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Exploding_Glass..._What.3F\">Exploding\
      \ Glass... What?</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Glass_Break?section=1\" title=\"Edit\
      \ section: Exploding Glass... What?\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>You can simulate real exploding glass in UnrealEd\
      \ very easily. I will explain this step by step. It is a lot like exploding\
      \ walls.</p>\n<p><b>Note:</b> The BreakingGlass actor used in this guide is\
      \ only available in UT. Starting with UT2003 <a href=\"/Legacy:Emitter\" title=\"\
      Legacy:Emitter\">Emitters</a> can be used instead to create far better glass\
      \ breaking effects. See the <a href=\"/Legacy:Breaking_Glass_UT2003\" title=\"\
      Legacy:Breaking Glass UT2003\">Breaking Glass UT2003</a> for that.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Show_Me.21\">Show Me!</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Making_Glass_Break?section=2\"\
      \ title=\"Edit section: Show Me!\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ol>\n<li>Find a place you want your glass to go. (Hopefully\
      \ a windowframe)</li>\n</ol>\n<ol>\n<li><a href=\"/Legacy:Create_A_Mover\" title=\"\
      Legacy:Create A Mover\">Create a mover</a> that is 2 units thick and 2 units\
      \ thinner than your area you wish to put it in. Set its key 1 to outside the\
      \ level and key 0 in its normal position.<br />\nThe minus 2 units of glass\
      \ is used to avoid <a href=\"/Legacy:BSP_Hole\" title=\"Legacy:BSP Hole\">BSP\
      \ holes</a> when you can see through the edges of the glass. (A lot of mappers\
      \ forget this and it shows up)</li>\n</ol>\n<ol>\n<li>Texture the mover with\
      \ something glassish. There is good textures in the Coret package. Make sure\
      \ you set it to translucent in the <a href=\"/Legacy:Surface_Flags_(UT)\" title=\"\
      Legacy:Surface Flags (UT)\">Surface Flags (UT)</a>.</li>\n</ol>\n<ol>\n<li><a\
      \ href=\"/Legacy:Add_An_Actor\" title=\"Legacy:Add An Actor\">Add an Actor</a>\
      \ &gt;&gt; Effects &gt;&gt; ExplodingWall &gt;&gt; <a href=\"/Legacy:BreakingGlass\"\
      \ title=\"Legacy:BreakingGlass\" class=\"mw-redirect\">BreakingGlass</a> in\
      \ the middle of your glass mover. For \"respawning\" glass you should use the\
      \ custom <a href=\"/Legacy:RetriggerableBreakingGlass\" title=\"Legacy:RetriggerableBreakingGlass\"\
      >RetriggerableBreakingGlass</a> actor instead.</li>\n</ol>\n<ol>\n<li>Set the\
      \ mover's <a href=\"/Legacy:Event\" title=\"Legacy:Event\">event</a> to match\
      \ the BreakingGlass actor's <a href=\"/Legacy:Tag\" title=\"Legacy:Tag\">tag</a>,\
      \ e.g. 'glass'.</li>\n</ol>\n<ol>\n<li><a href=\"/Legacy:Set_The_Following_Properties\"\
      \ title=\"Legacy:Set The Following Properties\">Set the following properties</a>\
      \ of the mover:\n<ul>\n<li>Mover -&gt; bDamageTriggered = True</li>\n<li>Mover\
      \ -&gt; bTriggerOnlyOnce = True (False for respawning glass)</li>\n<li>Mover\
      \ -&gt; DamageThreshold = 1</li>\n<li>Mover -&gt; MoveTime = 0</li>\n<li>Object\
      \ -&gt; <a href=\"/Legacy:InitialState\" title=\"Legacy:InitialState\">InitialState</a>\
      \ = TriggerToggle (for one-shot breaking)<br />\nObject -&gt; <a href=\"/Legacy:InitialState\"\
      \ title=\"Legacy:InitialState\">InitialState</a> = TriggerOpenedTime (for respawning\
      \ glass)</li>\n<li>Mover -&gt; StayOpenTime = 30-60 (only for respawning glass,\
      \ number of seconds to wait after breaking)</li>\n</ul>\n</li>\n</ol>\n<ol>\n\
      <li><a href=\"/Legacy:Set_The_Following_Properties\" title=\"Legacy:Set The\
      \ Following Properties\">Set the following properties</a> of the BreakingGlass\
      \ actor:\n<ul>\n<li>Collision-&gt; bCollideActors = False (this makes sure projectiles\
      \ really hit the glass mover, not the BreakingGlass actor)</li>\n<li>Effects\
      \ -&gt; bOnlyTriggerable = True</li>\n<li>ExplodingWall -&gt; bTranslucentGlass\
      \ = True</li>\n</ul>\n</li>\n</ol>\n<p>Alright so you're done now. When you\
      \ shoot the glass mover with anything that does over 1 damage (basically everything)\
      \ then it will instantly move out of the level and trigger the actor to display\
      \ glass shattering and making noise.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Potential_Problems\">Potential Problems</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Making_Glass_Break?section=3\"\
      \ title=\"Edit section: Potential Problems\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>Exploding projectiles not only break the window\
      \ they hit, but also others nearby&#160;</dt>\n<dd>Make sure the glass mover's\
      \ pivot point is right in its center. Also, if you failed to disable the BreakingGlass\
      \ actor's collision, the projectile's explosion center might be far enough out\
      \ from the wall to \"see\" other glass movers as well.</dd>\n</dl>\n<dl>\n<dt>For\
      \ \"respawning\" glass the breaking effect only plays once&#160;</dt>\n<dd>Use\
      \ the custom <a href=\"/Legacy:RetriggerableBreakingGlass\" title=\"Legacy:RetriggerableBreakingGlass\"\
      >RetriggerableBreakingGlass</a> class instead of <a href=\"/Legacy:BreakingGlass\"\
      \ title=\"Legacy:BreakingGlass\" class=\"mw-redirect\">BreakingGlass</a>.</dd>\n\
      </dl>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.025 seconds\nReal time\
      \ usage: 0.052 seconds\nPreprocessor visited node count: 14/1000000\nPreprocessor\
      \ generated node count: 36/1000000\nPost‐expand include size: 36/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:1844-0!*!0!!*!*!* and timestamp\
      \ 20221118015857 and revision id 4527\n -->\n"
  categories:
  - sortkey: "Making Glass Break"
    name: "Legacy_Tutorial"
  - sortkey: "Making Glass Break"
    name: "Legacy_Mapping"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Emitter"
  - ns: 100
    exists: true
    name: "Legacy:RetriggerableBreakingGlass"
  - ns: 100
    exists: true
    name: "Legacy:Set The Following Properties"
  - ns: 100
    exists: true
    name: "Legacy:Event"
  - ns: 100
    exists: true
    name: "Legacy:Add An Actor"
  - ns: 100
    exists: true
    name: "Legacy:InitialState"
  - ns: 100
    exists: true
    name: "Legacy:Breaking Glass UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Surface Flags (UT)"
  - ns: 100
    exists: true
    name: "Legacy:BreakingGlass"
  - ns: 100
    exists: true
    name: "Legacy:BSP Hole"
  - ns: 100
    exists: true
    name: "Legacy:Tag"
  - ns: 100
    exists: true
    name: "Legacy:Create A Mover"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Exploding Glass... What?"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Making_Glass_Break"
    byteoffset: 0
    anchor: "Exploding_Glass..._What.3F"
  - toclevel: 1
    level: "2"
    line: "Show Me!"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Making_Glass_Break"
    byteoffset: 431
    anchor: "Show_Me.21"
  - toclevel: 1
    level: "2"
    line: "Potential Problems"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Making_Glass_Break"
    byteoffset: 2527
    anchor: "Potential_Problems"
  displaytitle: "Legacy:Making Glass Break"
  iwlinks: []
  wikitext:
    text: "==Exploding Glass... What? ==\n\nYou can simulate real exploding glass\
      \ in UnrealEd very easily. I will explain this step by step. It is a lot like\
      \ exploding walls.\n\n'''Note:''' The BreakingGlass actor used in this guide\
      \ is only available in UT. Starting with UT2003 [[Legacy:Emitter|Emitter]]s\
      \ can be used instead to create far better glass breaking effects. See the [[Legacy:Breaking\
      \ Glass UT2003|Breaking Glass UT2003]] for that.\n\n==Show Me! ==\n\n# Find\
      \ a place you want your glass to go. (Hopefully a windowframe)\n\n# [[Legacy:Create\
      \ A Mover|Create a mover]] that is 2 units thick and 2 units thinner than your\
      \ area you wish to put it in. Set its key 1 to outside the level and key 0 in\
      \ its normal position.<br />The minus 2 units of glass is used to avoid [[Legacy:BSP\
      \ Hole|BSP hole]]s when you can see through the edges of the glass. (A lot of\
      \ mappers forget this and it shows up)\n\n# Texture the mover with something\
      \ glassish. There is good textures in the Coret package. Make sure you set it\
      \ to translucent in the [[Legacy:Surface Flags (UT)|Surface Flags (UT)]].\n\n\
      # [[Legacy:Add An Actor|Add an Actor]] >> Effects >> ExplodingWall >> [[Legacy:BreakingGlass|BreakingGlass]]\
      \ in the middle of your glass mover. For \"respawning\" glass you should use\
      \ the custom [[Legacy:RetriggerableBreakingGlass|RetriggerableBreakingGlass]]\
      \ actor instead.\n\n# Set the mover's [[Legacy:Event|event]] to match the BreakingGlass\
      \ actor's [[Legacy:Tag|tag]], e.g. 'glass'.\n\n# [[Legacy:Set The Following\
      \ Properties|Set the following properties]] of the mover: \n#* Mover -> bDamageTriggered\
      \ = True\n#* Mover -> bTriggerOnlyOnce = True (False for respawning glass)\n\
      #* Mover -> DamageThreshold = 1\n#* Mover -> MoveTime = 0\n#* Object -> [[Legacy:InitialState|InitialState]]\
      \ = TriggerToggle (for one-shot breaking)<br />Object -> [[Legacy:InitialState|InitialState]]\
      \ = TriggerOpenedTime (for respawning glass)\n#* Mover -> StayOpenTime = 30-60\
      \ (only for respawning glass, number of seconds to wait after breaking)\n\n\
      # [[Legacy:Set The Following Properties|Set the following properties]] of the\
      \ BreakingGlass actor: \n#* Collision-> bCollideActors = False (this makes sure\
      \ projectiles really hit the glass mover, not the BreakingGlass actor)\n#* Effects\
      \ -> bOnlyTriggerable = True\n#* ExplodingWall -> bTranslucentGlass = True\n\
      \nAlright so you're done now. When you shoot the glass mover with anything that\
      \ does over 1 damage (basically everything) then it will instantly move out\
      \ of the level and trigger the actor to display glass shattering and making\
      \ noise.\n\n==Potential Problems==\n; Exploding projectiles not only break the\
      \ window they hit, but also others nearby : Make sure the glass mover's pivot\
      \ point is right in its center. Also, if you failed to disable the BreakingGlass\
      \ actor's collision, the projectile's explosion center might be far enough out\
      \ from the wall to \"see\" other glass movers as well.\n\n; For \"respawning\"\
      \ glass the breaking effect only plays once : Use the custom [[Legacy:RetriggerableBreakingGlass|RetriggerableBreakingGlass]]\
      \ class instead of [[Legacy:BreakingGlass|BreakingGlass]].\n\n[[Category:Legacy\
      \ Mapping|{{PAGENAME}}]]\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 4527
name: "Legacy:Making Glass Break"
revision:
  revid: 4527
  parentid: 4529
  user: "Wormbo"
  timestamp: 1136135932.000000000
  comment: "*"
timestamp: 1668761526.947223000
