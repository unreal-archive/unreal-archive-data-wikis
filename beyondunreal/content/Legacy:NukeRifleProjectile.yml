---
parse:
  title: "Legacy:NukeRifleProjectile"
  text:
    text: "<h3><span class=\"mw-headline\" id=\"NukeRifles\">NukeRifles</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NukeRifleProjectile?section=1\" title=\"Edit section:\
      \ NukeRifles\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <h4><span class=\"mw-headline\" id=\"NukeRifleProjectile\">NukeRifleProjectile</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NukeRifleProjectile?section=2\" title=\"Edit section:\
      \ NukeRifleProjectile\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// Nukerifle projectile, gets spawned instantly on whatever\
      \ gets hit</span>\n<span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> NukeRifleProjectile <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Projectile</span>;\n \n \n<span class=\"co1\">// camera\
      \ shakes //</span>\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">vector</span> ShakeRotMag;    \
      \       <span class=\"co1\">// how far to rot view</span>\n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">vector</span> ShakeRotRate;          <span class=\"co1\">// how fast to\
      \ rot view</span>\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span>  ShakeRotTime;   \
      \       <span class=\"co1\">// how much time to rot the instigator's view</span>\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">vector</span> ShakeOffsetMag;        <span class=\"\
      co1\">// max view offset vertically</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">vector</span>\
      \ ShakeOffsetRate;       <span class=\"co1\">// how fast to offset view vertically</span>\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>  ShakeOffsetTime;       <span class=\"\
      co1\">// how much time to offset view</span>\n<span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">bool</span> bExploded;\n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw4\">Destroyed</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> \n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw6\">Super</span>.<span class=\"kw4\">Destroyed</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">PostBeginPlay</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\"\
      >local</span> <span class=\"kw5\">vector</span> Dir;\n \n\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> bDeleteMe <span class=\"sy0\">||</span>\
      \ <span class=\"kw3\">IsInState</span><span class=\"br0\">(</span><span class=\"\
      st0\">'Dying'</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw2\">return</span>;\n \n\tDir <span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">vector</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Rotation</span><span class=\"br0\">)</span>;\n\t<span class=\"kw7\">Velocity</span>\
      \ <span class=\"sy0\">=</span> speed <span class=\"sy0\">*</span> Dir;\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">event</span> <span class=\"\
      kw5\">bool</span> <span class=\"kw4\">EncroachingOn</span><span class=\"br0\"\
      >(</span> <span class=\"kw9\">actor</span> Other <span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> Other.<span class=\"me0\">bWorldGeometry</span> <span class=\"\
      br0\">)</span>\n\t\t<span class=\"kw2\">return</span> <span class=\"kw6\">true</span>;\n\
      \ \n\t<span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      <span class=\"br0\">}</span>\n<span class=\"kw1\">simulated</span> <span class=\"\
      kw1\">function</span> ProcessTouch <span class=\"br0\">(</span><span class=\"\
      kw9\">Actor</span> Other, <span class=\"kw5\">Vector</span> HitLocation<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> Other <span class=\"sy0\">!=</span>\
      \ <span class=\"kw7\">instigator</span> <span class=\"br0\">)</span> \n\t\t\
      Explode<span class=\"br0\">(</span>HitLocation,<span class=\"kw3\">Vect</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> Explode<span class=\"br0\">(</span><span class=\"\
      kw5\">vector</span> HitLocation, <span class=\"kw5\">vector</span> HitNormal<span\
      \ class=\"br0\">)</span> \n<span class=\"br0\">{</span>\n\tBlowUp<span class=\"\
      br0\">(</span>HitLocation<span class=\"br0\">)</span>;\n<span class=\"br0\"\
      >}</span>\n \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">PhysicsVolumeChange</span><span class=\"br0\">(</span>\
      \ <span class=\"kw9\">PhysicsVolume</span> <span class=\"kw9\">Volume</span>\
      \ <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> <span class=\"kw4\">Landed</span><span class=\"br0\">(</span>\
      \ <span class=\"kw5\">vector</span> HitNormal <span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\tBlowUp<span class=\"br0\">(</span><span class=\"\
      kw7\">Location</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">HitWall</span><span class=\"br0\">(</span><span class=\"\
      kw5\">vector</span> HitNormal, <span class=\"kw9\">actor</span> Wall<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\tBlowUp<span class=\"br0\">(</span><span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">function</span> <span class=\"kw4\">TakeDamage</span><span\
      \ class=\"br0\">(</span> <span class=\"kw5\">int</span> Damage, <span class=\"\
      kw9\">Pawn</span> instigatedBy, <span class=\"kw5\">Vector</span> hitlocation,\
      \ \n\t\t\t\t\t\t\t<span class=\"kw5\">Vector</span> momentum, class<span class=\"\
      sy0\">&lt;</span>DamageType<span class=\"sy0\">&gt;</span> <span class=\"kw9\"\
      >damageType</span><span class=\"br0\">)</span> \n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw2\">if</span> <span class=\"br0\">(</span> Damage <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\tBlowUp<span class=\"br0\">(</span><span\
      \ class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n\t<span class=\"\
      br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">event</span> <span class=\"kw4\">FellOutOfWorld</span><span\
      \ class=\"br0\">(</span>eKillZType KillType<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\tBlowUp<span class=\"br0\">(</span><span class=\"\
      kw7\">Location</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\t\
      \n \n<span class=\"kw1\">function</span> BlowUp<span class=\"br0\">(</span><span\
      \ class=\"kw5\">vector</span> HitLocation<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n    <span class=\"kw4\">Spawn</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'RedeemerExplosion'</span>,,,\
      \ HitLocation <span class=\"sy0\">-</span> <span class=\"nu0\">100</span> <span\
      \ class=\"sy0\">*</span> <span class=\"kw3\">Normal</span><span class=\"br0\"\
      >(</span><span class=\"kw7\">Velocity</span><span class=\"br0\">)</span>, <span\
      \ class=\"kw3\">Rot</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">16384</span>,<span class=\"nu0\">0</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n\t<span class=\"kw4\">MakeNoise</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"kw4\">SetPhysics</span><span class=\"br0\">(</span><span class=\"\
      kw7\">PHYS_None</span><span class=\"br0\">)</span>;\n\tbHidden <span class=\"\
      sy0\">=</span> <span class=\"kw6\">true</span>;\n    <span class=\"kw3\">GotoState</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'Dying'</span><span class=\"br0\"\
      >)</span>; \n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">state</span>\
      \ Dying\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">TakeDamage</span><span class=\"br0\">(</span> <span class=\"\
      kw5\">int</span> Damage, <span class=\"kw9\">Pawn</span> instigatedBy, <span\
      \ class=\"kw5\">Vector</span> hitlocation, \n\t\t\t\t\t\t\t<span class=\"kw5\"\
      >Vector</span> momentum, class<span class=\"sy0\">&lt;</span>DamageType<span\
      \ class=\"sy0\">&gt;</span> <span class=\"kw9\">damageType</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\n \n\
      \    <span class=\"kw1\">function</span> <span class=\"kw3\">BeginState</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"br0\"\
      >{</span>\n\t\tbHidden <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n\
      \t\t<span class=\"kw4\">SetPhysics</span><span class=\"br0\">(</span><span class=\"\
      kw7\">PHYS_None</span><span class=\"br0\">)</span>;\n\t\t<span class=\"kw4\"\
      >SetCollision</span><span class=\"br0\">(</span><span class=\"kw6\">false</span>,<span\
      \ class=\"kw6\">false</span>,<span class=\"kw6\">false</span><span class=\"\
      br0\">)</span>;\n\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ <span class=\"sy0\">!</span>bExploded <span class=\"br0\">)</span>\n\t\t<span\
      \ class=\"br0\">{</span>\n\t\t\t<span class=\"kw4\">Spawn</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'IonCore'</span>,,,\
      \ <span class=\"kw7\">Location</span>, <span class=\"kw7\">Rotation</span><span\
      \ class=\"br0\">)</span>;\n\t\t\tShakeView<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n\t\t<span class=\"br0\">}</span>\n\t\tInitialState\
      \ <span class=\"sy0\">=</span> <span class=\"st0\">'Dying'</span>;\n    <span\
      \ class=\"br0\">}</span>\n \n    <span class=\"kw1\">function</span> ShakeView<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"br0\"\
      >{</span>\n        <span class=\"kw1\">local</span> <span class=\"kw9\">Controller</span>\
      \ C;\n        <span class=\"kw1\">local</span> <span class=\"kw9\">PlayerController</span>\
      \ PC;\n        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span>\
      \ Dist, <span class=\"kw5\">Scale</span>;\n \n        <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span> C<span class=\"sy0\">=</span><span class=\"kw7\"\
      >Level</span>.<span class=\"me0\">ControllerList</span>; C<span class=\"sy0\"\
      >!=</span><span class=\"kw5\">None</span>; C<span class=\"sy0\">=</span>C.<span\
      \ class=\"me0\">NextController</span> <span class=\"br0\">)</span>\n       \
      \ <span class=\"br0\">{</span>\n            PC <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">PlayerController</span><span class=\"br0\">(</span>C<span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> PC <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> PC.<span class=\"me0\">ViewTarget</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span> <span class=\"\
      br0\">)</span>\n            <span class=\"br0\">{</span>\n                Dist\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">VSize</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Location</span> <span class=\"sy0\">-</span>\
      \ PC.<span class=\"me0\">ViewTarget</span>.<span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n                <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> Dist <span class=\"sy0\">&lt;</span> DamageRadius <span\
      \ class=\"sy0\">*</span> <span class=\"nu0\">2.0</span><span class=\"br0\">)</span>\n\
      \                <span class=\"br0\">{</span>\n                    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>Dist <span class=\"sy0\">&lt;</span>\
      \ DamageRadius<span class=\"br0\">)</span>\n                        <span class=\"\
      kw5\">Scale</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span>;\n\
      \                    <span class=\"kw2\">else</span>\n                     \
      \   <span class=\"kw5\">Scale</span> <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span>DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">2.0</span>\
      \ <span class=\"sy0\">-</span> Dist<span class=\"br0\">)</span> <span class=\"\
      sy0\">/</span> <span class=\"br0\">(</span>DamageRadius<span class=\"br0\">)</span>;\n\
      \                    C.<span class=\"me0\">ShakeView</span><span class=\"br0\"\
      >(</span>ShakeRotMag<span class=\"sy0\">*</span><span class=\"kw5\">Scale</span>,\
      \ ShakeRotRate, ShakeRotTime, ShakeOffsetMag<span class=\"sy0\">*</span><span\
      \ class=\"kw5\">Scale</span>, ShakeOffsetRate, ShakeOffsetTime<span class=\"\
      br0\">)</span>;\n                <span class=\"br0\">}</span>\n            <span\
      \ class=\"br0\">}</span>\n        <span class=\"br0\">}</span>\n    <span class=\"\
      br0\">}</span>\n \n<span class=\"kw2\">Begin</span>:\n    <span class=\"kw4\"\
      >PlaySound</span><span class=\"br0\">(</span><span class=\"kw5\">sound</span><span\
      \ class=\"st0\">'WeaponSounds.redeemer_explosionsound'</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span class=\"br0\"\
      >(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\"\
      >0.125</span>, MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage,\
      \ DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">0.300</span>,\
      \ MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.2</span><span class=\"br0\">)</span>;\n    <span class=\"\
      kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage, DamageRadius<span\
      \ class=\"sy0\">*</span><span class=\"nu0\">0.475</span>, MyDamageType, MomentumTransfer,\
      \ <span class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n    <span\
      \ class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0.2</span><span class=\"br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span\
      \ class=\"br0\">(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span\
      \ class=\"nu0\">0.650</span>, MyDamageType, MomentumTransfer, <span class=\"\
      kw7\">Location</span><span class=\"br0\">)</span>;\n    <span class=\"kw4\"\
      >Sleep</span><span class=\"br0\">(</span><span class=\"nu0\">0.2</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">HurtRadius</span><span class=\"\
      br0\">(</span>Damage, DamageRadius<span class=\"sy0\">*</span><span class=\"\
      nu0\">0.825</span>, MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw4\">Sleep</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.2</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw4\">HurtRadius</span><span class=\"br0\">(</span>Damage,\
      \ DamageRadius<span class=\"sy0\">*</span><span class=\"nu0\">1.000</span>,\
      \ MyDamageType, MomentumTransfer, <span class=\"kw7\">Location</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\"\
      >defaultproperties</span>\n<span class=\"br0\">{</span>\n    bNetTemporary<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>\n \n<span class=\"\
      co1\">//    DrawType=DT_StaticMesh</span>\n<span class=\"co1\">//    StaticMesh=StaticMesh'WeaponStaticMesh.RedeemerMissile'</span>\n\
      \    <span class=\"kw7\">DrawScale</span><span class=\"sy0\">=</span><span class=\"\
      nu0\">0.5</span>\n    AmbientGlow<span class=\"sy0\">=</span><span class=\"\
      nu0\">96</span>\n    bUnlit<span class=\"sy0\">=</span><span class=\"kw6\">false</span>\n\
      \ \n    bDynamicLight<span class=\"sy0\">=</span><span class=\"kw6\">true</span>\n\
      \    LightType<span class=\"sy0\">=</span>LT_Steady\n    LightEffect<span class=\"\
      sy0\">=</span>LE_QuadraticNonIncidence\n    LightBrightness<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>\n    LightHue<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">28</span>\n    LightRadius<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">6</span>\n \n    ForceType<span class=\"sy0\">=</span>FT_DragAlong\n\
      \    ForceScale<span class=\"sy0\">=</span><span class=\"nu0\">5.0</span>\n\
      \    ForceRadius<span class=\"sy0\">=</span><span class=\"nu0\">100.0</span>\n\
      \ \n    Damage<span class=\"sy0\">=</span><span class=\"nu0\">200.0</span>\n\
      \    DamageRadius<span class=\"sy0\">=</span><span class=\"nu0\">1500.0</span>\n\
      \    MomentumTransfer<span class=\"sy0\">=</span><span class=\"nu0\">100000</span>\n\
      \    MyDamageType<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'my_mod2.DamTypeNukeRifle'</span>\n \n \n    bCollideActors<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>\n    bCollideWorld<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>\n    <span class=\"\
      kw7\">CollisionHeight</span><span class=\"sy0\">=</span><span class=\"nu0\"\
      >12.0</span>\n    <span class=\"kw7\">CollisionRadius</span><span class=\"sy0\"\
      >=</span><span class=\"nu0\">12.0</span>\n \n    ShakeRotMag<span class=\"sy0\"\
      >=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span class=\"\
      nu0\">250</span><span class=\"br0\">)</span>\n    ShakeRotRate<span class=\"\
      sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">2500</span><span class=\"br0\">)</span>\n    ShakeRotTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">6</span>\n    ShakeOffsetMag<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">10</span><span class=\"br0\">)</span>\n    ShakeOffsetRate<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Z<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">200</span><span class=\"br0\">)</span>\n    ShakeOffsetTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">10</span>\n \n\tbProjTarget<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>\n    speed<span class=\"\
      sy0\">=</span><span class=\"nu0\">200</span>\n    MaxSpeed<span class=\"sy0\"\
      >=</span><span class=\"nu0\">500</span>\n \n    bBounce<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">false</span>\n    bFixedRotationDir<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">True</span>\n    <span class=\"kw7\">RotationRate</span><span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>Roll<span class=\"sy0\"\
      >=</span><span class=\"nu0\">50000</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"kw7\">DesiredRotation</span><span class=\"sy0\">=</span><span class=\"\
      br0\">(</span>Roll<span class=\"sy0\">=</span><span class=\"nu0\">30000</span><span\
      \ class=\"br0\">)</span>\n \n    <span class=\"kw7\">TransientSoundVolume</span><span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1.0</span>\n    <span class=\"kw7\"\
      >TransientSoundRadius</span><span class=\"sy0\">=</span><span class=\"nu0\"\
      >5000.0</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.096 seconds\nReal time usage: 0.786 seconds\n\
      Preprocessor visited node count: 9/1000000\nPreprocessor generated node count:\
      \ 32/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate argument size:\
      \ 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2282-0!*!*!!*!*!* and timestamp 20221118160854 and revision\
      \ id 5517\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "NukeRifles"
    number: "1"
    index: "1"
    fromtitle: "Legacy:NukeRifleProjectile"
    byteoffset: 0
    anchor: "NukeRifles"
  - toclevel: 2
    level: "4"
    line: "NukeRifleProjectile"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:NukeRifleProjectile"
    byteoffset: 19
    anchor: "NukeRifleProjectile"
  displaytitle: "Legacy:NukeRifleProjectile"
  iwlinks: []
  wikitext:
    text: "===NukeRifles ===\n\n====NukeRifleProjectile ====\n\n<uscript>\n//=============================================================================\n\
      // Nukerifle projectile, gets spawned instantly on whatever gets hit\n//=============================================================================\n\
      class NukeRifleProjectile extends Projectile;\n\n\n// camera shakes //\nvar()\
      \ vector ShakeRotMag;           // how far to rot view\nvar() vector ShakeRotRate;\
      \          // how fast to rot view\nvar() float  ShakeRotTime;          // how\
      \ much time to rot the instigator's view\nvar() vector ShakeOffsetMag;     \
      \   // max view offset vertically\nvar() vector ShakeOffsetRate;       // how\
      \ fast to offset view vertically\nvar() float  ShakeOffsetTime;       // how\
      \ much time to offset view\nvar bool bExploded;\n\nsimulated function Destroyed()\
      \ \n{\n\tSuper.Destroyed();\n}\n\nsimulated function PostBeginPlay()\n{\n\t\
      local vector Dir;\n\t\n\tif ( bDeleteMe || IsInState('Dying') )\n\t\treturn;\n\
      \t\t\n\tDir = vector(Rotation);\n\tVelocity = speed * Dir;\n}\n\nevent bool\
      \ EncroachingOn( actor Other )\n{\n\tif ( Other.bWorldGeometry )\n\t\treturn\
      \ true;\n\t\t\n\treturn false;\n}\nsimulated function ProcessTouch (Actor Other,\
      \ Vector HitLocation)\n{\n\tif ( Other != instigator ) \n\t\tExplode(HitLocation,Vect(0,0,1));\n\
      }\n\nsimulated function Explode(vector HitLocation, vector HitNormal) \n{\n\t\
      BlowUp(HitLocation);\n}\n\nsimulated function PhysicsVolumeChange( PhysicsVolume\
      \ Volume )\n{\n}\n\nsimulated function Landed( vector HitNormal )\n{\n\tBlowUp(Location);\n\
      }\n\nsimulated function HitWall(vector HitNormal, actor Wall)\n{\n\tBlowUp(Location);\n\
      }\n\nfunction TakeDamage( int Damage, Pawn instigatedBy, Vector hitlocation,\
      \ \n\t\t\t\t\t\t\tVector momentum, class<DamageType> damageType) \n{\n\tif (\
      \ Damage > 0 )\n\t{\n\t\tBlowUp(Location);\n\t}\n}\n\nsimulated event FellOutOfWorld(eKillZType\
      \ KillType)\n{\n\tBlowUp(Location);\n}\t\n\nfunction BlowUp(vector HitLocation)\n\
      {\n    Spawn(class'RedeemerExplosion',,, HitLocation - 100 * Normal(Velocity),\
      \ Rot(0,16384,0));\n\tMakeNoise(1.0);\n\tSetPhysics(PHYS_None);\n\tbHidden =\
      \ true;\n    GotoState('Dying'); \n}\n\nstate Dying\n{\n\tfunction TakeDamage(\
      \ int Damage, Pawn instigatedBy, Vector hitlocation, \n\t\t\t\t\t\t\tVector\
      \ momentum, class<DamageType> damageType) {}\n\t\t\t\t\t\t\t\n    function BeginState()\n\
      \    {\n\t\tbHidden = true;\n\t\tSetPhysics(PHYS_None);\n\t\tSetCollision(false,false,false);\n\
      \t\tif ( !bExploded )\n\t\t{\n\t\t\tSpawn(class'IonCore',,, Location, Rotation);\n\
      \t\t\tShakeView();\n\t\t}\n\t\tInitialState = 'Dying';\n    }\n\n    function\
      \ ShakeView()\n    {\n        local Controller C;\n        local PlayerController\
      \ PC;\n        local float Dist, Scale;\n\n        for ( C=Level.ControllerList;\
      \ C!=None; C=C.NextController )\n        {\n            PC = PlayerController(C);\n\
      \            if ( PC != None && PC.ViewTarget != None )\n            {\n   \
      \             Dist = VSize(Location - PC.ViewTarget.Location);\n           \
      \     if ( Dist < DamageRadius * 2.0)\n                {\n                 \
      \   if (Dist < DamageRadius)\n                        Scale = 1.0;\n       \
      \             else\n                        Scale = (DamageRadius*2.0 - Dist)\
      \ / (DamageRadius);\n                    C.ShakeView(ShakeRotMag*Scale, ShakeRotRate,\
      \ ShakeRotTime, ShakeOffsetMag*Scale, ShakeOffsetRate, ShakeOffsetTime);\n \
      \               }\n            }\n        }\n    }\n\nBegin:\n    PlaySound(sound'WeaponSounds.redeemer_explosionsound');\n\
      \    HurtRadius(Damage, DamageRadius*0.125, MyDamageType, MomentumTransfer,\
      \ Location);\n    Sleep(0.5);\n    HurtRadius(Damage, DamageRadius*0.300, MyDamageType,\
      \ MomentumTransfer, Location);\n    Sleep(0.2);\n    HurtRadius(Damage, DamageRadius*0.475,\
      \ MyDamageType, MomentumTransfer, Location);\n    Sleep(0.2);\n    HurtRadius(Damage,\
      \ DamageRadius*0.650, MyDamageType, MomentumTransfer, Location);\n    Sleep(0.2);\n\
      \    HurtRadius(Damage, DamageRadius*0.825, MyDamageType, MomentumTransfer,\
      \ Location);\n    Sleep(0.2);\n    HurtRadius(Damage, DamageRadius*1.000, MyDamageType,\
      \ MomentumTransfer, Location);\n    Destroy();\n}\n\ndefaultproperties\n{\n\
      \    bNetTemporary=false\n\n//    DrawType=DT_StaticMesh\n//    StaticMesh=StaticMesh'WeaponStaticMesh.RedeemerMissile'\n\
      \    DrawScale=0.5\n    AmbientGlow=96\n    bUnlit=false\n\n    bDynamicLight=true\n\
      \    LightType=LT_Steady\n    LightEffect=LE_QuadraticNonIncidence\n    LightBrightness=255\n\
      \    LightHue=28\n    LightRadius=6\n\n    ForceType=FT_DragAlong\n    ForceScale=5.0\n\
      \    ForceRadius=100.0\n\n    Damage=200.0\n    DamageRadius=1500.0\n    MomentumTransfer=100000\n\
      \    MyDamageType=class'my_mod2.DamTypeNukeRifle'\n\n\n    bCollideActors=true\n\
      \    bCollideWorld=true\n    CollisionHeight=12.0\n    CollisionRadius=12.0\n\
      \n    ShakeRotMag=(Z=250)\n    ShakeRotRate=(Z=2500)\n    ShakeRotTime=6\n \
      \   ShakeOffsetMag=(Z=10)\n    ShakeOffsetRate=(Z=200)\n    ShakeOffsetTime=10\n\
      \    \n\tbProjTarget=true\n    speed=200\n    MaxSpeed=500\n\n    bBounce=false\n\
      \    bFixedRotationDir=True\n    RotationRate=(Roll=50000)\n    DesiredRotation=(Roll=30000)\n\
      \    \n    TransientSoundVolume=1.0\n    TransientSoundRadius=5000.0\n}\n</uscript>"
  properties: []
  revId: 5517
name: "Legacy:NukeRifleProjectile"
revision:
  revid: 5517
  parentid: 0
  user: "Electric Mini"
  timestamp: 1041802512.000000000
  comment: "*"
timestamp: 1668787584.482650000
