---
parse:
  title: "Function call specifiers"
  text:
    text: "<p><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a> provides\
      \ two special keywords for calling <a href=\"/Functions\" title=\"Functions\"\
      >functions</a> that would otherwise not be accessible: <b>Super</b> for calling\
      \ overridden functions and <b>Global</b> for calling non-state functions. However,\
      \ these function call specifiers are only allowed for calling functions on the\
      \ same instance (or class for static functions) as the code calling the functions.</p>\n\
      <p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Super\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Super</span></a>\n<ul>\n\
      <li class=\"toclevel-2 tocsection-2\"><a href=\"#Simple_version:_Direct_parent_state_or_class\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Simple version:\
      \ Direct parent state or class</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#Advanced_version:_Indirect_parent_class\"><span class=\"tocnumber\"\
      >1.2</span> <span class=\"toctext\">Advanced version: Indirect parent class</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#Global\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">Global</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-5\"><a href=\"#Examples\"><span class=\"tocnumber\"\
      >3</span> <span class=\"toctext\">Examples</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#Case_1:_No_state\"><span class=\"tocnumber\">3.1</span>\
      \ <span class=\"toctext\">Case 1: No state</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-7\"><a href=\"#Case_2:_State_X\"><span class=\"tocnumber\">3.2</span>\
      \ <span class=\"toctext\">Case 2: State X</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-8\"><a href=\"#Case_3:_State_Y\"><span class=\"tocnumber\">3.3</span>\
      \ <span class=\"toctext\">Case 3: State Y</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-9\"><a href=\"#Case_4:_Code_in_state_X_after_switch_to_state_Y\"\
      ><span class=\"tocnumber\">3.4</span> <span class=\"toctext\">Case 4: Code in\
      \ state X after switch to state Y</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n\
      <p></p>\n<h2><span class=\"mw-headline\" id=\"Super\">Super</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Function_call_specifiers?section=1\"\
      \ title=\"Edit section: Super\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The keyword <b>Super</b> is used to call an overridden\
      \ version of a function on the same instance or class.</p>\n<h3><span class=\"\
      mw-headline\" id=\"Simple_version:_Direct_parent_state_or_class\">Simple version:\
      \ Direct parent state or class</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Function_call_specifiers?section=2\"\
      \ title=\"Edit section: Simple version: Direct parent state or class\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>Syntax:</p>\n<pre><b>Super.</b>functionname<b>(</b><i>[parameters]</i><b>)</b>\n\
      </pre>\n<p>The simple version uses the parent context of the current state or\
      \ class to call the function with the specified name. The parent context of\
      \ a state is either the parent state or, if the state doesn't extend any other\
      \ state, the state's containing class. The parent context of a class is its\
      \ parent class.</p>\n<p><b>Note:</b> If the current context doesn't actually\
      \ override the function called through <b>Super</b> this call will almost be\
      \ the same as calling the function directly.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Advanced_version:_Indirect_parent_class\">Advanced version: Indirect\
      \ parent class</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Function_call_specifiers?section=3\" title=\"Edit section:\
      \ Advanced version: Indirect parent class\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Syntax:</p>\n<pre><b>Super(</b>classname<b>).</b>functionname<b>(</b><i>[parameters]</i><b>)</b>\n\
      </pre>\n<p>The advanced version looks for a class with the specified name. If\
      \ the call originated in state code or a state function, it looks for a state\
      \ with the same name in that class and uses that as context for calling the\
      \ function. If no such state is found, the class is used as context.</p>\n<p><b>Note:</b>\
      \ This behavior does not play nice with states extending another state with\
      \ a different name. See <a href=\"#Examples\">examples</a> below.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Global\">Global</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Function_call_specifiers?section=4\"\
      \ title=\"Edit section: Global\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The keyword <b>Global</b> is used to call the most-derived\
      \ non-state version of a function. If the instance is not in any state, this\
      \ has the same effect as calling that function directly.</p>\n<p>Syntax:</p>\n\
      <pre><b>Global.</b>functionname<b>(</b><i>[parameters]</i><b>)</b>\n</pre>\n\
      <h2><span class=\"mw-headline\" id=\"Examples\">Examples</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Function_call_specifiers?section=5\"\
      \ title=\"Edit section: Examples\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>For this example we'll use two classes. The parent\
      \ class A:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n\
      <div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\"\
      >class</span> A <span class=\"kw1\">extends</span> <span class=\"kw9\">Actor</span>;\n\
      \ \n<span class=\"kw1\">function</span> F<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>; <span class=\"co1\">// doesn't override anything</span>\n \n\
      <span class=\"kw1\">state</span> X\n<span class=\"br0\">{</span>\n  <span class=\"\
      kw1\">function</span> F<span class=\"br0\">(</span><span class=\"br0\">)</span>;\
      \ <span class=\"co1\">// overrides A.F</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>...and the derived class B:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> B <span class=\"kw1\">extends</span>\
      \ A;\n \n<span class=\"kw1\">function</span> F<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>; <span class=\"co1\">// overrides A.F</span>\n \n<span\
      \ class=\"kw1\">state</span> X <span class=\"co1\">// extends A.X</span>\n<span\
      \ class=\"br0\">{</span>\n  <span class=\"kw1\">function</span> F<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>; <span class=\"co1\">// overrides\
      \ A.X.F</span>\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">state</span>\
      \ Y <span class=\"kw1\">extends</span> X\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw1\">function</span> F<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>; <span class=\"co1\">// overrrides B.X.F</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>Now we have an instance of class B that\
      \ wants to call various implementations of function F():</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\">F<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      Global.<span class=\"me0\">F</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n<span class=\"kw6\">Super</span>.<span class=\"me0\">F</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"kw6\">Super</span><span\
      \ class=\"br0\">(</span>A<span class=\"br0\">)</span>.<span class=\"me0\">F</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;</pre></div>\n</div>\n\
      <p>Which implementation those four lines will actually call depends on where\
      \ exactly they are in class B.</p>\n<h3><span class=\"mw-headline\" id=\"Case_1:_No_state\"\
      >Case 1: No state</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Function_call_specifiers?section=6\" title=\"Edit section:\
      \ Case 1: No state\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>If the instance of B is not in any state, the following implementations are\
      \ called:</p>\n<ol>\n<li>B.F()</li>\n<li>B.F()</li>\n<li>A.F()</li>\n<li>A.F()</li>\n\
      </ol>\n<p>No surprises here.</p>\n<h3><span class=\"mw-headline\" id=\"Case_2:_State_X\"\
      >Case 2: State X</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Function_call_specifiers?section=7\" title=\"Edit section:\
      \ Case 2: State X\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>If our B instance is in state X, the following implementations are called:</p>\n\
      <ol>\n<li>B.X.F()</li>\n<li>B.F()</li>\n<li>A.X.F()</li>\n<li>A.X.F()</li>\n\
      </ol>\n<p>Just as expected.</p>\n<h3><span class=\"mw-headline\" id=\"Case_3:_State_Y\"\
      >Case 3: State Y</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Function_call_specifiers?section=8\" title=\"Edit section:\
      \ Case 3: State Y\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>If the B instance happens to be in state Y, things look a bit different:</p>\n\
      <ol>\n<li>B.Y.F()</li>\n<li>B.F()</li>\n<li>B.X.F()</li>\n<li>A.F()</li>\n</ol>\n\
      <p>Wait, <code>Super(A).F()</code> calls the non-state version of F() in class\
      \ A? Unfortunately this is a limitation of the advanced version of the <b>Super</b>\
      \ keyword. It doesn't actually check state inheritance, but only looks for a\
      \ state with the same name in the specified class.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Case_4:_Code_in_state_X_after_switch_to_state_Y\">Case 4: Code in state\
      \ X after switch to state Y</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Function_call_specifiers?section=9\"\
      \ title=\"Edit section: Case 4: Code in state X after switch to state Y\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>This one is a bit\
      \ tricky and something you have to watch out for, because it may cause you some\
      \ trouble. Pretend we have the following function in state B.X:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> G<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw3\">GotoState</span><span class=\"br0\">(</span><span class=\"st0\"\
      >'Y'</span><span class=\"br0\">)</span>;\n  F<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n  Global.<span class=\"me0\">F</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n  <span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">F</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"kw6\">Super</span><span class=\"br0\">(</span>A<span class=\"\
      br0\">)</span>.<span class=\"me0\">F</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>The code being executed may still be in state X, but the instance has already\
      \ switched to state Y. Which versions of F() will be called?</p>\n<ol>\n<li>B.Y.F()</li>\n\
      <li>B.F()</li>\n<li>A.X.F()</li>\n<li>A.X.F()</li>\n</ol>\n<p>The second one\
      \ was expected, <b>Global</b> doesn't care about the state and just calls the\
      \ global version. Numbers 3 and 4 were kind of expected as well, the code is\
      \ in state X, so <b>Super</b> calls would be relative to that.</p>\n<p>The first\
      \ one is a bit surprising, though. Code in one state calls a function in a different\
      \ state! Similar things would happen if you switch from the global state to\
      \ X or Y or from X or Y to the global state, a simple call to F() will call\
      \ the new state's implementation.</p>\n<p>Be very careful when calling functions\
      \ after a state switch, the compiler doesn't check for this case. If you try\
      \ to call a function that is available in the old state, but not in the new\
      \ state, the game will crash mercilessly!</p>\n<table class=\"navbox nowraplinks\"\
      \ style=\"\">\n<tr class=\"navbox-header\">\n<th colspan=\"2\" class=\"navbox-header\"\
      \ style=\"\">\n<div style=\"position:relative; width:100%; white-space:nowrap;\"\
      >\n<div class=\"noprint plainlinks\" style=\"background-color:transparent; padding:0;\
      \ font-weight:normal; font-size:xx-small; white-space:nowrap; position:absolute;left:0.5em;\"\
      ><a href=\"/Template:Navbox_unrealscript\" title=\"Template:Navbox unrealscript\"\
      ><span title=\"View this template\">v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\"\
      \ title=\"Template talk:Navbox unrealscript\"><span title=\"Discussion about\
      \ this template\">d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external\
      \ text\" href=\"https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"\
      ><span title=\"You can edit this template. Please use the preview button before\
      \ saving.\">e</span></a></div>\n<a href=\"/UnrealScript_reference\" title=\"\
      UnrealScript reference\">UnrealScript reference</a></div>\n</th>\n</tr>\n<tr\
      \ class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\">Declarations</th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/Preprocessor\" title=\"Preprocessor\"\
      >Preprocessor</a>&#160;• <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;•\
      \ <a href=\"/Interfaces\" title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"\
      /Cpptext\" title=\"Cpptext\">Cpptext</a>&#160;• <a href=\"/Constants\" title=\"\
      Constants\">Constants</a>&#160;• <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;•\
      \ <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;• <a href=\"/Variables\"\
      \ title=\"Variables\">Variables</a>&#160;(<a href=\"/Metadata\" title=\"Metadata\"\
      >Metadata</a>)&#160;• <a href=\"/Replication_block\" title=\"Replication block\"\
      >Replication block</a>&#160;• <a href=\"/Operators\" title=\"Operators\">Operators</a>&#160;•\
      \ <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"\
      /Functions\" title=\"Functions\">Functions</a>&#160;• <a href=\"/States\" title=\"\
      States\">States</a>&#160;• <a href=\"/Defaultproperties\" title=\"Defaultproperties\"\
      >Defaultproperties</a>&#160;(<a href=\"/Subobjects\" title=\"Subobjects\">Subobjects</a>)</td>\n\
      </tr>\n<tr class=\"navbox-body even\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Types\" title=\"Types\">Types</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;•\
      \ <a href=\"/Byte\" title=\"Byte\" class=\"mw-redirect\">byte</a>&#160;• <a\
      \ href=\"/Float\" title=\"Float\" class=\"mw-redirect\">float</a>&#160;• <a\
      \ href=\"/Int\" title=\"Int\" class=\"mw-redirect\">int</a>&#160;• <a href=\"\
      /Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;• <a href=\"/String\"\
      \ title=\"String\">string</a>&#160;• <a href=\"/Types#Reference_types\" title=\"\
      Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\" title=\"Class limiter\"\
      \ class=\"mw-redirect\">Class</a>&#160;• <a href=\"/Enums\" title=\"Enums\"\
      >Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;(<a\
      \ href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a href=\"/Rotator\" title=\"\
      Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"Quat\" class=\"mw-redirect\"\
      >Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\">Color</a>)&#160;• <a href=\"\
      /Static_arrays\" title=\"Static arrays\">Static arrays</a>&#160;• <a href=\"\
      /Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic arrays</a>&#160;• <a href=\"\
      /Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"/Typecasting\"\
      \ title=\"Typecasting\">Typecasting</a></td>\n</tr>\n<tr class=\"navbox-body\
      \ odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Literals\" title=\"\
      Literals\">Literals</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;• <a href=\"\
      /Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a href=\"/Literals#Integer_numbers\"\
      \ title=\"Literals\">Integer</a>&#160;• <a href=\"/Literals#Names\" title=\"\
      Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\" title=\"Literals\"\
      >Objects</a> (<a href=\"/None\" title=\"None\" class=\"mw-redirect\">None</a>&#160;⋅\
      \ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\">Self</a>)&#160;• <a\
      \ href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;• <a href=\"\
      /Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"/Literals#Strings\"\
      \ title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"navbox-body even\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\" title=\"\
      Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"/If_statement\"\
      \ title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\" title=\"\
      Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\" title=\"\
      Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"Stop\
      \ statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch statement\"\
      >Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\">While</a>&#160;•\
      \ <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"\
      Continue statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.121 seconds\nReal time usage: 0.124 seconds\nPreprocessor\
      \ visited node count: 227/1000000\nPreprocessor generated node count: 981/1000000\n\
      Post‐expand include size: 10678/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \   22.312      1 - -total\n100.00%   22.312      1 - Template:Navbox_unrealscript\n\
      \ 71.32%   15.914      1 - Template:Navbox\n 15.17%    3.384      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:23787-0!*!0!!en!*!*\
      \ and timestamp 20221117233311 and revision id 33084\n -->\n"
  categories:
  - sortkey: "Function call specifiers"
    name: "UnrealScript_reference"
  links:
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "String"
  templates:
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Super"
    number: "1"
    index: "1"
    fromtitle: "Function_call_specifiers"
    byteoffset: 376
    anchor: "Super"
  - toclevel: 2
    level: "3"
    line: "Simple version: Direct parent state or class"
    number: "1.1"
    index: "2"
    fromtitle: "Function_call_specifiers"
    byteoffset: 494
    anchor: "Simple_version:_Direct_parent_state_or_class"
  - toclevel: 2
    level: "3"
    line: "Advanced version: Indirect parent class"
    number: "1.2"
    index: "3"
    fromtitle: "Function_call_specifiers"
    byteoffset: 1087
    anchor: "Advanced_version:_Indirect_parent_class"
  - toclevel: 1
    level: "2"
    line: "Global"
    number: "2"
    index: "4"
    fromtitle: "Function_call_specifiers"
    byteoffset: 1639
    anchor: "Global"
  - toclevel: 1
    level: "2"
    line: "Examples"
    number: "3"
    index: "5"
    fromtitle: "Function_call_specifiers"
    byteoffset: 1905
    anchor: "Examples"
  - toclevel: 2
    level: "3"
    line: "Case 1: No state"
    number: "3.1"
    index: "6"
    fromtitle: "Function_call_specifiers"
    byteoffset: 2596
    anchor: "Case_1:_No_state"
  - toclevel: 2
    level: "3"
    line: "Case 2: State X"
    number: "3.2"
    index: "7"
    fromtitle: "Function_call_specifiers"
    byteoffset: 2751
    anchor: "Case_2:_State_X"
  - toclevel: 2
    level: "3"
    line: "Case 3: State Y"
    number: "3.3"
    index: "8"
    fromtitle: "Function_call_specifiers"
    byteoffset: 2901
    anchor: "Case_3:_State_Y"
  - toclevel: 2
    level: "3"
    line: "Case 4: Code in state X after switch to state Y"
    number: "3.4"
    index: "9"
    fromtitle: "Function_call_specifiers"
    byteoffset: 3310
    anchor: "Case_4:_Code_in_state_X_after_switch_to_state_Y"
  displaytitle: "Function call specifiers"
  iwlinks: []
  wikitext:
    text: "[[UnrealScript]] provides two special keywords for calling [[functions]]\
      \ that would otherwise not be accessible: '''Super''' for calling overridden\
      \ functions and '''Global''' for calling non-state functions. However, these\
      \ function call specifiers are only allowed for calling functions on the same\
      \ instance (or class for static functions) as the code calling the functions.\n\
      \n==Super==\nThe keyword '''Super''' is used to call an overridden version of\
      \ a function on the same instance or class.\n\n===Simple version: Direct parent\
      \ state or class===\nSyntax:\n '''Super.'''functionname'''('''''[parameters]''''')'''\n\
      \nThe simple version uses the parent context of the current state or class to\
      \ call the function with the specified name. The parent context of a state is\
      \ either the parent state or, if the state doesn't extend any other state, the\
      \ state's containing class. The parent context of a class is its parent class.\n\
      \n'''Note:''' If the current context doesn't actually override the function\
      \ called through '''Super''' this call will almost be the same as calling the\
      \ function directly.\n\n===Advanced version: Indirect parent class===\nSyntax:\n\
      \ '''Super('''classname''').'''functionname'''('''''[parameters]''''')'''\n\n\
      The advanced version looks for a class with the specified name. If the call\
      \ originated in state code or a state function, it looks for a state with the\
      \ same name in that class and uses that as context for calling the function.\
      \ If no such state is found, the class is used as context.\n\n'''Note:''' This\
      \ behavior does not play nice with states extending another state with a different\
      \ name. See [[#Examples|examples]] below.\n\n==Global==\nThe keyword '''Global'''\
      \ is used to call the most-derived non-state version of a function. If the instance\
      \ is not in any state, this has the same effect as calling that function directly.\n\
      \nSyntax:\n '''Global.'''functionname'''('''''[parameters]''''')'''\n\n==Examples==\n\
      For this example we'll use two classes. The parent class A:\n<uscript>\nclass\
      \ A extends Actor;\n\nfunction F(); // doesn't override anything\n\nstate X\n\
      {\n  function F(); // overrides A.F\n}\n</uscript>\n...and the derived class\
      \ B:\n<uscript>\nclass B extends A;\n\nfunction F(); // overrides A.F\n\nstate\
      \ X // extends A.X\n{\n  function F(); // overrides A.X.F\n}\n\nstate Y extends\
      \ X\n{\n  function F(); // overrrides B.X.F\n}\n</uscript>\nNow we have an instance\
      \ of class B that wants to call various implementations of function F():\n<uscript>\n\
      F();\nGlobal.F();\nSuper.F();\nSuper(A).F();\n</uscript>\nWhich implementation\
      \ those four lines will actually call depends on where exactly they are in class\
      \ B.\n\n===Case 1: No state===\nIf the instance of B is not in any state, the\
      \ following implementations are called:\n#B.F()\n#B.F()\n#A.F()\n#A.F()\nNo\
      \ surprises here.\n\n===Case 2: State X===\nIf our B instance is in state X,\
      \ the following implementations are called:\n#B.X.F()\n#B.F()\n#A.X.F()\n#A.X.F()\n\
      Just as expected.\n\n===Case 3: State Y===\nIf the B instance happens to be\
      \ in state Y, things look a bit different:\n#B.Y.F()\n#B.F()\n#B.X.F()\n#A.F()\n\
      Wait, <code>Super(A).F()</code> calls the non-state version of F() in class\
      \ A? Unfortunately this is a limitation of the advanced version of the '''Super'''\
      \ keyword. It doesn't actually check state inheritance, but only looks for a\
      \ state with the same name in the specified class.\n\n===Case 4: Code in state\
      \ X after switch to state Y===\nThis one is a bit tricky and something you have\
      \ to watch out for, because it may cause you some trouble. Pretend we have the\
      \ following function in state B.X:\n<uscript>\nfunction G()\n{\n  GotoState('Y');\n\
      \  F();\n  Global.F();\n  Super.F();\n  Super(A).F();\n}\n</uscript>\nThe code\
      \ being executed may still be in state X, but the instance has already switched\
      \ to state Y. Which versions of F() will be called?\n#B.Y.F()\n#B.F()\n#A.X.F()\n\
      #A.X.F()\nThe second one was expected, '''Global''' doesn't care about the state\
      \ and just calls the global version. Numbers 3 and 4 were kind of expected as\
      \ well, the code is in state X, so '''Super''' calls would be relative to that.\n\
      \nThe first one is a bit surprising, though. Code in one state calls a function\
      \ in a different state! Similar things would happen if you switch from the global\
      \ state to X or Y or from X or Y to the global state, a simple call to F() will\
      \ call the new state's implementation.\n\nBe very careful when calling functions\
      \ after a state switch, the compiler doesn't check for this case. If you try\
      \ to call a function that is available in the old state, but not in the new\
      \ state, the game will crash mercilessly!\n\n{{navbox unrealscript}}"
  properties: []
  revId: 33084
name: "Function call specifiers"
revision:
  revid: 33084
  parentid: 0
  user: "Wormbo"
  timestamp: 1222885430.000000000
  comment: "New page: [[UnrealScript]] provides two special keywords for calling [[functions]]\
    \ that would otherwise not be accessible: '''Super''' for calling overridden functions\
    \ and '''Global''' for calling n..."
timestamp: 1668754807.828829000
