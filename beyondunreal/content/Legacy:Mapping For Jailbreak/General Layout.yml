---
parse:
  title: "Legacy:Mapping For Jailbreak/General Layout"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"General_Layout\">General Layout</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mapping_For_Jailbreak/General_Layout?section=1\" title=\"\
      Edit section: General Layout\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Where_am_I.3F_It.27s_too_hard_to_release.21\"\
      >Where am I? It's too hard to release!</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mapping_For_Jailbreak/General_Layout?section=2\"\
      \ title=\"Edit section: Where am I? It's too hard to release!\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<div class=\"floatright\"\
      ><a href=\"/File:Legacy_jailbreak-mapping-general-1-phobos.jpeg\" class=\"image\"\
      \ title=\"JB-Phobos][ is a good example of multiple routes in the centre and\
      \ one route to the switch.\"><img alt=\"JB-Phobos][ is a good example of multiple\
      \ routes in the centre and one route to the switch.\" src=\"/w/images/Legacy_jailbreak-mapping-general-1-phobos.jpeg\"\
      \ width=\"400\" height=\"300\" /></a></div>\n<div class=\"floatright\"><a href=\"\
      /File:Legacy_jailbreak-mapping-general-2-gauntlet.jpeg\" class=\"image\" title=\"\
      JB-Gauntlet-III is also a good example.\"><img alt=\"JB-Gauntlet-III is also\
      \ a good example.\" src=\"/w/images/Legacy_jailbreak-mapping-general-2-gauntlet.jpeg\"\
      \ width=\"400\" height=\"208\" /></a></div>\n<p>The first thing I am going to\
      \ talk about is the general layout of a good Jailbreak map. Many maps (some\
      \ of mine) suffer from players not knowing where they are or release switches\
      \ being either too easy to defend, or too easy to attack. Mappers should make\
      \ sure that, just like a CTF map, the route to both their base and the enemy\
      \ base is made as obvious as possible.</p>\n<p>This can be done with things\
      \ like team-coloured banners and decorations, team-coloured textures, team-coloured\
      \ lighting, or even a team-coloured skybox! This is not to say go ahead and\
      \ make all of your textures, meshes and lights fully saturated red/blue, as\
      \ in some cases you may want to keep it subtle to match the theme of your map.\
      \ Do make sure that you make team bases apparent in some way though, or it can\
      \ result in players being confused as to where to go, and this is a bad thing\
      \ in Jailbreak. Though, <b>there is a compass</b> in all versions of Jailbreak\
      \ that points to either the enemy release switch or the players release switch\
      \ (user-configurable), which helps, but shouldn’t be relied on fully.</p>\n\
      <p>With layout, I’ve also found that it works best (produces the most fun and\
      \ even-matched games) to have <b>more routes in the centre</b> and <b>less near\
      \ the release</b>. This is where level design for Jailbreak differs from CTF.\
      \ In CTF it often works well to have multiple routes in/out of a flag area with\
      \ one or two high-risk areas in the middle that the flag carrier must go through\
      \ (Hydro16, Orbital, Lucius, even Face). In Jailbreak however, it is the getting\
      \ <b>to</b> the switch that counts, and not the getting <b>back</b>. If you\
      \ have a release switch that is easy to get to via multiple routes, then it\
      \ is going to be too easy to release. Some will say “but what about if you counteract\
      \ that by having a chokepoint in the middle to defend”, and this is kind of\
      \ true, but because of the Deathmatch-style gameplay that is mixed in with Jailbreak\
      \ you will find that the attacking player is often already past the chokepoint\
      \ anyway.</p>\n<p>This is not to say that those kind of layouts don't work -–\
      \ but a more-routes-in-middle-less-routes-near-switch layout has the following\
      \ advantage: It means that a <b>lone player</b> is able to defend his/her switch\
      \ from <b>multiple attackers</b> successfully if they are good enough. It is\
      \ very hard to do this with the other more-routes-near-switch-less-in-middle\
      \ layout because, although the lone player can go to the centre of the map to\
      \ defend, he/she will end up going after an attacker while another one runs\
      \ past. If there is less routes near the switch, the player can defend it by\
      \ themselves (if the right weapons are available). It sucks big-time if the\
      \ last player is always going to be over-powered by the enemy. Having multiple\
      \ routes in the centre of the map also means that the player can perhaps sneak\
      \ by unnoticed if they are good… but it is still dangerous near the switch because\
      \ one player could be the end of you!&#160;:-)</p>\n<p>Whatever layout you decide\
      \ to go for, it is always good to test (preferably with other human players)\
      \ on an untextured, undecorated layout map first and see if it plays well -–\
      \ if it does, then go ahead and use it!</p>\n<hr />\n<p><b>Previous:</b> <a\
      \ href=\"/Legacy:Mapping_For_Jailbreak/Introduction\" title=\"Legacy:Mapping\
      \ For Jailbreak/Introduction\">Legacy:Mapping For Jailbreak/Introduction</a>\
      \ – <b>Next:</b> <a href=\"/Legacy:Mapping_For_Jailbreak/Jails\" title=\"Legacy:Mapping\
      \ For Jailbreak/Jails\">Legacy:Mapping For Jailbreak/Jails</a></p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.078 seconds\nReal time usage: 0.083 seconds\n\
      Preprocessor visited node count: 11/1000000\nPreprocessor generated node count:\
      \ 52/1000000\nPost‐expand include size: 90/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2158-0!*!0!!*!5!* and timestamp 20221117200303 and revision\
      \ id 5252\n -->\n"
  categories:
  - sortkey: "Mapping For Jailbreak/General Layout"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mapping For Jailbreak/Introduction"
  - ns: 100
    exists: true
    name: "Legacy:Mapping For Jailbreak/Jails"
  templates: []
  images:
  - "Legacy_jailbreak-mapping-general-1-phobos.jpeg"
  - "Legacy_jailbreak-mapping-general-2-gauntlet.jpeg"
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "General Layout"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mapping_For_Jailbreak/General_Layout"
    byteoffset: 0
    anchor: "General_Layout"
  - toclevel: 2
    level: "3"
    line: "Where am I?  It's too hard to release!"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Mapping_For_Jailbreak/General_Layout"
    byteoffset: 20
    anchor: "Where_am_I.3F_It.27s_too_hard_to_release.21"
  displaytitle: "Legacy:Mapping For Jailbreak/General Layout"
  iwlinks: []
  wikitext:
    text: "==General Layout==\n\n===Where am I?  It's too hard to release!===\n\n\
      [[Image:Legacy_jailbreak-mapping-general-1-phobos.jpeg|right|JB-Phobos][ is\
      \ a good example of multiple routes in the centre and one route to the switch.]]\n\
      \n[[Image:Legacy_jailbreak-mapping-general-2-gauntlet.jpeg|right|JB-Gauntlet-III\
      \ is also a good example.]]\n\nThe first thing I am going to talk about is the\
      \ general layout of a good Jailbreak map.  Many maps (some of mine) suffer from\
      \ players not knowing where they are or release switches being either too easy\
      \ to defend, or too easy to attack.  Mappers should make sure that, just like\
      \ a CTF map, the route to both their base and the enemy base is made as obvious\
      \ as possible.\n\nThis can be done with things like team-coloured banners and\
      \ decorations, team-coloured textures, team-coloured lighting, or even a team-coloured\
      \ skybox!  This is not to say go ahead and make all of your textures, meshes\
      \ and lights fully saturated red/blue, as in some cases you may want to keep\
      \ it subtle to match the theme of your map.  Do make sure that you make team\
      \ bases apparent in some way though, or it can result in players being confused\
      \ as to where to go, and this is a bad thing in Jailbreak.  Though, '''there\
      \ is a compass''' in all versions of Jailbreak that points to either the enemy\
      \ release switch or the players release switch (user-configurable), which helps,\
      \ but shouldn’t be relied on fully.\n\nWith layout, I’ve also found that it\
      \ works best (produces the most fun and even-matched games) to have '''more\
      \ routes in the centre''' and '''less near the release'''.  This is where level\
      \ design for Jailbreak differs from CTF.  In CTF it often works well to have\
      \ multiple routes in/out of a flag area with one or two high-risk areas in the\
      \ middle that the flag carrier must go through (Hydro16, Orbital, Lucius, even\
      \ Face).  In Jailbreak however, it is the getting '''to''' the switch that counts,\
      \ and not the getting '''back'''.  If you have a release switch that is easy\
      \ to get to via multiple routes, then it is going to be too easy to release.\
      \  Some will say “but what about if you counteract that by having a chokepoint\
      \ in the middle to defend”, and this is kind of true, but because of the Deathmatch-style\
      \ gameplay that is mixed in with Jailbreak you will find that the attacking\
      \ player is often already past the chokepoint anyway.\n\nThis is not to say\
      \ that those kind of layouts don't work -– but a more-routes-in-middle-less-routes-near-switch\
      \ layout has the following advantage:  It means that a '''lone player''' is\
      \ able to defend his/her switch from '''multiple attackers''' successfully if\
      \ they are good enough.  It is very hard to do this with the other more-routes-near-switch-less-in-middle\
      \ layout because, although the lone player can go to the centre of the map to\
      \ defend, he/she will end up going after an attacker while another one runs\
      \ past.  If there is less routes near the switch, the player can defend it by\
      \ themselves (if the right weapons are available).  It sucks big-time if the\
      \ last player is always going to be over-powered by the enemy.  Having multiple\
      \ routes in the centre of the map also means that the player can perhaps sneak\
      \ by unnoticed if they are good… but it is still dangerous near the switch because\
      \ one player could be the end of you! :-)\n\nWhatever layout you decide to go\
      \ for, it is always good to test (preferably with other human players) on an\
      \ untextured, undecorated layout map first and see if it plays well -– if it\
      \ does, then go ahead and use it!\n\n----\n\n'''Previous:''' [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Introduction]]\
      \ &ndash; '''Next:''' [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Jails]]\n\n[[Category:Legacy\
      \ Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 5252
name: "Legacy:Mapping For Jailbreak/General Layout"
revision:
  revid: 5252
  parentid: 5253
  user: "El Muerte"
  timestamp: 1144362029.000000000
  comment: "*revert"
timestamp: 1668784644.314182000
