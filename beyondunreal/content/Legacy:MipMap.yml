---
parse:
  title: "Legacy:MipMap"
  text:
    text: "<p><b>MipMaps</b> are downscaled versions (by powers of two) of a <a href=\"\
      /Legacy:Texture\" title=\"Legacy:Texture\">Texture</a> that are automatically\
      \ created if you select <i>Create MipMaps</i> when <a href=\"/Legacy:Texture_Import_And_Export\"\
      \ title=\"Legacy:Texture Import And Export\">importing a texture</a>.</p>\n\
      <p>The engine uses MipMaps to reduce jitter on textured surfaces when they're\
      \ viewed from a distance; this process is called <a href=\"/Legacy:Bilinear_Filtering\"\
      \ title=\"Legacy:Bilinear Filtering\">bilinear filtering</a>. When drawing a\
      \ <a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">brush</a> surface on the\
      \ screen, the engine selects the MipMap that fits best; in fact, different parts\
      \ of the surface can be textured with different MipMaps. Blending multiple MipMaps\
      \ is called <a href=\"/Legacy:Trilinear_Filtering\" title=\"Legacy:Trilinear\
      \ Filtering\">trilinear filtering</a>.</p>\n<p>While the Unreal engine supports\
      \ <a href=\"/Legacy:Texture\" title=\"Legacy:Texture\">Textures</a> up to sizes\
      \ beyond 256x256, some (older) video hardware can't go higher than that. In\
      \ order to accommodate that, the engine then simply selects the largest MipMap\
      \ the hardware can handle and displays that instead. So, feel free to use large\
      \ textures, but if you do, <i>always</i> create MipMaps for them.</p>\n<p><a\
      \ href=\"/Legacy:ScriptedTexture\" title=\"Legacy:ScriptedTexture\">ScriptedTextures</a>,\
      \ <a href=\"/Legacy:FireTexture\" title=\"Legacy:FireTexture\">FireTextures</a>\
      \ and other <a href=\"/Legacy:Dynamic_Texture\" title=\"Legacy:Dynamic Texture\"\
      >Dynamic Textures</a> have in principle no MipMaps and thus are restricted to\
      \ 256x256 pixels. MipMaps also aren't used on <a href=\"/Legacy:Mesh\" title=\"\
      Legacy:Mesh\">meshes</a>, so the same restriction applies for them as well.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Example\">Example</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MipMap?section=1\"\
      \ title=\"Edit section: Example\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Until anyone else uploads this anywhere, download\
      \ the sample <a rel=\"nofollow\" class=\"external text\" href=\"http://www.geocities.com/aqqt/mipmap_sample.zip\"\
      >this location</a>. I hope it helps somehow&#160;:)</p>\n<p>Bright red is top\
      \ detail (original texture), lower detail = darker red. The smallest MipMaps\
      \ (8x8 and lower) are black.</p>\n<h2><span class=\"mw-headline\" id=\"Types_of_texture_that_should_not_have_MipMaps\"\
      >Types of texture that should not have MipMaps</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MipMap?section=2\"\
      \ title=\"Edit section: Types of texture that should not have MipMaps\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>MipMaps should never\
      \ be created for any texture that is going to be used for anything Interface-related.\
      \ Player Portrait images and weapon HUD icons are two examples of this.</p>\n\
      <dl>\n<dd><b>Mychaeel:</b> I disagree. MipMaps can <i>greatly</i> enhance the\
      \ display of a downscaled image; otherwise the video card just skips pixels\
      \ when drawing a downscaled texture or texture part on the HUD.</dd>\n<dd><b>Legal:</b>\
      \ I agree with Mychaeel here - MipMaps are often great for Player Portraits\
      \ in example, however you should make sure the MipMaps doesn't look like shit.\
      \ The .dds plug-in for Photoshop allows you to see and edit individual MipMaps\
      \ of textures. If something can't be done with MipMaps, like sometimes the scope\
      \ of a sniper rifle, leave it out. But make it a last option.</dd>\n<dd>A note\
      \ about Terrain Heightmap images: there is absolutely no need to create mipmaps\
      \ for a G16 heightmap image, as the texture itself will never be seen within\
      \ the game. Mipmaps are purely aesthetic in their nature, so a good rule of\
      \ thumb would be: If you can't see it in-game, it doesn't need mipmaps (excepting\
      \ Interface content as mentioned above of course).</dd>\n</dl>\n<dl>\n<dd><b>Drak:</b>\
      \ I generally drop the mips for masked textures, this reduces the mask from\
      \ being blurred in the distance. Also, 2003 &amp; 2004 have an LODset property\
      \ found within the texture's properties dialog box under 'Texture' that will\
      \ decide which mip is best for the engine internally. Just select the appropriate\
      \ one such as: LODset_Interface. In fact, this property should be set for your\
      \ level preview screenshots for instance. By default LODset_World is selected\
      \ upon import.</dd>\n</dl>\n<dl>\n<dd><b>XpanD:</b> I'm working on a tutorial\
      \ map for a gametype (BunnyTracks for anybody interested) in UT1 at the moment,\
      \ and I'm using a lot of floating text in the map (in 12 human-translated languages,\
      \ and every texture is 256x256 size and masked). Well, anyways... I found that\
      \ when I turn off MipMaps, those textures I'm using to display the translation\
      \ are a lot crisper when looked at from afar. So... For text I'd personally\
      \ recommend people to not use MipMaps, unless you actually WANT the text to\
      \ blur when you get a certain distance from it. Oh, one more thing... The file\
      \ I loaded all of these textures into also lost about 1.5MB in size, going from\
      \ 8MB to just 6.6MB.&#160;:)</dd>\n</dl>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.026 seconds\nReal time usage: 0.079 seconds\nPreprocessor visited\
      \ node count: 8/1000000\nPreprocessor generated node count: 20/1000000\nPost‐\
      expand include size: 6/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1785-0!*!0!!*!*!*\
      \ and timestamp 20221118061620 and revision id 35504\n -->\n"
  categories:
  - sortkey: "MipMap"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Brush"
  - ns: 100
    exists: true
    name: "Legacy:Trilinear Filtering"
  - ns: 100
    exists: true
    name: "Legacy:Bilinear Filtering"
  - ns: 100
    exists: true
    name: "Legacy:Texture Import And Export"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedTexture"
  - ns: 100
    exists: true
    name: "Legacy:FireTexture"
  - ns: 100
    exists: true
    name: "Legacy:Texture"
  - ns: 100
    exists: true
    name: "Legacy:Dynamic Texture"
  templates: []
  images: []
  externallinks:
  - "http://www.geocities.com/aqqt/mipmap_sample.zip"
  sections:
  - toclevel: 1
    level: "2"
    line: "Example"
    number: "1"
    index: "1"
    fromtitle: "Legacy:MipMap"
    byteoffset: 1344
    anchor: "Example"
  - toclevel: 1
    level: "2"
    line: "Types of texture that should not have MipMaps"
    number: "2"
    index: "2"
    fromtitle: "Legacy:MipMap"
    byteoffset: 1633
    anchor: "Types_of_texture_that_should_not_have_MipMaps"
  displaytitle: "Legacy:MipMap"
  iwlinks: []
  wikitext:
    text: "'''MipMaps''' are downscaled versions (by powers of two) of a [[Legacy:Texture|Texture]]\
      \ that are automatically created if you select ''Create MipMaps'' when [[Legacy:Texture\
      \ Import And Export|importing a texture]].\n\nThe engine uses MipMaps to reduce\
      \ jitter on textured surfaces when they're viewed from a distance; this process\
      \ is called [[Legacy:Bilinear Filtering|bilinear filtering]].  When drawing\
      \ a [[Legacy:Brush|brush]] surface on the screen, the engine selects the MipMap\
      \ that fits best; in fact, different parts of the surface can be textured with\
      \ different MipMaps.  Blending multiple MipMaps is called [[Legacy:Trilinear\
      \ Filtering|trilinear filtering]].\n\nWhile the Unreal engine supports [[Legacy:Texture|Texture]]s\
      \ up to sizes beyond 256x256, some (older) video hardware can't go higher than\
      \ that.  In order to accommodate that, the engine then simply selects the largest\
      \ MipMap the hardware can handle and displays that instead.  So, feel free to\
      \ use large textures, but if you do, ''always'' create MipMaps for them.\n\n\
      [[Legacy:ScriptedTexture|ScriptedTexture]]s, [[Legacy:FireTexture|FireTexture]]s\
      \ and other [[Legacy:Dynamic Texture|Dynamic Texture]]s have in principle no\
      \ MipMaps and thus are restricted to 256x256 pixels.  MipMaps also aren't used\
      \ on [[Legacy:Mesh|mesh]]es, so the same restriction applies for them as well.\n\
      \n==Example ==\n\nUntil anyone else uploads this anywhere, download the sample\
      \ [http://www.geocities.com/aqqt/mipmap_sample.zip this location]. I hope it\
      \ helps somehow :)\n\nBright red is top detail (original texture), lower detail\
      \ = darker red. The smallest MipMaps (8x8 and lower) are black.\n\n==Types of\
      \ texture that should not have MipMaps==\n\nMipMaps should never be created\
      \ for any texture that is going to be used for anything Interface-related. Player\
      \ Portrait images and weapon HUD icons are two examples of this.\n\n:'''Mychaeel:'''\
      \ I disagree.  MipMaps can ''greatly'' enhance the display of a downscaled image;\
      \ otherwise the video card just skips pixels when drawing a downscaled texture\
      \ or texture part on the HUD.\n:'''Legal:''' I agree with Mychaeel here - MipMaps\
      \ are often great for Player Portraits in example, however you should make sure\
      \ the MipMaps doesn't look like shit. The .dds plug-in for Photoshop allows\
      \ you to see and edit individual MipMaps of textures. If something can't be\
      \ done with MipMaps, like sometimes the scope of a sniper rifle, leave it out.\
      \ But make it a last option.\n:A note about Terrain Heightmap images: there\
      \ is absolutely no need to create mipmaps for a G16 heightmap image, as the\
      \ texture itself will never be seen within the game. Mipmaps are purely aesthetic\
      \ in their nature, so a good rule of thumb would be: If you can't see it in-game,\
      \ it doesn't need mipmaps (excepting Interface content as mentioned above of\
      \ course).\n\n:'''Drak:''' I generally drop the mips for masked textures, this\
      \ reduces the mask from being blurred in the distance.  Also, 2003 & 2004 have\
      \ an LODset property found within the texture's properties dialog box under\
      \ 'Texture' that will decide which mip is best for the engine internally.  Just\
      \ select the appropriate one such as:  LODset_Interface.  In fact, this property\
      \ should be set for your level preview screenshots for instance.  By default\
      \ LODset_World is selected upon import.\n\n:'''XpanD:''' I'm working on a tutorial\
      \ map for a gametype (BunnyTracks for anybody interested) in UT1 at the moment,\
      \ and I'm using a lot of floating text in the map (in 12 human-translated languages,\
      \ and every texture is 256x256 size and masked). Well, anyways... I found that\
      \ when I turn off MipMaps, those textures I'm using to display the translation\
      \ are a lot crisper when looked at from afar. So... For text I'd personally\
      \ recommend people to not use MipMaps, unless you actually WANT the text to\
      \ blur when you get a certain distance from it. Oh, one more thing... The file\
      \ I loaded all of these textures into also lost about 1.5MB in size, going from\
      \ 8MB to just 6.6MB. :)\n\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 35504
name: "Legacy:MipMap"
revision:
  revid: 35504
  parentid: 35503
  user: "24.132.196.15"
  timestamp: 1256395713.000000000
  comment: "Oops, forgot to add that it was in UT1/UT99. :P"
timestamp: 1668775465.396593000
