---
parse:
  title: "User:00zX/Using The Unreal Engine 3 Preprocessor"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Including_Macro_Files\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Including Macro\
      \ Files</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Example_Macro_File\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Example Macro\
      \ File</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-3\"\
      ><a href=\"#Example_of_usage\"><span class=\"tocnumber\">2</span> <span class=\"\
      toctext\">Example of usage</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#YourConfig\"><span class=\"tocnumber\">2.1</span> <span class=\"\
      toctext\">YourConfig</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-5\"\
      ><a href=\"#Example_of_usage_2\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">Example of usage</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"\
      ><a href=\"#Useful_Macros\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Useful Macros</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"\
      mw-headline\" id=\"Including_Macro_Files\">Including Macro Files</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=1\"\
      \ title=\"Edit section: Including Macro Files\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> YourPawn <span class=\"kw1\">extends</span> UTPawn\n\t<span\
      \ class=\"kw1\">config</span><span class=\"br0\">(</span>YourConfig<span class=\"\
      br0\">)</span>;\n \n<span class=\"sy0\">`</span>include<span class=\"br0\">(</span>YourMacroFile.<span\
      \ class=\"me0\">uci</span><span class=\"br0\">)</span></pre></div>\n</div>\n\
      <h3><span class=\"mw-headline\" id=\"Example_Macro_File\">Example Macro File</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=2\"\
      \ title=\"Edit section: Example Macro File\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>When compiling with the <b>-debug</b> command line\
      \ switch, the debug macro will then be defined and will switch our blank spaces\
      \ to config/exec respectively.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"sy0\">`</span><span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span><span class=\"sy0\">`</span>notdefined<span class=\"br0\">(</span>Debug<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n <span class=\"sy0\">`</span>define\
      \ dconf\n <span class=\"sy0\">`</span>define dexec\n<span class=\"sy0\">`</span><span\
      \ class=\"kw2\">else</span>\n <span class=\"sy0\">`</span>define dconf <span\
      \ class=\"kw1\">config</span>\n <span class=\"sy0\">`</span>define dexec <span\
      \ class=\"kw1\">exec</span>\n<span class=\"sy0\">`</span>endif</pre></div>\n\
      </div>\n<p>Copy the above template into a blank text document and call the file\
      \ YourMacroFile.uci</p>\n<h2><span class=\"mw-headline\" id=\"Example_of_usage\"\
      >Example of usage</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=3\"\
      \ title=\"Edit section: Example of usage\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>If we want to add a variable thats configurable only\
      \ when the macro `DevBuild is defined.</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> YourPawn <span class=\"kw1\">extends</span>\
      \ UTPawn\n\t<span class=\"kw1\">config</span><span class=\"br0\">(</span>YourConfig<span\
      \ class=\"br0\">)</span>;\n \n<span class=\"sy0\">`</span>include<span class=\"\
      br0\">(</span>YourMacroFile.<span class=\"me0\">uci</span><span class=\"br0\"\
      >)</span>\n \n<span class=\"kw1\">var</span> <span class=\"sy0\">`</span><span\
      \ class=\"br0\">{</span>dconf<span class=\"br0\">}</span> <span class=\"kw5\"\
      >bool</span>\tbCanDodge;\n \n<span class=\"kw1\">function</span> <span class=\"\
      kw5\">bool</span> Dodge<span class=\"br0\">(</span>eDoubleClickDir DoubleClickMove<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>bCanDodge<span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw2\">return</span> <span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">Dodge</span><span class=\"br0\">(</span>DoubleClickMove<span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw2\">else</span>\n\t\t<span class=\"\
      kw2\">return</span> <span class=\"kw6\">false</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n\
      <span class=\"sy0\">`</span><span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span><span class=\"sy0\">`</span>notdefined<span class=\"br0\">(</span>Debug<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n\tbCanDodge<span class=\"\
      sy0\">=</span><span class=\"kw6\">True</span>\n<span class=\"sy0\">`</span>endif\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\"\
      \ id=\"YourConfig\">YourConfig</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=4\"\
      \ title=\"Edit section: YourConfig\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<pre>\n[YourPackage.YourPawn]\nbCanDodge=True\n</pre>\n\
      <h2><span class=\"mw-headline\" id=\"Example_of_usage_2\">Example of usage</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=5\"\
      \ title=\"Edit section: Example of usage\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>If we want to add a variable that already exists but\
      \ is not config editable. (PostBeginPlay)</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> YourPawn <span class=\"kw1\">extends</span>\
      \ UTPawn\n\t<span class=\"kw1\">config</span><span class=\"br0\">(</span>YourConfig<span\
      \ class=\"br0\">)</span>;\n \n<span class=\"sy0\">`</span>include<span class=\"\
      br0\">(</span>YourMacroFile.<span class=\"me0\">uci</span><span class=\"br0\"\
      >)</span>\n \n<span class=\"sy0\">`</span><span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">`</span>isdefined<span class=\"\
      br0\">(</span>Debug<span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      <span class=\"kw1\">var</span> <span class=\"sy0\">`</span><span class=\"br0\"\
      >{</span>dconf<span class=\"br0\">}</span> <span class=\"kw5\">float</span>\t\
      newGroundSpeed;\n \n<span class=\"kw1\">function</span> PossessedBy<span class=\"\
      br0\">(</span><span class=\"kw9\">Controller</span> C, <span class=\"kw5\">bool</span>\
      \ bVehicleTransition<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw6\">Super</span>.<span class=\"me0\">PossessedBy</span><span\
      \ class=\"br0\">(</span>C, bVehicleTransition<span class=\"br0\">)</span>;\n\
      \ \n\tGroundSpeed <span class=\"sy0\">=</span> newGroundSpeed;\n<span class=\"\
      br0\">}</span>\n<span class=\"sy0\">`</span>endif</pre></div>\n</div>\n<h2><span\
      \ class=\"mw-headline\" id=\"Useful_Macros\">Useful Macros</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:00zX/Using_The_Unreal_Engine_3_Preprocessor?section=6\"\
      \ title=\"Edit section: Useful Macros\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      coMULTI\">/**\n * 2005-2011 Daniel Batten (aka 00zX or MonsOlympus)\n */</span>\n\
      \ \n<span class=\"coMULTI\">/** UDK HELPERS */</span>\n \n\t<span class=\"coMULTI\"\
      >/*`define redef(OldDef, NewDef) `undefine `{OldDef} `define `{OldDef} `{NewDef}*/</span>\n\
      \ \n\t<span class=\"coMULTI\">/* Globals */</span>\n\t<span class=\"sy0\">`</span>define\
      \ sWorld_Info <span class=\"kw1\">class</span><span class=\"st0\">'WorldInfo'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">GetWorldInfo</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>\n\t<span class=\"sy0\">`</span>define\
      \ sGame_RepInfo <span class=\"sy0\">`</span><span class=\"br0\">{</span>sWorldInfo<span\
      \ class=\"br0\">}</span>.<span class=\"me0\">GRI</span>\n\t<span class=\"sy0\"\
      >`</span>define sGravity <span class=\"sy0\">`</span><span class=\"br0\">{</span>sWorldInfo<span\
      \ class=\"br0\">}</span>.<span class=\"me0\">WorldGravityZ</span>\n\t<span class=\"\
      sy0\">`</span>define sEngine <span class=\"kw1\">class</span><span class=\"\
      st0\">'Engine'</span>.<span class=\"kw1\">static</span>\n \n \n\t<span class=\"\
      coMULTI\">/** Timers - checks the timers to see if they are active before setting\
      \ or clearing them. */</span>\n\t<span class=\"sy0\">`</span>define CheckClearTimer<span\
      \ class=\"br0\">(</span><span class=\"kw5\">name</span><span class=\"br0\">)</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span>IsTimerActive<span\
      \ class=\"br0\">(</span>nameof<span class=\"br0\">(</span><span class=\"sy0\"\
      >`</span><span class=\"kw5\">name</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span>ClearTimer<span\
      \ class=\"br0\">(</span>nameof<span class=\"br0\">(</span><span class=\"sy0\"\
      >`</span><span class=\"kw5\">name</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span>;<span class=\"br0\">}</span>\n\t<span class=\"sy0\">`</span>define\
      \ CheckSetTimer<span class=\"br0\">(</span><span class=\"kw8\">time</span>,\
      \ <span class=\"kw2\">loop</span>, <span class=\"kw5\">name</span><span class=\"\
      br0\">)</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>IsTimerActive<span class=\"br0\">(</span>nameof<span\
      \ class=\"br0\">(</span><span class=\"sy0\">`</span><span class=\"kw5\">name</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">{</span><span class=\"kw4\">SetTimer</span><span class=\"br0\"\
      >(</span><span class=\"sy0\">`</span><span class=\"kw8\">time</span>, <span\
      \ class=\"sy0\">`</span><span class=\"kw2\">loop</span>, nameof<span class=\"\
      br0\">(</span><span class=\"sy0\">`</span><span class=\"kw5\">name</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;<span class=\"br0\">}</span>\n\
      \t<span class=\"sy0\">`</span>define ResetTimer<span class=\"br0\">(</span><span\
      \ class=\"kw8\">time</span>, <span class=\"kw2\">loop</span>, <span class=\"\
      kw5\">name</span><span class=\"br0\">)</span> <span class=\"kw4\">SetTimer</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">`</span><span class=\"kw8\">time</span>,\
      \ <span class=\"sy0\">`</span><span class=\"kw2\">loop</span>, nameof<span class=\"\
      br0\">(</span><span class=\"sy0\">`</span><span class=\"kw5\">name</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n \n\t<span class=\"coMULTI\"\
      >/** Variables and Defaults */</span>\n\t<span class=\"sy0\">`</span>define\
      \ SetToDefault<span class=\"br0\">(</span>Obj, <span class=\"kw1\">Var</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">`</span><span class=\"br0\">{</span>Obj<span\
      \ class=\"br0\">}</span>.<span class=\"sy0\">`</span><span class=\"br0\">{</span><span\
      \ class=\"kw1\">Var</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span>\
      \ <span class=\"sy0\">`</span><span class=\"br0\">{</span>Obj<span class=\"\
      br0\">}</span>.<span class=\"kw1\">Default</span>.<span class=\"sy0\">`</span><span\
      \ class=\"br0\">{</span><span class=\"kw1\">Var</span><span class=\"br0\">}</span>\n\
      \t<span class=\"sy0\">`</span>define SetVar<span class=\"br0\">(</span>Obj,\
      \ <span class=\"kw1\">Var</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">`</span><span class=\"br0\">{</span>Obj<span class=\"br0\">}</span>.<span\
      \ class=\"sy0\">`</span><span class=\"br0\">{</span><span class=\"kw1\">Var</span><span\
      \ class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"sy0\">`</span><span\
      \ class=\"br0\">{</span><span class=\"kw1\">Var</span><span class=\"br0\">}</span>\n\
      \           <span class=\"co1\">//Usage: `SetVar(`P, MaxMultiJump) ~ where `P\
      \ is UTPawn(Pawn) cast.</span>\n           <span class=\"co1\">//Outputs: UTPawn(Pawn).MaxMultiJump\
      \ = MaxMultiJump; ~ Where UT Prefix can be a macro also.</span>\n \n\t<span\
      \ class=\"sy0\">`</span>define CheckRet<span class=\"br0\">(</span>Obj<span\
      \ class=\"br0\">)</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"sy0\">`</span>Obj <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >none</span><span class=\"br0\">)</span> <span class=\"kw2\">return</span>\n\
      \ \n\t<span class=\"coMULTI\">/** Save/Load Object */</span>\n\t<span class=\"\
      sy0\">`</span>define SaveObj<span class=\"br0\">(</span>Obj, FileName, <span\
      \ class=\"kw5\">Bool</span>, Ver<span class=\"br0\">)</span> <span class=\"\
      sy0\">`</span>sEngine<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">BasicSaveObject</span><span class=\"br0\">(</span><span class=\"\
      sy0\">`</span><span class=\"br0\">{</span>Obj<span class=\"br0\">}</span>, <span\
      \ class=\"sy0\">`</span><span class=\"br0\">{</span>FileName<span class=\"br0\"\
      >}</span>, <span class=\"sy0\">`</span><span class=\"br0\">{</span><span class=\"\
      kw5\">Bool</span><span class=\"br0\">}</span>, <span class=\"sy0\">`</span><span\
      \ class=\"br0\">{</span>Ver<span class=\"br0\">}</span><span class=\"br0\">)</span>\n\
      \t<span class=\"sy0\">`</span>define LoadObj<span class=\"br0\">(</span>Obj,\
      \ FileName, <span class=\"kw5\">Bool</span>, Ver<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">`</span>sEngine<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>.<span class=\"me0\">BasicSaveObject</span><span class=\"br0\"\
      >(</span><span class=\"sy0\">`</span><span class=\"br0\">{</span>Obj<span class=\"\
      br0\">}</span>, <span class=\"sy0\">`</span><span class=\"br0\">{</span>FileName<span\
      \ class=\"br0\">}</span>, <span class=\"sy0\">`</span><span class=\"br0\">{</span><span\
      \ class=\"kw5\">Bool</span><span class=\"br0\">}</span>, <span class=\"sy0\"\
      >`</span><span class=\"br0\">{</span>Ver<span class=\"br0\">}</span><span class=\"\
      br0\">)</span>\n \n\t<span class=\"coMULTI\">/** MetaTags */</span>\n\t<span\
      \ class=\"sy0\">`</span>define mUI<span class=\"br0\">(</span><span class=\"\
      kw3\">min</span>, <span class=\"kw3\">max</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&lt;</span>UIMin<span class=\"sy0\">=`</span><span class=\"\
      kw3\">min</span> <span class=\"sy0\">|</span> UIMax<span class=\"sy0\">=`</span>max<span\
      \ class=\"sy0\">&gt;</span>\n\t<span class=\"sy0\">`</span>define mClamp<span\
      \ class=\"br0\">(</span><span class=\"kw3\">min</span>, <span class=\"kw3\"\
      >max</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span>ClampMin<span\
      \ class=\"sy0\">=`</span><span class=\"kw3\">min</span> <span class=\"sy0\"\
      >|</span> ClampMax<span class=\"sy0\">=`</span>max<span class=\"sy0\">&gt;</span>\n\
      \t<span class=\"sy0\">`</span>define mUIClamp<span class=\"br0\">(</span><span\
      \ class=\"kw3\">min</span>, <span class=\"kw3\">max</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">&lt;</span>UIMin<span class=\"sy0\">=`</span><span\
      \ class=\"kw3\">min</span> <span class=\"sy0\">|</span> UIMax<span class=\"\
      sy0\">=`</span><span class=\"kw3\">max</span> <span class=\"sy0\">|</span> ClampMin<span\
      \ class=\"sy0\">=`</span><span class=\"kw3\">min</span> <span class=\"sy0\"\
      >|</span> ClampMax<span class=\"sy0\">=`</span>max<span class=\"sy0\">&gt;</span>\n\
      \ \n\t<span class=\"coMULTI\">/* Debugging */</span>\n\t<span class=\"sy0\"\
      >`</span>define LogName <span class=\"st0\">'Debug'</span>\n\t<span class=\"\
      sy0\">`</span>define LogdLine<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">`</span>logd<span class=\"br0\">(</span><span\
      \ class=\"st0\">\"------------------------------------------------------\"</span>,,<span\
      \ class=\"sy0\">`</span><span class=\"br0\">{</span>LogName<span class=\"br0\"\
      >}</span><span class=\"br0\">)</span>;\n\t<span class=\"sy0\">`</span>define\
      \ LogFunc<span class=\"br0\">(</span><span class=\"kw5\">Name</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">`</span><span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">Self</span><span class=\"sy0\">$</span><span\
      \ class=\"st0\">\".\"</span><span class=\"sy0\">$</span>class.<span class=\"\
      kw5\">name</span><span class=\"sy0\">$</span><span class=\"st0\">\".\"</span><span\
      \ class=\"sy0\">$</span>GetFuncName<span class=\"br0\">(</span><span class=\"\
      br0\">)</span><span class=\"sy0\">$</span><span class=\"st0\">\"()\"</span>,,<span\
      \ class=\"sy0\">`</span><span class=\"kw5\">Name</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"sy0\">`</span>define LogdFunc<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">`</span>logd<span class=\"br0\"\
      >(</span><span class=\"kw6\">Self</span><span class=\"sy0\">$</span><span class=\"\
      st0\">\".\"</span><span class=\"sy0\">$</span>class.<span class=\"kw5\">name</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\".\"</span><span class=\"sy0\"\
      >$</span>GetFuncName<span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\"()\"</span>,,<span class=\"sy0\"\
      >`</span><span class=\"br0\">{</span>LogName<span class=\"br0\">}</span><span\
      \ class=\"br0\">)</span>;\n\t<span class=\"sy0\">`</span>define LogF<span class=\"\
      br0\">(</span><span class=\"kw5\">string</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">`</span>logd<span class=\"br0\">(</span>GetFuncName<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">$</span><span\
      \ class=\"st0\">\"(): \"</span><span class=\"sy0\">$`</span><span class=\"br0\"\
      >{</span><span class=\"kw5\">string</span><span class=\"br0\">}</span>,,<span\
      \ class=\"sy0\">`</span><span class=\"br0\">{</span>LogName<span class=\"br0\"\
      >}</span><span class=\"br0\">)</span>;\n \n\t<span class=\"coMULTI\">/* Pawn\
      \ */</span>\n\t<span class=\"sy0\">`</span>define ColHeight CylinderComponent.<span\
      \ class=\"kw7\">CollisionHeight</span>\n\t<span class=\"sy0\">`</span>define\
      \ ColRadius CylinderComponent.<span class=\"kw7\">CollisionRadius</span>\n\t\
      <span class=\"sy0\">`</span>define DefColHeight CylinderComponent.<span class=\"\
      kw1\">Default</span>.<span class=\"kw7\">CollisionHeight</span>\n\t<span class=\"\
      sy0\">`</span>define DefColRadius CylinderComponent.<span class=\"kw1\">Default</span>.<span\
      \ class=\"kw7\">CollisionRadius</span></pre></div>\n</div>\n<p><br /></p>\n\n\
      <!-- \nNewPP limit report\nCPU time usage: 0.090 seconds\nReal time usage: 0.091\
      \ seconds\nPreprocessor visited node count: 70/1000000\nPreprocessor generated\
      \ node count: 148/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:29236-0!*!*!!en!*!* and timestamp 20221118150526 and revision\
      \ id 45050\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Including Macro Files"
    number: "1"
    index: "1"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 0
    anchor: "Including_Macro_Files"
  - toclevel: 2
    level: "3"
    line: "Example Macro File"
    number: "1.1"
    index: "2"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 128
    anchor: "Example_Macro_File"
  - toclevel: 1
    level: "2"
    line: "Example of usage"
    number: "2"
    index: "3"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 530
    anchor: "Example_of_usage"
  - toclevel: 2
    level: "3"
    line: "YourConfig"
    number: "2.1"
    index: "4"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 978
    anchor: "YourConfig"
  - toclevel: 1
    level: "2"
    line: "Example of usage"
    number: "3"
    index: "5"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 1047
    anchor: "Example_of_usage_2"
  - toclevel: 1
    level: "2"
    line: "Useful Macros"
    number: "4"
    index: "6"
    fromtitle: "User:00zX/Using_The_Unreal_Engine_3_Preprocessor"
    byteoffset: 1469
    anchor: "Useful_Macros"
  displaytitle: "User:00zX/Using The Unreal Engine 3 Preprocessor"
  iwlinks: []
  wikitext:
    text: "==Including Macro Files==\n<uscript>\nclass YourPawn extends UTPawn\n\t\
      config(YourConfig);\n\n`include(YourMacroFile.uci)\n</uscript>\n\n===Example\
      \ Macro File===\nWhen compiling with the '''-debug''' command line switch, the\
      \ debug macro will then be defined and will switch our blank spaces to config/exec\
      \ respectively.\n\n<uscript>\n`if(`notdefined(Debug))\n `define dconf\n `define\
      \ dexec\n`else\n `define dconf config\n `define dexec exec\n`endif\n</uscript>\n\
      \nCopy the above template into a blank text document and call the file YourMacroFile.uci\n\
      \n==Example of usage==\nIf we want to add a variable thats configurable only\
      \ when the macro `DevBuild is defined.\n\n<uscript>\nclass YourPawn extends\
      \ UTPawn\n\tconfig(YourConfig);\n\n`include(YourMacroFile.uci)\n\nvar `{dconf}\
      \ bool\tbCanDodge;\n\nfunction bool Dodge(eDoubleClickDir DoubleClickMove)\n\
      {\n\tif(bCanDodge)\n\t\treturn Super.Dodge(DoubleClickMove);\n\telse\n\t\treturn\
      \ false;\n}\n\ndefaultproperties\n{\n`if(`notdefined(Debug))\n\tbCanDodge=True\n\
      `endif\n}\n</uscript>\n\n===YourConfig===\n<pre>\n[YourPackage.YourPawn]\nbCanDodge=True\n\
      </pre>\n\n==Example of usage==\nIf we want to add a variable that already exists\
      \ but is not config editable. (PostBeginPlay)\n<uscript>\nclass YourPawn extends\
      \ UTPawn\n\tconfig(YourConfig);\n\n`include(YourMacroFile.uci)\n\n`if(`isdefined(Debug))\n\
      var `{dconf} float\tnewGroundSpeed;\n\nfunction PossessedBy(Controller C, bool\
      \ bVehicleTransition)\n{\n\tSuper.PossessedBy(C, bVehicleTransition);\n\n\t\
      GroundSpeed = newGroundSpeed;\n}\n`endif\n\n</uscript>\n==Useful Macros==\n\
      <uscript>\n/**\n * 2005-2011 Daniel Batten (aka 00zX or MonsOlympus)\n */\n\n\
      /** UDK HELPERS */\n\n\t/*`define redef(OldDef, NewDef) `undefine `{OldDef}\
      \ `define `{OldDef} `{NewDef}*/\n\n\t/* Globals */\n\t`define sWorld_Info class'WorldInfo'.static.GetWorldInfo()\n\
      \t`define sGame_RepInfo `{sWorldInfo}.GRI\n\t`define sGravity `{sWorldInfo}.WorldGravityZ\n\
      \t`define sEngine class'Engine'.static\n\n\n\t/** Timers - checks the timers\
      \ to see if they are active before setting or clearing them. */\n\t`define CheckClearTimer(name)\
      \ if(IsTimerActive(nameof(`name))){ClearTimer(nameof(`name));}\n\t`define CheckSetTimer(time,\
      \ loop, name) if(!IsTimerActive(nameof(`name))){SetTimer(`time, `loop, nameof(`name));}\n\
      \t`define ResetTimer(time, loop, name) SetTimer(`time, `loop, nameof(`name))\n\
      \n\t/** Variables and Defaults */\n\t`define SetToDefault(Obj, Var) `{Obj}.`{Var}\
      \ = `{Obj}.Default.`{Var}\n\t`define SetVar(Obj, Var) `{Obj}.`{Var} = `{Var}\n\
      \           //Usage: `SetVar(`P, MaxMultiJump) ~ where `P is UTPawn(Pawn) cast.\n\
      \           //Outputs: UTPawn(Pawn).MaxMultiJump = MaxMultiJump; ~ Where UT\
      \ Prefix can be a macro also.\n\n\t`define CheckRet(Obj) if(`Obj == none) return\n\
      \n\t/** Save/Load Object */\n\t`define SaveObj(Obj, FileName, Bool, Ver) `sEngine().BasicSaveObject(`{Obj},\
      \ `{FileName}, `{Bool}, `{Ver})\n\t`define LoadObj(Obj, FileName, Bool, Ver)\
      \ `sEngine().BasicSaveObject(`{Obj}, `{FileName}, `{Bool}, `{Ver})\n\n\t/**\
      \ MetaTags */\n\t`define mUI(min, max) <UIMin=`min | UIMax=`max>\n\t`define\
      \ mClamp(min, max) <ClampMin=`min | ClampMax=`max>\n\t`define mUIClamp(min,\
      \ max) <UIMin=`min | UIMax=`max | ClampMin=`min | ClampMax=`max>\n\n\t/* Debugging\
      \ */\n\t`define LogName 'Debug'\n\t`define LogdLine() `logd(\"------------------------------------------------------\"\
      ,,`{LogName});\n\t`define LogFunc(Name) `log(Self$\".\"$class.name$\".\"$GetFuncName()$\"\
      ()\",,`Name);\n\t`define LogdFunc() `logd(Self$\".\"$class.name$\".\"$GetFuncName()$\"\
      ()\",,`{LogName});\n\t`define LogF(string) `logd(GetFuncName()$\"(): \"$`{string},,`{LogName});\n\
      \n\t/* Pawn */\n\t`define ColHeight CylinderComponent.CollisionHeight\n\t`define\
      \ ColRadius CylinderComponent.CollisionRadius\n\t`define DefColHeight CylinderComponent.Default.CollisionHeight\n\
      \t`define DefColRadius CylinderComponent.Default.CollisionRadius\n</uscript>\n\
      \n<br>"
  properties: []
  revId: 45050
name: "User:00zX/Using The Unreal Engine 3 Preprocessor"
revision:
  revid: 45050
  parentid: 45049
  user: "00zX"
  timestamp: 1331032286.000000000
  comment: "/* Useful Macros */  Added usage example and output for SetVar"
timestamp: 1668783927.095652000
