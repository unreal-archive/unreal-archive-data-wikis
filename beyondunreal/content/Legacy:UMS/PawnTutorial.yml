---
parse:
  title: "Legacy:UMS/PawnTutorial"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Unreal_Movie_Studio_Pawns\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Unreal Movie Studio\
      \ Pawns</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Introduction\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Introduction</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-3\"><a href=\"#Adding_a_pawn_and_setting_its_mesh\"\
      ><span class=\"tocnumber\">1.2</span> <span class=\"toctext\">Adding a pawn\
      \ and setting its mesh</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#Giving_a_pawn_its_skin\"><span class=\"tocnumber\">1.3</span> <span\
      \ class=\"toctext\">Giving a pawn its skin</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-5\"><a href=\"#Moving_and_rotating_the_pawn\"><span class=\"tocnumber\"\
      >1.4</span> <span class=\"toctext\">Moving and rotating the pawn</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-6\"><a href=\"#Animating_a_pawn\"><span class=\"\
      tocnumber\">1.5</span> <span class=\"toctext\">Animating a pawn</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-7\"><a href=\"#Stopping_an_animation\"><span\
      \ class=\"tocnumber\">1.6</span> <span class=\"toctext\">Stopping an animation</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-8\"><a href=\"#Giving_a_pawn_a_weapon\"><span\
      \ class=\"tocnumber\">1.7</span> <span class=\"toctext\">Giving a pawn a weapon</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-9\"><a href=\"#Making_a_pawn_fire_it.27s_weapon\"\
      ><span class=\"tocnumber\">1.8</span> <span class=\"toctext\">Making a pawn\
      \ fire it's weapon</span></a></li>\n<li class=\"toclevel-2 tocsection-10\"><a\
      \ href=\"#Other_pawn_options\"><span class=\"tocnumber\">1.9</span> <span class=\"\
      toctext\">Other pawn options</span></a></li>\n<li class=\"toclevel-2 tocsection-11\"\
      ><a href=\"#What.27s_next\"><span class=\"tocnumber\">1.10</span> <span class=\"\
      toctext\">What's next</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\"Unreal_Movie_Studio_Pawns\">Unreal Movie\
      \ Studio Pawns</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=1\" title=\"Edit section:\
      \ Unreal Movie Studio Pawns\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>by Hugh Macdonald</p>\n<p><a rel=\"nofollow\" class=\"\
      external text\" href=\"http://unframed.brokenpipefilms.com\">UnFramed Productions</a></p>\n\
      <p><a href=\"/Legacy:UMS\" title=\"Legacy:UMS\">Main UMS Page</a></p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Introduction\">Introduction</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=2\"\
      \ title=\"Edit section: Introduction\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>This tutorial aims to give the UMS user the information\
      \ needed to put pawns, both human models, and inanimate objects, into their\
      \ scene.</p>\n<h3><span class=\"mw-headline\" id=\"Adding_a_pawn_and_setting_its_mesh\"\
      >Adding a pawn and setting its mesh</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=3\"\
      \ title=\"Edit section: Adding a pawn and setting its mesh\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<ol>\n<li>The first thing to\
      \ do is lo load up your level, and load up UMS.u</li>\n<li>Once you have done\
      \ that, locate <b>MoviePawn</b> in the class browser (Pawn &gt;&gt; MoviePawn),\
      \ and add it to some point in your level. By default, it will look like a <a\
      \ href=\"/Legacy:Nali\" title=\"Legacy:Nali\">Nali</a> (If you haven't played\
      \ Unreal 1, you won't know what a Nali is – it is a strange 4 armed alien)</li>\n\
      <li>The next thing to do is to find the right mesh that you want to use on your\
      \ actor. It doesn't have to be a person - it can be a vehicle, or other object.\
      \ Do <a href=\"/Legacy:UnrealEd_Main_Menu\" title=\"Legacy:UnrealEd Main Menu\"\
      >UnrealEd Main Menu</a> -&gt; Window -&gt; Mesh Viewer to open up the Mesh Viewer,\
      \ and find the mesh that you want to use. In the window of the mesh viewer,\
      \ you can rotate the mesh around, by clicking in the window and holding the\
      \ Right Mouse Button, and you cn zoom with the Left Mouse Button. In this example,\
      \ I have chosen the Commando. The skin doesn't look right at all - that is because\
      \ it uses multi-skins - I will cover those in a bit. The human meshes that come\
      \ with Unreal Tournament are Commando, Soldier, FCommando, and SGirl (Don't\
      \ ask why they didn't do FSoldier - I haven't got a clue!)</li>\n<li>Once you\
      \ have found the mesh that you wish to use, you have to set this to the MoviePawn\
      \ that you have added to the level. With the Mesh Viewer still open, Open up\
      \ the MoviePawn properties, and expand <b>Display</b>. Find <b>Mesh</b> and\
      \ click on <b>Use</b>. This will convert the Nali into whatever mesh you selected.</li>\n\
      <li>While you are still in the MoviePawn properties, there are a couple of other\
      \ things that you can do. The first one is to give it a name. I find it most\
      \ useful to give it the name of the character. the other thing is to change\
      \ the <a href=\"/Legacy:Collision_Cylinder\" title=\"Legacy:Collision Cylinder\"\
      >collision cylinder</a>'s radius and height. That way there will be no problem\
      \ if someone gets slightly too close to a wall, or another person. This is located\
      \ in <b>Collision -&gt; CollisionHeight</b> and <b>Collision -&gt; CollisionRadius</b></li>\n\
      <li>If you now go back to the 2D views, and have a look at the side on view\
      \ of where the pawn is, you will see that it's feet are probably under the ground.\
      \ Move it up until it's feet are just touching the ground.</li>\n</ol>\n<h3><span\
      \ class=\"mw-headline\" id=\"Giving_a_pawn_its_skin\">Giving a pawn its skin</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UMS/PawnTutorial?section=4\" title=\"Edit section: Giving\
      \ a pawn its skin\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>This only applies to pawns which use MultiSkins (generally those whose\
      \ skin in the <b>Mesh Viewer</b> is a strange black and blue). This first thing\
      \ to do is to load up the texture file with the skins in. This will be the name\
      \ of the mesh (Commando, Soldier, etc) followed by Skins (This is only true\
      \ for the ones that came with UT - if you have made a mesh and skins yourself,\
      \ then they will be wherever you put them).</li>\n<li>To load up a texture file,\
      \ change to the <a href=\"/edit/Legacy:Texure_Browser?redlink=1\" class=\"new\"\
      \ title=\"Legacy:Texure Browser (page does not exist)\">Texure Browser</a> and,\
      \ at the bottom of the screen, click on <b>Load</b>. Find the texture package\
      \ you want, and click on <b>Open</b>. Then, find the texture package (in the\
      \ list box underneath where you select what you are browsing).</li>\n<li>If\
      \ you now go back to the MoviePawn properties, and go to <b>Display -&gt; MultiSkins</b>,\
      \ you will see there is a list of places where you can put different texture\
      \ files. If you then look at the skins in the texture file, you will see that\
      \ they start with four letters (in CommandoSkins, they are <b>cmdo</b>, <b>daco</b>,\
      \ and <b>goth</b>) followed by a number. This number does <b>NOT</b> correspond\
      \ to the slot in the MoviePawn properties. The number means 'first skin', 'second\
      \ skin' etc. The first slot in the MultiSkins is, however, 0. So, <b>cmdo1</b>\
      \ would go into slot 0. Do check the numbers. In FCommandoSkins, they are 1,\
      \ 2, and 4 (which would go into MultiSkin slots 0, 1, and 3).</li>\n<li>Once\
      \ you have your skin on, your pawn should be looking a lot better, and you are\
      \ ready to go on and give it some movement.</li>\n</ol>\n<h3><span class=\"\
      mw-headline\" id=\"Moving_and_rotating_the_pawn\">Moving and rotating the pawn</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UMS/PawnTutorial?section=5\" title=\"Edit section: Moving\
      \ and rotating the pawn\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>Movement and rotation with pawns is very similar to Dollying and Panning\
      \ with cameras. In fact, apart from the names, they are identical. With pawns,\
      \ you have to start the command off with <b>Pawn</b>, followed by the name of\
      \ the pawn (I will call it <b>Pawn1</b>).</li>\n<li>So, to make the pawn move\
      \ to a SimplePoint called <b>PawnPoint1</b>, you would put <b>Pawn Pawn1 Move\
      \ To PawnPoint1</b>. Similarly, to make the pawn rotate to face <b>PawnPoint1</b>,\
      \ you would put <b>Pawn Pawn1 Rotate To PawnPoint1</b>.</li>\n<li>As with cameras,\
      \ the <b>ScriptVals</b> has the time you want the pawn to take doing the action\
      \ in.</li>\n</ol>\n<h3><span class=\"mw-headline\" id=\"Animating_a_pawn\">Animating\
      \ a pawn</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=6\" title=\"Edit section:\
      \ Animating a pawn\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>So far, what you have done with moving and rotating pawns will only\
      \ have moved the static mesh. There will be no animation at all - it will look\
      \ like it is floating. So, we have to tell it to animate as well.</li>\n<li>The\
      \ first thing to do is to find the animation that we want the pawn to do. To\
      \ do this, first load up the <b>Mesh Viewer</b>. Find the mesh that you are\
      \ using, and click on <b>Play &gt;&gt;</b>. This will play through all the animations\
      \ that are available for that mesh. Have a look through all the animations in\
      \ <b>Animation Sequence</b> until you find the one you want. (A good running\
      \ sequence is <b>RunSm</b> and a walking one is <b>Walk</b>).</li>\n<li>When\
      \ you have found the animation that you want, write down the name, and write\
      \ down how many frames it is (When it is playing, it will say <b>Playing X frames</b>).\
      \ The reason you need to write down how many frames it is, is because you will\
      \ later have to tell it how long you want it to take to complete one animation\
      \ cycle. I normally go by 15 frames per second. So, 10 frames will be 0.666\
      \ seconds, 7 frames will be 0.5, etc.</li>\n<li>Now that you have this information,\
      \ go back to your <b>Director</b>. The command that you have to put in is as\
      \ follows: <b>Pawn Pawn1 PlayAnim</b> This will play a single animation, and\
      \ then stop. If, however, the animation that you want to use is a looping one\
      \ (running, walking, etc) then you need to put <b>Pawn Pawn1 PlayAnim Loop</b></li>\n\
      <li>This will not tell it what animation to play, though. To do this, go to\
      \ <b>ScriptNames</b> and add the animation name in there. This is where PlayAnim\
      \ looks for it's animation.</li>\n<li><b>ScriptVals</b> is where you should\
      \ put the time you want the animation to take. NOTE: If you want something to\
      \ go in slow motion, set the animation time at normal rate, and change the speed\
      \ with SetSpeed (covered in more detail in the <a href=\"/Legacy:UMS/AdvancedTutorial\"\
      \ title=\"Legacy:UMS/AdvancedTutorial\">Advanced Tutorial</a>)</li>\n<li>There\
      \ is also the <b>TweenTime</b> that has to be put in. This is the time it takes\
      \ 'morphing' from one animation to another. This should go in one of the <b>ScriptVectors</b>.\
      \ I generally like to use 0.5 seconds for this.</li>\n</ol>\n<h3><span class=\"\
      mw-headline\" id=\"Stopping_an_animation\">Stopping an animation</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UMS/PawnTutorial?section=7\" title=\"Edit section: Stopping\
      \ an animation\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>There are two ways of stopping an animation. You can either do it\
      \ by letting the animation cycle run to the end, and stopping it there, or doing\
      \ a hard stop, and skipping straight to the end.</li>\n<li>To do a 'soft' stop,\
      \ the command is <b>Pawn Pawn1 StopAnim</b>. If you want it to be a hard stop,\
      \ you just add Hard onto the end to give <b>Pawn Pawn1 StopAnim Hard</b>. That\
      \ is all there is to stopping an animation.</li>\n</ol>\n<h3><span class=\"\
      mw-headline\" id=\"Giving_a_pawn_a_weapon\">Giving a pawn a weapon</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UMS/PawnTutorial?section=8\" title=\"Edit section: Giving\
      \ a pawn a weapon\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>The first thing to note is that this will only work with a mesh that\
      \ has been designed to have a weapon. All the pawns that the game can be played\
      \ using have this ability, but if you are importing a model yourself, you will\
      \ have to make sure you can do this.</li>\n<li>The first thing to do is to find\
      \ the weapon that you want to use. In the Classes Browser, go to <b>Inventory\
      \ -&gt; Weapon -&gt; TournamentWeapon</b>. Then click on the weapon that you\
      \ want to use, and look at what appears near the bottom of the Classes Browser.\
      \ This will be something along the lines of <b>botpack.something</b></li>\n\
      <li>Now, back in the <b>Director</b>, we need to give the command to set the\
      \ weapon. This is done using this command: <b>Pawn Pawn1 SetWeapon botpack.something</b>,\
      \ where <b>botpack.something</b> is what was at the bottom of the Classes Browser.\
      \ From this point on in the movie, that pawn will be carrying around that weapon.</li>\n\
      </ol>\n<h3><span class=\"mw-headline\" id=\"Making_a_pawn_fire_it.27s_weapon\"\
      >Making a pawn fire it's weapon</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=9\"\
      \ title=\"Edit section: Making a pawn fire it's weapon\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<ol>\n<li>This will only work\
      \ if the pawn has a weapon. If not, nothing will happen. You have to make sure\
      \ you have the point that the weapon is going to fire at (if this is another\
      \ pawn, don't forget that it won't die by itself - you have to do that animation\
      \ as well)</li>\n<li>The command for firing a weapon is: <b>Pawn Pawn1 Fire\
      \ FirePoint1</b>, where <b>FirePoint1</b> is the point that it is going to fire\
      \ at. Remember that it only fires towards the point. If it hits anything on\
      \ the way, then it will stop.</li>\n<li>The other thing that you need to set\
      \ is the offset from the pawn that it is going to fire from. If the pawn's collision\
      \ radius and height are 0, and you don't see it start (ie either the camera\
      \ isn't on the pawn firing, or it is a weapon that you don't see it start, like\
      \ the sniper rifle), then you don't need to make sure the offset is accurate.\
      \ If, however, you want to see the rocket, or whatever it is that is fired,\
      \ appear in the right place, then you have to (a) make the pawn do the right\
      \ animation, and (b) work out (by trial and error) what the offset should be.</li>\n\
      </ol>\n<h3><span class=\"mw-headline\" id=\"Other_pawn_options\">Other pawn\
      \ options</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=10\" title=\"Edit section:\
      \ Other pawn options\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ol>\n<li>There are two other things that a pawn can do. These wouldn't really\
      \ be used with human pawns. These are Circling and Tracking (well, Track could\
      \ be used to make one pawn watch another).</li>\n<li>The commands for these\
      \ are: <b>Pawn Pawn1 Circle CirclePoint</b> where <b>CirclePoint</b> is the\
      \ point that you want <b>Pawn1</b> to circle and <b>Pawn Pawn1 Track Pawn2</b>\
      \ where <b>Pawn2</b> is the object (or pawn) that you want <b>Pawn1</b> to track.</li>\n\
      <li>All other details of these commands are in the <a href=\"/Legacy:UMS/CameraTutorial\"\
      \ title=\"Legacy:UMS/CameraTutorial\">Cameras tutorial</a></li>\n</ol>\n<h3><span\
      \ class=\"mw-headline\" id=\"What.27s_next\">What's next</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UMS/PawnTutorial?section=11\"\
      \ title=\"Edit section: What's next\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>That is about it for pawns. In the <a href=\"/Legacy:UMS/AdvancedTutorial\"\
      \ title=\"Legacy:UMS/AdvancedTutorial\">next tutorial</a> I will cover advanced\
      \ features of the director, like sound effects, spawning items, changing levels,\
      \ and more.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.042 seconds\n\
      Real time usage: 0.044 seconds\nPreprocessor visited node count: 42/1000000\n\
      Preprocessor generated node count: 48/1000000\nPost‐expand include size: 0/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:3364-0!*!0!!en!*!*\
      \ and timestamp 20221118024219 and revision id 8681\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Nali"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Main Menu"
  - ns: 100
    exists: false
    name: "Legacy:Texure Browser"
  - ns: 100
    exists: true
    name: "Legacy:UMS/AdvancedTutorial"
  - ns: 100
    exists: true
    name: "Legacy:UMS"
  - ns: 100
    exists: true
    name: "Legacy:UMS/CameraTutorial"
  - ns: 100
    exists: true
    name: "Legacy:Collision Cylinder"
  templates: []
  images: []
  externallinks:
  - "http://unframed.brokenpipefilms.com"
  sections:
  - toclevel: 1
    level: "2"
    line: "Unreal Movie Studio Pawns"
    number: "1"
    index: "1"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 0
    anchor: "Unreal_Movie_Studio_Pawns"
  - toclevel: 2
    level: "3"
    line: "Introduction"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 141
    anchor: "Introduction"
  - toclevel: 2
    level: "3"
    line: "Adding a pawn and setting its mesh"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 301
    anchor: "Adding_a_pawn_and_setting_its_mesh"
  - toclevel: 2
    level: "3"
    line: "Giving a pawn its skin"
    number: "1.3"
    index: "4"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 2511
    anchor: "Giving_a_pawn_its_skin"
  - toclevel: 2
    level: "3"
    line: "Moving and rotating the pawn"
    number: "1.4"
    index: "5"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 4080
    anchor: "Moving_and_rotating_the_pawn"
  - toclevel: 2
    level: "3"
    line: "Animating a pawn"
    number: "1.5"
    index: "6"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 4721
    anchor: "Animating_a_pawn"
  - toclevel: 2
    level: "3"
    line: "Stopping an animation"
    number: "1.6"
    index: "7"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 6864
    anchor: "Stopping_an_animation"
  - toclevel: 2
    level: "3"
    line: "Giving a pawn a weapon"
    number: "1.7"
    index: "8"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 7308
    anchor: "Giving_a_pawn_a_weapon"
  - toclevel: 2
    level: "3"
    line: "Making a pawn fire it's weapon"
    number: "1.8"
    index: "9"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 8248
    anchor: "Making_a_pawn_fire_it.27s_weapon"
  - toclevel: 2
    level: "3"
    line: "Other pawn options"
    number: "1.9"
    index: "10"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 9363
    anchor: "Other_pawn_options"
  - toclevel: 2
    level: "3"
    line: "What's next"
    number: "1.10"
    index: "11"
    fromtitle: "Legacy:UMS/PawnTutorial"
    byteoffset: 9929
    anchor: "What.27s_next"
  displaytitle: "Legacy:UMS/PawnTutorial"
  iwlinks: []
  wikitext:
    text: "==Unreal Movie Studio Pawns ==\n\nby Hugh Macdonald\n\n[http://unframed.brokenpipefilms.com\
      \ UnFramed Productions]\n\n[[Legacy:UMS|Main UMS Page]]\n\n===Introduction ===\n\
      \nThis tutorial aims to give the UMS user the information needed to put pawns,\
      \ both human models, and inanimate objects, into their scene. \n\n===Adding\
      \ a pawn and setting its mesh ===\n\n# The first thing to do is lo load up your\
      \ level, and load up UMS.u  \n# Once you have done that, locate '''MoviePawn'''\
      \ in the class browser (Pawn >> MoviePawn), and add it to some point in your\
      \ level. By default, it will look like a [[Legacy:Nali|Nali]] (If you haven't\
      \ played Unreal 1, you won't know what a Nali is &ndash; it is a strange 4 armed\
      \ alien) \n# The next thing to do is to find the right mesh that you want to\
      \ use on your actor. It doesn't have to be a person - it can be a vehicle, or\
      \ other object. Do [[Legacy:UnrealEd Main Menu|UnrealEd Main Menu]] -> Window\
      \ -> Mesh Viewer to open up the Mesh Viewer, and find the mesh that you want\
      \ to use. In the window of the mesh viewer, you can rotate the mesh around,\
      \ by clicking in the window and holding the Right Mouse Button, and you cn zoom\
      \ with the Left Mouse Button. In this example, I have chosen the Commando. The\
      \ skin doesn't look right at all - that is because it uses multi-skins - I will\
      \ cover those in a bit. The human meshes that come with Unreal Tournament are\
      \ Commando, Soldier, FCommando, and SGirl (Don't ask why they didn't do FSoldier\
      \ - I haven't got a clue!) \n# Once you have found the mesh that you wish to\
      \ use, you have to set this to the MoviePawn that you have added to the level.\
      \ With the Mesh Viewer still open, Open up the MoviePawn properties, and expand\
      \ '''Display'''. Find '''Mesh''' and click on '''Use'''. This will convert the\
      \ Nali into whatever mesh you selected. \n# While you are still in the MoviePawn\
      \ properties, there are a couple of other things that you can do. The first\
      \ one is to give it a name. I find it most useful to give it the name of the\
      \ character. the other thing is to change the [[Legacy:Collision Cylinder|collision\
      \ cylinder]]'s radius and height. That way there will be no problem if someone\
      \ gets slightly too close to a wall, or another person. This is located in '''Collision\
      \ -> CollisionHeight''' and '''Collision -> CollisionRadius''' \n# If you now\
      \ go back to the 2D views, and have a look at the side on view of where the\
      \ pawn is, you will see that it's feet are probably under the ground. Move it\
      \ up until it's feet are just touching the ground. \n\n===Giving a pawn its\
      \ skin ===\n\n# This only applies to pawns which use MultiSkins (generally those\
      \ whose skin in the '''Mesh Viewer''' is a strange black and blue). This first\
      \ thing to do is to load up the texture file with the skins in. This will be\
      \ the name of the mesh (Commando, Soldier, etc) followed by Skins (This is only\
      \ true for the ones that came with UT - if you have made a mesh and skins yourself,\
      \ then they will be wherever you put them). \n# To load up a texture file, change\
      \ to the [[Legacy:Texure Browser|Texure Browser]] and, at the bottom of the\
      \ screen, click on '''Load'''. Find the texture package you want, and click\
      \ on '''Open'''. Then, find the texture package (in the list box underneath\
      \ where you select what you are browsing). \n# If you now go back to the MoviePawn\
      \ properties, and go to '''Display -> MultiSkins''', you will see there is a\
      \ list of places where you can put different texture files. If you then look\
      \ at the skins in the texture file, you will see that they start with four letters\
      \ (in CommandoSkins, they are '''cmdo''', '''daco''', and '''goth''') followed\
      \ by a number. This number does '''NOT''' correspond to the slot in the MoviePawn\
      \ properties. The number means 'first skin', 'second skin' etc. The first slot\
      \ in the MultiSkins is, however, 0. So, '''cmdo1''' would go into slot 0. Do\
      \ check the numbers. In FCommandoSkins, they are 1, 2, and 4 (which would go\
      \ into MultiSkin slots 0, 1, and 3). \n# Once you have your skin on, your pawn\
      \ should be looking a lot better, and you are ready to go on and give it some\
      \ movement.\n\n===Moving and rotating the pawn ===\n\n# Movement and rotation\
      \ with pawns is very similar to Dollying and Panning with cameras. In fact,\
      \ apart from the names, they are identical. With pawns, you have to start the\
      \ command off with '''Pawn''', followed by the name of the pawn (I will call\
      \ it '''Pawn1'''). \n# So, to make the pawn move to a SimplePoint called '''PawnPoint1''',\
      \ you would put '''Pawn Pawn1 Move To PawnPoint1'''. Similarly, to make the\
      \ pawn rotate to face '''PawnPoint1''', you would put '''Pawn Pawn1 Rotate To\
      \ PawnPoint1'''.\n# As with cameras, the '''ScriptVals''' has the time you want\
      \ the pawn to take doing the action in. \n\n===Animating a pawn ===\n\n# So\
      \ far, what you have done with moving and rotating pawns will only have moved\
      \ the static mesh. There will be no animation at all - it will look like it\
      \ is floating. So, we have to tell it to animate as well. \n# The first thing\
      \ to do is to find the animation that we want the pawn to do. To do this, first\
      \ load up the '''Mesh Viewer'''. Find the mesh that you are using, and click\
      \ on '''Play >>'''. This will play through all the animations that are available\
      \ for that mesh. Have a look through all the animations in '''Animation Sequence'''\
      \ until you find the one you want. (A good running sequence is '''RunSm''' and\
      \ a walking one is '''Walk'''). \n# When you have found the animation that you\
      \ want, write down the name, and write down how many frames it is (When it is\
      \ playing, it will say '''Playing X frames'''). The reason you need to write\
      \ down how many frames it is, is because you will later have to tell it how\
      \ long you want it to take to complete one animation cycle. I normally go by\
      \ 15 frames per second. So, 10 frames will be 0.666 seconds, 7 frames will be\
      \ 0.5, etc. \n# Now that you have this information, go back to your '''Director'''.\
      \ The command that you have to put in is as follows: '''Pawn Pawn1 PlayAnim'''\
      \ This will play a single animation, and then stop. If, however, the animation\
      \ that you want to use is a looping one (running, walking, etc) then you need\
      \ to put '''Pawn Pawn1 PlayAnim Loop''' \n# This will not tell it what animation\
      \ to play, though. To do this, go to '''ScriptNames''' and add the animation\
      \ name in there. This is where PlayAnim looks for it's animation. \n# '''ScriptVals'''\
      \ is where you should put the time you want the animation to take. NOTE: If\
      \ you want something to go in slow motion, set the animation time at normal\
      \ rate, and change the speed with SetSpeed (covered in more detail in the [[Legacy:UMS/AdvancedTutorial|Advanced\
      \ Tutorial]]) \n# There is also the '''TweenTime''' that has to be put in. This\
      \ is the time it takes 'morphing' from one animation to another. This should\
      \ go in one of the '''ScriptVectors'''. I generally like to use 0.5 seconds\
      \ for this. \n\n===Stopping an animation ===\n\n# There are two ways of stopping\
      \ an animation. You can either do it by letting the animation cycle run to the\
      \ end, and stopping it there, or doing a hard stop, and skipping straight to\
      \ the end. \n# To do a 'soft' stop, the command is '''Pawn Pawn1 StopAnim'''.\
      \ If you want it to be a hard stop, you just add Hard onto the end to give '''Pawn\
      \ Pawn1 StopAnim Hard'''. That is all there is to stopping an animation. \n\n\
      ===Giving a pawn a weapon ===\n\n# The first thing to note is that this will\
      \ only work with a mesh that has been designed to have a weapon. All the pawns\
      \ that the game can be played using have this ability, but if you are importing\
      \ a model yourself, you will have to make sure you can do this. \n# The first\
      \ thing to do is to find the weapon that you want to use. In the Classes Browser,\
      \ go to '''Inventory -> Weapon -> TournamentWeapon'''. Then click on the weapon\
      \ that you want to use, and look at what appears near the bottom of the Classes\
      \ Browser. This will be something along the lines of '''botpack.something'''\
      \ \n# Now, back in the '''Director''', we need to give the command to set the\
      \ weapon. This is done using this command: '''Pawn Pawn1 SetWeapon botpack.something''',\
      \ where '''botpack.something''' is what was at the bottom of the Classes Browser.\
      \ From this point on in the movie, that pawn will be carrying around that weapon.\
      \ \n\n===Making a pawn fire it's weapon ===\n\n# This will only work if the\
      \ pawn has a weapon. If not, nothing will happen. You have to make sure you\
      \ have the point that the weapon is going to fire at (if this is another pawn,\
      \ don't forget that it won't die by itself - you have to do that animation as\
      \ well) \n# The command for firing a weapon is: '''Pawn Pawn1 Fire FirePoint1''',\
      \ where '''FirePoint1''' is the point that it is going to fire at. Remember\
      \ that it only fires towards the point. If it hits anything on the way, then\
      \ it will stop. \n# The other thing that you need to set is the offset from\
      \ the pawn that it is going to fire from. If the pawn's collision radius and\
      \ height are 0, and you don't see it start (ie either the camera isn't on the\
      \ pawn firing, or it is a weapon that you don't see it start, like the sniper\
      \ rifle), then you don't need to make sure the offset is accurate. If, however,\
      \ you want to see the rocket, or whatever it is that is fired, appear in the\
      \ right place, then you have to (a) make the pawn do the right animation, and\
      \ (b) work out (by trial and error) what the offset should be. \n\n===Other\
      \ pawn options ===\n\n# There are two other things that a pawn can do. These\
      \ wouldn't really be used with human pawns. These are Circling and Tracking\
      \ (well, Track could be used to make one pawn watch another). \n# The commands\
      \ for these are: '''Pawn Pawn1 Circle CirclePoint''' where '''CirclePoint'''\
      \ is the point that you want '''Pawn1''' to circle and '''Pawn Pawn1 Track Pawn2'''\
      \ where '''Pawn2''' is the object (or pawn) that you want '''Pawn1''' to track.\
      \ \n# All other details of these commands are in the [[Legacy:UMS/CameraTutorial|Cameras\
      \ tutorial]] \n\n===What's next ===\n\nThat is about it for pawns. In the [[Legacy:UMS/AdvancedTutorial|next\
      \ tutorial]] I will cover advanced features of the director, like sound effects,\
      \ spawning items, changing levels, and more."
  properties: []
  revId: 8681
name: "Legacy:UMS/PawnTutorial"
revision:
  revid: 8681
  parentid: 8683
  user: "Proxy3ext.disney.com"
  timestamp: 1033424594.000000000
  comment: "fixed Unframed Productions broken link"
timestamp: 1668787773.068163000
