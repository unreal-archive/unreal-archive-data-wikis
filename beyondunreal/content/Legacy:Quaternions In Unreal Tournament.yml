---
parse:
  title: "Legacy:Quaternions In Unreal Tournament"
  text:
    text: "<p>Below is some code that will allow you to use <a href=\"/Legacy:Quaternion\"\
      \ title=\"Legacy:Quaternion\">Quaternions</a> in Unreal Tournament. These are\
      \ taken from a brushbuilder made by <a href=\"/Legacy:Tarquin\" title=\"Legacy:Tarquin\"\
      >Tarquin</a>. All credit for the code goes to him. Other implementations have\
      \ also been made to allow the use of Quaternions, but they should all be functionally\
      \ similar. This quaternion definition has a minor bug which occurs when a full\
      \ 180° rotation is applied, however, so be forewarned.</p>\n<p></p>\n<div id=\"\
      toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n\
      <li class=\"toclevel-1 tocsection-1\"><a href=\"#Quaternion_definition\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Quaternion definition</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Vector_expression\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Vector expression</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Converting_Axial_Rotation_to_a_Quaternion\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Converting Axial\
      \ Rotation to a Quaternion</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"\
      ><a href=\"#Multipliplication_in_quaternions\"><span class=\"tocnumber\">4</span>\
      \ <span class=\"toctext\">Multipliplication in quaternions</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-5\"><a href=\"#Converting_Quaternions_to_a_Transformation_Matrix\"\
      ><span class=\"tocnumber\">5</span> <span class=\"toctext\">Converting Quaternions\
      \ to a Transformation Matrix</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"\
      ><a href=\"#Matrix_Functions\"><span class=\"tocnumber\">6</span> <span class=\"\
      toctext\">Matrix Functions</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"\
      ><a href=\"#Related_Topics\"><span class=\"tocnumber\">7</span> <span class=\"\
      toctext\">Related Topics</span></a></li>\n</ul>\n</div>\n<p></p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Quaternion_definition\">Quaternion definition</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=1\" title=\"\
      Edit section: Quaternion definition\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">struct</span> <span class=\"kw5\">Quat</span> <span class=\"br0\">{</span>\n\
      \ <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span> W,X,Y,Z;\n<span class=\"br0\">}</span>;</pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"Vector_expression\">Vector expression</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=2\" title=\"\
      Edit section: Vector expression\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co1\">// Sets the components of a vector. Vect cannot be used as it will not\
      \ accept an expression.</span>\n<span class=\"kw1\">function</span> <span class=\"\
      kw5\">vector</span> eVect<span class=\"br0\">(</span> <span class=\"kw5\">float</span>\
      \ x , <span class=\"kw5\">float</span> y , <span class=\"kw5\">float</span>\
      \ z <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n <span class=\"\
      co1\">// for some reason vect() wont work when setting an array element</span>\n\
      \ <span class=\"kw1\">local</span> <span class=\"kw5\">vector</span> v ;\n v.<span\
      \ class=\"me0\">x</span> <span class=\"sy0\">=</span> x ;\n v.<span class=\"\
      me0\">y</span> <span class=\"sy0\">=</span> y ;\n v.<span class=\"me0\">z</span>\
      \ <span class=\"sy0\">=</span> z ;\n <span class=\"kw2\">return</span> v ;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\"\
      \ id=\"Converting_Axial_Rotation_to_a_Quaternion\">Converting Axial Rotation\
      \ to a Quaternion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=3\"\
      \ title=\"Edit section: Converting Axial Rotation to a Quaternion\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co1\">// Takes a vector representing an axis\
      \ and an angle in radians.</span>\n<span class=\"co1\">// Returns the quaternion\
      \ representing a rotation of Theta about the axis.</span>\n<span class=\"kw1\"\
      >function</span> <span class=\"kw5\">quat</span> RotationToQuat<span class=\"\
      br0\">(</span> <span class=\"kw5\">vector</span> Axis , <span class=\"kw5\"\
      >float</span> Theta <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"co1\">// Theta must be given in radians</span>\n <span class=\"\
      co1\">// Axis need not be normalised</span>\n <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">quat</span> Q ;\n <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">float</span> L ;\n Axis <span class=\"sy0\">=</span> <span class=\"\
      kw3\">Normal</span><span class=\"br0\">(</span> Axis <span class=\"br0\">)</span>;\n\
      \ Q.<span class=\"me0\">W</span> <span class=\"sy0\">=</span> <span class=\"\
      kw3\">cos</span><span class=\"br0\">(</span> Theta <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">2</span> <span class=\"br0\">)</span> ;\n Q.<span class=\"\
      me0\">X</span> <span class=\"sy0\">=</span> Axis.<span class=\"me0\">X</span>\
      \ <span class=\"sy0\">*</span> <span class=\"kw3\">sin</span><span class=\"\
      br0\">(</span> Theta <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>\
      \ <span class=\"br0\">)</span> ;\n Q.<span class=\"me0\">Y</span> <span class=\"\
      sy0\">=</span> Axis.<span class=\"me0\">Y</span> <span class=\"sy0\">*</span>\
      \ <span class=\"kw3\">sin</span><span class=\"br0\">(</span> Theta <span class=\"\
      sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> ;\n\
      \ Q.<span class=\"me0\">Z</span> <span class=\"sy0\">=</span> Axis.<span class=\"\
      me0\">Z</span> <span class=\"sy0\">*</span> <span class=\"kw3\">sin</span><span\
      \ class=\"br0\">(</span> Theta <span class=\"sy0\">/</span> <span class=\"nu0\"\
      >2</span> <span class=\"br0\">)</span> ;\n <span class=\"co1\">// NORMALISE</span>\n\
      \ L <span class=\"sy0\">=</span> <span class=\"kw3\">Sqrt</span><span class=\"\
      br0\">(</span> Q.<span class=\"me0\">W</span><span class=\"sy0\">**</span><span\
      \ class=\"nu0\">2</span> <span class=\"sy0\">+</span> Q.<span class=\"me0\"\
      >X</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"\
      sy0\">+</span> Q.<span class=\"me0\">Y</span> <span class=\"sy0\">**</span>\
      \ <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> Q.<span class=\"\
      me0\">Z</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span\
      \ class=\"br0\">)</span> ;\n Q.<span class=\"me0\">W</span> <span class=\"sy0\"\
      >/=</span> L ;\n Q.<span class=\"me0\">X</span> <span class=\"sy0\">/=</span>\
      \ L ;\n Q.<span class=\"me0\">Y</span> <span class=\"sy0\">/=</span> L ;\n Q.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">/=</span> L ;\n <span class=\"\
      kw2\">return</span> Q ;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p><b>Daid303:</b> Is this the same as the new \"QuatFromAxisAndAngle\" function?</p>\n\
      <p><b>Tarquin:</b> in theory, yes, but there may be differences in which way\
      \ the angle and axis are used.</p>\n<p><b>Daid303:</b> Ah, ok, thx&#160;:) It\
      \ worked fine. I'm using some of this stuff in a C program i'm working on. Still\
      \ looking for a way to do Vector(Quat) as you can do Vector(Rotator), but without\
      \ doing this: Vector(Rotator(Quat))...</p>\n<p><b>FrozenCow:</b> Uhm... \"a\
      \ minor bug which occurs when a full 180° rotation is applied\" Is there a way\
      \ to fix this?</p>\n<p><b>Tarquin:</b> almost certainly. but it might involve\
      \ your brain leaking out of your ears! thinking in 4 dimensions is hard.&#160;:(</p>\n\
      <h3><span class=\"mw-headline\" id=\"Multipliplication_in_quaternions\">Multipliplication\
      \ in quaternions</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=4\"\
      \ title=\"Edit section: Multipliplication in quaternions\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p><a href=\"/edit/Legacy:Overload?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Overload (page does not exist)\">Overloads</a>\
      \ the * operator to multiply quaternions.</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">quat</span> <span class=\"sy0\">*</span> <span class=\"\
      br0\">(</span> <span class=\"kw5\">quat</span> Q1 , <span class=\"kw5\">quat</span>\
      \ Q2 <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n <span class=\"\
      kw1\">local</span> <span class=\"kw5\">vector</span> V1 , V2 , Vp ;\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">quat</span> Qp ;\n V1 <span\
      \ class=\"sy0\">=</span> eVect<span class=\"br0\">(</span> Q1.<span class=\"\
      me0\">X</span> , Q1.<span class=\"me0\">Y</span> , Q1.<span class=\"me0\">Z</span>\
      \ <span class=\"br0\">)</span> ;\n V2 <span class=\"sy0\">=</span> eVect<span\
      \ class=\"br0\">(</span> Q2.<span class=\"me0\">X</span> , Q2.<span class=\"\
      me0\">Y</span> , Q2.<span class=\"me0\">Z</span> <span class=\"br0\">)</span>\
      \ ;\n Qp.<span class=\"me0\">W</span> <span class=\"sy0\">=</span> Q1.<span\
      \ class=\"me0\">W</span> <span class=\"sy0\">*</span> Q2.<span class=\"me0\"\
      >W</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span> V1 dot V2\
      \ <span class=\"br0\">)</span> ;\n Vp <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span> Q1.<span class=\"me0\">W</span> <span class=\"sy0\">*</span>\
      \ V2 <span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"\
      br0\">(</span> Q2.<span class=\"me0\">W</span> <span class=\"sy0\">*</span>\
      \ V1 <span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"\
      br0\">(</span> V1 cross V2 <span class=\"br0\">)</span> ;\n Qp.<span class=\"\
      me0\">X</span> <span class=\"sy0\">=</span> Vp.<span class=\"me0\">X</span>\
      \ ;\n Qp.<span class=\"me0\">Y</span> <span class=\"sy0\">=</span> Vp.<span\
      \ class=\"me0\">Y</span> ;\n Qp.<span class=\"me0\">Z</span> <span class=\"\
      sy0\">=</span> Vp.<span class=\"me0\">Z</span> ;\n <span class=\"kw2\">return</span>\
      \ Qp ;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<h3><span class=\"\
      mw-headline\" id=\"Converting_Quaternions_to_a_Transformation_Matrix\">Converting\
      \ Quaternions to a Transformation Matrix</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=5\"\
      \ title=\"Edit section: Converting Quaternions to a Transformation Matrix\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> matrix3x3 QuatToMatrix\
      \ <span class=\"br0\">(</span> <span class=\"kw5\">quat</span> Q <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n <span class=\"kw1\">local</span>\
      \ matrix3x3 M ;\n <span class=\"kw1\">local</span> <span class=\"kw5\">float</span>\
      \ w,x,y,z ;\n w <span class=\"sy0\">=</span> Q.<span class=\"me0\">W</span>\
      \ ; x <span class=\"sy0\">=</span> Q.<span class=\"me0\">X</span> ; y <span\
      \ class=\"sy0\">=</span> Q.<span class=\"me0\">Y</span> ; z <span class=\"sy0\"\
      >=</span> Q.<span class=\"me0\">Z</span> ;\n M.<span class=\"me0\">a11</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\"\
      >-</span> <span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"\
      sy0\">*</span> y<span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span\
      \ class=\"br0\">)</span> <span class=\"sy0\">-</span>  <span class=\"br0\">(</span>\
      \ <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> z<span class=\"\
      sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> ;\n\
      \ M.<span class=\"me0\">a12</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">2</span><span class=\"sy0\">*</span>x<span class=\"sy0\">*</span>y <span\
      \ class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">*</span>z<span\
      \ class=\"sy0\">*</span>w ;\n M.<span class=\"me0\">a13</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">*</span>x<span\
      \ class=\"sy0\">*</span>z <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>y<span class=\"sy0\">*</span>w ;\n \n M.<span class=\"\
      me0\">a21</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>x<span class=\"sy0\">*</span>y <span class=\"sy0\">+</span>\
      \ <span class=\"nu0\">2</span><span class=\"sy0\">*</span>z<span class=\"sy0\"\
      >*</span>w ;\n M.<span class=\"me0\">a22</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"nu0\"\
      >2</span><span class=\"sy0\">*</span>x<span class=\"sy0\">**</span><span class=\"\
      nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>z<span class=\"sy0\">**</span><span class=\"nu0\">2</span>\
      \ ;\n M.<span class=\"me0\">a23</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">2</span><span class=\"sy0\">*</span>y<span class=\"sy0\">*</span>z <span\
      \ class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">*</span>x<span\
      \ class=\"sy0\">*</span>w ;\n \n M.<span class=\"me0\">a31</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">*</span>x<span\
      \ class=\"sy0\">*</span>z <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>y<span class=\"sy0\">*</span>w ;\n M.<span class=\"\
      me0\">a32</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>y<span class=\"sy0\">*</span>z <span class=\"sy0\">+</span>\
      \ <span class=\"nu0\">2</span><span class=\"sy0\">*</span>x<span class=\"sy0\"\
      >*</span>w ;\n M.<span class=\"me0\">a33</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"nu0\"\
      >2</span><span class=\"sy0\">*</span>x<span class=\"sy0\">**</span><span class=\"\
      nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span\
      \ class=\"sy0\">*</span>y<span class=\"sy0\">**</span><span class=\"nu0\">2</span>\
      \ ;\n <span class=\"coMULTI\">/*\n 1 - 2Y  - 2Z    2XY - 2ZW      2XZ + 2YW\
      \ \n 2XY + 2ZW       1 - 2X  - 2Z   2YZ - 2XW\n 2XZ - 2YW       2YZ + 2XW  \
      \    1 - 2X  - 2Y\n */</span>\n <span class=\"kw2\">return</span> M ;\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\"\
      \ id=\"Matrix_Functions\">Matrix Functions</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=6\"\
      \ title=\"Edit section: Matrix Functions\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Functions to define a matrix and multiply a matrix\
      \ and a vector, ie. apply the transformation the matrix represents to the vector.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ Matrix3x3 defMatrix9f<span class=\"br0\">(</span> <span class=\"kw5\">float</span>\
      \ a11,<span class=\"kw5\">float</span> a12,<span class=\"kw5\">float</span>\
      \ a13, <span class=\"kw5\">float</span> a21,<span class=\"kw5\">float</span>\
      \ a22,<span class=\"kw5\">float</span> a23,<span class=\"kw5\">float</span>\
      \ a31,<span class=\"kw5\">float</span> a32,<span class=\"kw5\">float</span>\
      \ a33 <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n <span class=\"\
      kw1\">local</span> Matrix3x3 theMatrix ;\n theMatrix.<span class=\"me0\">a11</span>\
      \ <span class=\"sy0\">=</span> a11 ;\n theMatrix.<span class=\"me0\">a12</span>\
      \ <span class=\"sy0\">=</span> a12 ;\n theMatrix.<span class=\"me0\">a13</span>\
      \ <span class=\"sy0\">=</span> a13 ;\n theMatrix.<span class=\"me0\">a21</span>\
      \ <span class=\"sy0\">=</span> a21 ;\n theMatrix.<span class=\"me0\">a22</span>\
      \ <span class=\"sy0\">=</span> a22 ;\n theMatrix.<span class=\"me0\">a23</span>\
      \ <span class=\"sy0\">=</span> a23 ;\n theMatrix.<span class=\"me0\">a31</span>\
      \ <span class=\"sy0\">=</span> a31 ;\n theMatrix.<span class=\"me0\">a32</span>\
      \ <span class=\"sy0\">=</span> a32 ;\n theMatrix.<span class=\"me0\">a33</span>\
      \ <span class=\"sy0\">=</span> a33 ;\n <span class=\"kw2\">return</span> theMatrix\
      \ ;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span class=\"\
      br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">vector</span> <span class=\"sy0\">*</span> <span class=\"br0\"\
      >(</span> Matrix3x3 M , <span class=\"kw5\">vector</span> v <span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">vector</span> Mv , R1 , R2 , R3 ;\n R1.<span class=\"me0\">x</span>\
      \ <span class=\"sy0\">=</span> M.<span class=\"me0\">a11</span> ; R1.<span class=\"\
      me0\">y</span> <span class=\"sy0\">=</span> M.<span class=\"me0\">a12</span>\
      \ ; R1.<span class=\"me0\">z</span> <span class=\"sy0\">=</span> M.<span class=\"\
      me0\">a13</span> ;\n R2.<span class=\"me0\">x</span> <span class=\"sy0\">=</span>\
      \ M.<span class=\"me0\">a21</span> ; R2.<span class=\"me0\">y</span> <span class=\"\
      sy0\">=</span> M.<span class=\"me0\">a22</span> ; R2.<span class=\"me0\">z</span>\
      \ <span class=\"sy0\">=</span> M.<span class=\"me0\">a23</span> ;\n R3.<span\
      \ class=\"me0\">x</span> <span class=\"sy0\">=</span> M.<span class=\"me0\"\
      >a31</span> ; R3.<span class=\"me0\">y</span> <span class=\"sy0\">=</span> M.<span\
      \ class=\"me0\">a32</span> ; R3.<span class=\"me0\">z</span> <span class=\"\
      sy0\">=</span> M.<span class=\"me0\">a33</span> ;\n \n Mv.<span class=\"me0\"\
      >x</span>  <span class=\"sy0\">=</span> R1 dot v ;\n Mv.<span class=\"me0\"\
      >y</span>  <span class=\"sy0\">=</span> R2 dot v ;\n Mv.<span class=\"me0\"\
      >z</span>  <span class=\"sy0\">=</span> R3 dot v ;\n <span class=\"kw2\">return</span>\
      \ Mv ;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p><b>Daid303:</b>\
      \ Ok, kept me busy for a good 2 days, but I think i've got it. A bit. The *\
      \ operator of the matrix and the vector is wrong I think. (I can't find any\
      \ info about it anywhere on the net) but here is what I found out:</p>\n<p>R1\
      \ seems to point in the direction what Vect(1,0,0) would have after rotating.\
      \ M * Vect(1,0,0) should return that, but it doesn't. I think it should be along\
      \ the lines of:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">vector</span> <span class=\"sy0\">*</span> <span class=\"\
      br0\">(</span> Matrix3x3 M , <span class=\"kw5\">vector</span> v <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">vector</span> Mv , R1 , R2 , R3 ;\n R1.<span class=\"\
      me0\">x</span> <span class=\"sy0\">=</span> M.<span class=\"me0\">a11</span>\
      \ ; R1.<span class=\"me0\">y</span> <span class=\"sy0\">=</span> M.<span class=\"\
      me0\">a12</span> ; R1.<span class=\"me0\">z</span> <span class=\"sy0\">=</span>\
      \ M.<span class=\"me0\">a13</span> ;\n R2.<span class=\"me0\">x</span> <span\
      \ class=\"sy0\">=</span> M.<span class=\"me0\">a21</span> ; R2.<span class=\"\
      me0\">y</span> <span class=\"sy0\">=</span> M.<span class=\"me0\">a22</span>\
      \ ; R2.<span class=\"me0\">z</span> <span class=\"sy0\">=</span> M.<span class=\"\
      me0\">a23</span> ;\n R3.<span class=\"me0\">x</span> <span class=\"sy0\">=</span>\
      \ M.<span class=\"me0\">a31</span> ; R3.<span class=\"me0\">y</span> <span class=\"\
      sy0\">=</span> M.<span class=\"me0\">a32</span> ; R3.<span class=\"me0\">z</span>\
      \ <span class=\"sy0\">=</span> M.<span class=\"me0\">a33</span> ;\n \n Mv  <span\
      \ class=\"sy0\">=</span> R1 <span class=\"sy0\">*</span> V.<span class=\"me0\"\
      >X</span> <span class=\"sy0\">+</span> R2 <span class=\"sy0\">*</span> V.<span\
      \ class=\"me0\">Y</span> <span class=\"sy0\">+</span> R3 <span class=\"sy0\"\
      >*</span> V.<span class=\"me0\">Z</span>;\n <span class=\"kw2\">return</span>\
      \ Mv ;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>But i'm not sure...</p>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Quaternions_In_Unreal_Tournament?section=7\" title=\"\
      Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Quaternion\" title=\"Legacy:Quaternion\"\
      >Quaternion</a></li>\n<li><a href=\"/Legacy:Quaternion_Rotation\" title=\"Legacy:Quaternion\
      \ Rotation\">Quaternion Rotation</a></li>\n</ul>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.116 seconds\nReal time usage: 0.118 seconds\nPreprocessor\
      \ visited node count: 90/1000000\nPreprocessor generated node count: 172/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2571-0!*!0!!en!*!*\
      \ and timestamp 20221118155109 and revision id 6138\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: false
    name: "Legacy:Overload"
  - ns: 100
    exists: true
    name: "Legacy:Tarquin"
  - ns: 100
    exists: true
    name: "Legacy:Quaternion"
  - ns: 100
    exists: true
    name: "Legacy:Quaternion Rotation"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "Quaternion definition"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 453
    anchor: "Quaternion_definition"
  - toclevel: 1
    level: "3"
    line: "Vector expression"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 544
    anchor: "Vector_expression"
  - toclevel: 1
    level: "3"
    line: "Converting Axial Rotation to a Quaternion"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 872
    anchor: "Converting_Axial_Rotation_to_a_Quaternion"
  - toclevel: 1
    level: "3"
    line: "Multipliplication in quaternions"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 2183
    anchor: "Multipliplication_in_quaternions"
  - toclevel: 1
    level: "3"
    line: "Converting Quaternions to a Transformation Matrix"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 2639
    anchor: "Converting_Quaternions_to_a_Transformation_Matrix"
  - toclevel: 1
    level: "3"
    line: "Matrix Functions"
    number: "6"
    index: "6"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 3260
    anchor: "Matrix_Functions"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "7"
    index: "7"
    fromtitle: "Legacy:Quaternions_In_Unreal_Tournament"
    byteoffset: 4873
    anchor: "Related_Topics"
  displaytitle: "Legacy:Quaternions In Unreal Tournament"
  iwlinks: []
  wikitext:
    text: "Below is some code that will allow you to use [[Legacy:Quaternion|Quaternion]]s\
      \ in Unreal Tournament. These are taken from a brushbuilder made by [[Legacy:Tarquin|Tarquin]].\
      \ All credit for the code goes to him. Other implementations have also been\
      \ made to allow the use of Quaternions, but they should all be functionally\
      \ similar. This quaternion definition has a minor bug which occurs when a full\
      \ 180° rotation is applied, however, so be forewarned.\n\n===Quaternion definition\
      \ ===\n\n<uscript>\nstruct Quat {\n var() float W,X,Y,Z;\n};\n</uscript>\n\n\
      ===Vector expression ===\n\n<uscript>\n// Sets the components of a vector. Vect\
      \ cannot be used as it will not accept an expression.\nfunction vector eVect(\
      \ float x , float y , float z )\n{\n // for some reason vect() wont work when\
      \ setting an array element\n local vector v ;\n v.x = x ;\n v.y = y ;\n v.z\
      \ = z ;\n return v ;\n}\n</uscript>\n\n===Converting Axial Rotation to a Quaternion\
      \ ===\n\n<uscript>\n// Takes a vector representing an axis and an angle in radians.\n\
      // Returns the quaternion representing a rotation of Theta about the axis.\n\
      function quat RotationToQuat( vector Axis , float Theta )\n{\n // Theta must\
      \ be given in radians\n // Axis need not be normalised\n local quat Q ;\n local\
      \ float L ;\n Axis = Normal( Axis );\n Q.W = cos( Theta / 2 ) ;\n Q.X = Axis.X\
      \ * sin( Theta / 2 ) ;\n Q.Y = Axis.Y * sin( Theta / 2 ) ;\n Q.Z = Axis.Z *\
      \ sin( Theta / 2 ) ;\n // NORMALISE\n L = Sqrt( Q.W**2 + Q.X ** 2 + Q.Y ** 2\
      \ + Q.Z**2 ) ;\n Q.W /= L ;\n Q.X /= L ;\n Q.Y /= L ;\n Q.Z /= L ;\n return\
      \ Q ;\n}\n</uscript>\n\n'''Daid303:''' Is this the same as the new \"QuatFromAxisAndAngle\"\
      \ function?\n\n'''Tarquin:''' in theory, yes, but there may be differences in\
      \ which way the angle and axis are used.\n\n'''Daid303:''' Ah, ok, thx :) It\
      \ worked fine. I'm using some of this stuff in a C program i'm working on. Still\
      \ looking for a way to do Vector(Quat) as you can do Vector(Rotator), but without\
      \ doing this: Vector(Rotator(Quat))...\n\n'''FrozenCow:''' Uhm... \"a minor\
      \ bug which occurs when a full 180° rotation is applied\" Is there a way to\
      \ fix this?\n\n'''Tarquin:''' almost certainly. but it might involve your brain\
      \ leaking out of your ears! thinking in 4 dimensions is hard. :(\n\n===Multipliplication\
      \ in quaternions ===\n\n[[Legacy:Overload|Overload]]s the * operator to multiply\
      \ quaternions.\n\n<uscript>\nfinal operator(16) quat * ( quat Q1 , quat Q2 )\n\
      {\n local vector V1 , V2 , Vp ;\n local quat Qp ;\n V1 = eVect( Q1.X , Q1.Y\
      \ , Q1.Z ) ;\n V2 = eVect( Q2.X , Q2.Y , Q2.Z ) ;\n Qp.W = Q1.W * Q2.W - ( V1\
      \ dot V2 ) ;\n Vp = ( Q1.W * V2 ) + ( Q2.W * V1 ) - ( V1 cross V2 ) ;\n Qp.X\
      \ = Vp.X ;\n Qp.Y = Vp.Y ;\n Qp.Z = Vp.Z ;\n return Qp ;\n}\n</uscript>\n\n\
      ===Converting Quaternions to a Transformation Matrix ===\n\n<uscript>\nfunction\
      \ matrix3x3 QuatToMatrix ( quat Q )\n{\n local matrix3x3 M ;\n local float w,x,y,z\
      \ ;\n w = Q.W ; x = Q.X ; y = Q.Y ; z = Q.Z ;\n M.a11 = 1 - ( 2 * y** 2 ) -\
      \  ( 2 * z** 2 ) ;\n M.a12 = 2*x*y - 2*z*w ;\n M.a13 = 2*x*z + 2*y*w ;\n\n M.a21\
      \ = 2*x*y + 2*z*w ;\n M.a22 = 1 - 2*x**2 -2*z**2 ;\n M.a23 = 2*y*z - 2*x*w ;\n\
      \n M.a31 = 2*x*z - 2*y*w ;\n M.a32 = 2*y*z + 2*x*w ;\n M.a33 = 1 - 2*x**2 -\
      \ 2*y**2 ;\n /*\n 1 - 2Y  - 2Z    2XY - 2ZW      2XZ + 2YW \n 2XY + 2ZW    \
      \   1 - 2X  - 2Z   2YZ - 2XW\n 2XZ - 2YW       2YZ + 2XW      1 - 2X  - 2Y\n\
      \ */\n return M ;\n}\n</uscript>\n\n===Matrix Functions ===\n\nFunctions to\
      \ define a matrix and multiply a matrix and a vector, ie. apply the transformation\
      \ the matrix represents to the vector.\n\n<uscript>\nfunction Matrix3x3 defMatrix9f(\
      \ float a11,float a12,float a13, float a21,float a22,float a23,float a31,float\
      \ a32,float a33 )\n{\n local Matrix3x3 theMatrix ;\n theMatrix.a11 = a11 ;\n\
      \ theMatrix.a12 = a12 ;\n theMatrix.a13 = a13 ;\n theMatrix.a21 = a21 ;\n theMatrix.a22\
      \ = a22 ;\n theMatrix.a23 = a23 ;\n theMatrix.a31 = a31 ;\n theMatrix.a32 =\
      \ a32 ;\n theMatrix.a33 = a33 ;\n return theMatrix ;\n}\n\nstatic final operator(16)\
      \ vector * ( Matrix3x3 M , vector v )\n{\n local vector Mv , R1 , R2 , R3 ;\n\
      \ R1.x = M.a11 ; R1.y = M.a12 ; R1.z = M.a13 ;\n R2.x = M.a21 ; R2.y = M.a22\
      \ ; R2.z = M.a23 ;\n R3.x = M.a31 ; R3.y = M.a32 ; R3.z = M.a33 ;\n\n Mv.x \
      \ = R1 dot v ;\n Mv.y  = R2 dot v ;\n Mv.z  = R3 dot v ;\n return Mv ;\n}\n\
      </uscript>\n\n'''Daid303:''' Ok, kept me busy for a good 2 days, but I think\
      \ i've got it. A bit. The * operator of the matrix and the vector is wrong I\
      \ think. (I can't find any info about it anywhere on the net) but here is what\
      \ I found out:\n\nR1 seems to point in the direction what Vect(1,0,0) would\
      \ have after rotating. M * Vect(1,0,0) should return that, but it doesn't. I\
      \ think it should be along the lines of:\n\n<uscript>\nstatic final operator(16)\
      \ vector * ( Matrix3x3 M , vector v )\n{\n local vector Mv , R1 , R2 , R3 ;\n\
      \ R1.x = M.a11 ; R1.y = M.a12 ; R1.z = M.a13 ;\n R2.x = M.a21 ; R2.y = M.a22\
      \ ; R2.z = M.a23 ;\n R3.x = M.a31 ; R3.y = M.a32 ; R3.z = M.a33 ;\n\n Mv  =\
      \ R1 * V.X + R2 * V.Y + R3 * V.Z;\n return Mv ;\n}\n</uscript>\n\nBut i'm not\
      \ sure...\n\n==Related Topics==\n* [[Legacy:Quaternion|Quaternion]]\n* [[Legacy:Quaternion\
      \ Rotation|Quaternion Rotation]]"
  properties: []
  revId: 6138
name: "Legacy:Quaternions In Unreal Tournament"
revision:
  revid: 6138
  parentid: 6139
  user: "Tarquin"
  timestamp: 1097226498.000000000
  comment: "*"
timestamp: 1668786592.835929000
