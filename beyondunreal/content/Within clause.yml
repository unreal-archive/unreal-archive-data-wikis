---
parse:
  title: "Within clause"
  text:
    text: "<p>The <b>within</b> clause is an optional part of <a href=\"/Class_declarations\"\
      \ title=\"Class declarations\" class=\"mw-redirect\">class declarations</a>\
      \ that defines the class to be an <a href=\"http://en.wikipedia.org/wiki/inner_class\"\
      \ class=\"extiw\" title=\"wp:inner class\">inner class</a>. It was introduced\
      \ in <a href=\"/edit/Unreal_Engine_2?redlink=1\" class=\"new\" title=\"Unreal\
      \ Engine 2 (page does not exist)\">Unreal Engine 2</a> and forces instances\
      \ of a class to be created within instances of another class.</p>\n<p>Inner\
      \ classes declared with a <b>within</b> clause can access members of the specified\
      \ outer class without having to qualify the access with the Outer property declared\
      \ in <a href=\"/Object\" title=\"Object\">Object</a><sup>(<span><a href=\"/UE2:Object_(U2)\"\
      \ title=\"UE2:Object (U2)\">U2</a></span>, <span><a href=\"/UE2:Object_(U2XMP)\"\
      \ title=\"UE2:Object (U2XMP)\">U2XMP</a></span>, <span><a href=\"/UE2:Object_(UE2Runtime)\"\
      \ title=\"UE2:Object (UE2Runtime)\">UE2Runtime</a></span>, <span><a href=\"\
      /UE2:Object_(UT2003)\" title=\"UE2:Object (UT2003)\">UT2003</a></span>, <span><a\
      \ href=\"/UE2:Object_(UT2004)\" title=\"UE2:Object (UT2004)\">UT2004</a></span>,\
      \ <span><a href=\"/UE3:Object_(UDK)\" title=\"UE3:Object (UDK)\">UDK</a></span>,\
      \ <span><a href=\"/UE3:Object_(UT3)\" title=\"UE3:Object (UT3)\">UT3</a></span>)</sup>.\
      \ If a member of the inner class hides a member of the specified outer class,\
      \ the access can be qualified with the Outer property without having to <a href=\"\
      /Typecast\" title=\"Typecast\" class=\"mw-redirect\">typecast</a> it as the\
      \ Outer property is guaranteed to reference an instance of the outer class or\
      \ one of its subclasses.</p>\n<h2><span class=\"mw-headline\" id=\"Syntax\"\
      >Syntax</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Within_clause?section=1\" title=\"Edit section: Syntax\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>To\
      \ declare a class (which extends another class) to be an inner class of a third\
      \ class, use the following class declaration:</p>\n<pre><b>class</b> <i>ClassName</i>\
      \ <b>extends</b> <i>ParentClass</i> <b>within</b> <i>OuterClass</i><b>;</b>\n\
      </pre>\n<p>Any optional class modifiers can be added after the <b>within</b>\
      \ class name as usual.</p>\n<p>The following rules apply:</p>\n<ul>\n<li>The\
      \ parent class <i>must not</i> be the class <a href=\"/Actor\" title=\"Actor\"\
      >Actor</a><sup>(<span><a href=\"/UE2:Actor_(U2)\" title=\"UE2:Actor (U2)\">U2</a></span>,\
      \ <span><a href=\"/UE2:Actor_(U2XMP)\" title=\"UE2:Actor (U2XMP)\">U2XMP</a></span>,\
      \ <span><a href=\"/UE2:Actor_(UE2Runtime)\" title=\"UE2:Actor (UE2Runtime)\"\
      >UE2Runtime</a></span>, <span><a href=\"/UE2:Actor_(UT2003)\" title=\"UE2:Actor\
      \ (UT2003)\">UT2003</a></span>, <span><a href=\"/UE2:Actor_(UT2004)\" title=\"\
      UE2:Actor (UT2004)\">UT2004</a></span>, <span><a href=\"/UE3:Actor_(UDK)\" title=\"\
      UE3:Actor (UDK)\">UDK</a></span>, <span><a href=\"/UE3:Actor_(UT3)\" title=\"\
      UE3:Actor (UT3)\">UT3</a></span>)</sup> or any of its subclasses.</li>\n<li>The\
      \ parent class <i>may</i> be declared within another class. In that case, the\
      \ outer class must be a subclass of the parent's outer class. This basically\
      \ reduces the allowed range of outer classes without causing any inconsistencies.</li>\n\
      <li>The <b>within</b> clause <i>may</i> be omitted, actually only few classes\
      \ use it. In this case the parent's outer class is inherited. (The implicit\
      \ outer class of the Object class is Object.)</li>\n<li>The parent class and\
      \ the outer class <i>may</i> be the same class.</li>\n</ul>\n<h2><span class=\"\
      mw-headline\" id=\"Example_usage\">Example usage</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Within_clause?section=2\"\
      \ title=\"Edit section: Example usage\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Some examples of inner classes are CheatManager<sup>(<span><a\
      \ href=\"/UE2:CheatManager_(U2)\" title=\"UE2:CheatManager (U2)\">U2</a></span>,\
      \ <span><a href=\"/UE2:CheatManager_(U2XMP)\" title=\"UE2:CheatManager (U2XMP)\"\
      >U2XMP</a></span>, <span><a href=\"/UE2:CheatManager_(UE2Runtime)\" title=\"\
      UE2:CheatManager (UE2Runtime)\">UE2Runtime</a></span>, <span><a href=\"/UE2:CheatManager_(UT2003)\"\
      \ title=\"UE2:CheatManager (UT2003)\">UT2003</a></span>, <span><a href=\"/UE2:CheatManager_(UT2004)\"\
      \ title=\"UE2:CheatManager (UT2004)\">UT2004</a></span>, <span><a href=\"/UE3:CheatManager_(UDK)\"\
      \ title=\"UE3:CheatManager (UDK)\">UDK</a></span>, <span><a href=\"/UE3:CheatManager_(UT3)\"\
      \ title=\"UE3:CheatManager (UT3)\">UT3</a></span>)</sup> and PlayerInput<sup>(<span><a\
      \ href=\"/UE2:PlayerInput_(U2)\" title=\"UE2:PlayerInput (U2)\">U2</a></span>,\
      \ <span><a href=\"/UE2:PlayerInput_(U2XMP)\" title=\"UE2:PlayerInput (U2XMP)\"\
      >U2XMP</a></span>, <span><a href=\"/UE2:PlayerInput_(UE2Runtime)\" title=\"\
      UE2:PlayerInput (UE2Runtime)\">UE2Runtime</a></span>, <span><a href=\"/UE2:PlayerInput_(UT2003)\"\
      \ title=\"UE2:PlayerInput (UT2003)\">UT2003</a></span>, <span><a href=\"/UE2:PlayerInput_(UT2004)\"\
      \ title=\"UE2:PlayerInput (UT2004)\">UT2004</a></span>, <span><a href=\"/UE3:PlayerInput_(UDK)\"\
      \ title=\"UE3:PlayerInput (UDK)\">UDK</a></span>, <span><a href=\"/UE3:PlayerInput_(UT3)\"\
      \ title=\"UE3:PlayerInput (UT3)\">UT3</a></span>)</sup>, both declared <b>within</b>\
      \ PlayerController<sup>(<span><a href=\"/UE2:PlayerController_(U2)\" title=\"\
      UE2:PlayerController (U2)\">U2</a></span>, <span><a href=\"/UE2:PlayerController_(U2XMP)\"\
      \ title=\"UE2:PlayerController (U2XMP)\">U2XMP</a></span>, <span><a href=\"\
      /UE2:PlayerController_(UE2Runtime)\" title=\"UE2:PlayerController (UE2Runtime)\"\
      >UE2Runtime</a></span>, <span><a href=\"/UE2:PlayerController_(UT2003)\" title=\"\
      UE2:PlayerController (UT2003)\">UT2003</a></span>, <span><a href=\"/UE2:PlayerController_(UT2004)\"\
      \ title=\"UE2:PlayerController (UT2004)\">UT2004</a></span>, <span><a href=\"\
      /UE3:PlayerController_(UDK)\" title=\"UE3:PlayerController (UDK)\">UDK</a></span>,\
      \ <span><a href=\"/UE3:PlayerController_(UT3)\" title=\"UE3:PlayerController\
      \ (UT3)\">UT3</a></span>)</sup>. An example of \"narrowing\" the valid range\
      \ of outer classes is <a href=\"/UE3:GamePlayerInput_(UT3)\" title=\"UE3:GamePlayerInput\
      \ (UT3)\">GamePlayerInput</a> - it reduces the valid outer classes from all\
      \ PlayerControllers to only instances of <a href=\"/UE3:GamePlayerController_(UT3)\"\
      \ title=\"UE3:GamePlayerController (UT3)\">GamePlayerController</a> and its\
      \ subclasses.</p>\n<p><br />\nAs a more generic example, consider the following\
      \ scenario:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> A <span class=\"kw1\">extends</span> Something;\n \n<span\
      \ class=\"kw1\">var</span> AHelper Helper;\n \n<span class=\"kw1\">function</span>\
      \ CreateHelper<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n  Helper <span class=\"sy0\">=</span> <span class=\"\
      kw1\">new</span><span class=\"br0\">(</span><span class=\"kw6\">Self</span><span\
      \ class=\"br0\">)</span> <span class=\"kw1\">class</span><span class=\"st0\"\
      >'AHelper'</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ Help<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  <span class=\"co1\">// do something helpful</span>\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> B <span class=\"kw1\">extends</span>\
      \ A;\n \n<span class=\"kw1\">var</span> BHelper BetterHelper;\n \n<span class=\"\
      kw1\">function</span> CreateHelper<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n  BetterHelper <span class=\"\
      sy0\">=</span> <span class=\"kw1\">new</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">Self</span><span class=\"br0\">)</span> <span class=\"kw1\"\
      >class</span><span class=\"st0\">'BetterHelper'</span>;\n  Helper <span class=\"\
      sy0\">=</span> BetterHelper;\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">function</span> BetterHelp<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n  <span class=\"co1\">// do something\
      \ even more helpful</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>The parameter of the <a href=\"/New\" title=\"New\" class=\"mw-redirect\"\
      >new</a> operator sets the created object's Outer variable and <a href=\"/Self\"\
      \ title=\"Self\" class=\"mw-redirect\">Self</a> is the object executing that\
      \ code, i.e. objects of class A and B respectively. The helper object are supposed\
      \ to call the Help and BetterHelp functions of their corresponding outer objects.\
      \ Without the <b>within</b> clause, that might look as follows:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">class</span> AHelper <span class=\"\
      kw1\">extends</span> <span class=\"kw8\">Object</span>;\n \n<span class=\"kw1\"\
      >function</span> TryToHelp<span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n  A<span class=\"br0\">(</span>Outer<span class=\"\
      br0\">)</span>.<span class=\"me0\">Help</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> BetterHelper\
      \ <span class=\"kw1\">extends</span> AHelper;\n \n<span class=\"kw1\">function</span>\
      \ TryToHelp<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  B<span class=\"br0\">(</span>Outer<span class=\"br0\">)</span>.<span\
      \ class=\"me0\">BetterHelp</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>But there\
      \ are still problems. Not only is the <a href=\"/Typecast\" title=\"Typecast\"\
      \ class=\"mw-redirect\">typecasted</a> access to the Outer variable a bit clunky,\
      \ but there's also no guarantee it actually always points to an object of type\
      \ A or B respectively. These can be resolved using a <b>within</b> clause:</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> AHelper\
      \ <span class=\"kw1\">extends</span> <span class=\"kw8\">Object</span> within\
      \ A;\n \n<span class=\"kw1\">function</span> TryToHelp<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  Outer.<span class=\"\
      me0\">Help</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">class</span> BetterHelper <span class=\"\
      kw1\">extends</span> AHelper within B;\n \n<span class=\"kw1\">function</span>\
      \ TryToHelp<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  Outer.<span class=\"me0\">BetterHelp</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The <b>within</b> clauses guarantee that AHelper and BetterHelper\
      \ objects are definitely created with an A or B object as first parameter of\
      \ the <a href=\"/New\" title=\"New\" class=\"mw-redirect\">new</a> operator\
      \ respectively. You can now use the <i>Outer</i> variable without typecasting\
      \ it.</p>\n<p>In fact, when the compiler finds any (unqualified) access to variables\
      \ or functions not declared in the class or inherited from any of the parent\
      \ classes, it tries accessing the variable or function through the <i>Outer</i>\
      \ variable instead for classes declared <b>within</b> other classes. That means\
      \ you could actually also write:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">class</span> AHelper <span class=\"kw1\">extends</span>\
      \ <span class=\"kw8\">Object</span> within A;\n \n<span class=\"kw1\">function</span>\
      \ TryToHelp<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  Help<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">class</span> BetterHelper <span class=\"\
      kw1\">extends</span> AHelper within B;\n \n<span class=\"kw1\">function</span>\
      \ TryToHelp<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  BetterHelp<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>It will have\
      \ absolutely the same result as the implementation that uses <code>Outer.</code>\
      \ to call those functions. Epic Games programmers use this extensively, but\
      \ you should keep in mind that it slightly reduces code readability because\
      \ you no longer see that you actually call functions (or access variables) from\
      \ a different object.</p>\n<table class=\"navbox nowraplinks\" style=\"\">\n\
      <tr class=\"navbox-header\">\n<th colspan=\"2\" class=\"navbox-header\" style=\"\
      \">\n<div style=\"position:relative; width:100%; white-space:nowrap;\">\n<div\
      \ class=\"noprint plainlinks\" style=\"background-color:transparent; padding:0;\
      \ font-weight:normal; font-size:xx-small; white-space:nowrap; position:absolute;left:0.5em;\"\
      ><a href=\"/Template:Navbox_unrealscript\" title=\"Template:Navbox unrealscript\"\
      ><span title=\"View this template\">v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\"\
      \ title=\"Template talk:Navbox unrealscript\"><span title=\"Discussion about\
      \ this template\">d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external\
      \ text\" href=\"https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"\
      ><span title=\"You can edit this template. Please use the preview button before\
      \ saving.\">e</span></a></div>\n<a href=\"/UnrealScript_reference\" title=\"\
      UnrealScript reference\">UnrealScript reference</a></div>\n</th>\n</tr>\n<tr\
      \ class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\">Declarations</th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/Preprocessor\" title=\"Preprocessor\"\
      >Preprocessor</a>&#160;• <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;•\
      \ <a href=\"/Interfaces\" title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"\
      /Cpptext\" title=\"Cpptext\">Cpptext</a>&#160;• <a href=\"/Constants\" title=\"\
      Constants\">Constants</a>&#160;• <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;•\
      \ <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;• <a href=\"/Variables\"\
      \ title=\"Variables\">Variables</a>&#160;(<a href=\"/Metadata\" title=\"Metadata\"\
      >Metadata</a>)&#160;• <a href=\"/Replication_block\" title=\"Replication block\"\
      >Replication block</a>&#160;• <a href=\"/Operators\" title=\"Operators\">Operators</a>&#160;•\
      \ <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"\
      /Functions\" title=\"Functions\">Functions</a>&#160;• <a href=\"/States\" title=\"\
      States\">States</a>&#160;• <a href=\"/Defaultproperties\" title=\"Defaultproperties\"\
      >Defaultproperties</a>&#160;(<a href=\"/Subobjects\" title=\"Subobjects\">Subobjects</a>)</td>\n\
      </tr>\n<tr class=\"navbox-body even\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Types\" title=\"Types\">Types</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;•\
      \ <a href=\"/Byte\" title=\"Byte\" class=\"mw-redirect\">byte</a>&#160;• <a\
      \ href=\"/Float\" title=\"Float\" class=\"mw-redirect\">float</a>&#160;• <a\
      \ href=\"/Int\" title=\"Int\" class=\"mw-redirect\">int</a>&#160;• <a href=\"\
      /Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;• <a href=\"/String\"\
      \ title=\"String\">string</a>&#160;• <a href=\"/Types#Reference_types\" title=\"\
      Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\" title=\"Class limiter\"\
      \ class=\"mw-redirect\">Class</a>&#160;• <a href=\"/Enums\" title=\"Enums\"\
      >Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;(<a\
      \ href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a href=\"/Rotator\" title=\"\
      Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"Quat\" class=\"mw-redirect\"\
      >Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\">Color</a>)&#160;• <a href=\"\
      /Static_arrays\" title=\"Static arrays\">Static arrays</a>&#160;• <a href=\"\
      /Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic arrays</a>&#160;• <a href=\"\
      /Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"/Typecasting\"\
      \ title=\"Typecasting\">Typecasting</a></td>\n</tr>\n<tr class=\"navbox-body\
      \ odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Literals\" title=\"\
      Literals\">Literals</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;• <a href=\"\
      /Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a href=\"/Literals#Integer_numbers\"\
      \ title=\"Literals\">Integer</a>&#160;• <a href=\"/Literals#Names\" title=\"\
      Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\" title=\"Literals\"\
      >Objects</a> (<a href=\"/None\" title=\"None\" class=\"mw-redirect\">None</a>&#160;⋅\
      \ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\">Self</a>)&#160;• <a\
      \ href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;• <a href=\"\
      /Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"/Literals#Strings\"\
      \ title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"navbox-body even\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\" title=\"\
      Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"/If_statement\"\
      \ title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\" title=\"\
      Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\" title=\"\
      Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"Stop\
      \ statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch statement\"\
      >Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\">While</a>&#160;•\
      \ <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"\
      Continue statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.387 seconds\nReal time usage: 0.659 seconds\nPreprocessor\
      \ visited node count: 377/1000000\nPreprocessor generated node count: 1423/1000000\n\
      Post‐expand include size: 13833/2097152 bytes\nTemplate argument size: 4425/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 5/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \  559.079      1 - -total\n 59.84%  334.569      5 - Template:Classgames\n\
      \  5.54%   30.989      1 - Template:Navbox_unrealscript\n  3.37%   18.816  \
      \    1 - Template:Navbox\n  0.69%    3.841      1 - Template:Tnavbar\n  0.69%\
      \    3.831      5 - Template:Extension_DPL\n-->\n\n<!-- Saved in parser cache\
      \ with key wiki:pcache:idhash:24021-0!*!*!*!*!*!* and timestamp 20221117211432\
      \ and revision id 44789\n -->\n"
  categories:
  - sortkey: "Within clause"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "New"
  - ns: 104
    exists: true
    name: "UE2:Object (UE2Runtime)"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 106
    exists: true
    name: "UE3:PlayerInput (UT3)"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 104
    exists: true
    name: "UE2:PlayerInput (UE2Runtime)"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 104
    exists: true
    name: "UE2:PlayerInput (U2XMP)"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "Class declarations"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 104
    exists: true
    name: "UE2:CheatManager (U2)"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 104
    exists: true
    name: "UE2:Object (UT2004)"
  - ns: 104
    exists: true
    name: "UE2:CheatManager (U2XMP)"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 106
    exists: true
    name: "UE3:Object (UDK)"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 106
    exists: true
    name: "UE3:GamePlayerController (UT3)"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 104
    exists: true
    name: "UE2:Object (U2XMP)"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 104
    exists: true
    name: "UE2:PlayerInput (UT2004)"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 0
    exists: false
    name: "CheatManager"
  - ns: 104
    exists: true
    name: "UE2:PlayerInput (UT2003)"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Object"
  - ns: 106
    exists: true
    name: "UE3:PlayerController (UT3)"
  - ns: 106
    exists: true
    name: "UE3:Actor (UT3)"
  - ns: 0
    exists: false
    name: "PlayerInput"
  - ns: 104
    exists: true
    name: "UE2:PlayerController (UE2Runtime)"
  - ns: 104
    exists: true
    name: "UE2:Actor (U2XMP)"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 104
    exists: true
    name: "UE2:Actor (U2)"
  - ns: 104
    exists: true
    name: "UE2:PlayerController (UT2003)"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 104
    exists: true
    name: "UE2:Actor (UT2004)"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 106
    exists: true
    name: "UE3:Object (UT3)"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "States"
  - ns: 104
    exists: true
    name: "UE2:Actor (UE2Runtime)"
  - ns: 104
    exists: true
    name: "UE2:PlayerController (U2)"
  - ns: 104
    exists: true
    name: "UE2:PlayerInput (U2)"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: false
    name: "PlayerController"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 104
    exists: true
    name: "UE2:Object (UT2003)"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 104
    exists: true
    name: "UE2:Object (U2)"
  - ns: 106
    exists: true
    name: "UE3:CheatManager (UDK)"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 104
    exists: true
    name: "UE2:CheatManager (UE2Runtime)"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 106
    exists: true
    name: "UE3:PlayerController (UDK)"
  - ns: 106
    exists: true
    name: "UE3:Actor (UDK)"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Actor"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 104
    exists: true
    name: "UE2:Actor (UT2003)"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 104
    exists: true
    name: "UE2:CheatManager (UT2003)"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 104
    exists: true
    name: "UE2:PlayerController (UT2004)"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 104
    exists: true
    name: "UE2:CheatManager (UT2004)"
  - ns: 104
    exists: true
    name: "UE2:PlayerController (U2XMP)"
  - ns: 106
    exists: true
    name: "UE3:CheatManager (UT3)"
  - ns: 0
    exists: false
    name: "Unreal Engine 2"
  - ns: 106
    exists: true
    name: "UE3:GamePlayerInput (UT3)"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "Typecast"
  - ns: 106
    exists: true
    name: "UE3:PlayerInput (UDK)"
  - ns: 0
    exists: true
    name: "Class limiter"
  templates:
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  - ns: 10
    exists: true
    name: "Template:Extension DPL"
  - ns: 10
    exists: true
    name: "Template:Classgames"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Syntax"
    number: "1"
    index: "1"
    fromtitle: "Within_clause"
    byteoffset: 727
    anchor: "Syntax"
  - toclevel: 1
    level: "2"
    line: "Example usage"
    number: "2"
    index: "2"
    fromtitle: "Within_clause"
    byteoffset: 1659
    anchor: "Example_usage"
  displaytitle: "Within clause"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/inner_class"
    name: "wp:inner class"
  wikitext:
    text: "The '''within''' clause is an optional part of [[class declarations]] that\
      \ defines the class to be an [[wp:inner class|inner class]]. It was introduced\
      \ in [[Unreal Engine 2]] and forces instances of a class to be created within\
      \ instances of another class.\n\nInner classes declared with a '''within'''\
      \ clause can access members of the specified outer class without having to qualify\
      \ the access with the Outer property declared in {{classgames|Object|ne=UE1}}.\
      \ If a member of the inner class hides a member of the specified outer class,\
      \ the access can be qualified with the Outer property without having to [[typecast]]\
      \ it as the Outer property is guaranteed to reference an instance of the outer\
      \ class or one of its subclasses.\n\n==Syntax==\nTo declare a class (which extends\
      \ another class) to be an inner class of a third class, use the following class\
      \ declaration:\n '''class''' ''ClassName'' '''extends''' ''ParentClass'' '''within'''\
      \ ''OuterClass''''';'''\nAny optional class modifiers can be added after the\
      \ '''within''' class name as usual.\n\nThe following rules apply:\n* The parent\
      \ class ''must not'' be the class {{classgames|Actor|ne=UE1}} or any of its\
      \ subclasses.\n* The parent class ''may'' be declared within another class.\
      \ In that case, the outer class must be a subclass of the parent's outer class.\
      \ This basically reduces the allowed range of outer classes without causing\
      \ any inconsistencies.\n* The '''within''' clause ''may'' be omitted, actually\
      \ only few classes use it. In this case the parent's outer class is inherited.\
      \ (The implicit outer class of the Object class is Object.)\n* The parent class\
      \ and the outer class ''may'' be the same class.\n\n==Example usage==\nSome\
      \ examples of inner classes are {{classgames|CheatManager|ne=UE1}} and {{classgames|PlayerInput|ne=UE1}},\
      \ both declared '''within''' {{classgames|PlayerController|ne=UE1}}. An example\
      \ of \"narrowing\" the valid range of outer classes is [[UE3:GamePlayerInput\
      \ (UT3)|GamePlayerInput]] - it reduces the valid outer classes from all PlayerControllers\
      \ to only instances of [[UE3:GamePlayerController (UT3)|GamePlayerController]]\
      \ and its subclasses.\n\n\nAs a more generic example, consider the following\
      \ scenario:\n<uscript>\nclass A extends Something;\n\nvar AHelper Helper;\n\n\
      function CreateHelper()\n{\n  Helper = new(Self) class'AHelper';\n}\n\nfunction\
      \ Help()\n{\n  // do something helpful\n}\n</uscript>\n<uscript>\nclass B extends\
      \ A;\n\nvar BHelper BetterHelper;\n\nfunction CreateHelper()\n{\n  BetterHelper\
      \ = new(Self) class'BetterHelper';\n  Helper = BetterHelper;\n}\n\nfunction\
      \ BetterHelp()\n{\n  // do something even more helpful\n}\n</uscript>\nThe parameter\
      \ of the [[new]] operator sets the created object's Outer variable and [[Self]]\
      \ is the object executing that code, i.e. objects of class A and B respectively.\n\
      The helper object are supposed to call the Help and BetterHelp functions of\
      \ their corresponding outer objects. Without the '''within''' clause, that might\
      \ look as follows:\n<uscript>\nclass AHelper extends Object;\n\nfunction TryToHelp()\n\
      {\n  A(Outer).Help();\n}\n</uscript>\n<uscript>\nclass BetterHelper extends\
      \ AHelper;\n\nfunction TryToHelp()\n{\n  B(Outer).BetterHelp();\n}\n</uscript>\n\
      But there are still problems. Not only is the [[typecast]]ed access to the Outer\
      \ variable a bit clunky, but there's also no guarantee it actually always points\
      \ to an object of type A or B respectively. These can be resolved using a '''within'''\
      \ clause:\n<uscript>\nclass AHelper extends Object within A;\n\nfunction TryToHelp()\n\
      {\n  Outer.Help();\n}\n</uscript>\n<uscript>\nclass BetterHelper extends AHelper\
      \ within B;\n\nfunction TryToHelp()\n{\n  Outer.BetterHelp();\n}\n</uscript>\n\
      The '''within''' clauses guarantee that AHelper and BetterHelper objects are\
      \ definitely created with an A or B object as first parameter of the [[new]]\
      \ operator respectively. You can now use the ''Outer'' variable without typecasting\
      \ it.\n\nIn fact, when the compiler finds any (unqualified) access to variables\
      \ or functions not declared in the class or inherited from any of the parent\
      \ classes, it tries accessing the variable or function through the ''Outer''\
      \ variable instead for classes declared '''within''' other classes. That means\
      \ you could actually also write:\n<uscript>\nclass AHelper extends Object within\
      \ A;\n\nfunction TryToHelp()\n{\n  Help();\n}\n</uscript>\n<uscript>\nclass\
      \ BetterHelper extends AHelper within B;\n\nfunction TryToHelp()\n{\n  BetterHelp();\n\
      }\n</uscript>\nIt will have absolutely the same result as the implementation\
      \ that uses <code>Outer.</code> to call those functions. Epic Games programmers\
      \ use this extensively, but you should keep in mind that it slightly reduces\
      \ code readability because you no longer see that you actually call functions\
      \ (or access variables) from a different object.\n\n{{navbox unrealscript}}"
  properties: []
  revId: 44789
name: "Within clause"
revision:
  revid: 44789
  parentid: 33651
  user: "Wormbo"
  timestamp: 1323510523.000000000
  comment: "/* Example usage */ added another example"
timestamp: 1668760860.859909000
