---
parse:
  title: "Legacy:SoundEx"
  text:
    text: "<p>This document implements the <a rel=\"nofollow\" class=\"external text\"\
      \ href=\"http://www.nara.gov/genealogy/coding.html\">SoundEx</a> algorithm.</p>\n\
      <p>This algorithm is often used to index names.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"SoundEx\">SoundEx</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:SoundEx?section=1\"\
      \ title=\"Edit section: SoundEx\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      coMULTI\">/**\n\tReturns the score of an character\n*/</span>\n<span class=\"\
      kw1\">static</span> <span class=\"kw1\">function</span> <span class=\"kw5\"\
      >byte</span> SoundExScore<span class=\"br0\">(</span><span class=\"kw5\">int</span>\
      \ c<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">switch</span> <span class=\"br0\">(</span>c<span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\t<span class=\"kw2\">case</span> <span class=\"\
      nu0\">68</span>: <span class=\"coMULTI\">/* B */</span> <span class=\"kw2\"\
      >case</span> <span class=\"nu0\">70</span>: <span class=\"coMULTI\">/* F */</span>\
      \ <span class=\"kw2\">case</span> <span class=\"nu0\">80</span>: <span class=\"\
      coMULTI\">/* P */</span> <span class=\"kw2\">case</span> <span class=\"nu0\"\
      >86</span>: <span class=\"coMULTI\">/* V */</span>\n\t\t\t<span class=\"kw2\"\
      >return</span> <span class=\"nu0\">1</span>;\n\t\t<span class=\"kw2\">case</span>\
      \ <span class=\"nu0\">67</span>: <span class=\"coMULTI\">/* C */</span> <span\
      \ class=\"kw2\">case</span> <span class=\"nu0\">71</span>: <span class=\"coMULTI\"\
      >/* G */</span> <span class=\"kw2\">case</span> <span class=\"nu0\">74</span>:\
      \ <span class=\"coMULTI\">/* J */</span> <span class=\"kw2\">case</span> <span\
      \ class=\"nu0\">75</span>: <span class=\"coMULTI\">/* K */</span>\n\t\t<span\
      \ class=\"kw2\">case</span> <span class=\"nu0\">81</span>: <span class=\"coMULTI\"\
      >/* Q */</span> <span class=\"kw2\">case</span> <span class=\"nu0\">83</span>:\
      \ <span class=\"coMULTI\">/* S */</span> <span class=\"kw2\">case</span> <span\
      \ class=\"nu0\">88</span>: <span class=\"coMULTI\">/* X */</span> <span class=\"\
      kw2\">case</span> <span class=\"nu0\">90</span>: <span class=\"coMULTI\">/*\
      \ Z */</span>\n\t\t\t<span class=\"kw2\">return</span> <span class=\"nu0\">2</span>;\n\
      \t\t<span class=\"kw2\">case</span> <span class=\"nu0\">68</span>: <span class=\"\
      coMULTI\">/* D */</span> <span class=\"kw2\">case</span> <span class=\"nu0\"\
      >84</span>: <span class=\"coMULTI\">/* T */</span>\n\t\t\t<span class=\"kw2\"\
      >return</span> <span class=\"nu0\">3</span>;\n\t\t<span class=\"kw2\">case</span>\
      \ <span class=\"nu0\">76</span>: <span class=\"co1\">// L</span>\n\t\t\t<span\
      \ class=\"kw2\">return</span> <span class=\"nu0\">4</span>;\n\t\t<span class=\"\
      kw2\">case</span> <span class=\"nu0\">77</span>: <span class=\"coMULTI\">/*\
      \ M */</span> <span class=\"kw2\">case</span> <span class=\"nu0\">78</span>:\
      \ <span class=\"coMULTI\">/* N */</span>\n\t\t\t<span class=\"kw2\">return</span>\
      \ <span class=\"nu0\">5</span>;\n\t\t<span class=\"kw2\">case</span> <span class=\"\
      nu0\">82</span>: <span class=\"co1\">// R</span>\n\t\t\t<span class=\"kw2\"\
      >return</span> <span class=\"nu0\">6</span>;\n\t<span class=\"br0\">}</span>\n\
      \t<span class=\"coMULTI\">/* Disregard the letters A, E, I, O, U, H, W, and\
      \ Y. */</span>\n\t<span class=\"kw2\">return</span> <span class=\"nu0\">0</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"coMULTI\">/**\n\tReturns the\
      \ SoundEx value of a string, size defaults to 4\n*/</span>\n<span class=\"kw1\"\
      >static</span> <span class=\"kw1\">function</span> <span class=\"kw5\">string</span>\
      \ SoundEx<span class=\"br0\">(</span><span class=\"kw1\">coerce</span> <span\
      \ class=\"kw5\">string</span> in, <span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">byte</span> size<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"kw5\">string</span>\
      \ res;\n\t<span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n\
      \t<span class=\"kw1\">local</span> <span class=\"kw5\">byte</span> cs, ls; <span\
      \ class=\"co1\">// cs = current score; ls = previous score</span>\n \n\t<span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>size <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> size <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">4</span>;\n\tres <span class=\"\
      sy0\">=</span> <span class=\"st0\">\"\"</span>;\n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>in <span class=\"sy0\">!=</span> <span class=\"\
      st0\">\"\"</span><span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\
      \t\tin <span class=\"sy0\">=</span> <span class=\"kw3\">Caps</span><span class=\"\
      br0\">(</span>in<span class=\"br0\">)</span>; <span class=\"co1\">// upper case\
      \ all</span>\n\t\t<span class=\"co1\">// always use first char</span>\n\t\t\
      res <span class=\"sy0\">=</span> <span class=\"kw3\">Left</span><span class=\"\
      br0\">(</span>in, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \t\tls <span class=\"sy0\">=</span> SoundExScore<span class=\"br0\">(</span><span\
      \ class=\"kw3\">asc</span><span class=\"br0\">(</span>res<span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n\t\t<span class=\"kw2\">for</span> <span\
      \ class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\
      \ i <span class=\"sy0\">&lt;</span> <span class=\"kw3\">len</span><span class=\"\
      br0\">(</span>in<span class=\"br0\">)</span>; i<span class=\"sy0\">++</span><span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n   \t\t\tcs <span\
      \ class=\"sy0\">=</span> SoundExScore<span class=\"br0\">(</span><span class=\"\
      kw3\">asc</span><span class=\"br0\">(</span><span class=\"kw3\">Mid</span><span\
      \ class=\"br0\">(</span>in, i, <span class=\"nu0\">1</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n   \t\t\t\
      <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"br0\"\
      >(</span>cs <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      br0\">(</span>cs <span class=\"sy0\">!=</span> ls<span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n   \t\t\t<span class=\"br0\">{</span>\n   \t\t\t\t\
      ls <span class=\"sy0\">=</span> cs;\n   \t\t\t\tres <span class=\"sy0\">$=</span>\
      \ <span class=\"kw5\">string</span><span class=\"br0\">(</span>cs<span class=\"\
      br0\">)</span>;\n   \t\t\t<span class=\"br0\">}</span>\n   \t\t\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">len</span><span\
      \ class=\"br0\">(</span>res<span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> size<span class=\"br0\">)</span> <span class=\"kw2\">break</span>;\n\
      \t\t<span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n\t<span class=\"\
      kw2\">while</span> <span class=\"br0\">(</span><span class=\"kw3\">len</span><span\
      \ class=\"br0\">(</span>res<span class=\"br0\">)</span> <span class=\"sy0\"\
      >&lt;</span> size<span class=\"br0\">)</span> res <span class=\"sy0\">$=</span>\
      \ <span class=\"st0\">\"0\"</span>;\n\t<span class=\"kw2\">return</span> res;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:SoundEx?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:DoubleMetaPhone\" title=\"\
      Legacy:DoubleMetaPhone\">DoubleMetaPhone</a></li>\n</ul>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.052 seconds\nReal time usage: 0.102 seconds\nPreprocessor\
      \ visited node count: 17/1000000\nPreprocessor generated node count: 40/1000000\n\
      Post‐expand include size: 7/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2900-0!*!0!!*!*!*\
      \ and timestamp 20221120203150 and revision id 7718\n -->\n"
  categories:
  - sortkey: "SoundEx"
    name: "Legacy_Algorithm"
  links:
  - ns: 100
    exists: true
    name: "Legacy:DoubleMetaPhone"
  templates: []
  images: []
  externallinks:
  - "http://www.nara.gov/genealogy/coding.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "SoundEx"
    number: "1"
    index: "1"
    fromtitle: "Legacy:SoundEx"
    byteoffset: 139
    anchor: "SoundEx"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:SoundEx"
    byteoffset: 1410
    anchor: "Related_Topics"
  displaytitle: "Legacy:SoundEx"
  iwlinks: []
  wikitext:
    text: "This document implements the [http://www.nara.gov/genealogy/coding.html\
      \ SoundEx] algorithm.\n\nThis algorithm is often used to index names.\n\n==SoundEx==\n\
      \n<uscript>\n/**\n\tReturns the score of an character\n*/\nstatic function byte\
      \ SoundExScore(int c)\n{\n\tswitch (c)\n\t{\n\t\tcase 68: /* B */ case 70: /*\
      \ F */ case 80: /* P */ case 86: /* V */\n\t\t\treturn 1;\n\t\tcase 67: /* C\
      \ */ case 71: /* G */ case 74: /* J */ case 75: /* K */\n\t\tcase 81: /* Q */\
      \ case 83: /* S */ case 88: /* X */ case 90: /* Z */\n\t\t\treturn 2;\n\t\t\
      case 68: /* D */ case 84: /* T */\n\t\t\treturn 3;\n\t\tcase 76: // L\n\t\t\t\
      return 4;\n\t\tcase 77: /* M */ case 78: /* N */\n\t\t\treturn 5;\n\t\tcase\
      \ 82: // R\n\t\t\treturn 6;\n\t}\n\t/* Disregard the letters A, E, I, O, U,\
      \ H, W, and Y. */\n\treturn 0;\n}\n\n/**\n\tReturns the SoundEx value of a string,\
      \ size defaults to 4\n*/\nstatic function string SoundEx(coerce string in, optional\
      \ byte size)\n{\n\tlocal string res;\n\tlocal int i;\n\tlocal byte cs, ls; //\
      \ cs = current score; ls = previous score\n\n\tif (size == 0) size = 4;\n\t\
      res = \"\";\n\tif (in != \"\")\n\t{\n\t\tin = Caps(in); // upper case all\n\t\
      \t// always use first char\n\t\tres = Left(in, 1);\n\t\tls = SoundExScore(asc(res));\n\
      \t\tfor (i = 0; i < len(in); i++)\n\t\t{\n   \t\t\tcs = SoundExScore(asc(Mid(in,\
      \ i, 1)));\n   \t\t\tif ((cs > 0) && (cs != ls))\n   \t\t\t{\n   \t\t\t\tls\
      \ = cs;\n   \t\t\t\tres $= string(cs);\n   \t\t\t}\n   \t\t\tif (len(res) ==\
      \ size) break;\n\t\t}\n\t}\n\twhile (len(res) < size) res $= \"0\";\n\treturn\
      \ res;\n}\n</uscript>\n\n==Related Topics==\n* [[Legacy:DoubleMetaPhone|DoubleMetaPhone]]\n\
      \n[[Category:Legacy Algorithm|{{PAGENAME}}]]"
  properties: []
  revId: 7718
name: "Legacy:SoundEx"
revision:
  revid: 7718
  parentid: 0
  user: "El Muerte"
  timestamp: 1092905296.000000000
  comment: "*"
timestamp: 1668976050.459728000
