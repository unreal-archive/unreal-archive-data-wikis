---
parse:
  title: "Legacy:Useful String Functions"
  text:
    text: "<p>Some functions for modifying and working with strings.</p>\n<p><b>Note:</b>\
      \ These functions are not implemented in the Unreal Engine. They are for coders\
      \ to add into their own code if they need them.</p>\n<p></p>\n<div id=\"toc\"\
      \ class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li\
      \ class=\"toclevel-1 tocsection-1\"><a href=\"#.2B.3D.2C_.40.3D\"><span class=\"\
      tocnumber\">1</span> <span class=\"toctext\">+=, @=</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-2\"><a href=\"#Lower\"><span class=\"tocnumber\">2</span>\
      \ <span class=\"toctext\">Lower</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"\
      ><a href=\"#IsUpper.2C_IsLower\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">IsUpper, IsLower</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"\
      ><a href=\"#AlphaNumeric\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">AlphaNumeric</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"\
      ><a href=\"#LTrim.2C_RTrim.2C_Trim\"><span class=\"tocnumber\">5</span> <span\
      \ class=\"toctext\">LTrim, RTrim, Trim</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-6\"><a href=\"#ReplaceText\"><span class=\"tocnumber\">6</span>\
      \ <span class=\"toctext\">ReplaceText</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-7\"><a href=\"#Unique_string_list\"><span class=\"tocnumber\">7</span>\
      \ <span class=\"toctext\">Unique string list</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-8\"><a href=\"#Splitting_a_String\"><span class=\"tocnumber\">8</span>\
      \ <span class=\"toctext\">Splitting a String</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-9\"><a href=\"#Related_Topics\"><span class=\"tocnumber\">9</span>\
      \ <span class=\"toctext\">Related Topics</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-10\"><a href=\"#Discussion\"><span class=\"tocnumber\">10</span>\
      \ <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\".2B.3D.2C_.40.3D\">+=, @=</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=1\"\
      \ title=\"Edit section: +=, @=\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>These two operators combine string concatenation and\
      \ assignment. <code>$=</code> doesn't work, that's why <code>+=</code> is used\
      \ here. (see <a rel=\"nofollow\" class=\"external text\" href=\"http://wiki.beyondunreal.com/wiki/Scripting_Operators#0.2.2\"\
      >Scripting Operators</a>)</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span>\
      \ <span class=\"kw5\">string</span> <span class=\"sy0\">+=</span> <span class=\"\
      br0\">(</span><span class=\"kw1\">out</span> <span class=\"kw5\">string</span>\
      \ A, <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span> B<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    A <span class=\"\
      sy0\">=</span> A <span class=\"sy0\">$</span> B;\n    <span class=\"kw2\">return</span>\
      \ A;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">operator</span> <span class=\"kw5\">string</span> <span\
      \ class=\"sy0\">@=</span> <span class=\"br0\">(</span><span class=\"kw1\">out</span>\
      \ <span class=\"kw5\">string</span> A, <span class=\"kw1\">coerce</span> <span\
      \ class=\"kw5\">string</span> B<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n    A <span class=\"sy0\">=</span> A <span class=\"sy0\">@</span>\
      \ B;\n    <span class=\"kw2\">return</span> A;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Lower\">Lower</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=2\"\
      \ title=\"Edit section: Lower\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This function is the equivalent to Caps that converts\
      \ all uppercase characters in a string to lowercase (while leaving non-alphabetical\
      \ characters untouched).</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">string</span> Lower<span class=\"br0\">(</span><span class=\"\
      kw1\">coerce</span> <span class=\"kw5\">string</span> Text<span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> IndexChar;\n \n  <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>IndexChar <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>; IndexChar <span class=\"sy0\">&lt;</span> <span class=\"kw3\"\
      >Len</span><span class=\"br0\">(</span>Text<span class=\"br0\">)</span>; IndexChar<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n    <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span><span class=\"kw3\">Mid</span><span class=\"\
      br0\">(</span>Text, IndexChar, <span class=\"nu0\">1</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">&gt;=</span> <span class=\"st0\">\"A\"</span>\
      \ <span class=\"sy0\">&amp;&amp;</span>\n        <span class=\"kw3\">Mid</span><span\
      \ class=\"br0\">(</span>Text, IndexChar, <span class=\"nu0\">1</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"st0\">\"Z\"</span><span\
      \ class=\"br0\">)</span>\n      Text <span class=\"sy0\">=</span> <span class=\"\
      kw3\">Left</span><span class=\"br0\">(</span>Text, IndexChar<span class=\"br0\"\
      >)</span> <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span><span class=\"\
      br0\">(</span><span class=\"kw3\">Asc</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Mid</span><span class=\"br0\">(</span>Text, IndexChar, <span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">+</span> <span class=\"nu0\">32</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">$</span> <span class=\"kw3\">Mid</span><span class=\"\
      br0\">(</span>Text, IndexChar <span class=\"sy0\">+</span> <span class=\"nu0\"\
      >1</span><span class=\"br0\">)</span>;\n \n  <span class=\"kw2\">return</span>\
      \ Text;\n  <span class=\"br0\">}</span></pre></div>\n</div>\n<h2><span class=\"\
      mw-headline\" id=\"IsUpper.2C_IsLower\">IsUpper, IsLower</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=3\"\
      \ title=\"Edit section: IsUpper, IsLower\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>These functions detect whether a string is completely\
      \ uppercase or lowercase.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">bool</span> IsUpper<span class=\"br0\">(</span><span class=\"\
      kw1\">coerce</span> <span class=\"kw5\">string</span> S<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw2\">return</span> S <span\
      \ class=\"sy0\">==</span> <span class=\"kw3\">Caps</span><span class=\"br0\"\
      >(</span>S<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">bool</span> IsLower<span class=\"br0\">(</span><span class=\"\
      kw1\">coerce</span> <span class=\"kw5\">string</span> S<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw2\">return</span> S <span\
      \ class=\"sy0\">==</span> Lower<span class=\"br0\">(</span>S<span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<h2><span class=\"\
      mw-headline\" id=\"AlphaNumeric\">AlphaNumeric</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=4\"\
      \ title=\"Edit section: AlphaNumeric\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This function leaves only alphanumerical characters\
      \ in the string, i.e. A-Z and 0-9, and converts alphabetical characters to uppercase.\
      \ Useful for sorting items by name.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> AlphaNumeric<span class=\"\
      br0\">(</span><span class=\"kw5\">string</span> s<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">string</span> result;\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> i, c;\n \n\t<span class=\"kw2\">for</span> <span class=\"br0\"\
      >(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; i <span\
      \ class=\"sy0\">&lt;</span> <span class=\"kw3\">Len</span><span class=\"br0\"\
      >(</span>s<span class=\"br0\">)</span>; i<span class=\"sy0\">++</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n\t\tc <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Asc</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Right</span><span class=\"br0\">(</span>s, <span class=\"kw3\"\
      >Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"\
      sy0\">-</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\t\
      \t<span class=\"kw2\">if</span> <span class=\"br0\">(</span> c <span class=\"\
      sy0\">==</span> <span class=\"kw3\">Clamp</span><span class=\"br0\">(</span>c,\
      \ <span class=\"nu0\">48</span>, <span class=\"nu0\">57</span><span class=\"\
      br0\">)</span> <span class=\"br0\">)</span> <span class=\"co1\">// 0-9</span>\n\
      \t\t\tresult <span class=\"sy0\">=</span> result <span class=\"sy0\">$</span>\
      \ <span class=\"kw3\">Chr</span><span class=\"br0\">(</span>c<span class=\"\
      br0\">)</span>;\n\t\t<span class=\"kw2\">else</span> <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> c <span class=\"sy0\">==</span> <span class=\"\
      kw3\">Clamp</span><span class=\"br0\">(</span>c, <span class=\"nu0\">65</span>,\
      \ <span class=\"nu0\">90</span><span class=\"br0\">)</span> <span class=\"br0\"\
      >)</span> <span class=\"co1\">// A-Z</span>\n\t\t\tresult <span class=\"sy0\"\
      >=</span> result <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span><span\
      \ class=\"br0\">(</span>c<span class=\"br0\">)</span>;\n\t\t<span class=\"kw2\"\
      >else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span> c <span\
      \ class=\"sy0\">==</span> <span class=\"kw3\">Clamp</span><span class=\"br0\"\
      >(</span>c, <span class=\"nu0\">97</span>, <span class=\"nu0\">122</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"co1\">//\
      \ a-z</span>\n\t\t\tresult <span class=\"sy0\">=</span> result <span class=\"\
      sy0\">$</span> <span class=\"kw3\">Chr</span><span class=\"br0\">(</span>c <span\
      \ class=\"sy0\">-</span> <span class=\"nu0\">32</span><span class=\"br0\">)</span>;\t\
      <span class=\"co1\">// convert to uppercase</span>\n\t<span class=\"br0\">}</span>\n\
      \ \n\t<span class=\"kw2\">return</span> result;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"LTrim.2C_RTrim.2C_Trim\">LTrim,\
      \ RTrim, Trim</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=5\" title=\"\
      Edit section: LTrim, RTrim, Trim\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>These functions remove spaces from the left, the right\
      \ or both sides of a string.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> LTrim<span class=\"\
      br0\">(</span><span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ S<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">while</span> <span class=\"br0\">(</span><span class=\"kw3\">Left</span><span\
      \ class=\"br0\">(</span>S, <span class=\"nu0\">1</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">==</span> <span class=\"st0\">\" \"</span><span class=\"\
      br0\">)</span>\n\t\tS <span class=\"sy0\">=</span> <span class=\"kw3\">Right</span><span\
      \ class=\"br0\">(</span>S, <span class=\"kw3\">Len</span><span class=\"br0\"\
      >(</span>S<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"\
      nu0\">1</span><span class=\"br0\">)</span>;\n\t<span class=\"kw2\">return</span>\
      \ S;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">string</span> RTrim<span\
      \ class=\"br0\">(</span><span class=\"kw1\">coerce</span> <span class=\"kw5\"\
      >string</span> S<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw2\">while</span> <span class=\"br0\">(</span><span class=\"\
      kw3\">Right</span><span class=\"br0\">(</span>S, <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"\
      \ \"</span><span class=\"br0\">)</span>\n\t\tS <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Left</span><span class=\"br0\">(</span>S, <span class=\"\
      kw3\">Len</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span> <span\
      \ class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"kw2\">return</span> S;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">string</span> Trim<span class=\"br0\">(</span><span class=\"\
      kw1\">coerce</span> <span class=\"kw5\">string</span> S<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> LTrim<span\
      \ class=\"br0\">(</span>RTrim<span class=\"br0\">(</span>S<span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"ReplaceText\">ReplaceText</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_String_Functions?section=6\" title=\"Edit section:\
      \ ReplaceText\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>This function replaces any occurance of a substring <code>Replace</code>\
      \ inside a string <code>Text</code> with the string <code>With</code>. This\
      \ is a modified version of the <code>ReplaceText</code> function available in\
      \ the <a href=\"/Legacy:UWindowWindow\" title=\"Legacy:UWindowWindow\">UWindowWindow</a>\
      \ class which doesn't return the string but assigns it to the variable <code>Text</code>.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span class=\"\
      kw5\">string</span> <span class=\"kw3\">ReplaceText</span><span class=\"br0\"\
      >(</span><span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ Text, <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ Replace, <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ With<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> i;\n\t<span class=\"kw1\"\
      >local</span> <span class=\"kw5\">string</span> Output;\n \n\ti <span class=\"\
      sy0\">=</span> <span class=\"kw3\">InStr</span><span class=\"br0\">(</span>Text,\
      \ Replace<span class=\"br0\">)</span>;\n\t<span class=\"kw2\">while</span> <span\
      \ class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"sy0\"\
      >-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"\
      br0\">{</span>\t\n\t\tOutput <span class=\"sy0\">=</span> Output <span class=\"\
      sy0\">$</span> <span class=\"kw3\">Left</span><span class=\"br0\">(</span>Text,\
      \ i<span class=\"br0\">)</span> <span class=\"sy0\">$</span> With;\n\t\tText\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span class=\"\
      br0\">(</span>Text, i <span class=\"sy0\">+</span> <span class=\"kw3\">Len</span><span\
      \ class=\"br0\">(</span>Replace<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\t\n\t\ti <span class=\"sy0\">=</span> <span class=\"kw3\">InStr</span><span\
      \ class=\"br0\">(</span>Text, Replace<span class=\"br0\">)</span>;\n\t<span\
      \ class=\"br0\">}</span>\n\tOutput <span class=\"sy0\">=</span> Output <span\
      \ class=\"sy0\">$</span> Text;\n\t<span class=\"kw2\">return</span> Output;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h2><span class=\"mw-headline\"\
      \ id=\"Unique_string_list\">Unique string list</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=7\"\
      \ title=\"Edit section: Unique string list\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The following example will maintain a dynamic array\
      \ with unique strings. The MyStringList is a sorted list so we break on the\
      \ first entry that's larger then the new string, and insert the new string at\
      \ that point.</p>\n<p>You could use the same principle of every other type,\
      \ just make sure you have a <i>equals</i> and <i>larger than</i> compare routines.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"coMULTI\">/** a sorted\
      \ string list */</span>\n<span class=\"kw1\">var</span> array<span class=\"\
      sy0\">&lt;</span>string<span class=\"sy0\">&gt;</span> MyStringList;\n \n<span\
      \ class=\"coMULTI\">/** returns true when added */</span>\n<span class=\"kw1\"\
      >function</span> <span class=\"kw5\">bool</span> AddString<span class=\"br0\"\
      >(</span><span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ newstring<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n  <span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> MyStringList.<span\
      \ class=\"me0\">length</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n  <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>MyStringList<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span> <span class=\"sy0\">==</span> newstring<span class=\"\
      br0\">)</span> <span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>MyStringList<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span>\
      \ newstring<span class=\"br0\">)</span> <span class=\"kw2\">break</span>;\n\
      \  <span class=\"br0\">}</span>\n  MyStringList.<span class=\"me0\">Insert</span><span\
      \ class=\"br0\">(</span>i, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \  MyStringList<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span\
      \ class=\"sy0\">=</span> newstring;\n  <span class=\"kw2\">return</span> <span\
      \ class=\"kw6\">true</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <h2><span class=\"mw-headline\" id=\"Splitting_a_String\">Splitting a String</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_String_Functions?section=8\" title=\"Edit section:\
      \ Splitting a String\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Created this method since Unreal Runtime doesn't have a Split() method for\
      \ splitting strings.</p>\n<p>This method works exactly the same as the method\
      \ in UT2k4, in Object.Split()</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"coMULTI\">/**Parameters - \nstr = input string\ndiv = divider\n\
      bDiv = true to keep dividers, false to remove dividers.**/</span>\n<span class=\"\
      kw1\">function</span> array<span class=\"sy0\">&lt;</span>string<span class=\"\
      sy0\">&gt;</span> <span class=\"kw3\">Split</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">string</span> str, <span class=\"kw5\">string</span> div, <span\
      \ class=\"kw5\">bool</span> bDiv<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n   <span class=\"kw1\">local</span> array<span class=\"sy0\"\
      >&lt;</span>string<span class=\"sy0\">&gt;</span> temp;\n   <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">bool</span> bEOL;\n   <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">string</span> tempChar;\n   <span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> precount, curcount, wordcount,\
      \ strLength;\n   strLength <span class=\"sy0\">=</span> <span class=\"kw3\"\
      >len</span><span class=\"br0\">(</span>str<span class=\"br0\">)</span>;\n  \
      \ bEOL <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n   precount\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   curcount <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   wordcount <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n \n   <span class=\"kw2\">while</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bEOL<span class=\"br0\"\
      >)</span>\n   <span class=\"br0\">{</span>\n      tempChar <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">Mid</span><span class=\"br0\">(</span>str, curcount,\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span>; <span class=\"co1\"\
      >//go up by 1 count</span>\n      <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>tempChar <span class=\"sy0\">!=</span> div<span class=\"br0\"\
      >)</span>\n         curcount<span class=\"sy0\">++</span>;\n      <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>tempChar\
      \ <span class=\"sy0\">==</span> div<span class=\"br0\">)</span>\n      <span\
      \ class=\"br0\">{</span>\n         temp<span class=\"br0\">[</span>wordcount<span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span\
      \ class=\"br0\">(</span>str, precount, curcount<span class=\"sy0\">-</span>precount<span\
      \ class=\"br0\">)</span>;\n         wordcount<span class=\"sy0\">++</span>;\n\
      \         <span class=\"kw2\">if</span><span class=\"br0\">(</span>bDiv<span\
      \ class=\"br0\">)</span>\n            precount <span class=\"sy0\">=</span>\
      \ curcount; <span class=\"co1\">//leaves the divider</span>\n         <span\
      \ class=\"kw2\">else</span>\n            precount <span class=\"sy0\">=</span>\
      \ curcount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>; <span\
      \ class=\"co1\">//removes the divider.</span>\n         curcount<span class=\"\
      sy0\">++</span>;\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>curcount <span class=\"sy0\">==</span>\
      \ strLength<span class=\"br0\">)</span><span class=\"co1\">//end of string,\
      \ flush out the final word.</span>\n      <span class=\"br0\">{</span>\n   \
      \      temp<span class=\"br0\">[</span>wordcount<span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span class=\"\
      br0\">(</span>str, precount, curcount<span class=\"br0\">)</span>;\n       \
      \  bEOL <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n    \
      \  <span class=\"br0\">}</span>\n   <span class=\"br0\">}</span>\n   <span class=\"\
      kw2\">return</span> temp;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_String_Functions?section=9\" title=\"Edit section:\
      \ Related Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Useful_Maths_Functions\" title=\"Legacy:Useful Maths\
      \ Functions\">Useful Maths functions</a></li>\n<li><a href=\"/Legacy:Global_Function\"\
      \ title=\"Legacy:Global Function\">Global Function</a></li>\n<li><a href=\"\
      /Legacy:Operators\" title=\"Legacy:Operators\">Operators</a></li>\n</ul>\n<h2><span\
      \ class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Useful_String_Functions?section=10\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Juxtapose:</b> Maybe this is covered in a page\
      \ that links to this one, but shouldn't there be a better description of how\
      \ to implement these? Having arrived at this page straight from a search, it\
      \ took me a minute to figure out that these are not implemented in default code.\
      \ I discovered in the source code that @= is implemented in UT2k4 Object class\
      \ where += is not. Is there documentation on that method else where?</p>\n<p><b>Fyfe:</b>\
      \ Wormbo implemented these functions in <a href=\"/Legacy:WUtils\" title=\"\
      Legacy:WUtils\">WUtils</a>.</p>\n<p><b>Caudex:</b> Added function for Splitting\
      \ strings, since Unreal Runtime doesn't have it as Native. If you want more\
      \ methods for Strings, UDN has a pretty good topic about it. (<a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://udn.epicgames.com/Two/StringsInUnrealScript.html\"\
      >http://udn.epicgames.com/Two/StringsInUnrealScript.html</a>)</p>\n<p><a href=\"\
      /Category:Legacy_To_Do\" title=\"Category:Legacy To Do\">Category:Legacy To\
      \ Do</a> – Redirect to <a href=\"/Legacy:WUtils\" title=\"Legacy:WUtils\">WUtils</a>?</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.243 seconds\nReal time usage:\
      \ 0.271 seconds\nPreprocessor visited node count: 155/1000000\nPreprocessor\
      \ generated node count: 312/1000000\nPost‐expand include size: 23/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 3/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:3380-0!*!0!!en!*!* and timestamp\
      \ 20221117120049 and revision id 8717\n -->\n"
  categories:
  - sortkey: "Useful String Functions"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Operators"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Useful Maths Functions"
  - ns: 100
    exists: true
    name: "Legacy:WUtils"
  - ns: 100
    exists: true
    name: "Legacy:Global Function"
  - ns: 100
    exists: true
    name: "Legacy:UWindowWindow"
  templates: []
  images: []
  externallinks:
  - "http://wiki.beyondunreal.com/wiki/Scripting_Operators#0.2.2"
  - "http://udn.epicgames.com/Two/StringsInUnrealScript.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "+=, @="
    number: "1"
    index: "1"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 194
    anchor: ".2B.3D.2C_.40.3D"
  - toclevel: 1
    level: "2"
    line: "Lower"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 686
    anchor: "Lower"
  - toclevel: 1
    level: "2"
    line: "IsUpper, IsLower"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 1226
    anchor: "IsUpper.2C_IsLower"
  - toclevel: 1
    level: "2"
    line: "AlphaNumeric"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 1534
    anchor: "AlphaNumeric"
  - toclevel: 1
    level: "2"
    line: "LTrim, RTrim, Trim"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 2169
    anchor: "LTrim.2C_RTrim.2C_Trim"
  - toclevel: 1
    level: "2"
    line: "ReplaceText"
    number: "6"
    index: "6"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 2666
    anchor: "ReplaceText"
  - toclevel: 1
    level: "2"
    line: "Unique string list"
    number: "7"
    index: "7"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 3406
    anchor: "Unique_string_list"
  - toclevel: 1
    level: "2"
    line: "Splitting a String"
    number: "8"
    index: "8"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 4180
    anchor: "Splitting_a_String"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "9"
    index: "9"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 5420
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "10"
    index: "10"
    fromtitle: "Legacy:Useful_String_Functions"
    byteoffset: 5578
    anchor: "Discussion"
  displaytitle: "Legacy:Useful String Functions"
  iwlinks: []
  wikitext:
    text: "Some functions for modifying and working with strings.\n\n'''Note:''' These\
      \ functions are not implemented in the Unreal Engine. They are for coders to\
      \ add into their own code if they need them. \n\n==<nowiki>+=, @=</nowiki>==\n\
      \nThese two operators combine string concatenation and assignment. <code>$=</code>\
      \ doesn't work, that's why <code>+=</code> is used here. (see [http://wiki.beyondunreal.com/wiki/Scripting_Operators#0.2.2\
      \ Scripting Operators])\n\n<uscript>\nstatic final operator string += (out string\
      \ A, coerce string B)\n{\n    A = A $ B;\n    return A;\n}\n</uscript>\n\n<uscript>\n\
      static final operator string @= (out string A, coerce string B)\n{\n    A =\
      \ A @ B;\n    return A;\n}\n</uscript>\n\n==Lower==\n\nThis function is the\
      \ equivalent to Caps that converts all uppercase characters in a string to lowercase\
      \ (while leaving non-alphabetical characters untouched).\n\n<uscript>\nstatic\
      \ final function string Lower(coerce string Text) {\n\n  local int IndexChar;\n\
      \ \n  for (IndexChar = 0; IndexChar < Len(Text); IndexChar++)\n    if (Mid(Text,\
      \ IndexChar, 1) >= \"A\" &&\n        Mid(Text, IndexChar, 1) <= \"Z\")\n   \
      \   Text = Left(Text, IndexChar) $ Chr(Asc(Mid(Text, IndexChar, 1)) + 32) $\
      \ Mid(Text, IndexChar + 1);\n\n  return Text;\n  }\n</uscript>\n\n==IsUpper,\
      \ IsLower==\n\nThese functions detect whether a string is completely uppercase\
      \ or lowercase.\n\n<uscript>\nstatic final function bool IsUpper(coerce string\
      \ S)\n{\n    return S == Caps(S);\n}\n</uscript>\n\n<uscript>\nstatic final\
      \ function bool IsLower(coerce string S)\n{\n    return S == Lower(S);\n}\n\
      </uscript>\n\n==AlphaNumeric==\n\nThis function leaves only alphanumerical characters\
      \ in the string, i.e. A-Z and 0-9, and converts alphabetical characters to uppercase.\
      \ Useful for sorting items by name.\n\n<uscript>\nstatic final function string\
      \ AlphaNumeric(string s)\n{\n\tlocal string result;\n\tlocal int i, c;\n\t\n\
      \tfor (i = 0; i < Len(s); i++) {\n\t\tc = Asc(Right(s, Len(s) - i));\n\t\tif\
      \ ( c == Clamp(c, 48, 57) ) // 0-9\n\t\t\tresult = result $ Chr(c);\n\t\telse\
      \ if ( c == Clamp(c, 65, 90) ) // A-Z\n\t\t\tresult = result $ Chr(c);\n\t\t\
      else if ( c == Clamp(c, 97, 122) ) // a-z\n\t\t\tresult = result $ Chr(c - 32);\t\
      // convert to uppercase\n\t}\n\t\n\treturn result;\n}\n</uscript>\n\n==LTrim,\
      \ RTrim, Trim==\n\nThese functions remove spaces from the left, the right or\
      \ both sides of a string.\n\n<uscript>\nstatic final function string LTrim(coerce\
      \ string S)\n{\n\twhile (Left(S, 1) == \" \")\n\t\tS = Right(S, Len(S) - 1);\n\
      \treturn S;\n}\n</uscript>\n\n<uscript>\nstatic final function string RTrim(coerce\
      \ string S)\n{\n\twhile (Right(S, 1) == \" \")\n\t\tS = Left(S, Len(S) - 1);\n\
      \treturn S;\n}\n</uscript>\n\n<uscript>\nstatic final function string Trim(coerce\
      \ string S)\n{\n\treturn LTrim(RTrim(S));\n}\n</uscript>\n\n==ReplaceText==\n\
      \nThis function replaces any occurance of a substring <code>Replace</code> inside\
      \ a string <code>Text</code> with the string <code>With</code>. This is a modified\
      \ version of the <code>ReplaceText</code> function available in the [[Legacy:UWindowWindow|UWindowWindow]]\
      \ class which doesn't return the string but assigns it to the variable <code>Text</code>.\n\
      \n<uscript>\nstatic final function string ReplaceText(coerce string Text, coerce\
      \ string Replace, coerce string With)\n{\n\tlocal int i;\n\tlocal string Output;\n\
      \t\n\ti = InStr(Text, Replace);\n\twhile (i != -1) {\t\n\t\tOutput = Output\
      \ $ Left(Text, i) $ With;\n\t\tText = Mid(Text, i + Len(Replace));\t\n\t\ti\
      \ = InStr(Text, Replace);\n\t}\n\tOutput = Output $ Text;\n\treturn Output;\n\
      }\n</uscript>\n\n==Unique string list==\n\nThe following example will maintain\
      \ a dynamic array with unique strings. The MyStringList is a sorted list so\
      \ we break on the first entry that's larger then the new string, and insert\
      \ the new string at that point.\n\nYou could use the same principle of every\
      \ other type, just make sure you have a ''equals'' and ''larger than'' compare\
      \ routines.\n\n<uscript>\n/** a sorted string list */\nvar array<string> MyStringList;\n\
      \n/** returns true when added */\nfunction bool AddString(coerce string newstring)\n\
      {\n  local int i;\n  for (i = 0; i < MyStringList.length; i++)\n  {\n    if\
      \ (MyStringList[i] == newstring) return false;\n    if (MyStringList[i] > newstring)\
      \ break;\n  }\n  MyStringList.Insert(i, 1);\n  MyStringList[i] = newstring;\n\
      \  return true;\n}\n</uscript>\n\n==Splitting a String==\n\nCreated this method\
      \ since Unreal Runtime doesn't have a Split() method for splitting strings.\n\
      \nThis method works exactly the same as the method in UT2k4, in Object.Split()\n\
      \n<uscript>\n/**Parameters - \nstr = input string\ndiv = divider\nbDiv = true\
      \ to keep dividers, false to remove dividers.**/\nfunction array<string> Split(string\
      \ str, string div, bool bDiv)\n{\n   local array<string> temp;\n   local bool\
      \ bEOL;\n   local string tempChar;\n   local int precount, curcount, wordcount,\
      \ strLength;\n   strLength = len(str);\n   bEOL = false;\n   precount = 0;\n\
      \   curcount = 0;\n   wordcount = 0;\n\n   while(!bEOL)\n   {\n      tempChar\
      \ = Mid(str, curcount, 1); //go up by 1 count\n      if(tempChar != div)\n \
      \        curcount++;\n      else if(tempChar == div)\n      {\n         temp[wordcount]\
      \ = Mid(str, precount, curcount-precount);\n         wordcount++;\n        \
      \ if(bDiv)\n            precount = curcount; //leaves the divider\n        \
      \ else\n            precount = curcount + 1; //removes the divider.\n      \
      \   curcount++;\n      }\n      if(curcount == strLength)//end of string, flush\
      \ out the final word.\n      {\n         temp[wordcount] = Mid(str, precount,\
      \ curcount);\n         bEOL = true;\n      }\n   }\n   return temp;\n}\n</uscript>\n\
      \n==Related Topics==\n\n* [[Legacy:Useful Maths Functions|Useful Maths functions]]\n\
      * [[Legacy:Global Function|Global Function]]\n* [[Legacy:Operators|Operators]]\n\
      \n==Discussion==\n\n'''Juxtapose:''' Maybe this is covered in a page that links\
      \ to this one, but shouldn't there be a better description of how to implement\
      \ these? Having arrived at this page straight from a search, it took me a minute\
      \ to figure out that these are not implemented in default code. I discovered\
      \ in the source code that @= is implemented in UT2k4 Object class where += is\
      \ not. Is there documentation on that method else where?\n\n'''Fyfe:''' Wormbo\
      \ implemented these functions in [[Legacy:WUtils|WUtils]]. \n\n'''Caudex:'''\
      \ Added function for Splitting strings, since Unreal Runtime doesn't have it\
      \ as Native. If you want more methods for Strings, UDN has a pretty good topic\
      \ about it. (http://udn.epicgames.com/Two/StringsInUnrealScript.html)\n\n[[:Category:Legacy\
      \ To Do]] &ndash; Redirect to [[Legacy:WUtils|WUtils]]?\n[[Category:Legacy To\
      \ Do|{{PAGENAME}}]]"
  properties: []
  revId: 8717
name: "Legacy:Useful String Functions"
revision:
  revid: 8717
  parentid: 8719
  user: "Caudex"
  timestamp: 1193362287.000000000
  comment: "*"
timestamp: 1668764810.715778000
