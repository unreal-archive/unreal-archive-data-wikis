---
parse:
  title: "Legacy:Garbage Collection"
  text:
    text: "<p><b>Garbage</b> is an unused part or element of code to which memory\
      \ was allocated, (some resource of a program, or process), and, subsequently,\
      \ has no pointers to it or has had its references destroyed. Garbage does no\
      \ damage to a program initially, but it will gradually monopolize all available\
      \ memory and the system will tend to run slower and slower and eventually fail\
      \ or crash. Garbage collection involves running a program periodically that\
      \ identifies and collects all garbage and frees memory (for more garbage). All\
      \ objects and actors in Unreal are garbage-collected using a tree-following\
      \ garbage collector similar to that of the Java VM.</p>\n<p>Garbage Collection\
      \ in Unreal essentially consists of serializing all Objects in the game (that\
      \ includes Actors too, of course), and then deleting anything that doesn't end\
      \ up being serialized. Full Garbage Collection in Unreal occurs automatically\
      \ at a level change, or can be forced with a <a href=\"/Legacy:Console\" title=\"\
      Legacy:Console\">console</a> command. Generally since most Objects are relatively\
      \ small, the overhead for having the Objects stay around in memory is also relatively\
      \ small (with the gluttonous <a href=\"/Legacy:UWindowWindow\" title=\"Legacy:UWindowWindow\"\
      >UWindowWindow</a> being an exception of course).</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Garbage_Collection?section=1\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Console_Commands/Stats_Console_Commands\"\
      \ title=\"Legacy:Console Commands/Stats Console Commands\">Garbage collection\
      \ / memory monitoring console commands</a></li>\n<li><a href=\"/Legacy:Destroying_Objects\"\
      \ title=\"Legacy:Destroying Objects\">Destroying Objects</a></li>\n<li><a href=\"\
      http://en.wikipedia.org/wiki/Automatic_garbage_collection\" class=\"extiw\"\
      \ title=\"wikipedia:Automatic garbage collection\">Wikipedia:Automatic garbage\
      \ collection</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"\
      http://forums.epicgames.com/threads/935934-Memory-mechanics-Garbage-collector\"\
      >Wormbo explain somethink about garbage collection</a></li>\n</ul>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.024 seconds\nReal time usage: 0.080 seconds\n\
      Preprocessor visited node count: 3/1000000\nPreprocessor generated node count:\
      \ 8/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate argument size:\
      \ 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1302-0!*!0!*!*!*!* and timestamp 20221118092527 and revision\
      \ id 45304\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Console"
  - ns: 100
    exists: true
    name: "Legacy:UWindowWindow"
  - ns: 100
    exists: true
    name: "Legacy:Destroying Objects"
  - ns: 100
    exists: true
    name: "Legacy:Console Commands/Stats Console Commands"
  templates: []
  images: []
  externallinks:
  - "http://forums.epicgames.com/threads/935934-Memory-mechanics-Garbage-collector"
  sections:
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Garbage_Collection"
    byteoffset: 1204
    anchor: "Related_Topics"
  displaytitle: "Legacy:Garbage Collection"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Automatic_garbage_collection"
    name: "wikipedia:Automatic garbage collection"
  wikitext:
    text: "'''Garbage''' is an unused part or element of code to which memory was\
      \ allocated, (some resource of a program, or process), and, subsequently, has\
      \ no pointers to it or has had its references destroyed. Garbage does no damage\
      \ to a program initially, but it will gradually monopolize all available memory\
      \ and the system will tend to run slower and slower and eventually fail or crash.\
      \ Garbage collection involves running a program periodically that identifies\
      \ and collects all garbage and frees memory (for more garbage). All objects\
      \ and actors in Unreal are garbage-collected using a tree-following garbage\
      \ collector similar to that of the Java VM.\n\nGarbage Collection in Unreal\
      \ essentially consists of serializing all Objects in the game (that includes\
      \ Actors too, of course), and then deleting anything that doesn't end up being\
      \ serialized.  Full Garbage Collection in Unreal occurs automatically at a level\
      \ change, or can be forced with a [[Legacy:Console|console]] command.  Generally\
      \ since most Objects are relatively small, the overhead for having the Objects\
      \ stay around in memory is also relatively small (with the gluttonous [[Legacy:UWindowWindow|UWindowWindow]]\
      \ being an exception of course).\n\n==Related Topics ==\n* [[Legacy:Console_Commands/Stats_Console_Commands|Garbage\
      \ collection / memory monitoring console commands]]\n* [[Legacy:Destroying Objects|Destroying\
      \ Objects]]\n* [[Wikipedia:Automatic garbage collection]]\n* [http://forums.epicgames.com/threads/935934-Memory-mechanics-Garbage-collector\
      \ Wormbo explain somethink about garbage collection]"
  properties: []
  revId: 45304
name: "Legacy:Garbage Collection"
revision:
  revid: 45304
  parentid: 3324
  user: "Dave Scream"
  timestamp: 1357424959.000000000
  comment: "/* Related Topics */"
timestamp: 1668763528.422417000
