---
parse:
  title: "Legacy:BSP Hole Background"
  text:
    text: "<table bgcolor=\"#CCCCCC\">\n<tr>\n<td><font color=\"black\">The All-Time\
      \ Most Humongeous BSP Hole Rant</font></td>\n</tr>\n</table>\n<hr />\n<p><i>Nuclear\
      \ Fuzz Grunge assembled this information from posts at the BeyondUnreal Editing\
      \ Forum:</i></p>\n<p>\"In the interests of providing the Planet Unreal Editing\
      \ Community with hard data on BSP Holes, I have conducted an exhaustive search\
      \ of past Editing Forum threads on the subject and assembled the most practical\
      \ and informative posts into an authoritive synopsis.</p>\n<p>The following\
      \ BSP Intel, from the Illustrious UnrealEdMonger, <i>Chris Toth.hu</i>, is undoubtedly,\
      \ the ultimate BSP Hole indoctrination:</p>\n<p>OK ... It's the time for answers.\
      \ The BSP is a data structure indeed, ... it's static too. Rebuilding the BSP\
      \ creates a binary tree of the geometry of the level. It contains the collision\
      \ information, hierarchy ... etc of the walls, floors, brush based objects etc.\
      \ When the engine renders the actual scene of the game it looks for the needed\
      \ polygons in the BSP tree and ignores the irrelevant ones. (This is occlusion.)\
      \ The complexity of the local geometry can slow down this process as well as\
      \ the complexity of the tree at the local geometry. (Vica versa) If your BSP\
      \ tree is deep then the renderer must search several levels for the needed parts.\
      \ You can see info about BSP depth in the Rebuild/Level Statistics. BSP cuts\
      \ build up your binary tree which describes it's parts using the nodes for identification.</p>\n\
      <p>The BSP hole is a piece of messed up collision info. It can convert non-colliding\
      \ space into solid space (You can't walk there) or areas can lose collision\
      \ (walk-thru-walls). Sometimes it allows you to walk into solid space...and\
      \ since you cannot exist inside solid space you'll be killed. The borders of\
      \ the unexisting solid space can reach into walls/floors and it'll prevent the\
      \ raytracer to light those areas (unlit dark areas) or it can hang into Walls/Floors\
      \ ... so during the Optimalization phase the area will be treated as unneeded\
      \ and will be removed. (Black parts/transparent polygons and HOMs (Hall of Mirror\
      \ effect) ... HOMs are BSP holes on the outer parts of the map where you would\
      \ see the Grid in the editor ... )</p>\n<p>You can see BSP holes in the Zone\
      \ Portal view and not in the BSP cuts view. (They are easily noticable black\
      \ streaks or transparent parts.) The last part of the elimination tips ... you\
      \ can change the settings. And this is sometimes good. It changes the method\
      \ of creating cuts so you can balance the BSP depth/nodecount with it. I remember\
      \ Myscha wrote these tips when UEd 1.0 shipped and there were bugs with those\
      \ rebuild options. They are fixed in UEd 2.0 ... so you can change them as you\
      \ want. (But those are the Optimal values set by default ... )</p>\n<p><i>The\
      \ Unreal Engine uses Binary Space partition trees to store 3 dimensional data.</i>\
      \ So imagine that the whole level is made out of a large sheet of matter. Now\
      \ you would need to fold the sheet to form rooms, walls ... etc like in origami.\
      \ This is done by dividing the superspace into numerous sub-spaces by assigning\
      \ nodes to key locations of the superspace. Then the nodes create convex parts\
      \ (segments, polygons) from the superspace they can be sorted into a tree. With\
      \ this method the engine can determine which areas of the map are solid geometry\
      \ and have collision and which are not. Sometimes the BSP gets messed up and\
      \ certain parts will lose collision, get collision or partially lose collision.\
      \ When they lose collision you'll be able to walk through walls fall through\
      \ floors. If an area gets collision then you won't be able to walk into those\
      \ areas and it is likely that you will see black polys around those areas, since\
      \ those polys are \"out of the BSP\" and they don't get textured this way. If\
      \ something partially loses collision that means that the borders of the collision\
      \ are killed and you are able to walk into solid space. Since nothing can exist\
      \ inside solid space you'll get killed. There are several methods for getting\
      \ rid of BSP holes.</p>\n<ul>\n<li>Simplify the geometry in the area.</li>\n\
      <li>Use more semisolids (They don't cut up the BSP so they can't cause BSP errors\
      \ in solid geometry but they can mess around with other semi-solids and non-solids)</li>\n\
      <li>Try to reduce node count (semisolids, build settings ... )</li>\n<li>If\
      \ additive brushes get BSP errors then it often helps if you put them to the\
      \ end of the BSP rebuild sequence. (and sometimes changing them to semisolid\
      \ too)</li>\n</ul>\n<p>(Note: if something is at the end of the queue then if\
      \ it has subtractions inside then the subtraction will ba applied first and\
      \ then the added brush will fill the space. So nothing will happen...you'll\
      \ have the brush unhollowed. You would need to intersect that brush first and\
      \ add it afterwards. -Zone off the area. This way the geometry inside the zone\
      \ won't be that complex.)</p>\n<p><i>Here's even more excellent advice, concerning\
      \ the statistic: the Node to Polygon Ratio.</i></p>\n<p>An average proportion\
      \ of 2 or 3 nodes per poly is still good but don't let it go higher because\
      \ it makes your map slower and it increases the possibility of getting BSP holes.</p>\n\
      <p><i>Advice concerning the Build Options sliders (in the Properties Window)</i></p>\n\
      <p>The sliders (Build Options) should be your last solution. Try changing brush\
      \ order, solidity, adjusting brush locations (Align everything to the grid!).\
      \ Try to keep things simple. If it's high poly and complex then it'll cause\
      \ high nodecounts as well. If the nodecounts are high, then:</p>\n<ol>\n<li>It\
      \ will play like crap, and</li>\n<li>It'll create a complex BSP data structure\
      \ that can result in BSP holes.</li>\n</ol>\n<p>Change it's solidity to semi-solid.\
      \ This will reduce the nodecount and it will probably make any BSP hole disappear.\
      \ If it's not caused by the nodecount but by the complexity of the brush then\
      \ you can't do too much about it ... you need to make it less-complex. It's\
      \ like trying to build a sphere with a large extrapolation. Don't use spheres\
      \ with large Extrapolation ... they are difficulties for the BSP compiler.It\
      \ will nuke your BSP. If nothing helped then use the sliders! Push the first\
      \ slider towards Limit cuts ... 12 or 13 usually does the trick.</p>\n<hr />\n\
      <p>Much Appreciation to <i>ChrisToth.hu</i>.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:BSP_Hole_Background?section=1\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Topics_On_Mapping\" title=\"\
      Legacy:Topics On Mapping\">Topics on Mapping</a></li>\n<li><a href=\"/Legacy:BSP_Hole\"\
      \ title=\"Legacy:BSP Hole\">BSP Hole</a></li>\n<li><a href=\"/Legacy:Hall_Of_Mirrors\"\
      \ title=\"Legacy:Hall Of Mirrors\">Hall Of Mirrors</a> (aka, <i>HOM</i>)</li>\n\
      <li><a href=\"/Legacy:Troubleshooting\" title=\"Legacy:Troubleshooting\" class=\"\
      mw-redirect\">Troubleshooting</a></li>\n</ul>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.023 seconds\nReal time usage: 0.027 seconds\nPreprocessor\
      \ visited node count: 8/1000000\nPreprocessor generated node count: 36/1000000\n\
      Post‐expand include size: 57/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:553-0!*!0!*!*!*!*\
      \ and timestamp 20221118030410 and revision id 1706\n -->\n"
  categories:
  - sortkey: "BSP Hole Background"
    name: "Legacy_Troubleshooting"
  - sortkey: "BSP Hole Background"
    name: "Legacy_Mapping"
  - sortkey: "BSP Hole Background"
    name: "Legacy_Rant"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Hall Of Mirrors"
  - ns: 100
    exists: true
    name: "Legacy:Topics On Mapping"
  - ns: 100
    exists: true
    name: "Legacy:BSP Hole"
  - ns: 100
    exists: true
    name: "Legacy:Troubleshooting"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "1"
    index: "1"
    fromtitle: "Legacy:BSP_Hole_Background"
    byteoffset: 6153
    anchor: "Related_Topics"
  displaytitle: "Legacy:BSP Hole Background"
  iwlinks: []
  wikitext:
    text: "<table bgcolor=\"#cccccc\"><tr><td><font color=black size=+2>The All-Time\
      \ Most Humongeous BSP Hole Rant</font></td></tr></table>\n\n----\n\n''Nuclear\
      \ Fuzz Grunge assembled this information from posts at the BeyondUnreal Editing\
      \ Forum:''\n\n\"In the interests of providing the Planet Unreal Editing Community\
      \ with hard data on BSP Holes, I have conducted an exhaustive search of past\
      \ Editing Forum threads on the subject and assembled the most practical and\
      \ informative posts into an authoritive synopsis. \n\nThe following BSP Intel,\
      \ from the Illustrious UnrealEdMonger, ''Chris Toth.hu'', is undoubtedly, the\
      \ ultimate BSP Hole indoctrination: \n\nOK ... It's the time for answers. The\
      \ BSP is a data structure indeed, ... it's static too. Rebuilding the BSP creates\
      \ a binary tree of the geometry of the level. It contains the collision information,\
      \ hierarchy ... etc of the walls, floors, brush based objects etc. When the\
      \ engine renders the actual scene of the game it looks for the needed polygons\
      \ in the BSP tree and ignores the irrelevant ones. (This is occlusion.) The\
      \ complexity of the local geometry can slow down this process as well as the\
      \ complexity of the tree at the local geometry. (Vica versa) If your BSP tree\
      \ is deep then the renderer must search several levels for the needed parts.\
      \ You can see info about BSP depth in the Rebuild/Level Statistics. BSP cuts\
      \ build up your binary tree which describes it's parts using the nodes for identification.\n\
      \nThe BSP hole is a piece of messed up collision info. It can convert non-colliding\
      \ space into solid space (You can't walk there) or areas can lose collision\
      \ (walk-thru-walls). Sometimes it allows you to walk into solid space...and\
      \ since you cannot exist inside solid space you'll be killed. The borders of\
      \ the unexisting solid space can reach into walls/floors and it'll prevent the\
      \ raytracer to light those areas (unlit dark areas) or it can hang into Walls/Floors\
      \ ... so during the Optimalization phase the area will be treated as unneeded\
      \ and will be removed. (Black parts/transparent polygons and HOMs (Hall of Mirror\
      \ effect) ... HOMs are BSP holes on the outer parts of the map where you would\
      \ see the Grid in the editor ... )\n\nYou can see BSP holes in the Zone Portal\
      \ view and not in the BSP cuts view. (They are easily noticable black streaks\
      \ or transparent parts.) The last part of the elimination tips ... you can change\
      \ the settings. And this is sometimes good. It changes the method of creating\
      \ cuts so you can balance the BSP depth/nodecount with it. I remember Myscha\
      \ wrote these tips when UEd 1.0 shipped and there were bugs with those rebuild\
      \ options. They are fixed in UEd 2.0 ... so you can change them as you want.\
      \ (But those are the Optimal values set by default ... )\n\n''The Unreal Engine\
      \ uses Binary Space partition trees to store 3 dimensional data.'' So imagine\
      \ that the whole level is made out of a large sheet of matter. Now you would\
      \ need to fold the sheet to form rooms, walls ... etc like in origami. This\
      \ is done by dividing the superspace into numerous sub-spaces by assigning nodes\
      \ to key locations of the superspace. Then the nodes create convex parts (segments,\
      \ polygons) from the superspace they can be sorted into a tree. With this method\
      \ the engine can determine which areas of the map are solid geometry and have\
      \ collision and which are not. Sometimes the BSP gets messed up and certain\
      \ parts will lose collision, get collision or partially lose collision. When\
      \ they lose collision you'll be able to walk through walls fall through floors.\
      \ If an area gets collision then you won't be able to walk into those areas\
      \ and it is likely that you will see black polys around those areas, since those\
      \ polys are \"out of the BSP\" and they don't get textured this way. If something\
      \ partially loses collision that means that the borders of the collision are\
      \ killed and you are able to walk into solid space. Since nothing can exist\
      \ inside solid space you'll get killed. There are several methods for getting\
      \ rid of BSP holes. \n\n* Simplify the geometry in the area.\n* Use more semisolids\
      \ (They don't cut up the BSP so they can't cause BSP errors in solid geometry\
      \ but they can mess around with other semi-solids and non-solids) \n* Try to\
      \ reduce node count (semisolids, build settings ... ) \n* If additive brushes\
      \ get BSP errors then it often helps if you put them to the end of the BSP rebuild\
      \ sequence. (and sometimes changing them to semisolid too)\n\n(Note: if something\
      \ is at the end of the queue then if it has subtractions inside then the subtraction\
      \ will ba applied first and then the added brush will fill the space. So nothing\
      \ will happen...you'll have the brush unhollowed. You would need to intersect\
      \ that brush first and add it afterwards. -Zone off the area. This way the geometry\
      \ inside the zone won't be that complex.) \n\n''Here's even more excellent advice,\
      \ concerning the statistic: the Node to Polygon Ratio.''\n\nAn average proportion\
      \ of 2 or 3 nodes per poly is still good but don't let it go higher because\
      \ it makes your map slower and it increases the possibility of getting BSP holes.\n\
      \n''Advice concerning the Build Options sliders (in the Properties Window)''\n\
      \nThe sliders (Build Options) should be your last solution. Try changing brush\
      \ order, solidity, adjusting brush locations (Align everything to the grid!).\
      \ Try to keep things simple. If it's high poly and complex then it'll cause\
      \ high nodecounts as well. If the nodecounts are high, then: \n\n# It will play\
      \ like crap, and \n# It'll create a complex BSP data structure that can result\
      \ in BSP holes. \n\nChange it's solidity to semi-solid. This will reduce the\
      \ nodecount and it will probably make any BSP hole disappear. If it's not caused\
      \ by the nodecount but by the complexity of the brush then you can't do too\
      \ much about it ... you need to make it less-complex. It's like trying to build\
      \ a sphere with a large extrapolation. Don't use spheres with large Extrapolation\
      \ ... they are difficulties for the BSP compiler.It will nuke your BSP. If nothing\
      \ helped then use the sliders! Push the first slider towards Limit cuts ...\
      \ 12 or 13 usually does the trick.\n\n----\n\nMuch Appreciation to ''ChrisToth.hu''.\n\
      \n==Related Topics==\n* [[Legacy:Topics On Mapping|Topics on Mapping]]\n* [[Legacy:BSP\
      \ Hole|BSP Hole]]\n* [[Legacy:Hall Of Mirrors|Hall Of Mirrors]] (aka, ''HOM'')\n\
      * [[Legacy:Troubleshooting|Troubleshooting]]\n\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy Troubleshooting|{{PAGENAME}}]]\n[[Category:Legacy Rant|{{PAGENAME}}]]"
  properties: []
  revId: 1706
name: "Legacy:BSP Hole Background"
revision:
  revid: 1706
  parentid: 1707
  user: "SuperApe"
  timestamp: 1135885090.000000000
  comment: "Keep \"HOM\" there for clarity."
timestamp: 1668762992.451789000
