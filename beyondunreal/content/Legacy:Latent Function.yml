---
parse:
  title: "Legacy:Latent Function"
  text:
    text: "<p><b>Latent functions</b> are special functions which are expected to\
      \ take some time for execution, not because they use the processor heavily,\
      \ but because they contain intentional slow-downs (for example if they have\
      \ to wait for a certain in-game event to occur before they can continue)</p>\n\
      <p>Latent functions can only be used in <a href=\"/Legacy:State\" title=\"Legacy:State\"\
      >state</a> code (i.e. in labels outside of functions within states. See <a href=\"\
      /Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\">ScriptedPawn</a>'s script\
      \ for excellent examples), which is not contained in an <a href=\"/Legacy:Iterator\"\
      \ title=\"Legacy:Iterator\">Iterator</a> (ForEach) loop. They will cause script\
      \ execution within the state to pause until some condition is met. All other\
      \ functions and states in other classes will continue to execute normally.</p>\n\
      <p>Technical mojo from <a href=\"/Legacy:UnrealScript_Language_Reference\" title=\"\
      Legacy:UnrealScript Language Reference\">UnrealScript Language Reference</a>:</p>\n\
      <blockquote class=\"legacyquote\">\n<p>Functions which require game-time to\
      \ pass are called \"latent functions\". Some examples of latent functions include\
      \ \"Sleep\", \"FinishAnim\", and \"MoveTo\". Latent functions in UnrealScript\
      \ may only be called from code within a state, not from code within a function.</p>\n\
      </blockquote>\n<blockquote class=\"legacyquote\">\n<p>While an actor is executing\
      \ a latent function, that actor's state execution doesn't continue until the\
      \ latent function completes. However, other actors, or the VM, may call functions\
      \ within the actor. The net result is that all UnrealScript functions can be\
      \ called at any time, even while latent functions are pending.</p>\n</blockquote>\n\
      <p>and also</p>\n<blockquote class=\"legacyquote\">\n<p>It is important to note\
      \ that in Unreal, because the user can save the game at any time, the state\
      \ of all actors, including their script execution state, can be saved at any\
      \ time where all actors are at their lowest possible stack level. This persistence\
      \ requirement is the reason behind the limitation that latent functions may\
      \ only be called from state code: state code executes at the lowest possible\
      \ stack level, and thus can be serialized easily. Function code may exist at\
      \ any stack level, and could have (for example) C++ native functions below it\
      \ on the stack, which is clearly not a situation which one could save on disk\
      \ and later restore.</p>\n</blockquote>\n<p>Latent functions require some time\
      \ to be executed. Typical examples are <i>Sleep</i> which waits for the specified\
      \ amount of time before returning and <i>FinishAnim</i> which returns when the\
      \ current animation has finished.</p>\n<p>Latent functions can only be called\
      \ from state code or from other latent functions. Latent functions have to be\
      \ native.</p>\n<p>While you cannot define new latent functions, it is possible\
      \ to pull a similar effect:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw2\">While</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>SomeConditionIsMet<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"co1\">//Pause until this function returns true</span>\n  <span\
      \ class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0.0</span><span class=\"br0\">)</span>;</pre></div>\n</div>\n<h2><span class=\"\
      mw-headline\" id=\"Lists\">Lists</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Latent_Function?section=1\"\
      \ title=\"Edit section: Lists\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Actor_(UT)/Functions\" title=\"\
      Legacy:Actor (UT)/Functions\">Actor (UT)/Functions</a></li>\n<li><a href=\"\
      /Legacy:Pawn_(UT)/Movement\" title=\"Legacy:Pawn (UT)/Movement\">Pawn (UT)/Movement</a></li>\n\
      <li><a href=\"/Legacy:Pawn_(UT)/AI_Functions\" title=\"Legacy:Pawn (UT)/AI Functions\"\
      >Pawn (UT)/AI Functions</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"\
      Related_Topics\">Related Topics</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Latent_Function?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\"\
      >UnrealScript</a>\n<ul>\n<li><a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function\
      \ Syntax\">Function Syntax</a></li>\n</ul>\n</li>\n</ul>\n<hr />\n<p><b>Tarquin:</b>\
      \ Needs some more info. Is there documentation for the actual functions such\
      \ as Sleep()?</p>\n<p><b>Wormbo:</b> In UT2003 there are only three classes\
      \ with a few latent functions (<a href=\"/Legacy:Actor\" title=\"Legacy:Actor\"\
      >Actor</a>, <a href=\"/Legacy:Controller\" title=\"Legacy:Controller\">Controller</a>\
      \ and <a href=\"/Legacy:AIController\" title=\"Legacy:AIController\">AIController</a>),\
      \ so we could as well list and describe them here. Unreal and UT have only two\
      \ classes with latent functions (<a href=\"/Legacy:Actor_(UT)\" title=\"Legacy:Actor\
      \ (UT)\">Actor (UT)</a> and <a href=\"/Legacy:Pawn_(UT)\" title=\"Legacy:Pawn\
      \ (UT)\">Pawn (UT)</a>).</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.053\
      \ seconds\nReal time usage: 0.055 seconds\nPreprocessor visited node count:\
      \ 49/1000000\nPreprocessor generated node count: 125/1000000\nPost‐expand include\
      \ size: 2764/2097152 bytes\nTemplate argument size: 1238/2097152 bytes\nHighest\
      \ expansion depth: 3/40\nExpensive parser function count: 0/100\n-->\n\n<!--\
      \ \nTransclusion expansion time report (%,ms,calls,template)\n100.00%    8.001\
      \      1 - -total\n 91.07%    7.286      3 - Template:Innerbox\n-->\n\n<!--\
      \ Saved in parser cache with key wiki:pcache:idhash:1672-0!*!0!!*!*!* and timestamp\
      \ 20221118021841 and revision id 4135\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Language Reference"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)/Movement"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)/AI Functions"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Controller"
  - ns: 100
    exists: true
    name: "Legacy:Actor (UT)"
  - ns: 100
    exists: true
    name: "Legacy:State"
  - ns: 100
    exists: true
    name: "Legacy:Actor (UT)/Functions"
  - ns: 100
    exists: true
    name: "Legacy:Function Syntax"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedPawn"
  - ns: 100
    exists: true
    name: "Legacy:Iterator"
  - ns: 100
    exists: true
    name: "Legacy:AIController"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Lists"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Latent_Function"
    byteoffset: 2651
    anchor: "Lists"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Latent_Function"
    byteoffset: 2828
    anchor: "Related_Topics"
  displaytitle: "Legacy:Latent Function"
  iwlinks: []
  wikitext:
    text: "'''Latent functions''' are special functions which are expected to take\
      \ some time for execution, not because they use the processor heavily, but because\
      \ they contain intentional slow-downs (for example if they have to wait for\
      \ a certain in-game event to occur before they can continue)\n\nLatent functions\
      \ can only be used in [[Legacy:State|state]] code (i.e. in labels outside of\
      \ functions within states. See [[Legacy:ScriptedPawn|ScriptedPawn]]'s script\
      \ for excellent examples), which is not contained in an [[Legacy:Iterator|Iterator]]\
      \ (ForEach) loop. They will cause script execution within the state to pause\
      \ until some condition is met. All other functions and states in other classes\
      \ will continue to execute normally.\n\nTechnical mojo from [[Legacy:UnrealScript\
      \ Language Reference|UnrealScript Language Reference]]:\n\n{{innerbox|  Functions\
      \ which require game-time to pass are called \"latent functions\". Some examples\
      \ of latent functions include \"Sleep\", \"FinishAnim\", and \"MoveTo\". Latent\
      \ functions in UnrealScript may only be called from code within a state, not\
      \ from code within a function.\n\n}}\n\n{{innerbox| While an actor is executing\
      \ a latent function, that actor's state execution doesn't continue until the\
      \ latent function completes. However, other actors, or the VM, may call functions\
      \ within the actor. The net result is that all UnrealScript functions can be\
      \ called at any time, even while latent functions are pending.\n\n}}\n\nand\
      \ also\n\n{{innerbox| It is important to note that in Unreal, because the user\
      \ can save the game at any time, the state of all actors, including their script\
      \ execution state, can be saved at any time where all actors are at their lowest\
      \ possible stack level. This persistence requirement is the reason behind the\
      \ limitation that latent functions may only be called from state code: state\
      \ code executes at the lowest possible stack level, and thus can be serialized\
      \ easily. Function code may exist at any stack level, and could have (for example)\
      \ C++ native functions below it on the stack, which is clearly not a situation\
      \ which one could save on disk and later restore.\n\n}}\n\nLatent functions\
      \ require some time to be executed. Typical examples are ''Sleep'' which waits\
      \ for the specified amount of time before returning and ''FinishAnim'' which\
      \ returns when the current animation has finished.\n\nLatent functions can only\
      \ be called from state code or from other latent functions. Latent functions\
      \ have to be native. \n\nWhile you cannot define new latent functions, it is\
      \ possible to pull a similar effect:\n\n<uscript>\nWhile (!SomeConditionIsMet())\
      \ //Pause until this function returns true\n  Sleep(0.0);\n</uscript>\n\n==Lists\
      \ ==\n* [[Legacy:Actor (UT)/Functions|Actor (UT)/Functions]]\n* [[Legacy:Pawn\
      \ (UT)/Movement|Pawn (UT)/Movement]]\n* [[Legacy:Pawn (UT)/AI Functions|Pawn\
      \ (UT)/AI Functions]]\n\n==Related Topics ==\n* [[Legacy:UnrealScript|UnrealScript]]\n\
      ** [[Legacy:Function Syntax|Function Syntax]]\n\n----\n\n'''Tarquin:''' Needs\
      \ some more info. Is there documentation for the actual functions such as Sleep()?\n\
      \n'''Wormbo:''' In UT2003 there are only three classes with a few latent functions\
      \ ([[Legacy:Actor|Actor]], [[Legacy:Controller|Controller]] and [[Legacy:AIController|AIController]]),\
      \ so we could as well list and describe them here. Unreal and UT have only two\
      \ classes with latent functions ([[Legacy:Actor (UT)|Actor (UT)]] and [[Legacy:Pawn\
      \ (UT)|Pawn (UT)]])."
  properties: []
  revId: 4135
name: "Legacy:Latent Function"
revision:
  revid: 4135
  parentid: 4136
  user: "P54B6FE4D.dip.t-dialin.net"
  timestamp: 1142247073.000000000
  comment: "*"
timestamp: 1668763463.994123000
