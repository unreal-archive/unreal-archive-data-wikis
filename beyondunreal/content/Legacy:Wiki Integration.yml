---
parse:
  title: "Legacy:Wiki Integration"
  text:
    text: "<p>This page is dedicated to scripts and other things that integrate access\
      \ to the Unreal Wiki somehow in web browsers, chat clients and other applications.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Wiki_Integration\">Wiki Integration</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Wiki_Integration?section=1\" title=\"Edit section: Wiki\
      \ Integration\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Wiki_Integration/IRC_Scripts\" title=\"Legacy:Wiki\
      \ Integration/IRC Scripts\">Legacy:Wiki Integration/IRC Scripts</a> – Add convenient\
      \ aliases to mIRC to help others search and browse the Unreal Wiki.</li>\n<li><a\
      \ href=\"/Legacy:Wiki_Integration/Browser_Sidebar\" title=\"Legacy:Wiki Integration/Browser\
      \ Sidebar\">Legacy:Wiki Integration/Browser Sidebar</a> – Add your Unreal Wiki\
      \ personal command center to Internet Explorer, Mozilla and Opera.</li>\n<li><a\
      \ href=\"/Legacy:Wiki_Integration/Browser_Search\" title=\"Legacy:Wiki Integration/Browser\
      \ Search\">Legacy:Wiki Integration/Browser Search</a> – Add Unreal Wiki's searching\
      \ capabilities to Mozilla, Opera, and Firefox.</li>\n<li><a href=\"/Legacy:UnCodeX\"\
      \ title=\"Legacy:UnCodeX\">UnCodeX</a> – You can look up class pages from within\
      \ UnCodeX.</li>\n<li><a href=\"/Legacy:WOTgreal\" title=\"Legacy:WOTgreal\"\
      >WOTgreal</a> – You can look up Unreal Wiki content from within WOTgreal.</li>\n\
      <li><a rel=\"nofollow\" class=\"external text\" href=\"http://wikipedia.mozdev.org/\"\
      >Wiki Toolbar for Firefox</a> – Works with this wiki</li>\n</ul>\n<h3><span\
      \ class=\"mw-headline\" id=\"Comments.2FPropositions\">Comments/Propositions</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Wiki_Integration?section=2\" title=\"Edit section: Comments/Propositions\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p><b>Ars-Magna:</b>\
      \ I'm working on a UT site (which is not yet \"announced\"), the <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://www.ut.pozytron.com\">UMC</a>. The main\
      \ difference between this site and the billions of others like it is that it\
      \ will (eventually) offer a wiki-like community, where everyone can contribute.\
      \ I plan on offering an integration with the UnrealWiki where you can use wiki-style\
      \ links. I want to make it do the wiki-links properly, i.e., a link to a non-existent\
      \ page has the question mark. I am capable enough at php to do this, but I was\
      \ wondering if there's a page that simply lists all the pages in the UnrealWiki\
      \ in plaintext, besides the [wiki?action=index Index] page?</p>\n<p><b>Tarquin:</b>\
      \ Nope, there's just action=index. If you're using a Wiki clone (there's a HUGE\
      \ list on Ward's Wiki at <a href=\"http://c2.com/cgi/wiki?WikiEngines\" class=\"\
      extiw\" title=\"wiki:WikiEngines\">Wiki:WikiEngines</a>), it'll have <a href=\"\
      http://www.usemod.com/cgi-bin/mb.pl?InterWiki\" class=\"extiw\" title=\"meatball:InterWiki\"\
      >MeatBall:InterWiki</a> so you can easily make links to other wikis like I just\
      \ have there. The Clones I know of don't bother checking for page existence,\
      \ it's considered too much effort. I suppose you could grab the list off this\
      \ Wiki once a day, say, and store that on your server to consult when generating\
      \ pages. Actually, even <i>more</i> efficient would be to grab <a href=\"/Legacy:Recent_Changes\"\
      \ title=\"Legacy:Recent Changes\" class=\"mw-redirect\">Recent Changes</a> every\
      \ 3 days, and look for any page title that is not in your local list.</p>\n\
      <p><b>EntropicLqd:</b> Couldn't you use fopen() with a URL to check for the\
      \ existence of the page? Simply open the URL and look for the \"enter your text\
      \ here\" or whatever the default value of the textarea happens to be. Might\
      \ be easier although probably slower.</p>\n<p><b>Ars-Magna:</b> I thought of\
      \ having a database/file that stores the links locally, but I want the links\
      \ to either always be updated, or not check at all. I also tried the fopen()\
      \ thing, but the problem is, if a page doesn't exist, wiki makes one and the\
      \ server is fooled into thinking a page is there (well, I suppose it is, technically.)\
      \ Anyway, thanks for the tips. My current idea is to check the action=index\
      \ page either every time the page is refreshed, or once per day, and just search\
      \ the text for the link name. [edit: Arggh, I need to read what people WRITE\
      \ next time.]</p>\n<p><b>Ars-Magna:</b> OK, I have a working test page <a rel=\"\
      nofollow\" class=\"external text\" href=\"http://www.ut.pozytron.com/test.php\"\
      >here</a> where you can test the wiki-style links, and they work like I wanted\
      \ them to. This is totally live, too–when a page is created, it should become\
      \ a solid link. And note that it doesn't take much of a performance hit.</p>\n\
      <p>I feel so l33t.&#160;:-)</p>\n<p><b>EntropicLqd:</b> So how did you do it\
      \ in the end? Looks good.</p>\n<p><b>Ars-Magna:</b> It grabs the text of action=index.\
      \ With the amount of traffic I get right now, that's fine (who knows how it'll\
      \ be if the page ever gets popular, though). Then it compares the links to the\
      \ action=index page and links them appropriately. This is still totally experimental.\
      \ In the end, I might decide to pull the checking mechanism and make it link\
      \ without checking. We'll see.</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.029 seconds\nReal time usage: 0.030 seconds\nPreprocessor visited node count:\
      \ 25/1000000\nPreprocessor generated node count: 60/1000000\nPost‐expand include\
      \ size: 66/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3721-0!*!0!!*!*!*\
      \ and timestamp 20221118012625 and revision id 9451\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Wiki Integration/Browser Sidebar"
  - ns: 100
    exists: true
    name: "Legacy:UnCodeX"
  - ns: 100
    exists: true
    name: "Legacy:WOTgreal"
  - ns: 100
    exists: true
    name: "Legacy:Wiki Integration/Browser Search"
  - ns: 100
    exists: true
    name: "Legacy:Wiki Integration/IRC Scripts"
  - ns: 100
    exists: true
    name: "Legacy:Recent Changes"
  templates: []
  images: []
  externallinks:
  - "http://www.ut.pozytron.com"
  - "http://wikipedia.mozdev.org/"
  - "http://www.ut.pozytron.com/test.php"
  sections:
  - toclevel: 1
    level: "2"
    line: "Wiki Integration"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Wiki_Integration"
    byteoffset: 155
    anchor: "Wiki_Integration"
  - toclevel: 2
    level: "3"
    line: "Comments/Propositions"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Wiki_Integration"
    byteoffset: 879
    anchor: "Comments.2FPropositions"
  displaytitle: "Legacy:Wiki Integration"
  iwlinks:
  - prefix: "wiki"
    url: "http://c2.com/cgi/wiki?WikiEngines"
    name: "wiki:WikiEngines"
  - prefix: "meatball"
    url: "http://www.usemod.com/cgi-bin/mb.pl?InterWiki"
    name: "meatball:InterWiki"
  wikitext:
    text: "This page is dedicated to scripts and other things that integrate access\
      \ to the Unreal Wiki somehow in web browsers, chat clients and other applications.\n\
      \n==Wiki Integration ==\n\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/IRC Scripts]]\
      \ &ndash; Add convenient aliases to mIRC to help others search and browse the\
      \ Unreal Wiki.\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Browser Sidebar]] &ndash;\
      \ Add your Unreal Wiki personal command center to Internet Explorer, Mozilla\
      \ and Opera.\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Browser Search]] &ndash;\
      \ Add Unreal Wiki's searching capabilities to Mozilla, Opera, and Firefox.\n\
      * [[Legacy:UnCodeX|UnCodeX]] &ndash; You can look up class pages from within\
      \ UnCodeX.\n* [[Legacy:WOTgreal|WOTgreal]] &ndash; You can look up Unreal Wiki\
      \ content from within WOTgreal.\n* [http://wikipedia.mozdev.org/ Wiki Toolbar\
      \ for Firefox] &ndash; Works with this wiki\n\n===Comments/Propositions ===\n\
      \n'''Ars-Magna:''' I'm working on a UT site (which is not yet \"announced\"\
      ), the [http://www.ut.pozytron.com UMC]. The main difference between this site\
      \ and the billions of others like it is that it will (eventually) offer a wiki-like\
      \ community, where everyone can contribute. I plan on offering an integration\
      \ with the UnrealWiki where you can use wiki-style links. I want to make it\
      \ do the wiki-links properly, i.e., a link to a non-existent page has the question\
      \ mark. I am capable enough at php to do this, but I was wondering if there's\
      \ a page that simply lists all the pages in the UnrealWiki in plaintext, besides\
      \ the [wiki?action=index Index] page?\n\n'''Tarquin:''' Nope, there's just action=index.\
      \ If you're using a Wiki clone (there's a HUGE list on Ward's Wiki at [[Wiki:WikiEngines]]),\
      \ it'll have [[MeatBall:InterWiki]] so you can easily make links to other wikis\
      \ like I just have there. The Clones I know of don't bother checking for page\
      \ existence, it's considered too much effort. I suppose you could grab the list\
      \ off this Wiki once a day, say, and store that on your server to consult when\
      \ generating pages. Actually, even ''more'' efficient would be to grab [[Legacy:Recent\
      \ Changes|Recent Changes]] every 3 days, and look for any page title that is\
      \ not in your local list.\n\n'''EntropicLqd:'''  Couldn't you use fopen() with\
      \ a URL to check for the existence of the page?  Simply open the URL and look\
      \ for the \"enter your text here\" or whatever the default value of the textarea\
      \ happens to be.  Might be easier although probably slower.\n\n'''Ars-Magna:'''\
      \ I thought of having a database/file that stores the links locally, but I want\
      \ the links to either always be updated, or not check at all. I also tried the\
      \ fopen() thing, but the problem is, if a page doesn't exist, wiki makes one\
      \ and the server is fooled into thinking a page is there (well, I suppose it\
      \ is, technically.) Anyway, thanks for the tips. My current idea is to check\
      \ the action=index page either every time the page is refreshed, or once per\
      \ day, and just search the text for the link name. [edit: Arggh, I need to read\
      \ what people WRITE next time.]\n\n'''Ars-Magna:''' OK, I have a working test\
      \ page [http://www.ut.pozytron.com/test.php here] where you can test the wiki-style\
      \ links, and they work like I wanted them to. This is totally live, too&ndash;when\
      \ a page is created, it should become a solid link. And note that it doesn't\
      \ take much of a performance hit.\n\nI feel so l33t. :-)\n\n'''EntropicLqd:'''\
      \  So how did you do it in the end?  Looks good.\n\n'''Ars-Magna:''' It grabs\
      \ the text of action=index. With the amount of traffic I get right now, that's\
      \ fine (who knows how it'll be if the page ever gets popular, though). Then\
      \ it compares the links to the action=index page and links them appropriately.\
      \ This is still totally experimental. In the end, I might decide to pull the\
      \ checking mechanism and make it link without checking. We'll see."
  properties: []
  revId: 9451
name: "Legacy:Wiki Integration"
revision:
  revid: 9451
  parentid: 9452
  user: "El Muerte"
  timestamp: 1144361237.000000000
  comment: "*revert"
timestamp: 1668766431.282600000
