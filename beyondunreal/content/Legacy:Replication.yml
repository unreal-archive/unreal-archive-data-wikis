---
parse:
  title: "Legacy:Replication"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#What_is_Replication.3F\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">What is Replication?</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Why_do_I_care.3F\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Why do I care?</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#How_Does_It_Work.3F\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">How Does It Work?</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Parallel_Universes\"><span\
      \ class=\"tocnumber\">4</span> <span class=\"toctext\">Parallel Universes</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-5\"><a href=\"#Key_Concepts\"><span class=\"\
      tocnumber\">5</span> <span class=\"toctext\">Key Concepts</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-6\"><a href=\"#Related_Topics\"><span class=\"\
      tocnumber\">6</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-7\"><a href=\"#External_Links\"><span class=\"\
      tocnumber\">7</span> <span class=\"toctext\">External Links</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"What_is_Replication.3F\"\
      >What is Replication?</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Replication?section=1\" title=\"Edit section:\
      \ What is Replication?\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Replication is the mechanism by which the computers in a network game are\
      \ kept in sync. If you are writing code that will be used in a network game\
      \ and causes effects that might be seen by more than one player, then you need\
      \ to be aware of replication. Just about the only time a coder doesn't care\
      \ about replication is when the code only affects a single player's display.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Why_do_I_care.3F\">Why do I care?</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Replication?section=2\" title=\"Edit section: Why do I\
      \ care?\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>In single player mode, there is no distinction between client and server,\
      \ so your scripts run fine, moving items, updating velocities, spawning and\
      \ destroying actors... But when you move over to network play, suddenly you\
      \ find that the item you moved keeps pinging back to its original location,\
      \ or destroyed items re-appear, or the movement is terribly jittery. You need\
      \ to understand from the start how to be sure that the server is doing the right\
      \ thing and passing the necessary information to the clients.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"How_Does_It_Work.3F\">How Does It Work?</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Replication?section=3\" title=\"Edit section: How Does\
      \ It Work?\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Replication is a lower-bandwidth solution than <a href=\"/Legacy:Replication/Compared\"\
      \ title=\"Legacy:Replication/Compared\">Lock Step</a> or <a href=\"/Legacy:Replication/Compared\"\
      \ title=\"Legacy:Replication/Compared\">Client Server</a> architectures. In\
      \ online games there is a server, which has final authority over what is happening,\
      \ and clients, which deal with displaying the game world and capturing the user's\
      \ input. So far this sounds just like the client-server model, but where replication\
      \ gets clever is that the clients are allowed to simulate certain things. For\
      \ example, if a projectile is fired, its behaviour is well defined – it will\
      \ travel at a certain velocity in a certain direction. The client can be told\
      \ the start, angle, and velocity, and can then continue to update the projectile's\
      \ location with no further information from the server.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Parallel_Universes\">Parallel Universes</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Replication?section=4\"\
      \ title=\"Edit section: Parallel Universes\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Replication is often thought of as a hard subject\
      \ to get your mind around. The main reason it is difficult to understand is\
      \ that Replication itself partially <i>hides</i> the fact that you are writing\
      \ code for two systems: the server and the client. When an actor is spawned,\
      \ it is (usually) spawned in two parallel universes – one, authoritative version\
      \ on the server and a proxy on the client. The confusing part is that it is\
      \ the same uscript code running on both systems, even though they perform subtly\
      \ different jobs. So right now, before you read on, bifurcate your brain. Everything\
      \ you write is going to two audiences: the server and the client.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Key_Concepts\">Key Concepts</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Replication?section=5\"\
      \ title=\"Edit section: Key Concepts\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Relevance\" title=\"Legacy:Relevance\"\
      >Relevance</a></li>\n<li><a href=\"/Legacy:Role\" title=\"Legacy:Role\">Role\
      \ and RemoteRole</a></li>\n<li><a href=\"/Legacy:NetMode\" title=\"Legacy:NetMode\"\
      >NetMode</a></li>\n<li><a href=\"/Legacy:Simulated_Function\" title=\"Legacy:Simulated\
      \ Function\">Simulated Functions</a> and <a href=\"/Legacy:Replicated_Function\"\
      \ title=\"Legacy:Replicated Function\">Replicated Functions</a></li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Replication?section=6\" title=\"Edit section: Related\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Actor\" title=\"Legacy:Actor\">Actor</a> class,\
      \ which contains the properties governing replication behaviour</li>\n<li><a\
      \ href=\"/Legacy:Introduction_To_Replication\" title=\"Legacy:Introduction To\
      \ Replication\">Introduction to Replication</a></li>\n<li><a href=\"/Legacy:Replication_Block\"\
      \ title=\"Legacy:Replication Block\">Replication Block</a></li>\n<li><a href=\"\
      /Legacy:Role\" title=\"Legacy:Role\">Role</a> and RemoteRole, and <a href=\"\
      /Legacy:NetMode\" title=\"Legacy:NetMode\">NetMode</a>.</li>\n<li><a href=\"\
      /Legacy:Netcode_Idioms\" title=\"Legacy:Netcode Idioms\">Netcode Idioms</a></li>\n\
      <li><a href=\"/Legacy:Replication/Message_Types\" title=\"Legacy:Replication/Message\
      \ Types\">Legacy:Replication/Message Types</a></li>\n<li><a href=\"/Legacy:Simulated_Function\"\
      \ title=\"Legacy:Simulated Function\">Simulated Function</a></li>\n<li><a href=\"\
      /Legacy:Replicated_Function\" title=\"Legacy:Replicated Function\">Replicated\
      \ Function</a></li>\n<li><a href=\"/Legacy:Animation_Replication\" title=\"\
      Legacy:Animation Replication\">Animation Replication</a></li>\n<li><a href=\"\
      /Legacy:Another_Look_At_Replication\" title=\"Legacy:Another Look At Replication\"\
      >Another Look At Replication</a></li>\n<li><a href=\"/Legacy:Replication_Examples\"\
      \ title=\"Legacy:Replication Examples\">Replication examples</a>\n<ul>\n<li><a\
      \ href=\"/Legacy:Replication_Examples/Battle_City\" title=\"Legacy:Replication\
      \ Examples/Battle City\">Replication Examples/Battle City</a></li>\n<li><a href=\"\
      /Legacy:Replication_Examples/Giant_Spider_Execution\" title=\"Legacy:Replication\
      \ Examples/Giant Spider Execution\">Replication Examples/Giant Spider Execution</a></li>\n\
      </ul>\n</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"External_Links\">External\
      \ Links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Replication?section=7\" title=\"Edit section:\
      \ External Links\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://unreal.epicgames.com/Network.htm\"\
      >Networking Architecture</a> by Tim Sweeney himself.</li>\n<li><a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://unreal.jall.org/tutorials/replication.html\"\
      >Replication De-Obfuscation</a> by Mongo (28-12-06, local copy&#160;: <a href=\"\
      /Legacy:Replication_De-Obfuscation\" title=\"Legacy:Replication De-Obfuscation\"\
      >Replication De-Obfuscation</a>)</li>\n<li><a rel=\"nofollow\" class=\"external\
      \ text\" href=\"http://unreal.jall.org/tutorials/guidedripper.html\">Guided\
      \ Ripper Tutorial</a> – A UT-based tutorial describing the pitfalls of creating\
      \ a weapon that works not only offline.</li>\n<li><a rel=\"nofollow\" class=\"\
      external text\" href=\"http://www.members.shaw.ca/gswilson/Simple2.zip\">Networking\
      \ Sample</a> by GW</li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"\
      http://www.members.shaw.ca/gswilson/SimpleB.zip\">Another Networking Sample</a>\
      \ by GW</li>\n</ul>\n<hr />\n<p><a href=\"/Category:Legacy_Tutorial\" title=\"\
      Category:Legacy Tutorial\">Category:Legacy Tutorial</a><br />\n<a href=\"/Category:Legacy_To_Do\"\
      \ title=\"Category:Legacy To Do\">Category:Legacy To Do</a> – This needs merged\
      \ into the grand topic of <strong class=\"selflink\">Replication</strong>. See\
      \ <a href=\"/Legacy:Replication/Discussing\" title=\"Legacy:Replication/Discussing\"\
      >Replication/Discussing</a></p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.040 seconds\nReal time usage: 0.042 seconds\nPreprocessor visited node count:\
      \ 47/1000000\nPreprocessor generated node count: 98/1000000\nPost‐expand include\
      \ size: 73/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2587-0!*!0!!en!*!*\
      \ and timestamp 20221118015521 and revision id 33594\n -->\n"
  categories:
  - sortkey: "Replication"
    name: "Legacy_To_Do"
  - sortkey: "Replication"
    name: "Legacy_Tutorial"
  links:
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Another Look At Replication"
  - ns: 100
    exists: true
    name: "Legacy:Role"
  - ns: 100
    exists: true
    name: "Legacy:Replication/Compared"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples/Giant Spider Execution"
  - ns: 100
    exists: true
    name: "Legacy:Replication De-Obfuscation"
  - ns: 100
    exists: true
    name: "Legacy:Relevance"
  - ns: 100
    exists: true
    name: "Legacy:Replication/Discussing"
  - ns: 100
    exists: true
    name: "Legacy:Replication Block"
  - ns: 14
    exists: true
    name: "Category:Legacy Tutorial"
  - ns: 100
    exists: true
    name: "Legacy:Animation Replication"
  - ns: 100
    exists: true
    name: "Legacy:Replication/Message Types"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:NetMode"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples"
  - ns: 100
    exists: true
    name: "Legacy:Simulated Function"
  - ns: 100
    exists: true
    name: "Legacy:Introduction To Replication"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples/Battle City"
  - ns: 100
    exists: true
    name: "Legacy:Netcode Idioms"
  - ns: 100
    exists: true
    name: "Legacy:Replicated Function"
  templates: []
  images: []
  externallinks:
  - "http://unreal.jall.org/tutorials/guidedripper.html"
  - "http://www.members.shaw.ca/gswilson/Simple2.zip"
  - "http://www.members.shaw.ca/gswilson/SimpleB.zip"
  - "http://unreal.epicgames.com/Network.htm"
  - "http://unreal.jall.org/tutorials/replication.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "What is Replication?"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Replication"
    byteoffset: 0
    anchor: "What_is_Replication.3F"
  - toclevel: 1
    level: "2"
    line: "Why do I care?"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Replication"
    byteoffset: 403
    anchor: "Why_do_I_care.3F"
  - toclevel: 1
    level: "2"
    line: "How Does It Work?"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Replication"
    byteoffset: 937
    anchor: "How_Does_It_Work.3F"
  - toclevel: 1
    level: "2"
    line: "Parallel Universes"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Replication"
    byteoffset: 1760
    anchor: "Parallel_Universes"
  - toclevel: 1
    level: "2"
    line: "Key Concepts"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Replication"
    byteoffset: 2442
    anchor: "Key_Concepts"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "6"
    index: "6"
    fromtitle: "Legacy:Replication"
    byteoffset: 2669
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "External Links"
    number: "7"
    index: "7"
    fromtitle: "Legacy:Replication"
    byteoffset: 3538
    anchor: "External_Links"
  displaytitle: "Legacy:Replication"
  iwlinks: []
  wikitext:
    text: "==What is Replication?==\n\nReplication is the mechanism by which the computers\
      \ in a network game are kept in sync.  If you are writing code that will be\
      \ used in a network game and causes effects that might be seen by more than\
      \ one player, then you need to be aware of replication.  Just about the only\
      \ time a coder doesn't care about replication is when the code only affects\
      \ a single player's display.\n\n==Why do I care?==\n\nIn single player mode,\
      \ there is no distinction between client and server, so your scripts run fine,\
      \ moving items, updating velocities, spawning and destroying actors...  But\
      \ when you move over to network play, suddenly you find that the item you moved\
      \ keeps pinging back to its original location, or destroyed items re-appear,\
      \ or the movement is terribly jittery.  You need to understand from the start\
      \ how to be sure that the server is doing the right thing and passing the necessary\
      \ information to the clients.\n\n==How Does It Work?==\n\nReplication is a lower-bandwidth\
      \ solution than [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Compared|Lock Step]] or\
      \ [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Compared|Client Server]] architectures.\
      \  In online games there is a server, which has final authority over what is\
      \ happening, and clients, which deal with displaying the game world and capturing\
      \ the user's input.  So far this sounds just like the client-server model, but\
      \ where replication gets clever is that the clients are allowed to simulate\
      \ certain things.  For example, if a projectile is fired, its behaviour is well\
      \ defined – it will travel at a certain velocity in a certain direction.  The\
      \ client can be told the start, angle, and velocity, and can then continue to\
      \ update the projectile's location with no further information from the server.\n\
      \n==Parallel Universes==\n\nReplication is often thought of as a hard subject\
      \ to get your mind around.  The main reason it is difficult to understand is\
      \ that Replication itself partially ''hides'' the fact that you are writing\
      \ code for two systems: the server and the client.  When an actor is spawned,\
      \ it is (usually) spawned in two parallel universes – one, authoritative version\
      \ on the server and a proxy on the client.  The confusing part is that it is\
      \ the same uscript code running on both systems, even though they perform subtly\
      \ different jobs.  So right now, before you read on, bifurcate your brain. \
      \ Everything you write is going to two audiences: the server and the client.\n\
      \n==Key Concepts==\n\n* [[Legacy:Relevance|Relevance]]\n* [[Legacy:Role|Role\
      \ and RemoteRole]]\n* [[Legacy:NetMode|NetMode]]\n* [[Legacy:Simulated Function|Simulated\
      \ Function]]s and [[Legacy:Replicated Function|Replicated Function]]s\n\n==Related\
      \ Topics ==\n* [[Legacy:Actor|Actor]] class, which contains the properties governing\
      \ replication behaviour\n* [[Legacy:Introduction To Replication|Introduction\
      \ to Replication]]\n* [[Legacy:Replication Block|Replication Block]]\n* [[Legacy:Role|Role]]\
      \ and RemoteRole, and [[Legacy:NetMode|NetMode]].\n* [[Legacy:Netcode Idioms|Netcode\
      \ Idioms]]\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Message Types]]\n* [[Legacy:Simulated\
      \ Function|Simulated Function]]\n* [[Legacy:Replicated Function|Replicated Function]]\n\
      * [[Legacy:Animation Replication|Animation Replication]]\n* [[Legacy:Another\
      \ Look At Replication|Another Look At Replication]]\n* [[Legacy:Replication\
      \ Examples|Replication examples]]\n** [[Legacy:Replication Examples/Battle City|Replication\
      \ Examples/Battle City]]\n** [[Legacy:Replication Examples/Giant Spider Execution|Replication\
      \ Examples/Giant Spider Execution]]\n\n==External Links==\n* [http://unreal.epicgames.com/Network.htm\
      \ Networking Architecture] by Tim Sweeney himself. \n* [http://unreal.jall.org/tutorials/replication.html\
      \ Replication De-Obfuscation] by Mongo (28-12-06, local copy : [[Legacy:Replication\
      \ De-Obfuscation|Replication De-Obfuscation]]) \n* [http://unreal.jall.org/tutorials/guidedripper.html\
      \ Guided Ripper Tutorial] – A UT-based tutorial describing the pitfalls of creating\
      \ a weapon that works not only offline. \n* [http://www.members.shaw.ca/gswilson/Simple2.zip\
      \ Networking Sample] by GW \n* [http://www.members.shaw.ca/gswilson/SimpleB.zip\
      \ Another Networking Sample] by GW \n\n----\n\n[[:Category:Legacy Tutorial]]<br\
      \ />[[:Category:Legacy To Do]] &ndash; This needs merged into the grand topic\
      \ of [[Legacy:Replication|Replication]]. See [[Legacy:Replication/Discussing|Replication/Discussing]]\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 33594
name: "Legacy:Replication"
revision:
  revid: 33594
  parentid: 32307
  user: "Wormbo"
  timestamp: 1228644837.000000000
  comment: "reverted, this shouldn't simply be moved to the main namespace as it only\
    \ links back to the legacy pages anyway"
timestamp: 1668763582.623652000
