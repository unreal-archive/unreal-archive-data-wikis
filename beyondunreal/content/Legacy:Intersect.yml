---
parse:
  title: "Legacy:Intersect"
  text:
    text: "<p><b>Brush Intersection</b> is an operation which crops the <a href=\"\
      /Legacy:Red_Builder_Brush\" title=\"Legacy:Red Builder Brush\">red builder brush</a>\
      \ using current world geometry. There are two types, outlined in the following\
      \ table. To perform them, select the toolbox button, the menu or use the keyboard\
      \ shortcut. It doesn't matter what is currently selected, only the RBB can be\
      \ cropped like this.</p>\n<table>\n<tr>\n<td>Name</td>\n<td>Intersect</td>\n\
      <td>Deintersect</td>\n</tr>\n<tr>\n<td>Keeps...</td>\n<td>parts of the RBB that\
      \ are in solid space</td>\n<td>parts of the RBB that are in open space</td>\n\
      </tr>\n<tr>\n<td>and discards...</td>\n<td>parts of the RBB that are in open\
      \ space</td>\n<td>parts of the RBB that are in solid space</td>\n</tr>\n<tr>\n\
      <td><a href=\"/Legacy:Toolbox\" title=\"Legacy:Toolbox\">Toolbox</a></td>\n\
      <td>4th group, middle-left</td>\n<td>4th group, middle-right</td>\n</tr>\n<tr>\n\
      <td><a href=\"/Legacy:UnrealEd_Main_Menu\" title=\"Legacy:UnrealEd Main Menu\"\
      >UnrealEd Main Menu</a> -&gt; Brush ...</td>\n</tr>\n<tr>\n<td>Keyboard</td>\n\
      <td>CTRL-N</td>\n<td>CTRL-D</td>\n</tr>\n</table>\n<p>It's important to remember\
      \ that the black \"empty space\" is solid, and the actual map area is hollow\
      \ (see <a href=\"/Legacy:Unreal_Geometry\" title=\"Legacy:Unreal Geometry\"\
      >Unreal Geometry</a> and <a href=\"/Legacy:CSG\" title=\"Legacy:CSG\">CSG</a>).</p>\n\
      <p><i>next... basic uses...'</i></p>\n<p></p>\n<div id=\"toc\" class=\"toc\"\
      >\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1\
      \ tocsection-1\"><a href=\"#Rule_one_of_Intersection\"><span class=\"tocnumber\"\
      >1</span> <span class=\"toctext\">Rule one of Intersection</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Basic_Procedure\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Basic Procedure</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Further_Techniques\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Further Techniques</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Compound_Brushes\"><span\
      \ class=\"tocnumber\">3.1</span> <span class=\"toctext\">Compound Brushes</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-5\"><a href=\"#Merging\"><span class=\"tocnumber\"\
      >3.2</span> <span class=\"toctext\">Merging</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#De.2Fintersect_Caveat\"><span class=\"tocnumber\"\
      >3.3</span> <span class=\"toctext\">De/intersect Caveat</span></a>\n<ul>\n<li\
      \ class=\"toclevel-3 tocsection-7\"><a href=\"#If_you_have_existing_geometry_that_you_want_to_clean_up_via_de.2Fintersect:\"\
      ><span class=\"tocnumber\">3.3.1</span> <span class=\"toctext\">If you have\
      \ existing geometry that you want to clean up via de/intersect:</span></a></li>\n\
      </ul>\n</li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"\
      #Comments\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Comments</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h3><span class=\"mw-headline\" id=\"Rule_one_of_Intersection\"\
      >Rule one of Intersection</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Intersect?section=1\"\
      \ title=\"Edit section: Rule one of Intersection\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Don't use it.</p>\n<ul>\n<li>you don't need to intersect\
      \ every new brush</li>\n<li>you don't need to intersect to get a \"clean\" join.\
      \ Use the <a href=\"/Legacy:Grid\" title=\"Legacy:Grid\">grid</a>. For that\
      \ matter, overlaps are not terribly important.</li>\n<li>compound brushes made\
      \ with intesection do not simplify geometry. They simplify <i>your</i> work\
      \ as a mapper, but may confuse the BSP.</li>\n</ul>\n<hr />\n<p><a href=\"/Category:Legacy_To_Do\"\
      \ title=\"Category:Legacy To Do\">Category:Legacy To Do</a></p>\n<p>stuff to\
      \ refactor:</p>\n<p>The term <b>brush intersection</b> refers to an UnrealEd\
      \ operation that crops the <a href=\"/Legacy:Red_Builder_Brush\" title=\"Legacy:Red\
      \ Builder Brush\">red builder brush</a> using current world geometry. This is\
      \ accessed either with two buttons in the <a href=\"/Legacy:Toolbox\" title=\"\
      Legacy:Toolbox\">toolbox</a> or from the <i>Brush</i> menu.</p>\n<p>The <i>Intersect</i>\
      \ command keeps only the volume of the RBB that is within solid space; conversely\
      \ the <i>Deintersect</i> command keeps the volume that is in hollow space. (It's\
      \ important to remember that the black \"empty space\" is solid, and the actual\
      \ map area is hollow.)</p>\n<p>These operations are two of the most useful basic\
      \ shape manipulations available in UnrealEd, but they can be intimidating to\
      \ the novice, and are easily confused. Experienced mappers employ these techniques\
      \ constantly to achieve the desired shape in a brush. All exported brushes (pre-fabrications)\
      \ must be intersected first, to retain the applied textures and reduce previous\
      \ manipulative brush operations to a single, integrated geometry.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Basic_Procedure\">Basic Procedure</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Intersect?section=2\"\
      \ title=\"Edit section: Basic Procedure\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>It's not necessary to select the <a href=\"/Legacy:Red_Builder_Brush\"\
      \ title=\"Legacy:Red Builder Brush\">red builder brush</a>.</p>\n<p>When the\
      \ \"Intersect\" command is performed, either with the <a href=\"/Legacy:UnrealEd_Main_Menu\"\
      \ title=\"Legacy:UnrealEd Main Menu\">UnrealEd Main Menu</a> -&gt; Brush or\
      \ with the <a href=\"/Legacy:Toolbox\" title=\"Legacy:Toolbox\">toolbox</a>\
      \ button, all the parts of the Red Builder Brush that are enclosing actual world\
      \ matter (or CSG Constructive Solid Geometry) are selected and configured to\
      \ the exact dimensions of that geometry. This geometry can be quite complex\
      \ (it can actually be a number of seperate, non-adjacent elements); and, this\
      \ is the principal advantage of using the Brush Intersect method. This is now\
      \ one brush; and you can perform a number of other brush operations on it. Note\
      \ the 'pivot point' of the brush. By default, it will be located at the center\
      \ of the brush, but it can be moved by merely right clicking another brush vertex.\
      \ When the 'Snap to Grid' feature is enabled (it is suggested that this always\
      \ be the case), the 'pivot point' snaps to the closest grid point.</p>\n<p>So,\
      \ for instance, if you made a cube (256*256), added it to the world in a large\
      \ open space, resized the cube to (512*512), and moved it around the original\
      \ cube: You could then click intersect to make the brush only the size of the\
      \ original cube.</p>\n<p>Deintersect is obviously the exact opposite. Clicking\
      \ Deintersect causes all the parts of the red brush that are sticking into existing\
      \ material to go away. An example is if you made a (256*256*256) cube and subtracted\
      \ it, Then resized the brush to (512*512*512) cube and moved it around the subtracted\
      \ cube: You could click \"Deintersect\" and only the part of the red brush where\
      \ the original cube was would be left.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Further_Techniques\">Further Techniques</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Intersect?section=3\"\
      \ title=\"Edit section: Further Techniques\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Compound_Brushes\"\
      >Compound Brushes</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Intersect?section=4\" title=\"Edit section:\
      \ Compound Brushes\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Often mappers will use essentially the same or (a similar) shape repeatedly\
      \ when mapping. When you add semi-realistic objects to your levels, like, vehicles,\
      \ furniture, archtectural decorations, and other detailed fixtures, it is easier\
      \ to convert what is an amalgamation of number of adjacent primitives into one\
      \ complex brush. You can then import and export simply, manipulate, and move\
      \ the brush around with great ease. Also, the brush can be easily modified.<br\
      \ /></p>\n<p>Create the brush in a large subtracted area, that is seperate and\
      \ not interfering with level geometry. Make all the minor adjustments in dimensions,\
      \ and configuration, and then texture in the optimal cool fashion. When you\
      \ have this shape just the way you imagined it, right click on the <i>CUBE</i>\
      \ <a href=\"/Legacy:Brushbuilders\" title=\"Legacy:Brushbuilders\">Brushbuilder</a>,\
      \ and enter dimensions that are larger than the shape you just created, but,\
      \ will fit easily within the subtracted space that you are working in. Position\
      \ this <a href=\"/Legacy:Red_Builder_Brush\" title=\"Legacy:Red Builder Brush\"\
      >red builder brush</a> so that it bounds your original amalgamated shape, but,\
      \ so that it does not merge or intersect it (or coincide on the same grid points).\
      \ Also, it should not cross the boundary of the working space that this operation\
      \ is enclosed within.<br /></p>\n<p>Then, with a maniacal grin on your face,\
      \ Select, <i>Brush -&gt; Intersect</i>.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Merging\">Merging</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Intersect?section=5\"\
      \ title=\"Edit section: Merging\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>One thing that deintersection is good for is merging\
      \ polygons on uncooperative brushes, such as those created by extruding a shape\
      \ with the 2D Shape Editor.</p>\n<p>Here's a little trick that might help when\
      \ you're extruding a brush and the top and bottom are going to come out tesselated.</p>\n\
      <ol>\n<li>Extrude that brush to a length that is LONGER than what you originally\
      \ were going to create.</li>\n<li>Move the newly-shaped red builder brush into\
      \ a wide open space in the void and subtract it. Do NOT move, rotate, or scale\
      \ the red builder brush after this point!</li>\n<li>Open the cylinder brushbuilder\
      \ properties. Put in a height that matches the height you wanted your extruded\
      \ brush to have in the first place. Put in a radius that is at least large enough\
      \ to cover the length and width of the subtracted brush. (Don't put in a radius\
      \ so large that it to touches other unrelated geometry.) Click on the \"Build\"\
      \ button.</li>\n<li>Now deintersect the builder brush with the subtracted brush.</li>\n\
      </ol>\n<p>Now to explain what you just did and why you did it. You made the\
      \ subtracted brush too long so that the cylinder you deintersected it with wouldn't\
      \ touch the ends, which were tesselated. You made the cylinder the original\
      \ height because this is the height you want your final brush to have. You made\
      \ the radius so large because you weren't going to change the 2D shape that\
      \ you used to build the brush.</p>\n<ul>\n<li>There is an alternative way of\
      \ doing this, with the <a href=\"/Legacy:Merge_Polygons\" title=\"Legacy:Merge\
      \ Polygons\">Merge Polygons</a> command.</li>\n</ul>\n<h3><span class=\"mw-headline\"\
      \ id=\"De.2Fintersect_Caveat\">De/intersect Caveat</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Intersect?section=6\"\
      \ title=\"Edit section: De/intersect Caveat\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Having come from the Q3 editing world, I had some\
      \ unconscious preconceptions about the innerworkings of UED2</p>\n<p>In Q3 editing,\
      \ the different facets of mapediting are relative to each other only in very\
      \ microscopic ways. the map file that you work on in radiant has absolutely\
      \ NO resemblance to the .BSP file that you play, let alone the bsp or vis compiling\
      \ processes. once the BSP compile has created a couple of reference files for\
      \ the VIS process, they have nothing more to do with each other. . .</p>\n<p>So\
      \ the problem here was that my training led me to think that in UED, edit-level\
      \ brush data had absolutely nothing to do with bsp data. Here i am with a completed\
      \ and compiled mountain brush. i fit the BB to the brush. I thought by deleting\
      \ the brush, it didn't matter that it was still in the BSP info . . . I figure\
      \ i'm not editing the BSP, i'm editing brushes, and the brush isn't there. So\
      \ when i deintersect, there's nothing there to get in the way.</p>\n<p>wrong.\
      \ I deleted the brush but the bsp data was still there affecting the deintersect\
      \ as if it were a brush.</p>\n<dl>\n<dt>Moral of the story&#160;</dt>\n<dd>It's\
      \ best to do all your de/intersecting while you're building. cuz it's a pain\
      \ in the ass to follow the rest of this section.</dd>\n</dl>\n<p><b>–Monsto</b></p>\n\
      <p><br />\nSee also <a href=\"/Legacy:Welcome_To_UnrealEd\" title=\"Legacy:Welcome\
      \ To UnrealEd\">Welcome To UnrealEd</a> to <a href=\"/Legacy:CSG\" title=\"\
      Legacy:CSG\">CSG</a> for the basics of brushes &amp; geometry.</p>\n<h4><span\
      \ class=\"mw-headline\" id=\"If_you_have_existing_geometry_that_you_want_to_clean_up_via_de.2Fintersect:\"\
      >If you have existing geometry that you want to clean up via de/intersect:</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Intersect?section=7\" title=\"Edit section: If you have\
      \ existing geometry that you want to clean up via de/intersect:\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<ol>\n<li>Save As a\
      \ different filename. You're now dealing with a 'working' file and your actual\
      \ map won't be dorked if you mess up here.</li>\n<li>select only the brushes\
      \ that matter. . . the one to be fixed, and the ones it will be fixed with.</li>\n\
      <li>click \"show only selected actors.\" It's the open-eye button with the dotted\
      \ red box on the <a href=\"/Legacy:Toolbar\" title=\"Legacy:Toolbar\">toolbar</a></li>\n\
      <li>go into the <a href=\"/Legacy:Build_Window\" title=\"Legacy:Build Window\"\
      >Build Window</a>, check the option for \"rebuild only visible actors\" and\
      \ <a href=\"/Legacy:Build\" title=\"Legacy:Build\">build</a>. all views will\
      \ show only what you're working on.</li>\n<li>fit the <a href=\"/Legacy:Red_Builder_Brush\"\
      \ title=\"Legacy:Red Builder Brush\">red builder brush</a> to the brush you\
      \ wanna fix (get a button to do this from <a rel=\"nofollow\" class=\"external\
      \ free\" href=\"http://www.planetunreal.com/fordy/uedbuttons.htm\">http://www.planetunreal.com/fordy/uedbuttons.htm</a>\
      \ )</li>\n<li>delete the brush to be fixed (don't change this brush <b>AT ALL</b>\
      \ or you'll be doomed)</li>\n<li><a href=\"/Legacy:Build\" title=\"Legacy:Build\"\
      >build</a> again . . . in all views you should see the <a href=\"/Legacy:Red_Builder_Brush\"\
      \ title=\"Legacy:Red Builder Brush\">red builder brush</a> in the place of the\
      \ brush to be fixed, and also the other brushes you're working on.</li>\n<li>de/intersect</li>\n\
      <li><a href=\"/Legacy:Subtraction_And_Addition\" title=\"Legacy:Subtraction\
      \ And Addition\">add/subtract</a> your brush.</li>\n<li>save.</li>\n</ol>\n\
      <p>Do that for each brush.</p>\n<h2><span class=\"mw-headline\" id=\"Comments\"\
      >Comments</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Intersect?section=8\" title=\"Edit section:\
      \ Comments\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Just a forum snipe from tarquin:</p>\n<dl>\n<dd>Intersection and deintersecting\
      \ are used far too often. Use the grid &amp; good choice of initial dimensions\
      \ to line up brushes perfectly. Int &amp; DeInt are really (IMO) just tools\
      \ for brush shaping, not for ensuring clean joins. It's in fact fine to overlap\
      \ subtracts, or have additives poke into solid space.</dd>\n</dl>\n<p><b>Bean:</b>\
      \ It's overused to an extent. Less brushes in a level = less rendering work.\
      \ It's a no-brainer that combining two brushes who vertices touch will reduce\
      \ the amount of work the engine has to do on vertex calculations. But, there\
      \ is a tradeoff when making complex brushes. The two combined brushes may cut\
      \ into bsp less than the complex brush, the brush may be too detailed to be\
      \ rendered efficiently, etc... It's all a matter of trial and error by using\
      \ the zone portal view to view the bsp node cuts and using \"stat fps\" to see\
      \ what reduces the node count. A lot of beginning and ignorant mappers combine\
      \ brushes because they hear that it improves performance, when it's not always\
      \ the case. (end rant&#160;:)</p>\n<p><b>Tarquin:</b> \"combining two brushes\
      \ who vertices touch will reduce the amount of work the engine has to do on\
      \ vertex calculations.\" – IIRC, the vertices will still be there. If you have\
      \ 2 box brushes side by side, delete one and enlarge the other with <a href=\"\
      /Legacy:Vertex_Editing\" title=\"Legacy:Vertex Editing\">vertex editing</a>.\
      \ Or delete both and make a new one.</p>\n<p><b>scumble:</b> Just a thought,\
      \ but what about <a rel=\"nofollow\" class=\"external text\" href=\"http://udn.epicgames.com/Two/IntroToUnrealEd#Making_Additional_BSP_Brushes\"\
      >this note</a> at UDN? It suggests always doing an intersection before subtracting.</p>\n\
      <p><b>Tarquin:</b> Well if Epic says you should, I guess you should.&#160;:)\
      \ I have seen plenty of Epic maps that overlap brushes though.</p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.053 seconds\nReal time usage: 0.055 seconds\n\
      Preprocessor visited node count: 34/1000000\nPreprocessor generated node count:\
      \ 54/1000000\nPost‐expand include size: 18/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1474-0!*!0!!en!*!* and timestamp 20221118011315 and revision\
      \ id 3701\n -->\n"
  categories:
  - sortkey: "Intersect"
    name: "Legacy_Mapping"
  - sortkey: "Intersect"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:CSG"
  - ns: 100
    exists: true
    name: "Legacy:Toolbar"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Vertex Editing"
  - ns: 100
    exists: true
    name: "Legacy:Toolbox"
  - ns: 100
    exists: true
    name: "Legacy:Red Builder Brush"
  - ns: 100
    exists: true
    name: "Legacy:Welcome To UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Main Menu"
  - ns: 100
    exists: true
    name: "Legacy:Merge Polygons"
  - ns: 100
    exists: true
    name: "Legacy:Subtraction And Addition"
  - ns: 100
    exists: true
    name: "Legacy:Build"
  - ns: 100
    exists: true
    name: "Legacy:Grid"
  - ns: 100
    exists: true
    name: "Legacy:Brushbuilders"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Geometry"
  - ns: 100
    exists: true
    name: "Legacy:Build Window"
  templates: []
  images: []
  externallinks:
  - "http://www.planetunreal.com/fordy/uedbuttons.htm"
  - "http://udn.epicgames.com/Two/IntroToUnrealEd#Making_Additional_BSP_Brushes"
  sections:
  - toclevel: 1
    level: "3"
    line: "Rule one of Intersection"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Intersect"
    byteoffset: 1008
    anchor: "Rule_one_of_Intersection"
  - toclevel: 1
    level: "2"
    line: "Basic Procedure"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Intersect"
    byteoffset: 2406
    anchor: "Basic_Procedure"
  - toclevel: 1
    level: "2"
    line: "Further Techniques"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Intersect"
    byteoffset: 4094
    anchor: "Further_Techniques"
  - toclevel: 2
    level: "3"
    line: "Compound Brushes"
    number: "3.1"
    index: "4"
    fromtitle: "Legacy:Intersect"
    byteoffset: 4119
    anchor: "Compound_Brushes"
  - toclevel: 2
    level: "3"
    line: "Merging"
    number: "3.2"
    index: "5"
    fromtitle: "Legacy:Intersect"
    byteoffset: 5476
    anchor: "Merging"
  - toclevel: 2
    level: "3"
    line: "De/intersect Caveat"
    number: "3.3"
    index: "6"
    fromtitle: "Legacy:Intersect"
    byteoffset: 6967
    anchor: "De.2Fintersect_Caveat"
  - toclevel: 3
    level: "4"
    line: "If you have existing geometry that you want to clean up via de/intersect:"
    number: "3.3.1"
    index: "7"
    fromtitle: "Legacy:Intersect"
    byteoffset: 8355
    anchor: "If_you_have_existing_geometry_that_you_want_to_clean_up_via_de.2Fintersect:"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "4"
    index: "8"
    fromtitle: "Legacy:Intersect"
    byteoffset: 9536
    anchor: "Comments"
  displaytitle: "Legacy:Intersect"
  iwlinks: []
  wikitext:
    text: "'''Brush Intersection''' is an operation which crops the [[Legacy:Red Builder\
      \ Brush|red builder brush]] using current world geometry. There are two types,\
      \ outlined in the following table. To perform them, select the toolbox button,\
      \ the menu or use the keyboard shortcut. It doesn't matter what is currently\
      \ selected, only the RBB can be cropped like this.\n\n{|\n\n|-\n|Name\n|Intersect\n\
      |Deintersect \n|-\n|Keeps...\n|parts of the RBB that are in solid space\n|parts\
      \ of the RBB that are in open space \n|-\n|and discards...\n|parts of the RBB\
      \ that are in open space\n|parts of the RBB that are in solid space \n|-\n|[[Legacy:Toolbox|Toolbox]]\n\
      |4th group, middle-left\n|4th group, middle-right\n|-\n|[[Legacy:UnrealEd Main\
      \ Menu|UnrealEd Main Menu]] -> Brush ...\n|-> Intersect\n|-> Deintersect \n\
      |-\n|Keyboard\n|CTRL-N\n|CTRL-D\n|}\n\nIt's important to remember that the black\
      \ \"empty space\" is solid, and the actual map area is hollow (see [[Legacy:Unreal\
      \ Geometry|Unreal Geometry]] and [[Legacy:CSG|CSG]]).\n\n''next... basic uses...'''\n\
      \n===Rule one of Intersection ===\n\nDon't use it.\n\n* you don't need to intersect\
      \ every new brush\n* you don't need to intersect to get a \"clean\" join. Use\
      \ the [[Legacy:Grid|grid]]. For that matter, overlaps are not terribly important.\n\
      * compound brushes made with intesection do not simplify geometry. They simplify\
      \ ''your'' work as a mapper, but may confuse the BSP.\n\n----\n\n[[:Category:Legacy\
      \ To Do]]\n\nstuff to refactor:\n\nThe term '''brush intersection''' refers\
      \ to an UnrealEd operation that crops the [[Legacy:Red Builder Brush|red builder\
      \ brush]] using current world geometry. This is accessed either with two buttons\
      \ in the [[Legacy:Toolbox|toolbox]] or from the <i>Brush</i> menu. \n\nThe ''Intersect''\
      \ command keeps only the volume of the RBB that is within solid space; conversely\
      \ the ''Deintersect'' command keeps the volume that is in hollow space. (It's\
      \ important to remember that the black \"empty space\" is solid, and the actual\
      \ map area is hollow.)\n\nThese operations are two of the most useful basic\
      \ shape manipulations available in UnrealEd, but they can be intimidating to\
      \ the novice, and are easily confused. Experienced mappers employ these techniques\
      \ constantly to achieve the desired shape in a brush. All exported brushes (pre-fabrications)\
      \ must be intersected first, to retain the applied textures and reduce previous\
      \ manipulative brush operations to a single, integrated geometry.\n\n==Basic\
      \ Procedure ==\n\nIt's not necessary to select the [[Legacy:Red Builder Brush|red\
      \ builder brush]]. \n\nWhen the \"Intersect\" command is performed, either with\
      \ the [[Legacy:UnrealEd Main Menu|UnrealEd Main Menu]] -> Brush or with the\
      \ [[Legacy:Toolbox|toolbox]] button, all the parts of the Red Builder Brush\
      \ that are enclosing actual world matter (or CSG Constructive Solid Geometry)\
      \ are selected and configured to the exact dimensions of that geometry. This\
      \ geometry can be quite complex (it can actually be a number of seperate, non-adjacent\
      \ elements); and, this is the principal advantage of using the Brush Intersect\
      \ method. This is now one brush; and you can perform a number of other brush\
      \ operations on it. Note the 'pivot point' of the brush. By default, it will\
      \ be located at the center of the brush, but it can be moved by merely right\
      \ clicking another brush vertex. When the 'Snap to Grid' feature is enabled\
      \ (it is suggested that this always be the case), the 'pivot point' snaps to\
      \ the closest grid point. \n\nSo, for instance, if you made a cube (256*256),\
      \ added it to the world in a large open space, resized the cube to (512*512),\
      \ and moved it around the original cube: You could then click intersect to make\
      \ the brush only the size of the original cube.\n\nDeintersect is obviously\
      \ the exact opposite. Clicking Deintersect causes all the parts of the red brush\
      \ that are sticking into existing material to go away. An example is if you\
      \ made a (256*256*256) cube and subtracted it, Then resized the brush to (512*512*512)\
      \ cube and moved it around the subtracted cube: You could click \"Deintersect\"\
      \ and only the part of the red brush where the original cube was would be left.\n\
      \n==Further Techniques ==\n\n===Compound Brushes ===\n\nOften mappers will use\
      \ essentially the same or (a similar) shape repeatedly when mapping. When you\
      \ add semi-realistic objects to your levels, like, vehicles, furniture, archtectural\
      \ decorations, and other detailed fixtures, it is easier to convert what is\
      \ an amalgamation of number of adjacent primitives into one complex brush. You\
      \ can then import and export simply, manipulate, and move the brush around with\
      \ great ease. Also, the brush can be easily modified. <br />\n\nCreate the brush\
      \ in a large subtracted area, that is seperate and not interfering with level\
      \ geometry. Make all the minor adjustments in dimensions, and configuration,\
      \ and then texture in the optimal cool fashion. When you have this shape just\
      \ the way you imagined it, right click on the ''CUBE'' [[Legacy:Brushbuilders|Brushbuilder]],\
      \ and enter dimensions that are larger than the shape you just created, but,\
      \ will fit easily within the subtracted space that you are working in. Position\
      \ this [[Legacy:Red Builder Brush|red builder brush]] so that it bounds your\
      \ original amalgamated shape, but, so that it does not merge or intersect it\
      \ (or coincide on the same grid points). Also, it should not cross the boundary\
      \ of the working space that this operation is enclosed within.<br>\n\nThen,\
      \ with a maniacal grin on your face, Select, <i>Brush -> Intersect</i>. \n\n\
      ===Merging ===\n\nOne thing that deintersection is good for is merging polygons\
      \ on uncooperative brushes, such as those created by extruding a shape with\
      \ the 2D Shape Editor.\n\nHere's a little trick that might help when you're\
      \ extruding a brush and the top and bottom are going to come out tesselated.\n\
      # Extrude that brush to a length that is LONGER than what you originally were\
      \ going to create.\n# Move the newly-shaped red builder brush into a wide open\
      \ space in the void and subtract it.  Do NOT move, rotate, or scale the red\
      \ builder brush after this point!\n# Open the cylinder brushbuilder properties.\
      \  Put in a height that matches the height you wanted your extruded brush to\
      \ have in the first place.  Put in a radius that is at least large enough to\
      \ cover the length and width of the subtracted brush.  (Don't put in a radius\
      \ so large that it to touches other unrelated geometry.)  Click on the \"Build\"\
      \ button.\n# Now deintersect the builder brush with the subtracted brush.\n\n\
      Now to explain what you just did and why you did it.  You made the subtracted\
      \ brush too long so that the cylinder you deintersected it with wouldn't touch\
      \ the ends, which were tesselated.  You made the cylinder the original height\
      \ because this is the height you want your final brush to have.  You made the\
      \ radius so large because you weren't going to change the 2D shape that you\
      \ used to build the brush.\n\n* There is an alternative way of doing this, with\
      \ the [[Legacy:Merge Polygons|Merge Polygons]] command.\n\n===De/intersect Caveat===\n\
      \n\nHaving come from the Q3 editing world, I had some unconscious preconceptions\
      \ about the innerworkings of UED2\n\nIn Q3 editing, the different facets of\
      \ mapediting are relative to each other only in very microscopic ways. the map\
      \ file that you work on in radiant has absolutely NO resemblance to the .BSP\
      \ file that you play, let alone the bsp or vis compiling processes. once the\
      \ BSP compile has created a couple of reference files for the VIS process, they\
      \ have nothing more to do with each other. . . \n\nSo the problem here was that\
      \ my training led me to think that in UED, edit-level brush data had absolutely\
      \ nothing to do with bsp data. Here i am with a completed and compiled mountain\
      \ brush. i fit the BB to the brush. I thought by deleting the brush, it didn't\
      \ matter that it was still in the BSP info . . . I figure i'm not editing the\
      \ BSP, i'm editing brushes, and the brush isn't there. So when i deintersect,\
      \ there's nothing there to get in the way.\n\nwrong. I deleted the brush but\
      \ the bsp data was still there affecting the deintersect as if it were a brush.\n\
      \n;Moral of the story : It's best to do all your de/intersecting while you're\
      \ building. cuz it's a pain in the ass to follow the rest of this section.\n\
      \n'''&ndash;Monsto'''\n\n\nSee also [[Legacy:Welcome To UnrealEd|Welcome To\
      \ UnrealEd]] to [[Legacy:CSG|CSG]] for the basics of brushes & geometry.\n\n\
      ====If you have existing geometry that you want to clean up via de/intersect:====\n\
      \n# Save As a different filename. You're now dealing with a 'working' file and\
      \ your actual map won't be dorked if you mess up here.\n# select only the brushes\
      \ that matter. . . the one to be fixed, and the ones it will be fixed with.\n\
      # click \"show only selected actors.\" It's the open-eye button with the dotted\
      \ red box on the [[Legacy:Toolbar|toolbar]]\n# go into the [[Legacy:Build Window|Build\
      \ Window]], check the option for \"rebuild only visible actors\" and [[Legacy:Build|build]].\
      \ all views will show only what you're working on.\n# fit the [[Legacy:Red Builder\
      \ Brush|red builder brush]] to the brush you wanna fix (get a button to do this\
      \ from http://www.planetunreal.com/fordy/uedbuttons.htm )\n# delete the brush\
      \ to be fixed (don't change this brush '''AT ALL''' or you'll be doomed)\n#\
      \ [[Legacy:Build|build]] again . . . in all views you should see the [[Legacy:Red\
      \ Builder Brush|red builder brush]] in the place of the brush to be fixed, and\
      \ also the other brushes you're working on.\n# de/intersect\n# [[Legacy:Subtraction\
      \ And Addition|add/subtract]] your brush.\n# save.\n\nDo that for each brush.\n\
      \n==Comments ==\n\nJust a forum snipe from tarquin:\n\n:Intersection and deintersecting\
      \ are used far too often. Use the grid & good choice of initial dimensions to\
      \ line up brushes perfectly. Int & DeInt are really (IMO) just tools for brush\
      \ shaping, not for ensuring clean joins. It's in fact fine to overlap subtracts,\
      \ or have additives poke into solid space.\n\n'''Bean:''' It's overused to an\
      \ extent. Less brushes in a level = less rendering work. It's a no-brainer that\
      \ combining  two brushes who vertices touch will reduce the amount of work the\
      \ engine has to do on vertex calculations. But, there is a tradeoff when making\
      \ complex brushes. The two combined brushes may cut into bsp less than the complex\
      \ brush, the brush may be too detailed to be rendered efficiently, etc... It's\
      \ all a matter of trial and error by using the zone portal view to view the\
      \ bsp node cuts and using \"stat fps\" to see what reduces the node count. A\
      \ lot of beginning and ignorant mappers combine brushes because they hear that\
      \ it improves performance, when it's not always the case. (end rant :)\n\n'''Tarquin:'''\
      \  \"combining  two brushes who vertices touch will reduce the amount of work\
      \ the engine has to do on vertex calculations.\" &ndash; IIRC, the vertices\
      \ will still be there. If you have 2 box brushes side by side, delete one and\
      \ enlarge the other with [[Legacy:Vertex Editing|vertex editing]]. Or delete\
      \ both and make a new one.\n\n'''scumble:''' Just a thought, but what about\
      \ [http://udn.epicgames.com/Two/IntroToUnrealEd#Making_Additional_BSP_Brushes\
      \ this note] at UDN? It suggests always doing an intersection before subtracting.\n\
      \n'''Tarquin:''' Well if Epic says you should, I guess you should. :) I have\
      \ seen plenty of Epic maps that overlap brushes though.\n\n[[Category:Legacy\
      \ To Do|{{PAGENAME}}]]\n[[Category:Legacy Mapping|{{PAGENAME}}]]"
  properties: []
  revId: 3701
name: "Legacy:Intersect"
revision:
  revid: 3701
  parentid: 3702
  user: "Tarquin"
  timestamp: 1110570996.000000000
  comment: "*"
timestamp: 1668763064.216837000
