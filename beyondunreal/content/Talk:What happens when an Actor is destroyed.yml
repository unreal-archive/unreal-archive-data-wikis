---
parse:
  title: "Talk:What happens when an Actor is destroyed"
  text:
    text: "<p>Okay so I was curious after reading this article as to what detach()\
      \ does, it sounded like it is called for actors that an actor owns but this\
      \ doesnt seem to be the case after some testing. The text is alittle hard to\
      \ follow but I dont think this is a problem with the writing so much in that\
      \ every subclass of actor is refereed to as an actor so it gets confusing. For\
      \ the sake of examples I might suggest using 2 different actor names so you\
      \ can tell which is which where priority matters, like in the case of an actor\
      \ and an actor which has that actor as an owner (probably didnt follow that\
      \ right?) so ActorOne, ActorTwo has an owner=ActorOne. I'll look into base changed\
      \ to see how that gets called during destroy also.</p>\n<p>My test, I had 1\
      \ actor (subclass of Info called UT_MDI_Pawn) which gets attached to a UTPawn\
      \ and checks for a certain inventory item, now when the UTPawn is destroyed\
      \ no Detach is called for UT_MDI_Pawn. Maybe I am mistaken by readin this on\
      \ whats supposed to happen. I'll test Basechange and see if I cant help clarify\
      \ this alittle to make sure no one is mistaken cool --<a href=\"/User:00zX\"\
      \ title=\"User:00zX\">00zX</a> 10:36, 18 March 2010 (UTC)</p>\n<dl>\n<dd>The\
      \ Attach()/Detach() events are in no way related to ownership. In fact, an actor\
      \ can be attached to one player, but owned by a completely different player.\
      \ (Think sticky grenades!) For your example, ActorOne is considered attached\
      \ to ActorTwo if <code>ActorOne.Base == ActorTwo</code>. In UT2004 this can\
      \ be achieved through <code>ActorOne.SetBase(ActorTwo)</code> or ActorTwo.AttachToBone(ActorOne,\
      \ 'BoneName'). I think in UE3 AttachToBone() was merged into the SetBase() function,\
      \ allowing you to specify a SkeletalMeshComponent and bone name. Attaching is\
      \ a physics thing, so you shouldn't abuse it just for the notification as you\
      \ will waste processing power on pointless location updates. —<a href=\"/User:Wormbo\"\
      \ title=\"User:Wormbo\">Wormbo</a> 11:11, 18 March 2010 (UTC)</dd>\n</dl>\n\
      <dl>\n<dd>\n<dl>\n<dd>Ahh yes I can see why I was getting confused now, I was\
      \ looking for an event which notified a child when its owner was destroyed so\
      \ I can destroy it along with it if need be. For obvious reasons I dont want\
      \ to subclass UTPawn (one of the examples where Im using this method). If that\
      \ is true for SetBase it is a shame because that would open the required functionality\
      \ without using the overhead of physics. --<a href=\"/User:00zX\" title=\"User:00zX\"\
      >00zX</a> 11:25, 18 March 2010 (UTC)</dd>\n</dl>\n</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Redirection_from_Destroy\">Redirection from <a href=\"/Destroy\"\
      \ title=\"Destroy\" class=\"mw-redirect\">Destroy</a></span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Talk:What_happens_when_an_Actor_is_destroyed?section=1\"\
      \ title=\"Edit section: Redirection from Destroy\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The \"destroy\" redirection to this page might be\
      \ a bit confusing. When I search for the keyword, I am rather interested in\
      \ what to do to [<a rel=\"nofollow\" class=\"external text\" href=\"http://wiki.beyondunreal.com/Legacy:Destroying_Objects\"\
      >destroy</a>] something rather than knowing what happens after that. Maybe it\
      \ should be incorporated into this page. Besides that the old page lacks a detailed\
      \ explanation with examples of how to free all references, just in case someone\
      \ doesn't know.&#160;;) --<a href=\"/User:Crusha\" title=\"User:Crusha\">Crusha</a>\
      \ 14:55, 19 January 2011 (UTC)</p>\n<dl>\n<dd>Good point. I've changed the redirection\
      \ to <a href=\"/Actor#Destroy\" title=\"Actor\">Actor#Destroy</a> for now. There's\
      \ not that much to say about how to destroy an actor, right? —<a href=\"/User:Wormbo\"\
      \ title=\"User:Wormbo\">Wormbo</a> 17:30, 19 January 2011 (UTC)</dd>\n</dl>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.023 seconds\nReal time usage:\
      \ 0.025 seconds\nPreprocessor visited node count: 3/1000000\nPreprocessor generated\
      \ node count: 8/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:28814-0!*!0!*!*!*!* and timestamp 20221207083922 and revision\
      \ id 44241\n -->\n"
  categories: []
  links:
  - ns: 0
    exists: true
    name: "Destroy"
  - ns: 0
    exists: true
    name: "Actor"
  - ns: 2
    exists: true
    name: "User:Wormbo"
  - ns: 2
    exists: true
    name: "User:Crusha"
  - ns: 2
    exists: true
    name: "User:00zX"
  templates: []
  images: []
  externallinks:
  - "http://wiki.beyondunreal.com/Legacy:Destroying_Objects"
  sections:
  - toclevel: 1
    level: "2"
    line: "Redirection from Destroy"
    number: "1"
    index: "1"
    fromtitle: "Talk:What_happens_when_an_Actor_is_destroyed"
    byteoffset: 2369
    anchor: "Redirection_from_Destroy"
  displaytitle: "Talk:What happens when an Actor is destroyed"
  iwlinks: []
  wikitext:
    text: "Okay so I was curious after reading this article as to what detach() does,\
      \ it sounded like it is called for actors that an actor owns but this doesnt\
      \ seem to be the case after some testing. The text is alittle hard to follow\
      \ but I dont think this is a problem with the writing so much in that every\
      \ subclass of actor is refereed to as an actor so it gets confusing. For the\
      \ sake of examples I might suggest using 2 different actor names so you can\
      \ tell which is which where priority matters, like in the case of an actor and\
      \ an actor which has that actor as an owner (probably didnt follow that right?)\
      \ so ActorOne, ActorTwo has an owner=ActorOne. I'll look into base changed to\
      \ see how that gets called during destroy also.\n\nMy test, I had 1 actor (subclass\
      \ of Info called UT_MDI_Pawn) which gets attached to a UTPawn and checks for\
      \ a certain inventory item, now when the UTPawn is destroyed no Detach is called\
      \ for UT_MDI_Pawn. Maybe I am mistaken by readin this on whats supposed to happen.\
      \ I'll test Basechange and see if I cant help clarify this alittle to make sure\
      \ no one is mistaken cool --[[User:00zX|00zX]] 10:36, 18 March 2010 (UTC)\n\n\
      : The Attach()/Detach() events are in no way related to ownership. In fact,\
      \ an actor can be attached to one player, but owned by a completely different\
      \ player. (Think sticky grenades!) For your example, ActorOne is considered\
      \ attached to ActorTwo if <code>ActorOne.Base == ActorTwo</code>. In UT2004\
      \ this can be achieved through <code>ActorOne.SetBase(ActorTwo)</code> or </code>ActorTwo.AttachToBone(ActorOne,\
      \ 'BoneName')</code>. I think in UE3 AttachToBone() was merged into the SetBase()\
      \ function, allowing you to specify a SkeletalMeshComponent and bone name. Attaching\
      \ is a physics thing, so you shouldn't abuse it just for the notification as\
      \ you will waste processing power on pointless location updates. —[[User:Wormbo|Wormbo]]\
      \ 11:11, 18 March 2010 (UTC)\n\n:: Ahh yes I can see why I was getting confused\
      \ now, I was looking for an event which notified a child when its owner was\
      \ destroyed so I can destroy it along with it if need be. For obvious reasons\
      \ I dont want to subclass UTPawn (one of the examples where Im using this method).\
      \ If that is true for SetBase it is a shame because that would open the required\
      \ functionality without using the overhead of physics. --[[User:00zX|00zX]]\
      \ 11:25, 18 March 2010 (UTC)\n\n==Redirection from [[Destroy]]==\nThe \"destroy\"\
      \ redirection to this page might be a bit confusing. When I search for the keyword,\
      \ I am rather interested in what to do to [[http://wiki.beyondunreal.com/Legacy:Destroying_Objects\
      \ destroy]] something rather than knowing what happens after that. Maybe it\
      \ should be incorporated into this page. Besides that the old page lacks a detailed\
      \ explanation with examples of how to free all references, just in case someone\
      \ doesn't know. ;) --[[User:Crusha|Crusha]] 14:55, 19 January 2011 (UTC)\n\n\
      :Good point. I've changed the redirection to [[Actor#Destroy]] for now. There's\
      \ not that much to say about how to destroy an actor, right? —[[User:Wormbo|Wormbo]]\
      \ 17:30, 19 January 2011 (UTC)"
  properties: []
  revId: 44241
name: "Talk:What happens when an Actor is destroyed"
revision:
  revid: 44241
  parentid: 44239
  user: "Wormbo"
  timestamp: 1295458252.000000000
  comment: "true"
timestamp: 1670402362.678710000
