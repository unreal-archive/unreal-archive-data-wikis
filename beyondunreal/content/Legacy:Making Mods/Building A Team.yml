---
parse:
  title: "Legacy:Making Mods/Building A Team"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Building_a_Team\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Building a Team</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Do_you_really_need_a_team\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Do you really\
      \ need a team</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"\
      #Balance_is_important\"><span class=\"tocnumber\">1.2</span> <span class=\"\
      toctext\">Balance is important</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#Make_Responsibilities_Clear\"><span class=\"tocnumber\">1.3</span>\
      \ <span class=\"toctext\">Make Responsibilities Clear</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-5\"><a href=\"#Know_When_to_Stop\"><span class=\"tocnumber\"\
      >1.4</span> <span class=\"toctext\">Know When to Stop</span></a></li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#Related_Topics\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-7\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">3</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Building_a_Team\">Building\
      \ a Team</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=1\" title=\"\
      Edit section: Building a Team\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>So you have a truly classic idea for a mod, and you've\
      \ read the <a href=\"/Legacy:Mychaeel/Mod_Startups\" title=\"Legacy:Mychaeel/Mod\
      \ Startups\">Mychaeel/Mod Startups</a> and <a href=\"/Legacy:Mychaeel/Modding_Etiquette\"\
      \ title=\"Legacy:Mychaeel/Modding Etiquette\">Mychaeel/Modding Etiquette</a>\
      \ pages so you know how to avoid some of the obvious pitfalls. You now need\
      \ a team to help you bring your stunning mod concept to life.</p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Do_you_really_need_a_team\">Do you really need\
      \ a team</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=2\" title=\"\
      Edit section: Do you really need a team\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The very first thing you must do is challenge the\
      \ idea that you need a team at all. Is the mod big enough to warrant building\
      \ a team to do it? You might not have all of the skills necessary to bring the\
      \ mod to life, but, you may not need a full time team to work on it. You may\
      \ also be able to acquire the skills you need to create your own mod. Making\
      \ small mods with other people is hard. It's easy to get to a point where the\
      \ \"maintenance of the team\" becomes more of a burden than the help the team\
      \ itself provides.</p>\n<p>Consider a weapon mod.</p>\n<p>I'm a coder at heart,\
      \ writing software is where I get my kicks. In order to do a proper weapon mod\
      \ I'd need a set of models and skins for the weapon, ammo packs, and bullet\
      \ effects. I've never tried modelling anything with a proper 3D package – I'd\
      \ much prefer to type the vertice and facet definitions in by hand. My texturing\
      \ skills are so poor that they deserve warning stickers.</p>\n<p>However, do\
      \ I really want or need to build a team of modellers and skinners around me\
      \ before I start my mod? The answer is not at all. I'd start by writing the\
      \ code for the weapon using one of the standard game models. I might attempt\
      \ to sketch my idea for the weapon in Corel Draw or Photopaint - or even on\
      \ paper. Once I'm at least semi-happy with the code I might start up my favourite\
      \ (ie. the one I have installed) modelling package and see how far I can get.\
      \ Alternatively, I could post on one of the many forums a request for help.\
      \ I could then finish off the mod without ever having built a team to do it.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Balance_is_important\">Balance is important</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=3\" title=\"Edit section:\
      \ Balance is important\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>If you are convinced that your mod is big enough to warrant a team of people\
      \ working on it full time then you need to consider how many people capable\
      \ of each discipline (modelling, coding, skinning etc) you need. Having multi-skilled\
      \ team members is extremely useful as they can have areas of overlapping responsibility.</p>\n\
      <p>Don't fill your team with modellers when your mod only needs three models.\
      \ This applies equally to the other elements of your mod. In the case of the\
      \ modellers, one modeller will do most of the work and the other two will get\
      \ frustrated, fed up, and then leave, because they have nothing to do. Before\
      \ they leave though they will be unconciously (or maybe conciously) spreading\
      \ disastisfaction with the team and mod. This is bad for morale and will hurt\
      \ productivity.</p>\n<p>Probably the hardest area to accurately recruit for\
      \ is your coding. Splitting code up is difficult unless you have a reasonable\
      \ idea of how everything fits together. The best approach to use is to recruit\
      \ a single coder and make them responsible for the overal design and structure\
      \ of the code. Only bring in another coder if they can see some easy way to\
      \ partition the development responsibilities, or, if they start to get swamped.</p>\n\
      <p>It's better to have a small team and take longer to finish the mod than it\
      \ is to have a big team and risk never finishing anything. As the size of the\
      \ mod team increases, the amount of time spent communicating within the team\
      \ increases exponentially. The more time that is spent in communication, the\
      \ less time is spent actually doing any work on the mod.</p>\n<p>I have seen\
      \ two teams of 4 people deliver a project in 6 months that a single team of\
      \ just over 100 couldn't deliver in a year. So having a large team can be a\
      \ good way of assuring failure rather than success. It's more important to have\
      \ a large team testing the mod than it is a large team building it.</p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Make_Responsibilities_Clear\">Make Responsibilities\
      \ Clear</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=4\" title=\"\
      Edit section: Make Responsibilities Clear\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Make sure that everyone in the team knows not only\
      \ what they are responsible for delivering, but also what everyone else is responsible\
      \ for as well. In most cases this split of responsibility is easy to define.\
      \ Where this split of responsibility is difficult to define spend some time\
      \ thinking about it rather than just ignoring the issue. It will save you some\
      \ pain later on down the line. Don't worry if your initial split of work and\
      \ responsibility seems unbalanced, having one person picking up more work than\
      \ an another. Clarity is what is important here.</p>\n<p>Review the responsibilities\
      \ or each team member regularly. You may find that your original split of work\
      \ can be further refined to balance the work out between the team members. You\
      \ will find that this needs to be done anyway as <i>real life</i> and other\
      \ <i>unexpected events</i> kick in and impact on your project team.</p>\n<p>If\
      \ you can specify internal delivery dates for the components of your mod all\
      \ the better. This helps you keep track of where you are up to. Remember though,\
      \ any dates specified are simply working values. They can and will move both\
      \ forwards and backwards. Being able to check delivery dates against components\
      \ can be a good indicator of whether one member of the team is swamped with\
      \ work, or simply needs a break.</p>\n<h3><span class=\"mw-headline\" id=\"\
      Know_When_to_Stop\">Know When to Stop</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=5\"\
      \ title=\"Edit section: Know When to Stop\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>At the point the team starts the mod you should have\
      \ stated clearly and concisely exactly when the mod is finished. If the mod's\
      \ final state is left as a vague description then you risk catching \"When It's\
      \ Done\" syndrome. Knowing when the mod is finished is as important as starting\
      \ it in the first place. The clearer the specification of the mod the better\
      \ your position is going to be.</p>\n<p>Make sure everyone in the team understands\
      \ and agrees with what constitutes the finished mod. The team members will almost\
      \ certainly want to add features of their own, so be prepared for that. Just\
      \ make sure that you agree from the outset which features will make it into\
      \ the current version.</p>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\"\
      >Related Topics</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=6\" title=\"\
      Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Mod_Ideas\" title=\"Legacy:Mod\
      \ Ideas\">Mod Ideas</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Making_Mods/Building_A_Team?section=7\" title=\"\
      Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>TSOShadow:</b> I'm not good at writeing so I'll put this in words instead.\
      \ What if your attempting to start up a dropped mod? (With Permission of course)\
      \ And old memebers/community think your some nut that will ruin it? How do you\
      \ get people to trust you that your here to build a new experience on a premade\
      \ base?</p>\n<p><b>SuperApe:</b> You could ask the originators to vouch for\
      \ you. Beyond that, your own actions should be what other judge you on. If you\
      \ listen to your critics and allow the dialogue to improve on the design, you\
      \ may well win them over. But, in short, do what you need to do, what you've\
      \ been been given \"Permission\" to do, and worry about naysayer afterwards.</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.038 seconds\nReal time usage:\
      \ 0.039 seconds\nPreprocessor visited node count: 26/1000000\nPreprocessor generated\
      \ node count: 32/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1849-0!*!0!!en!*!* and timestamp 20221122072039 and revision\
      \ id 4539\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel/Mod Startups"
  - ns: 100
    exists: true
    name: "Legacy:Mod Ideas"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel/Modding Etiquette"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Building a Team"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 0
    anchor: "Building_a_Team"
  - toclevel: 2
    level: "3"
    line: "Do you really need a team"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 346
    anchor: "Do_you_really_need_a_team"
  - toclevel: 2
    level: "3"
    line: "Balance is important"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 1944
    anchor: "Balance_is_important"
  - toclevel: 2
    level: "3"
    line: "Make Responsibilities Clear"
    number: "1.3"
    index: "4"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 3874
    anchor: "Make_Responsibilities_Clear"
  - toclevel: 2
    level: "3"
    line: "Know When to Stop"
    number: "1.4"
    index: "5"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 5216
    anchor: "Know_When_to_Stop"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "6"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 5930
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "3"
    index: "7"
    fromtitle: "Legacy:Making_Mods/Building_A_Team"
    byteoffset: 5983
    anchor: "Discussion"
  displaytitle: "Legacy:Making Mods/Building A Team"
  iwlinks: []
  wikitext:
    text: "==Building a Team ==\n\nSo you have a truly classic idea for a mod, and\
      \ you've read the [[Legacy:Mychaeel/Mod Startups|Mychaeel/Mod Startups]] and\
      \ [[Legacy:Mychaeel/Modding Etiquette|Mychaeel/Modding Etiquette]] pages so\
      \ you know how to avoid some of the obvious pitfalls.  You now need a team to\
      \ help you bring your stunning mod concept to life.\n\n===Do you really need\
      \ a team ===\n\nThe very first thing you must do is challenge the idea that\
      \ you need a team at all.  Is the mod big enough to warrant building a team\
      \ to do it?  You might not have all of the skills necessary to bring the mod\
      \ to life, but, you may not need a full time team to work on it.  You may also\
      \ be able to acquire the skills you need to create your own mod.  Making small\
      \ mods with other people is hard.  It's easy to get to a point where the \"\
      maintenance of the team\" becomes more of a burden than the help the team itself\
      \ provides.\n\nConsider a weapon mod.\n\nI'm a coder at heart, writing software\
      \ is where I get my kicks.  In order to do a proper weapon mod I'd need a set\
      \ of models and skins for the weapon, ammo packs, and bullet effects.  I've\
      \ never tried modelling anything with a proper 3D package &ndash; I'd much prefer\
      \ to type the vertice and facet definitions in by hand.  My texturing skills\
      \ are so poor that they deserve warning stickers.\n\nHowever, do I really want\
      \ or need to build a team of modellers and skinners around me before I start\
      \ my mod?  The answer is not at all.  I'd start by writing the code for the\
      \ weapon using one of the standard game models.  I might attempt to sketch my\
      \ idea for the weapon in Corel Draw or Photopaint - or even on paper.  Once\
      \ I'm at least semi-happy with the code I might start up my favourite (ie. the\
      \ one I have installed) modelling package and see how far I can get.  Alternatively,\
      \ I could post on one of the many forums a request for help.  I could then finish\
      \ off the mod without ever having built a team to do it.\n\n===Balance is important\
      \ ===\n\nIf you are convinced that your mod is big enough to warrant a team\
      \ of people working on it full time then you need to consider how many people\
      \ capable of each discipline (modelling, coding, skinning etc) you need.  Having\
      \ multi-skilled team members is extremely useful as they can have areas of overlapping\
      \ responsibility.\n\nDon't fill your team with modellers when your mod only\
      \ needs three models.  This applies equally to the other elements of your mod.\
      \  In the case of the modellers, one modeller will do most of the work and the\
      \ other two will get frustrated, fed up, and then leave, because they have nothing\
      \ to do.  Before they leave though they will be unconciously (or maybe conciously)\
      \ spreading disastisfaction with the team and mod.  This is bad for morale and\
      \ will hurt productivity.\n\nProbably the hardest area to accurately recruit\
      \ for is your coding.  Splitting code up is difficult unless you have a reasonable\
      \ idea of how everything fits together.  The best approach to use is to recruit\
      \ a single coder and make them responsible for the overal design and structure\
      \ of the code.  Only bring in another coder if they can see some easy way to\
      \ partition the development responsibilities, or, if they start to get swamped.\n\
      \nIt's better to have a small team and take longer to finish the mod than it\
      \ is to have a big team and risk never finishing anything.  As the size of the\
      \ mod team increases, the amount of time spent communicating within the team\
      \ increases exponentially.  The more time that is spent in communication, the\
      \ less time is spent actually doing any work on the mod.\n\nI have seen two\
      \ teams of 4 people deliver a project in 6 months that a single team of just\
      \ over 100 couldn't deliver in a year.  So having a large team can be a good\
      \ way of assuring failure rather than success.  It's more important to have\
      \ a large team testing the mod than it is a large team building it.\n\n===Make\
      \ Responsibilities Clear ===\n\nMake sure that everyone in the team knows not\
      \ only what they are responsible for delivering, but also what everyone else\
      \ is responsible for as well.  In most cases this split of responsibility is\
      \ easy to define.  Where this split of responsibility is difficult to define\
      \ spend some time thinking about it rather than just ignoring the issue.  It\
      \ will save you some pain later on down the line.  Don't worry if your initial\
      \ split of work and responsibility seems unbalanced, having one person picking\
      \ up more work than an another.  Clarity is what is important here.\n\nReview\
      \ the responsibilities or each team member regularly.  You may find that your\
      \ original split of work can be further refined to balance the work out between\
      \ the team members.  You will find that this needs to be done anyway as ''real\
      \ life'' and other ''unexpected events'' kick in and impact on your project\
      \ team.\n\nIf you can specify internal delivery dates for the components of\
      \ your mod all the better.  This helps you keep track of where you are up to.\
      \  Remember though, any dates specified are simply working values.  They can\
      \ and will move both forwards and backwards.  Being able to check delivery dates\
      \ against components can be a good indicator of whether one member of the team\
      \ is swamped with work, or simply needs a break.\n\n===Know When to Stop ===\n\
      \nAt the point the team starts the mod you should have stated clearly and concisely\
      \ exactly when the mod is finished.  If the mod's final state is left as a vague\
      \ description then you risk catching \"When It's Done\" syndrome.  Knowing when\
      \ the mod is finished is as important as starting it in the first place.  The\
      \ clearer the specification of the mod the better your position is going to\
      \ be.\n\nMake sure everyone in the team understands and agrees with what constitutes\
      \ the finished mod.  The team members will almost certainly want to add features\
      \ of their own, so be prepared for that.  Just make sure that you agree from\
      \ the outset which features will make it into the current version.\n\n==Related\
      \ Topics==\n* [[Legacy:Mod Ideas|Mod Ideas]]\n\n==Discussion==\n\n'''TSOShadow:'''\
      \ I'm not good at writeing so I'll put this in words instead. What if your attempting\
      \ to start up a dropped mod? (With Permission of course) And old memebers/community\
      \ think your some nut that will ruin it? How do you get people to trust you\
      \ that your here to build a new experience on a premade base?\n\n'''SuperApe:'''\
      \ You could ask the originators to vouch for you.  Beyond that, your own actions\
      \ should be what other judge you on.  If you listen to your critics and allow\
      \ the dialogue to improve on the design, you may well win them over.  But, in\
      \ short, do what you need to do, what you've been been given \"Permission\"\
      \ to do, and worry about naysayer afterwards."
  properties: []
  revId: 4539
name: "Legacy:Making Mods/Building A Team"
revision:
  revid: 4539
  parentid: 4541
  user: "SuperApe"
  timestamp: 1134762058.000000000
  comment: "Reply to TSOShadow.  Actions speak louder than words."
timestamp: 1669101640.344576000
