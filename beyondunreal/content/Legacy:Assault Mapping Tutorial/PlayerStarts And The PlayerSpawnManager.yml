---
parse:
  title: "Legacy:Assault Mapping Tutorial/PlayerStarts And The PlayerSpawnManager"
  text:
    text: "<hr />\n<p>This page is a section of the <a href=\"/Legacy:Assault_Mapping_Tutorial\"\
      \ title=\"Legacy:Assault Mapping Tutorial\">Assault Mapping Tutorial</a>. If\
      \ you have arrived here from some other place, this page will likely make more\
      \ sense if you start at the above link and read the tutorial through from beginning\
      \ to end.</p>\n<p><b>Previous Section: <a href=\"/Legacy:Assault_Mapping_Tutorial/Creating_A_Destroyable_Objective\"\
      \ title=\"Legacy:Assault Mapping Tutorial/Creating A Destroyable Objective\"\
      >Legacy:Assault Mapping Tutorial/Creating A Destroyable Objective</a></b></p>\n\
      <p><b>Next Section: <a href=\"/Legacy:Assault_Mapping_Tutorial/Attacking_And_Defending\"\
      \ title=\"Legacy:Assault Mapping Tutorial/Attacking And Defending\">Legacy:Assault\
      \ Mapping Tutorial/Attacking And Defending</a></b></p>\n<hr />\n<p></p>\n<div\
      \ id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n\
      <ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#PlayerStarts_and_the_PlayerSpawnManager\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">PlayerStarts and\
      \ the PlayerSpawnManager</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"\
      ><a href=\"#Attacker_Spawns\"><span class=\"tocnumber\">2</span> <span class=\"\
      toctext\">Attacker Spawns</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"\
      ><a href=\"#Defender_Spawns\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">Defender Spawns</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"\
      ><a href=\"#Equipment_and_Supplies\"><span class=\"tocnumber\">4</span> <span\
      \ class=\"toctext\">Equipment and Supplies</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-5\"><a href=\"#Comments:\"><span class=\"tocnumber\">5</span> <span\
      \ class=\"toctext\">Comments:</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"PlayerStarts_and_the_PlayerSpawnManager\">PlayerStarts\
      \ and the PlayerSpawnManager</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager?section=1\"\
      \ title=\"Edit section: PlayerStarts and the PlayerSpawnManager\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Now it's time to\
      \ set up how we're going to get players into this nice map of ours. As you may\
      \ have guessed, we're going to need two groups of PlayerStarts, one for the\
      \ attackers and one for the defenders.</p>\n<p>It's important to note here that\
      \ you want to have at least as many PlayerSpawns in any given spot as you will\
      \ have people on one team. If there are too few PlayerSpawns for a given team\
      \ somewhere, this can cause a bottleneck in gameplay, annoying players, and\
      \ potentially throwing off the balance of the game. The game engine will also\
      \ complain bitterly in the log if it can't find somewhere to spawn somebody\
      \ when it needs to.</p>\n<h2><span class=\"mw-headline\" id=\"Attacker_Spawns\"\
      >Attacker Spawns</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager?section=2\"\
      \ title=\"Edit section: Attacker Spawns\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Let's start by placing some PlayerStarts for the attacking\
      \ team at the far end of the valley from the base. It's always better to have\
      \ too many than too few, and we've deliberately left ourselves a reasonable\
      \ space for it, so let's put down around 16 or so (16 for each side, so our\
      \ map can support up to 32 players in a game, which should be more than people\
      \ will usually want to do). The next thing we want to do is set the PlayerStart-&gt;TeamNumber\
      \ property on all of the PlayerStarts in this group to a unique number. In this\
      \ case, they should all default to 0, which is fine for here, so we'll leave\
      \ that (but it doesn't hurt to check to make sure they all actually are set\
      \ to 0).</p>\n<p>That should do it, right? Well, not quite. Unlike for other\
      \ game types, PlayerSpawn management for Assault is a bit more complicated.\
      \ Despite the name of the property, in Assault, PlayerStart-&gt;TeamNumber does\
      \ not actually determine what team uses a PlayerStart. Instead, the TeamNumber\
      \ property is actually used to group PlayerStarts into groups (all PlayerStarts\
      \ with the same TeamNumber are in the same group), and we use another actor\
      \ to actually control how each group is used (you'll see why this is useful\
      \ later). What we need to do now is tell the game that \"PlayerSpawns in group\
      \ 0\" (that is, all the PlayerSpawns in the game with a TeamNumber of 0) should\
      \ be where the attacking team initially spawns. To do this, <a href=\"/Legacy:Add_An_Actor\"\
      \ title=\"Legacy:Add An Actor\">add an Actor</a>&gt;&gt;Info&gt;&gt;<a href=\"\
      /Legacy:PlayerSpawnManager\" title=\"Legacy:PlayerSpawnManager\">PlayerSpawnManager</a>\
      \ actor to the map (it doesn't matter where, but put it close to the PlayerSpawns\
      \ we just created so that it's easy to find later). Open up the PlayerSpawnManager\
      \ Properties, and <a href=\"/Legacy:Set_The_Following_Properties\" title=\"\
      Legacy:Set The Following Properties\">set the following properties</a>:</p>\n\
      <ul>\n<li>PlayerSpawnManager-&gt;AssaultTeam = EPSM_Attackers</li>\n<li>PlayerSpawnManager-&gt;bEnabled\
      \ = True</li>\n<li>PlayerSpawnManager-&gt;PlayerStartTeam = 0</li>\n</ul>\n\
      <p>Setting PlayerStartTeam to 0 tells the game that this PlayerSpawnManager\
      \ will affect any PlayerSpawns which have a TeamNumber of 0. bEnabled tells\
      \ it that this group of PlayerStarts will be active as soon as the game starts,\
      \ and setting AssaultTeam to EPSM_Attackers, tells it that the attacking team\
      \ should spawn here.</p>\n<h2><span class=\"mw-headline\" id=\"Defender_Spawns\"\
      >Defender Spawns</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager?section=3\"\
      \ title=\"Edit section: Defender Spawns\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Next, we'll set up the PlayerSpawns for the defenders.\
      \ We'll have them spawn on top of the base roof, so go there and put down the\
      \ same number of PlayerSpawn actors as we gave to the attackers (16). Now, select\
      \ all of the defender PlayerSpawns, bring up their properties, and set PlayerSpawn-&gt;TeamNumber\
      \ to 1. We now have a group of PlayerSpawns which are part of \"group 1\" instead\
      \ of the \"group 0\" we created for the attackers.</p>\n<p>Now create a PlayerSpawnManager\
      \ actor for the defending team, somewhere near group 1. Open up its properties,\
      \ and set the following:</p>\n<ul>\n<li>PlayerSpawnManager-&gt;AssaultTeam =\
      \ EPSM_Defenders</li>\n<li>PlayerSpawnManager-&gt;bEnabled = True</li>\n<li>PlayerSpawnManager-&gt;PlayerStartTeam\
      \ = 1</li>\n</ul>\n<p>Now we have a second PlayerSpawnManager, which affects\
      \ all PlayerSpawns with a TeamNumber of 1 (\"group 1\"), is initially active\
      \ when the game starts, and tells the game that defenders should spawn here.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Equipment_and_Supplies\">Equipment and\
      \ Supplies</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager?section=4\"\
      \ title=\"Edit section: Equipment and Supplies\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>With a lot of other game types, obtaining the right\
      \ weapons and ammo are part of the challenge, and thus they're scattered about\
      \ the map in various locations where people can track down and grab what they\
      \ want. Assault is a timed challenge, however, and spending a lot of time running\
      \ all over the place to stock up on weapons every time you die before you can\
      \ rejoin the assault is both annoying to players and problematic to game flow,\
      \ so most Assault maps make a point of placing most of the stuff players are\
      \ going to need conveniently right next to where they're going to spawn, so\
      \ they can load up quickly and get back into the fight.</p>\n<p>The compact\
      \ way to go about this for weapons and ammo is to use a few <a href=\"/Legacy:WeaponLocker\"\
      \ title=\"Legacy:WeaponLocker\">WeaponLockers</a> at each spawn area with appropriate\
      \ weapons for the task at hand. You will generally want at least a couple of\
      \ WeaponLockers in each spawn area, so that everybody isn't rushing to one point\
      \ as soon as they spawn and causing a big traffic accident. For each of our\
      \ two spawn areas, let's <a href=\"/Legacy:Add_An_Actor\" title=\"Legacy:Add\
      \ An Actor\">add an Actor</a>&gt;&gt;Pickup&gt;&gt;WeaponLocker or two. For\
      \ each WeaponLocker, we will now need to tell the game what type of weapons\
      \ we should be supplying. To do this, open the properties, go to the WeaponLocker-&gt;Weapons\
      \ property, and <a href=\"/Legacy:Extend_The_Dynamic_Array\" title=\"Legacy:Extend\
      \ The Dynamic Array\">extend the dynamic array</a> for each weapon type you\
      \ want the given locker to carry. For each new array entry, select the WeaponClass\
      \ property and choose what type of weapon to use (Note: \"SniperRifle\" is actually\
      \ the Lightning Gun. The real sniper rifle is \"ClassicSniperRifle\"). That's\
      \ about all there is to it!</p>\n<p>You will want to put a bit of thought into\
      \ what weapons you will have in which lockers, of course. The choice of available\
      \ weapons can affect not only the enjoyability of the game for the players but\
      \ how the balance works out (for example, if the defenders all get rocket launchers\
      \ and shock rifles, and the attackers only get bio rifles, it can make it a\
      \ lot harder for the attackers to actually get close enough to complete the\
      \ objective. This isn't necessarily a bad thing, though. Tweaking available\
      \ weapons is a good way to make adjustments if you find out that part of your\
      \ map has balance issues). You also don't want to just give everybody everything\
      \ off the bat, because part of Assault is also the challenge of using what you've\
      \ been given to achieve a goal. Realism also plays a role too, of course. What\
      \ self-respecting army would go in to blow up a blast door but arm their soldiers\
      \ with only flak cannons?</p>\n<p>Also, keep in mind that just because you've\
      \ got WeaponLockers in place doesn't mean you can't hide a goodie or two elsewhere\
      \ in the map for people to discover and pick up (such as sticking a Flak Cannon\
      \ behind the crates in RobotFactory, for example). Be creative. Is there some\
      \ weapon that would be really useful in a particular scenario? Make people put\
      \ some effort into finding or obtaining it.</p>\n<p>For the purposes of our\
      \ map, we will give the attackers:</p>\n<dl>\n<dt>Rocket Launcher</dt>\n<dd>We\
      \ are going to be blowing things up after all..</dd>\n<dt>Lightning Gun (\"\
      SniperRifle\" in the properties)</dt>\n<dd>To pick off pesky defenders from\
      \ a safe distance.</dd>\n<dt>Flak Cannon</dt>\n<dd>Challenging for attacking\
      \ with, but might be useful to those skilled with it.</dd>\n<dt>Link Gun</dt>\n\
      <dd>Good at doing damage to doors as a backup for the rocket launcher, and a\
      \ decent short-to-mid range weapon for those who can use it.</dd>\n<dt>Minigun</dt>\n\
      <dd>Just because it's always a fun choice for mowing down opposition.</dd>\n\
      </dl>\n<p>For a little variety, let's give our defenders:</p>\n<dl>\n<dt>Lightning\
      \ Gun (\"SniperRifle\")</dt>\n<dd>For picking off pesky attackers as they come\
      \ over the hill.</dd>\n<dt>Bio Rifle</dt>\n<dd>Very useful for defending things,\
      \ for those who know how to use it.</dd>\n<dt>Flak Cannon</dt>\n<dd>For those\
      \ not skilled enough for the Bio Rifle&#160;:)</dd>\n<dt>Shock Rifle</dt>\n\
      <dd>Handy for keeping an oncoming horde at a distance.</dd>\n</dl>\n<hr />\n\
      <p><b>Proceed to the next section: <a href=\"/Legacy:Assault_Mapping_Tutorial/Attacking_And_Defending\"\
      \ title=\"Legacy:Assault Mapping Tutorial/Attacking And Defending\">Legacy:Assault\
      \ Mapping Tutorial/Attacking And Defending</a></b></p>\n<hr />\n<p>This tutorial\
      \ was originally written and contributed to the Wiki community by <a href=\"\
      /Legacy:Foogod\" title=\"Legacy:Foogod\">Foogod</a>. Questions and comments\
      \ are welcome! Please either leave them on my personal page or at the bottom\
      \ of the relevant tutorial page. If you see something which is wrong or unclear\
      \ and you think needs some correction, please feel free to edit the text directly\
      \ (that's what the Wiki is for!), but please try to keep the tutorial flow intact\
      \ (no thread discussions in the middle of the tutorial text, please).</p>\n\
      <p>Note: To reduce clutter, comments on the tutorial pages will be periodically\
      \ moved to the <a href=\"/Legacy:Assault_Mapping_Tutorial/Discussion\" title=\"\
      Legacy:Assault Mapping Tutorial/Discussion\">Legacy:Assault Mapping Tutorial/Discussion</a>\
      \ page. Look there for older comments and thread discussions.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Comments:\">Comments:</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager?section=5\"\
      \ title=\"Edit section: Comments:\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Kirk:</b> Not truly related to the topic at hand,\
      \ but the <a href=\"/Legacy:PlayerSpawnManager\" title=\"Legacy:PlayerSpawnManager\"\
      >PlayerSpawnManager</a> also has something called a ForcedPawnClass. Here you\
      \ can enter the <a href=\"/Legacy:Pawn\" title=\"Legacy:Pawn\">Pawn</a> you\
      \ want the player to spawn as. This is particularly useful to spawn a player\
      \ as/in a vehicle, most notably an <a href=\"/Legacy:ASVehicle_SpaceFighter\"\
      \ title=\"Legacy:ASVehicle SpaceFighter\">ASVehicle_SpaceFighter</a>. The spawnmanager\
      \ assigns the player to a spawn group as described, so the spacefighter spawns\
      \ at one of the <a href=\"/Legacy:PlayerStart\" title=\"Legacy:PlayerStart\"\
      >PlayerStarts</a> that have that group set as their team number. Don't forget\
      \ to set OverridePawnClass to ESPM_ForcedPawnClass (or at least I think that\
      \ is necessary for it to work).</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.051 seconds\nReal time usage: 0.052 seconds\nPreprocessor visited node count:\
      \ 43/1000000\nPreprocessor generated node count: 88/1000000\nPost‐expand include\
      \ size: 120/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest\
      \ expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!--\
      \ \nTransclusion expansion time report (%,ms,calls,template)\n100.00%    0.000\
      \      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:486-0!*!0!!en!*!*\
      \ and timestamp 20221118152411 and revision id 1552\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Extend The Dynamic Array"
  - ns: 100
    exists: true
    name: "Legacy:Add An Actor"
  - ns: 100
    exists: true
    name: "Legacy:PlayerSpawnManager"
  - ns: 100
    exists: true
    name: "Legacy:Pawn"
  - ns: 100
    exists: true
    name: "Legacy:Assault Mapping Tutorial/Creating A Destroyable Objective"
  - ns: 100
    exists: true
    name: "Legacy:Assault Mapping Tutorial/Discussion"
  - ns: 100
    exists: true
    name: "Legacy:Assault Mapping Tutorial"
  - ns: 100
    exists: true
    name: "Legacy:Foogod"
  - ns: 100
    exists: true
    name: "Legacy:Set The Following Properties"
  - ns: 100
    exists: true
    name: "Legacy:WeaponLocker"
  - ns: 100
    exists: true
    name: "Legacy:PlayerStart"
  - ns: 100
    exists: true
    name: "Legacy:ASVehicle SpaceFighter"
  - ns: 100
    exists: true
    name: "Legacy:Assault Mapping Tutorial/Attacking And Defending"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "PlayerStarts and the PlayerSpawnManager"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager"
    byteoffset: 457
    anchor: "PlayerStarts_and_the_PlayerSpawnManager"
  - toclevel: 1
    level: "2"
    line: "Attacker Spawns"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager"
    byteoffset: 1140
    anchor: "Attacker_Spawns"
  - toclevel: 1
    level: "2"
    line: "Defender Spawns"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager"
    byteoffset: 3374
    anchor: "Defender_Spawns"
  - toclevel: 1
    level: "2"
    line: "Equipment and Supplies"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager"
    byteoffset: 4299
    anchor: "Equipment_and_Supplies"
  - toclevel: 1
    level: "2"
    line: "Comments:"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Assault_Mapping_Tutorial/PlayerStarts_And_The_PlayerSpawnManager"
    byteoffset: 9008
    anchor: "Comments:"
  displaytitle: "Legacy:Assault Mapping Tutorial/PlayerStarts And The PlayerSpawnManager"
  iwlinks: []
  wikitext:
    text: "----\n\nThis page is a section of the [[Legacy:Assault Mapping Tutorial|Assault\
      \ Mapping Tutorial]].  If you have arrived here from some other place, this\
      \ page will likely make more sense if you start at the above link and read the\
      \ tutorial through from beginning to end.\n\n'''Previous Section: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Creating\
      \ A Destroyable Objective]]'''\n\n'''Next Section: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Attacking\
      \ And Defending]]'''\n\n----\n\n==PlayerStarts and the PlayerSpawnManager==\n\
      \nNow it's time to set up how we're going to get players into this nice map\
      \ of ours.  As you may have guessed, we're going to need two groups of PlayerStarts,\
      \ one for the attackers and one for the defenders.\n\nIt's important to note\
      \ here that you want to have at least as many PlayerSpawns in any given spot\
      \ as you will have people on one team.  If there are too few PlayerSpawns for\
      \ a given team somewhere, this can cause a bottleneck in gameplay, annoying\
      \ players, and potentially throwing off the balance of the game.  The game engine\
      \ will also complain bitterly in the log if it can't find somewhere to spawn\
      \ somebody when it needs to.\n\n==Attacker Spawns==\n\nLet's start by placing\
      \ some PlayerStarts for the attacking team at the far end of the valley from\
      \ the base.  It's always better to have too many than too few, and we've deliberately\
      \ left ourselves a reasonable space for it, so let's put down around 16 or so\
      \ (16 for each side, so our map can support up to 32 players in a game, which\
      \ should be more than people will usually want to do).  The next thing we want\
      \ to do is set the PlayerStart->TeamNumber property on all of the PlayerStarts\
      \ in this group to a unique number.  In this case, they should all default to\
      \ 0, which is fine for here, so we'll leave that (but it doesn't hurt to check\
      \ to make sure they all actually are set to 0).\n\nThat should do it, right?\
      \  Well, not quite.  Unlike for other game types, PlayerSpawn management for\
      \ Assault is a bit more complicated.  Despite the name of the property, in Assault,\
      \ PlayerStart->TeamNumber does not actually determine what team uses a PlayerStart.\
      \  Instead, the TeamNumber property is actually used to group PlayerStarts into\
      \ groups (all PlayerStarts with the same TeamNumber are in the same group),\
      \ and we use another actor to actually control how each group is used (you'll\
      \ see why this is useful later).  What we need to do now is tell the game that\
      \ \"PlayerSpawns in group 0\" (that is, all the PlayerSpawns in the game with\
      \ a TeamNumber of 0) should be where the attacking team initially spawns.  To\
      \ do this, [[Legacy:Add An Actor|add an Actor]]>>Info>>[[Legacy:PlayerSpawnManager|PlayerSpawnManager]]\
      \ actor to the map (it doesn't matter where, but put it close to the PlayerSpawns\
      \ we just created so that it's easy to find later).  Open up the PlayerSpawnManager\
      \ Properties, and [[Legacy:Set The Following Properties|set the following properties]]:\n\
      \n* PlayerSpawnManager->AssaultTeam = EPSM_Attackers\n* PlayerSpawnManager->bEnabled\
      \ = True\n* PlayerSpawnManager->PlayerStartTeam = 0\n\nSetting PlayerStartTeam\
      \ to 0 tells the game that this PlayerSpawnManager will affect any PlayerSpawns\
      \ which have a TeamNumber of 0.  bEnabled tells it that this group of PlayerStarts\
      \ will be active as soon as the game starts, and setting AssaultTeam to EPSM_Attackers,\
      \ tells it that the attacking team should spawn here.\n\n==Defender Spawns==\n\
      \nNext, we'll set up the PlayerSpawns for the defenders.  We'll have them spawn\
      \ on top of the base roof, so go there and put down the same number of PlayerSpawn\
      \ actors as we gave to the attackers (16).  Now, select all of the defender\
      \ PlayerSpawns, bring up their properties, and set PlayerSpawn->TeamNumber to\
      \ 1.  We now have a group of PlayerSpawns which are part of \"group 1\" instead\
      \ of the \"group 0\" we created for the attackers.\n\nNow create a PlayerSpawnManager\
      \ actor for the defending team, somewhere near group 1.  Open up its properties,\
      \ and set the following:\n\n* PlayerSpawnManager->AssaultTeam = EPSM_Defenders\n\
      * PlayerSpawnManager->bEnabled = True\n* PlayerSpawnManager->PlayerStartTeam\
      \ = 1\n\nNow we have a second PlayerSpawnManager, which affects all PlayerSpawns\
      \ with a TeamNumber of 1 (\"group 1\"), is initially active when the game starts,\
      \ and tells the game that defenders should spawn here.\n\n==Equipment and Supplies==\n\
      \nWith a lot of other game types, obtaining the right weapons and ammo are part\
      \ of the challenge, and thus they're scattered about the map in various locations\
      \ where people can track down and grab what they want.  Assault is a timed challenge,\
      \ however, and spending a lot of time running all over the place to stock up\
      \ on weapons every time you die before you can rejoin the assault is both annoying\
      \ to players and problematic to game flow, so most Assault maps make a point\
      \ of placing most of the stuff players are going to need conveniently right\
      \ next to where they're going to spawn, so they can load up quickly and get\
      \ back into the fight.\n\nThe compact way to go about this for weapons and ammo\
      \ is to use a few [[Legacy:WeaponLocker|WeaponLocker]]s at each spawn area with\
      \ appropriate weapons for the task at hand.  You will generally want at least\
      \ a couple of WeaponLockers in each spawn area, so that everybody isn't rushing\
      \ to one point as soon as they spawn and causing a big traffic accident.  For\
      \ each of our two spawn areas, let's [[Legacy:Add An Actor|add an Actor]]>>Pickup>>WeaponLocker\
      \ or two.  For each WeaponLocker, we will now need to tell the game what type\
      \ of weapons we should be supplying.  To do this, open the properties, go to\
      \ the WeaponLocker->Weapons property, and [[Legacy:Extend The Dynamic Array|extend\
      \ the dynamic array]] for each weapon type you want the given locker to carry.\
      \  For each new array entry, select the WeaponClass property and choose what\
      \ type of weapon to use (Note: \"SniperRifle\" is actually the Lightning Gun.\
      \  The real sniper rifle is \"ClassicSniperRifle\").  That's about all there\
      \ is to it!\n\nYou will want to put a bit of thought into what weapons you will\
      \ have in which lockers, of course.  The choice of available weapons can affect\
      \ not only the enjoyability of the game for the players but how the balance\
      \ works out (for example, if the defenders all get rocket launchers and shock\
      \ rifles, and the attackers only get bio rifles, it can make it a lot harder\
      \ for the attackers to actually get close enough to complete the objective.\
      \  This isn't necessarily a bad thing, though.  Tweaking available weapons is\
      \ a good way to make adjustments if you find out that part of your map has balance\
      \ issues).  You also don't want to just give everybody everything off the bat,\
      \ because part of Assault is also the challenge of using what you've been given\
      \ to achieve a goal.  Realism also plays a role too, of course.  What self-respecting\
      \ army would go in to blow up a blast door but arm their soldiers with only\
      \ flak cannons?\n\nAlso, keep in mind that just because you've got WeaponLockers\
      \ in place doesn't mean you can't hide a goodie or two elsewhere in the map\
      \ for people to discover and pick up (such as sticking a Flak Cannon behind\
      \ the crates in RobotFactory, for example).  Be creative.  Is there some weapon\
      \ that would be really useful in a particular scenario?  Make people put some\
      \ effort into finding or obtaining it.\n\nFor the purposes of our map, we will\
      \ give the attackers:\n;Rocket Launcher: We are going to be blowing things up\
      \ after all..\n;Lightning Gun (\"SniperRifle\" in the properties): To pick off\
      \ pesky defenders from a safe distance.\n;Flak Cannon: Challenging for attacking\
      \ with, but might be useful to those skilled with it.\n;Link Gun: Good at doing\
      \ damage to doors as a backup for the rocket launcher, and a decent short-to-mid\
      \ range weapon for those who can use it.\n;Minigun: Just because it's always\
      \ a fun choice for mowing down opposition.\n\nFor a little variety, let's give\
      \ our defenders:\n;Lightning Gun (\"SniperRifle\"): For picking off pesky attackers\
      \ as they come over the hill.\n;Bio Rifle: Very useful for defending things,\
      \ for those who know how to use it.\n;Flak Cannon: For those not skilled enough\
      \ for the Bio Rifle :)\n;Shock Rifle: Handy for keeping an oncoming horde at\
      \ a distance.\n\n----\n\n'''Proceed to the next section: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Attacking\
      \ And Defending]]'''\n\n----\n\nThis tutorial was originally written and contributed\
      \ to the Wiki community by [[Legacy:Foogod|Foogod]].  Questions and comments\
      \ are welcome!  Please either leave them on my personal page or at the bottom\
      \ of the relevant tutorial page.  If you see something which is wrong or unclear\
      \ and you think needs some correction, please feel free to edit the text directly\
      \ (that's what the Wiki is for!), but please try to keep the tutorial flow intact\
      \ (no thread discussions in the middle of the tutorial text, please).\n\nNote:\
      \ To reduce clutter, comments on the tutorial pages will be periodically moved\
      \ to the [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Discussion]] page.  Look there\
      \ for older comments and thread discussions.\n\n==Comments:==\n\n'''Kirk:'''\
      \ Not truly related to the topic at hand, but the [[Legacy:PlayerSpawnManager|PlayerSpawnManager]]\
      \ also has something called a ForcedPawnClass. Here you can enter the [[Legacy:Pawn|Pawn]]\
      \ you want the player to spawn as. This is particularly useful to spawn a player\
      \ as/in a vehicle, most notably an [[Legacy:ASVehicle_SpaceFighter|ASVehicle_SpaceFighter]].\
      \ The spawnmanager assigns the player to a spawn group as described, so the\
      \ spacefighter spawns at one of the [[Legacy:PlayerStart|PlayerStart]]s that\
      \ have that group set as their team number. Don't forget to set OverridePawnClass\
      \ to ESPM_ForcedPawnClass (or at least I think that is necessary for it to work)."
  properties: []
  revId: 1552
name: "Legacy:Assault Mapping Tutorial/PlayerStarts And The PlayerSpawnManager"
revision:
  revid: 1552
  parentid: 1553
  user: "Kirk"
  timestamp: 1181057772.000000000
  comment: "Added a comment about ForcedPawnClass and spacefighters"
timestamp: 1668785051.799524000
