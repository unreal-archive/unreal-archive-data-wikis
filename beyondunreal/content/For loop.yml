---
parse:
  title: "For loop"
  text:
    text: "<p>The <b>for</b> loop is one of four different loop statements in <a href=\"\
      /UnrealScript\" title=\"UnrealScript\">UnrealScript</a>. The others are the\
      \ <a href=\"/Do/Until\" title=\"Do/Until\" class=\"mw-redirect\">Do/Until</a>,\
      \ <a href=\"/While\" title=\"While\" class=\"mw-redirect\">While</a> and <a\
      \ href=\"/ForEach\" title=\"ForEach\" class=\"mw-redirect\">ForEach</a> loops.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Syntax\">Syntax</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/For_loop?section=1\"\
      \ title=\"Edit section: Syntax\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The general syntax of the <b>for</b> loop is as follows:</p>\n\
      <pre><b>for (</b><i>initstatement</i><b>;</b> <i>loopcondition</i><b>;</b> <i>updatestatement</i><b>)</b>\n\
      \  <i>statement</i><b>;</b>\n</pre>\n<p>Instead of a single statement, it is\
      \ more common to follow up with a block of code, even if it only contains a\
      \ single statement as well:</p>\n<pre><b>for (</b><i>initstatement</i><b>;</b>\
      \ <i>loopcondition</i><b>;</b> <i>updatestatement</i><b>) {</b>\n  ...\n<b>}</b>\n\
      </pre>\n<p>The <i>initstatement</i> must be exactly one assignment or function\
      \ call and is executed right before the loop is entered for the first time.\
      \ The <i>loopcondition</i> must be a <a href=\"/Bool\" title=\"Bool\" class=\"\
      mw-redirect\">bool</a> type expression and is evaluated before each (including\
      \ the first) loop iteration. If the condition evaluates to <i>False</i>, the\
      \ loop ends and code execution continues at the first statement after the <b>for</b>\
      \ loop. The <i>updatestatement</i> must be exactly one assignment or function\
      \ call and is executed at the end of each loop iteration right before the loop\
      \ condition is reevaluated. All three parts in the parentheses must be specified.\
      \ Unlike other languages that allow you to omit these expressions, the UnrealScript\
      \ compiler will complain if any of them is missing. Also unlike other languages\
      \ the UnrealScript compiler will complain about comma-separated assignments\
      \ as initialization or update statements.</p>\n<p><b>Note:</b> The compiler\
      \ also allows the empty statement (a lonely semicolon) as <i>statement</i> after\
      \ the <b>for</b> statement. This is basically the same as specifying an empty\
      \ block of code. Any other statements following the semicolon are <i>not</i>\
      \ part of the loop! Be wary of this when using the single-statement form of\
      \ the <b>for</b> loop.</p>\n<table class=\"navbox nowraplinks\" style=\"\">\n\
      <tr class=\"navbox-header\">\n<th colspan=\"2\" class=\"navbox-header\" style=\"\
      \">\n<div style=\"position:relative; width:100%; white-space:nowrap;\">\n<div\
      \ class=\"noprint plainlinks\" style=\"background-color:transparent; padding:0;\
      \ font-weight:normal; font-size:xx-small; white-space:nowrap; position:absolute;left:0.5em;\"\
      ><a href=\"/Template:Navbox_unrealscript\" title=\"Template:Navbox unrealscript\"\
      ><span title=\"View this template\">v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\"\
      \ title=\"Template talk:Navbox unrealscript\"><span title=\"Discussion about\
      \ this template\">d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external\
      \ text\" href=\"https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"\
      ><span title=\"You can edit this template. Please use the preview button before\
      \ saving.\">e</span></a></div>\n<a href=\"/UnrealScript_reference\" title=\"\
      UnrealScript reference\">UnrealScript reference</a></div>\n</th>\n</tr>\n<tr\
      \ class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\">Declarations</th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/Preprocessor\" title=\"Preprocessor\"\
      >Preprocessor</a>&#160;• <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;•\
      \ <a href=\"/Interfaces\" title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"\
      /Cpptext\" title=\"Cpptext\">Cpptext</a>&#160;• <a href=\"/Constants\" title=\"\
      Constants\">Constants</a>&#160;• <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;•\
      \ <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;• <a href=\"/Variables\"\
      \ title=\"Variables\">Variables</a>&#160;(<a href=\"/Metadata\" title=\"Metadata\"\
      >Metadata</a>)&#160;• <a href=\"/Replication_block\" title=\"Replication block\"\
      >Replication block</a>&#160;• <a href=\"/Operators\" title=\"Operators\">Operators</a>&#160;•\
      \ <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"\
      /Functions\" title=\"Functions\">Functions</a>&#160;• <a href=\"/States\" title=\"\
      States\">States</a>&#160;• <a href=\"/Defaultproperties\" title=\"Defaultproperties\"\
      >Defaultproperties</a>&#160;(<a href=\"/Subobjects\" title=\"Subobjects\">Subobjects</a>)</td>\n\
      </tr>\n<tr class=\"navbox-body even\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Types\" title=\"Types\">Types</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;•\
      \ <a href=\"/Byte\" title=\"Byte\" class=\"mw-redirect\">byte</a>&#160;• <a\
      \ href=\"/Float\" title=\"Float\" class=\"mw-redirect\">float</a>&#160;• <a\
      \ href=\"/Int\" title=\"Int\" class=\"mw-redirect\">int</a>&#160;• <a href=\"\
      /Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;• <a href=\"/String\"\
      \ title=\"String\">string</a>&#160;• <a href=\"/Types#Reference_types\" title=\"\
      Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\" title=\"Class limiter\"\
      \ class=\"mw-redirect\">Class</a>&#160;• <a href=\"/Enums\" title=\"Enums\"\
      >Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;(<a\
      \ href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a href=\"/Rotator\" title=\"\
      Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"Quat\" class=\"mw-redirect\"\
      >Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\">Color</a>)&#160;• <a href=\"\
      /Static_arrays\" title=\"Static arrays\">Static arrays</a>&#160;• <a href=\"\
      /Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic arrays</a>&#160;• <a href=\"\
      /Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"/Typecasting\"\
      \ title=\"Typecasting\">Typecasting</a></td>\n</tr>\n<tr class=\"navbox-body\
      \ odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Literals\" title=\"\
      Literals\">Literals</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;• <a href=\"\
      /Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a href=\"/Literals#Integer_numbers\"\
      \ title=\"Literals\">Integer</a>&#160;• <a href=\"/Literals#Names\" title=\"\
      Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\" title=\"Literals\"\
      >Objects</a> (<a href=\"/None\" title=\"None\" class=\"mw-redirect\">None</a>&#160;⋅\
      \ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\">Self</a>)&#160;• <a\
      \ href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;• <a href=\"\
      /Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"/Literals#Strings\"\
      \ title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"navbox-body even\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\" title=\"\
      Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"/If_statement\"\
      \ title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\" title=\"\
      Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\" title=\"\
      Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"Stop\
      \ statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch statement\"\
      >Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\">While</a>&#160;•\
      \ <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <strong class=\"selflink\">For</strong>&#160;• <a href=\"/ForEach_loop\" title=\"\
      ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"Break\
      \ statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"Continue\
      \ statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\">\n<th\
      \ class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.083 seconds\nReal time usage: 0.087 seconds\nPreprocessor\
      \ visited node count: 165/1000000\nPreprocessor generated node count: 869/1000000\n\
      Post‐expand include size: 10610/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \   27.871      1 - -total\n100.00%   27.871      1 - Template:Navbox_unrealscript\n\
      \ 71.34%   19.884      1 - Template:Navbox\n 14.09%    3.926      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:23797-0!*!0!*!*!*!*\
      \ and timestamp 20221117232807 and revision id 33117\n -->\n"
  categories:
  - sortkey: "For loop"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "ForEach"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Do/Until"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "While"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Switch statement"
  templates:
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Syntax"
    number: "1"
    index: "1"
    fromtitle: "For_loop"
    byteoffset: 148
    anchor: "Syntax"
  displaytitle: "For loop"
  iwlinks: []
  wikitext:
    text: "The '''for''' loop is one of four different loop statements in [[UnrealScript]].\
      \ The others are the [[Do/Until]], [[While]] and [[ForEach]] loops.\n\n==Syntax==\n\
      The general syntax of the '''for''' loop is as follows:\n '''for ('''''initstatement''''';'''\
      \ ''loopcondition''''';''' ''updatestatement''''')'''\n   ''statement''''';'''\n\
      Instead of a single statement, it is more common to follow up with a block of\
      \ code, even if it only contains a single statement as well:\n '''for ('''''initstatement''''';'''\
      \ ''loopcondition''''';''' ''updatestatement''''') {'''\n   ...\n '''}'''\n\
      The ''initstatement'' must be exactly one assignment or function call and is\
      \ executed right before the loop is entered for the first time.\nThe ''loopcondition''\
      \ must be a [[bool]] type expression and is evaluated before each (including\
      \ the first) loop iteration. If the condition evaluates to ''False'', the loop\
      \ ends and code execution continues at the first statement after the '''for'''\
      \ loop.\nThe ''updatestatement'' must be exactly one assignment or function\
      \ call and is executed at the end of each loop iteration right before the loop\
      \ condition is reevaluated.\nAll three parts in the parentheses must be specified.\
      \ Unlike other languages that allow you to omit these expressions, the UnrealScript\
      \ compiler will complain if any of them is missing. Also unlike other languages\
      \ the UnrealScript compiler will complain about comma-separated assignments\
      \ as initialization or update statements.\n\n'''Note:''' The compiler also allows\
      \ the empty statement (a lonely semicolon) as ''statement'' after the '''for'''\
      \ statement. This is basically the same as specifying an empty block of code.\
      \ Any other statements following the semicolon are ''not'' part of the loop!\
      \ Be wary of this when using the single-statement form of the '''for''' loop.\n\
      \n{{navbox unrealscript}}"
  properties: []
  revId: 33117
name: "For loop"
revision:
  revid: 33117
  parentid: 0
  user: "Wormbo"
  timestamp: 1223709689.000000000
  comment: "New page: The '''for''' loop is one of four different loop statements\
    \ in [[UnrealScript]]. The others are the [[Do/Until]], [[While]] and [[ForEach]]\
    \ loops.  ==Syntax== The general syntax of the '''..."
timestamp: 1668754883.630724000
