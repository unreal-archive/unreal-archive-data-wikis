---
parse:
  title: "Legacy:UsUnit/Discussion"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Differences_between_UsUnit_and_DUnit_and_JUnit\"\
      >Differences between UsUnit and DUnit and JUnit</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UsUnit/Discussion?section=1\"\
      \ title=\"Edit section: Differences between UsUnit and DUnit and JUnit\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Even though UsUnit\
      \ tries to be similar to JUnit and DUnit it does not always work the same way.\
      \ This is mostly because of missing features in UnrealScript.</p>\n<h3><span\
      \ class=\"mw-headline\" id=\"No_reflection\">No reflection</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UsUnit/Discussion?section=2\"\
      \ title=\"Edit section: No reflection\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>UnrealScript doesn't have any (decent) reflection.\
      \ Because of this TestCases don't work like in DUnit. There's only one entry\
      \ point per TestCase (e.g. the <i>run()</i> function). In DUnit you can have\
      \ multiple entry points for the same class, each entry point would have it's\
      \ own instance. In UsUnit you will simply have to create multiple TestCases\
      \ and a TestSuite.</p>\n<h3><span class=\"mw-headline\" id=\"No_test_registration\"\
      >No test registration</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UsUnit/Discussion?section=3\" title=\"Edit section:\
      \ No test registration\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>There is no package initialization code in UnrealScript and no relfection.\
      \ Therefor it's not possible to find all available tests. There is some code\
      \ (for UE2.5 only) that can find tests in a package but it's a rather dirty\
      \ hack. Also it works well when the package is not loaded already.</p>\n<hr\
      \ />\n<p><i>you can add your comments, feature requests, bug reports, etc. here</i></p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.015 seconds\nReal time usage:\
      \ 0.064 seconds\nPreprocessor visited node count: 10/1000000\nPreprocessor generated\
      \ node count: 16/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:3529-0!*!*!!*!*!* and timestamp 20221118154815 and revision\
      \ id 9032\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Differences between UsUnit and DUnit and JUnit"
    number: "1"
    index: "1"
    fromtitle: "Legacy:UsUnit/Discussion"
    byteoffset: 0
    anchor: "Differences_between_UsUnit_and_DUnit_and_JUnit"
  - toclevel: 2
    level: "3"
    line: "No reflection"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:UsUnit/Discussion"
    byteoffset: 210
    anchor: "No_reflection"
  - toclevel: 2
    level: "3"
    line: "No test registration"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:UsUnit/Discussion"
    byteoffset: 596
    anchor: "No_test_registration"
  displaytitle: "Legacy:UsUnit/Discussion"
  iwlinks: []
  wikitext:
    text: "==Differences between UsUnit and DUnit and JUnit==\n\nEven though UsUnit\
      \ tries to be similar to JUnit and DUnit it does not always work the same way.\
      \ This is mostly because of missing features in UnrealScript. \n\n===No reflection===\n\
      \nUnrealScript doesn't have any (decent) reflection. Because of this TestCases\
      \ don't work like in DUnit. There's only one entry point per TestCase (e.g.\
      \ the ''run()'' function). In DUnit you can have multiple entry points for the\
      \ same class, each entry point would have it's own instance. In UsUnit you will\
      \ simply have to create multiple TestCases and a TestSuite.\n\n===No test registration===\n\
      \nThere is no package initialization code in UnrealScript and no relfection.\
      \ Therefor it's not possible to find all available tests. There is some code\
      \ (for UE2.5 only) that can find tests in a package but it's a rather dirty\
      \ hack. Also it works well when the package is not loaded already.\n\n----\n\
      \n''you can add your comments, feature requests, bug reports, etc. here''"
  properties: []
  revId: 9032
name: "Legacy:UsUnit/Discussion"
revision:
  revid: 9032
  parentid: 9033
  user: "El Muerte"
  timestamp: 1126814364.000000000
  comment: "*"
timestamp: 1668786418.771849000
