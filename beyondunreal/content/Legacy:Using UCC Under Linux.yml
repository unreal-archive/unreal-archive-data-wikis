---
parse:
  title: "Legacy:Using UCC Under Linux"
  text:
    text: "<p>This page goes through the process of getting <a href=\"/Legacy:Ucc\"\
      \ title=\"Legacy:Ucc\">Ucc</a>, the Unreal Script compiler (UT2004), working\
      \ under the <a href=\"http://en.wikipedia.org/wiki/Linux\" class=\"extiw\" title=\"\
      wikipedia:Linux\">Wikipedia:Linux</a> OS.</p>\n<p>Note: currently UCC is not\
      \ fully implemented in the linux version of UT2004; however, linux is not without\
      \ hope, we can use the tool <a href=\"http://en.wikipedia.org/wiki/WINE\" class=\"\
      extiw\" title=\"wikipedia:WINE\">Wikipedia:WINE</a> to compile our Unrealscript.\
      \ This tutorial shows how to do this as well as some other cool things we can\
      \ do (so this will be usefull if/when UCC is fully implemented under linux).</p>\n\
      <ul>\n<li><b>WIN_HOME</b> = The directory that contains UT2004 for windows</li>\n\
      <li><b>NIX_HOME</b> = The directory that conatins UT2004 for linux</li>\n</ul>\n\
      <p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Required_Tools\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Required Tools</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Base_Setup\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Base Setup</span></a>\n<ul>\n<li\
      \ class=\"toclevel-2 tocsection-3\"><a href=\"#Bloated_Setup\"><span class=\"\
      tocnumber\">2.1</span> <span class=\"toctext\">Bloated Setup</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-4\"><a href=\"#Jumbled_Setup\"><span class=\"\
      tocnumber\">2.2</span> <span class=\"toctext\">Jumbled Setup</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-5\"><a href=\"#Linux_SDK_setup_1\"><span class=\"\
      tocnumber\">2.3</span> <span class=\"toctext\">Linux SDK setup 1</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-6\"><a href=\"#Linux_SDK_setup_2\"><span class=\"\
      tocnumber\">2.4</span> <span class=\"toctext\">Linux SDK setup 2</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#Compiling_using_Wine\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Compiling using\
      \ Wine</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a href=\"#Scripts\"\
      ><span class=\"tocnumber\">4</span> <span class=\"toctext\">Scripts</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#utmake\"><span class=\"\
      tocnumber\">4.1</span> <span class=\"toctext\">utmake</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-10\"><a href=\"#utfind\"><span class=\"tocnumber\">4.2</span>\
      \ <span class=\"toctext\">utfind</span></a></li>\n<li class=\"toclevel-2 tocsection-11\"\
      ><a href=\"#utedit\"><span class=\"tocnumber\">4.3</span> <span class=\"toctext\"\
      >utedit</span></a></li>\n<li class=\"toclevel-2 tocsection-12\"><a href=\"#utlinkpkg\"\
      ><span class=\"tocnumber\">4.4</span> <span class=\"toctext\">utlinkpkg</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-13\"><a href=\"#utrun\"><span class=\"tocnumber\"\
      >4.5</span> <span class=\"toctext\">utrun</span></a></li>\n</ul>\n</li>\n<li\
      \ class=\"toclevel-1 tocsection-14\"><a href=\"#Related_Topics\"><span class=\"\
      tocnumber\">5</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-15\"><a href=\"#Comments\"><span class=\"\
      tocnumber\">6</span> <span class=\"toctext\">Comments</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Required_Tools\">Required\
      \ Tools</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=1\" title=\"Edit\
      \ section: Required Tools\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li>Your favorite flavor of Linux (I'm using Gentoo)</li>\n<li>Some version\
      \ of wine (winex, cedega, wine_cvs, etc)</li>\n<li>A <a href=\"/Legacy:Text_Editor\"\
      \ title=\"Legacy:Text Editor\">Text Editor</a> (vim, emacs, nano, pico, etc)</li>\n\
      <li>A retail copy of <a href=\"/Legacy:UT2004\" title=\"Legacy:UT2004\" class=\"\
      mw-redirect\">UT2004</a> (yep, we actually have to purchase software)</li>\n\
      <li>Latest UT patch (3323 as of this writing, but check the page <a href=\"\
      /Legacy:UT2004\" title=\"Legacy:UT2004\" class=\"mw-redirect\">UT2004</a>)</li>\n\
      <li>UT Source (again 3323)</li>\n<li><a rel=\"nofollow\" class=\"external text\"\
      \ href=\"http://www.parl.clemson.edu/~mspeth/projects/ut2004/\">ut2k4_linux_sdk</a>\
      \ (Optional: 42MB)</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Base_Setup\"\
      >Base Setup</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=2\" title=\"Edit\
      \ section: Base Setup\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>There are several ways of setting up UT under linux so I'll describe the\
      \ ways below.</p>\n<h3><span class=\"mw-headline\" id=\"Bloated_Setup\">Bloated\
      \ Setup</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=3\" title=\"Edit\
      \ section: Bloated Setup\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>The most generic type of setup that requires the most hard disk space.</p>\n\
      <ol>\n<li>Install UT2004 Linux version</li>\n<li>Install UT2004 Windows version\
      \ using wine</li>\n<li>Patch both to the latest version of UT</li>\n<li>Unpack\
      \ the unreal source into the <b>WIN_HOME</b> directory</li>\n</ol>\n<p>Now you\
      \ are ready to start writing Unreal Script.</p>\n<p>Your source code will be\
      \ written in the <b>WIN_HOME</b> directory. Once you have compiled (shown later)\
      \ your source then you will need to move a minimum of 3 files to your <b>NIX_HOME</b>\
      \ directory.</p>\n<p>The 3 files are yourpkg.u, yourpkg.ucl, and yourpkg.int.\
      \ These files should be found in your <b>WIN_HOME/System</b> directory and copied\
      \ to the <b>NIX_HOME/System</b> directory.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Jumbled_Setup\">Jumbled Setup</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=4\"\
      \ title=\"Edit section: Jumbled Setup\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Requires the minimum space but compilation files and\
      \ binary files get mixed together.</p>\n<ol>\n<li>Install UT2004 Linux version</li>\n\
      <li>Install UT2004 WIndows version using wine</li>\n<li>Patch both</li>\n<li>Now\
      \ Copy all files from the <b>WIN_HOME/System</b> to <b>NIX_HOME/System</b></li>\n\
      <li>Delete <b>WIN_HOME</b> and all of its contents</li>\n<li>Unpack UT source\
      \ into <b>NIX_HOME</b></li>\n</ol>\n<p>Now you are ready to start compiling\
      \ and writing your Unreal Script</p>\n<h3><span class=\"mw-headline\" id=\"\
      Linux_SDK_setup_1\">Linux SDK setup 1</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=5\"\
      \ title=\"Edit section: Linux SDK setup 1\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Requires ut2004_linux_sdk (This is an \"environment\"\
      \ that I have created for making unreal scripting easier on the linux user –\
      \ the latest version has handles variables repeatedly used in the old scripts\
      \ implemented by Chris Guirl and David Redick from <a rel=\"nofollow\" class=\"\
      external text\" href=\"http://clemsonlinux.org/\">CLUG</a>).</p>\n<ol>\n<li>Install\
      \ UT2004 Linux Version</li>\n<li>Unpack the latest version of ut2004_linux_sdk\
      \ anywhere ( preferably somewhere other then <b>NIX_HOME</b>)</li>\n<li>Run\
      \ the setup script found in ut2004_linux_sdk directory\n<ol>\n<li>setup symbolically\
      \ links files needed to compile UT as well as creates a file in your home directory\
      \ to store values used in the scripts.</li>\n<li>Usage: setup utenv where ut_env\
      \ is a directory provided in the sdk.</li>\n</ol>\n</li>\n</ol>\n<p>You are\
      \ now ready to compile your Unreal script code. Note, that we only have 1 full\
      \ vesion of UT installed. The sdk provides all necessary files for compilation.\
      \ setup symbolically links directories found in <b>NIX_HOME</b> that the compiler\
      \ needs such as Textures, Sounds, etc. Here you will put your packages inside\
      \ utenv.</p>\n<h3><span class=\"mw-headline\" id=\"Linux_SDK_setup_2\">Linux\
      \ SDK setup 2</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=6\" title=\"Edit\
      \ section: Linux SDK setup 2\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Basically the same as \"Linux SDK setup 1\" except\
      \ your source files can be stored in a directory other then utenv. Here's what\
      \ you need to do.</p>\n<ol>\n<li>Follow Linux SDK setup 1</li>\n<li>Create a\
      \ directory somewhere for your project. (example mkdir /home/user/UTMod)</li>\n\
      <li>Create a System directory inside your project dir (example mkdir /home/user/UTMod/System)</li>\n\
      <li>Use utlinkpkg to symbolically link your new project</li>\n<li>Command Line\n\
      <ol>\n<li>Usage: utlinkpkg pkg_dir\n<ol>\n<li>where pkg_dir is the full path\
      \ to your new project directory</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>You\
      \ can now compile your package like you would if the package was actually in\
      \ ut_env.</p>\n<h2><span class=\"mw-headline\" id=\"Compiling_using_Wine\">Compiling\
      \ using Wine</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=7\" title=\"Edit\
      \ section: Compiling using Wine\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>As noted at the top of the page, we cannot use the\
      \ UCC provided in the linux version.</p>\n<p>Hence, we need to use UT's windows\
      \ version. By now you should have the necessary tools to compile so lets push\
      \ on.</p>\n<p>I am currently using cedega so the examples listed below will\
      \ be using \"cedega\" but you can replace cedega with your version of wine (ie.\
      \ winex, wine, wine_cvs, etc).</p>\n<p>To compile the UT source (without any\
      \ of your modifications) then you can do this command</p>\n<ul>\n<li>cedega\
      \ UCC.exe make</li>\n</ul>\n<p>UCC is the unreal script compiler. Make tells\
      \ the compiler to compile your source.</p>\n<p><b>UCC make doesn't work exactly\
      \ like gnu make</b></p>\n<p>With gnu make, if you modify a source file then\
      \ make knows about this and recompiles the needed files.</p>\n<p>However, UCC\
      \ does not do this. It looks in your System directory for the .u files corresponding\
      \ to the packages listed in the Game .ini file (Think of this as your make file).\
      \ If the .u is present, then it doesn't attempt to compile it; however, when\
      \ the .u file is not present then it looks for your source and tries to compile\
      \ it. I have written scripts to make this automatic for you,but if you do it\
      \ on your own, then you need to remember to delete the .u files that you want\
      \ to recompile.</p>\n<p>To use a different \"make file\" you can copy and paste\
      \ the default make file called UT2004.ini located in your System directory to\
      \ a new file (like UT2004_make.ini). Here we can edit this file to only compile\
      \ packages that we need. Inside this file there will be several lines that have\
      \ EditPackages= in it. EditPackages tells the compiler which packages to compile.\
      \ In your new file you can remove those packages that are not needed by your\
      \ package that you want to compile (btw, you need to add your package name like\
      \ this <b>EditPackages=UTMod</b>)</p>\n<p>Now we are ready to compile with the\
      \ new .ini file.</p>\n<ul>\n<li>cedega UCC.exe make -ini=UT2004_make.ini</li>\n\
      </ul>\n<p>Thats it, UCC now uses UT2004_make.ini for its make file.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Scripts\">Scripts</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=8\"\
      \ title=\"Edit section: Scripts\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>These are provided in the SDK to make your Unreal\
      \ Scripting easier. Feel free to use, modify, or ignore them, its up to you&#160;:)</p>\n\
      <h3><span class=\"mw-headline\" id=\"utmake\">utmake</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=9\"\
      \ title=\"Edit section: utmake\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>This removes and compiles a package as well as moves\
      \ the package to the <b>NIX_HOME</b>.</p>\n<ul>\n<li>Usage: utmake [class] [makefile]</li>\n\
      </ul>\n<p>Where <b>class</b> is the name of the package to compile and <b>makefile</b>\
      \ (optional) is the game .ini to use.</p>\n<h3><span class=\"mw-headline\" id=\"\
      utfind\">utfind</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=10\" title=\"\
      Edit section: utfind\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Useful for searching for the location of class files in the source directory.</p>\n\
      <ul>\n<li>Usage: utfind [class]</li>\n</ul>\n<p>Where <b>class</b> is the source\
      \ file you are looking for.</p>\n<p>Example: I am looking for class xPawn because\
      \ Monster.uc extends it but xPawn isn't in the same directory as Monster.uc.\
      \ so do</p>\n<ul>\n<li>utfind xPawn</li>\n</ul>\n<p>XEffects: xpawngibgroup.uc</p>\n\
      <p>XGame: xPawn.uc</p>\n<p>XGame: xPawnSoundGroup.uc</p>\n<h3><span class=\"\
      mw-headline\" id=\"utedit\">utedit</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=11\"\
      \ title=\"Edit section: utedit\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Useful for looking at the ut files that you found\
      \ with utfind.</p>\n<ul>\n<li>Usage: utedit [class] [ext]</li>\n</ul>\n<p>Where\
      \ <b>class</b> is the name of the file (without the extension) to be looked\
      \ in and <b>ext</b> is the extension (ie .uc, .ucl, .ini, etc). If ext is not\
      \ given, .uc is assumed.</p>\n<h3><span class=\"mw-headline\" id=\"utlinkpkg\"\
      >utlinkpkg</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=12\" title=\"\
      Edit section: utlinkpkg\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Used to symbolically link project directories so that you do not have to\
      \ move src code into the utenv directory structure.</p>\n<ul>\n<li>Usage: utlinkpkg\
      \ [package]</li>\n</ul>\n<p>Where <b>package</b> is the path to the directory\
      \ with the src code that you want linked.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"utrun\">utrun</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=13\" title=\"\
      Edit section: utrun\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Ever get tired of clicking through the menus just to play a mod you are working\
      \ on and you don't remember what the command line parameters are for starting\
      \ ut with your mod?</p>\n<p>Well, utrun does it for you.</p>\n<ul>\n<li>Usage:\
      \ utrun [map] [gametype]</li>\n</ul>\n<p>Where <b>map</b> is the map to start\
      \ wit and <b>gametype</b> is the gametype to use.</p>\n<p>You avoid going through\
      \ the menus by using this script.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Related_Topics\">Related Topics</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Using_UCC_Under_Linux?section=14\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Native_Coding_On_Linux\"\
      \ title=\"Legacy:Native Coding On Linux\">Native Coding On Linux</a></li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Comments\">Comments</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Using_UCC_Under_Linux?section=15\" title=\"Edit section:\
      \ Comments\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>Foxpaw:</b> Should this page possibly be renamed? \"The Linux Way\" would\
      \ be a catchy title for a magazine article, but as this is a more reference\
      \ oriented medium, I think that the title should give some indication to what\
      \ the page contains, other than just the fact that it has something to do with\
      \ Linux. \"Using UCC under Linux,\" or \"Coding under Linux\" or something like\
      \ that seems better to me. \"The Linux Way\" is also not very amiable to being\
      \ linked to.</p>\n<p><b>Conzar:</b> Agreed. My title is catchy&#160;:) but not\
      \ the best at describing this page. So how do I change the title???</p>\n<p><b>Foxpaw:</b>\
      \ Err, actually you can't. You can make a new page and copy everything there,\
      \ or we can probrably just leave these comments here and tarquin will probrably\
      \ see it and change the name.</p>\n<p><b>Conzar:</b> Ok. Well, I'm going to\
      \ continue to work on this then.</p>\n<p><b>Tarquin:</b> done&#160;:) Remember\
      \ to make use of other pages in the wiki by linking to them&#160;:) (I've done\
      \ a few for you)</p>\n<p><b>Conzar:</b> Thanks for the edits and renaming the\
      \ page.</p>\n<p><b>Conzar:</b> Note, I updated script definitions to the lastest\
      \ version.</p>\n<p><b>thelusiv:</b> With the setup script there, are the first\
      \ two methods (the bloated and jumbled setups) really necessary? They're not\
      \ really the ideal way to set it up and only seem to make this page more confusing...</p>\n\
      <p><b>Conzar:</b> Well, they are necessary if the user does not want to use\
      \ the sdk provided. I think it also helps those understand why the sdk is cool.\
      \ But what does everyone else think? Should we re-order those subtopics, remove\
      \ them, or leave it be?</p>\n<p><b>thelusiv:</b> Maybe there should be a page\
      \ dedicated to doing it by hand using Linux, as well as a separate page about\
      \ the SDK. That would significantly reduce clutter and keep all the information.</p>\n\
      <p><b>strider:</b> I'm tring to compile a mod (Unreal Annihilation) using linux\
      \ (I'd really rather not have to boot into windows anymore purely because of\
      \ compiling!) I try wine ucc.exe make -mod=Annihilation2k4 but I get the following\
      \ error: fixme:process:GetProcessWorkingSetSize (0xffffffff,0x40dce6d8,0x40dce6d4):\
      \ stub. After this, the CPU goes to 100% until I press ctrl-c, where it exits\
      \ with the error code 1.</p>\n<p>Any ideas?</p>\n<p><b>MythOpus:</b> I'm definately\
      \ not the hugest Linux person (I don't use it at all, although my dad put it\
      \ on here) but isn't it unnecesary to type in ucc.exe make -mode=Annihilation2k4?\
      \ Doesn't it still look in it's directory for the ut2004.ini and compile all\
      \ packages neccesary?</p>\n<p><b>strider:</b> It's a seperate mod, a total conversion.\
      \ So yeah it's necessary. Typing ucc make -mod=annihilation2k4 works on windows,\
      \ but not linux using this setup.</p>\n<p><b>OlgaB:</b> Is there any way to\
      \ get UCC support in UT1?</p>\n<p><b>Wormbo:</b> Use WINE to run ucc.exe from\
      \ the Windows version.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.056\
      \ seconds\nReal time usage: 0.058 seconds\nPreprocessor visited node count:\
      \ 59/1000000\nPreprocessor generated node count: 64/1000000\nPost‐expand include\
      \ size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3505-0!*!0!!en!*!*\
      \ and timestamp 20221118014749 and revision id 8984\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Text Editor"
  - ns: 100
    exists: true
    name: "Legacy:Ucc"
  - ns: 100
    exists: true
    name: "Legacy:Native Coding On Linux"
  - ns: 100
    exists: true
    name: "Legacy:UT2004"
  templates: []
  images: []
  externallinks:
  - "http://clemsonlinux.org/"
  - "http://www.parl.clemson.edu/~mspeth/projects/ut2004/"
  sections:
  - toclevel: 1
    level: "2"
    line: "Required Tools"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 611
    anchor: "Required_Tools"
  - toclevel: 1
    level: "2"
    line: "Base Setup"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 1099
    anchor: "Base_Setup"
  - toclevel: 2
    level: "3"
    line: "Bloated Setup"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 1202
    anchor: "Bloated_Setup"
  - toclevel: 2
    level: "3"
    line: "Jumbled Setup"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 1901
    anchor: "Jumbled_Setup"
  - toclevel: 2
    level: "3"
    line: "Linux SDK setup 1"
    number: "2.3"
    index: "5"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 2330
    anchor: "Linux_SDK_setup_1"
  - toclevel: 2
    level: "3"
    line: "Linux SDK setup 2"
    number: "2.4"
    index: "6"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 3391
    anchor: "Linux_SDK_setup_2"
  - toclevel: 1
    level: "2"
    line: "Compiling using Wine"
    number: "3"
    index: "7"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 4012
    anchor: "Compiling_using_Wine"
  - toclevel: 1
    level: "2"
    line: "Scripts"
    number: "4"
    index: "8"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 5976
    anchor: "Scripts"
  - toclevel: 2
    level: "3"
    line: "utmake"
    number: "4.1"
    index: "9"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 6119
    anchor: "utmake"
  - toclevel: 2
    level: "3"
    line: "utfind"
    number: "4.2"
    index: "10"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 6369
    anchor: "utfind"
  - toclevel: 2
    level: "3"
    line: "utedit"
    number: "4.3"
    index: "11"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 6762
    anchor: "utedit"
  - toclevel: 2
    level: "3"
    line: "utlinkpkg"
    number: "4.4"
    index: "12"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 7048
    anchor: "utlinkpkg"
  - toclevel: 2
    level: "3"
    line: "utrun"
    number: "4.5"
    index: "13"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 7308
    anchor: "utrun"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "5"
    index: "14"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 7699
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "6"
    index: "15"
    fromtitle: "Legacy:Using_UCC_Under_Linux"
    byteoffset: 7778
    anchor: "Comments"
  displaytitle: "Legacy:Using UCC Under Linux"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Linux"
    name: "wikipedia:Linux"
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/WINE"
    name: "wikipedia:WINE"
  wikitext:
    text: "This page goes through the process of getting [[Legacy:Ucc|Ucc]], the Unreal\
      \ Script compiler (UT2004), working under the [[Wikipedia:Linux]] OS.\n\nNote:\
      \ currently UCC is not fully implemented in the linux version of UT2004; however,\
      \ linux is not without hope, we can use the tool [[Wikipedia:WINE]] to compile\
      \ our Unrealscript.  This tutorial shows how to do this as well as some other\
      \ cool things we can do (so this will be usefull if/when UCC is fully implemented\
      \ under linux).\n\n* '''WIN_HOME''' = The directory that contains UT2004 for\
      \ windows\n* '''NIX_HOME''' = The directory that conatins UT2004 for linux\n\
      \n==Required Tools ==\n* Your favorite flavor of Linux (I'm using Gentoo)\n\
      * Some version of wine (winex, cedega, wine_cvs, etc)\n* A [[Legacy:Text Editor|Text\
      \ Editor]] (vim, emacs, nano, pico, etc)\n* A retail copy of [[Legacy:UT2004|UT2004]]\
      \ (yep, we actually have to purchase software)\n* Latest UT patch (3323 as of\
      \ this writing, but check the page [[Legacy:UT2004|UT2004]])\n* UT Source (again\
      \ 3323)\n* [http://www.parl.clemson.edu/~mspeth/projects/ut2004/ ut2k4_linux_sdk]\
      \ (Optional: 42MB)\n\n==Base Setup ==\n\nThere are several ways of setting up\
      \ UT under linux so I'll describe the ways below.\n\n===Bloated Setup ===\n\n\
      The most generic type of setup that requires the most hard disk space.\n# Install\
      \ UT2004 Linux version\n# Install UT2004 Windows version using wine\n# Patch\
      \ both to the latest version of UT\n# Unpack the unreal source into the '''WIN_HOME'''\
      \ directory\n\nNow you are ready to start writing Unreal Script.\n\nYour source\
      \ code will be written in the '''WIN_HOME''' directory.  Once you have compiled\
      \ (shown later) your source then you will need to move a minimum of 3 files\
      \ to your '''NIX_HOME''' directory.\n\nThe 3 files are yourpkg.u, yourpkg.ucl,\
      \ and yourpkg.int.  These files should be found in your '''WIN_HOME/System'''\
      \ directory and copied to the '''NIX_HOME/System''' directory.\n\n===Jumbled\
      \ Setup===\n\nRequires the minimum space but compilation files and binary files\
      \ get mixed together.\n# Install UT2004 Linux version\n# Install UT2004 WIndows\
      \ version using wine\n# Patch both\n# Now Copy all files from the '''WIN_HOME/System'''\
      \ to '''NIX_HOME/System'''\n# Delete '''WIN_HOME''' and all of its contents\n\
      # Unpack UT source into '''NIX_HOME'''\n\nNow you are ready to start compiling\
      \ and writing your Unreal Script\n\n===Linux SDK setup 1===\n\nRequires ut2004_linux_sdk\
      \ (This is an \"environment\" that I have created for making unreal scripting\
      \ easier on the linux user &ndash; the latest version has handles variables\
      \ repeatedly used in the old scripts implemented by Chris Guirl and David Redick\
      \ from [http://clemsonlinux.org/ CLUG]).\n# Install UT2004 Linux Version\n#\
      \ Unpack the latest version of ut2004_linux_sdk anywhere ( preferably somewhere\
      \ other then '''NIX_HOME''')\n# Run the setup script found in ut2004_linux_sdk\
      \ directory\n## setup symbolically links files needed to compile UT as well\
      \ as creates a file in your home directory to store values used in the scripts.\n\
      ## Usage: setup utenv     where ut_env is a directory provided in the sdk.\n\
      \nYou are now ready to compile your Unreal script code.  Note, that we only\
      \ have 1 full vesion of UT installed.  The sdk provides all necessary files\
      \ for compilation.  setup symbolically links directories found in '''NIX_HOME'''\
      \ that the compiler needs such as Textures, Sounds, etc.  Here you will put\
      \ your packages inside utenv.\n\n===Linux SDK setup 2===\n\nBasically the same\
      \ as \"Linux SDK setup 1\" except your source files can be stored in a directory\
      \ other then utenv.  Here's what you need to do.\n# Follow Linux SDK setup 1\n\
      # Create a directory somewhere for your project.  (example mkdir /home/user/UTMod)\n\
      # Create a System directory inside your project dir (example mkdir /home/user/UTMod/System)\n\
      # Use utlinkpkg to symbolically link your new project\n# Command Line\n## Usage:\
      \ utlinkpkg pkg_dir\n### where pkg_dir is the full path to your new project\
      \ directory\n\nYou can now compile your package like you would if the package\
      \ was actually in ut_env.\n\n==Compiling using Wine ==\n\nAs noted at the top\
      \ of the page, we cannot use the UCC provided in the linux version.\n\nHence,\
      \ we need to use UT's windows version.  By now you should have the necessary\
      \ tools to compile so lets push on.\n\nI am currently using cedega so the examples\
      \ listed below will be using \"cedega\" but you can replace cedega with your\
      \ version of wine (ie. winex, wine, wine_cvs, etc).\n\nTo compile the UT source\
      \ (without any of your modifications) then you can do this command\n* cedega\
      \ UCC.exe make\n\nUCC is the unreal script compiler.  Make tells the compiler\
      \ to compile your source.  \n\n''' UCC make doesn't work exactly like gnu make'''\n\
      \nWith gnu make, if you modify a source file then make knows about this and\
      \ recompiles the needed files.\n\nHowever, UCC does not do this.  It looks in\
      \ your System directory for the .u files corresponding to the packages listed\
      \ in the Game .ini file (Think of this as your make file).  If the .u is present,\
      \ then it doesn't attempt to compile it; however, when the .u file is not present\
      \ then it looks for your source and tries to compile it.  I have written scripts\
      \ to make this automatic for you,but if you do it on your own, then you need\
      \ to remember to delete the .u files that you want to recompile.\n\nTo use a\
      \ different \"make file\" you can copy and paste the default make file called\
      \ UT2004.ini located in your System directory to a new file (like UT2004_make.ini).\
      \  Here we can edit this file to only compile packages that we need.  Inside\
      \ this file there will be several lines that have EditPackages= in it.  EditPackages\
      \ tells the compiler which packages to compile.  In your new file you can remove\
      \ those packages that are not needed by your package that you want to compile\
      \ (btw, you need to add your package name like this '''EditPackages=UTMod''')\n\
      \nNow we are ready to compile with the new .ini file.\n\n* cedega UCC.exe make\
      \ -ini=UT2004_make.ini\n\nThats it, UCC now uses UT2004_make.ini for its make\
      \ file.\n\n==Scripts ==\n\nThese are provided in the SDK to make your Unreal\
      \ Scripting easier.  Feel free to use, modify, or ignore them, its up to you\
      \ :)\n\n===utmake===\n\nThis removes and compiles a package as well as moves\
      \ the package to the '''NIX_HOME'''.\n* Usage: utmake [class] [makefile]\n\n\
      Where '''class''' is the name of the package to compile and '''makefile''' (optional)\
      \ is the game .ini to use.\n\n===utfind===\n\nUseful for searching for the location\
      \ of class files in the source directory.\n* Usage: utfind [class]\n\nWhere\
      \ '''class''' is the source file you are looking for.\n\nExample: I am looking\
      \ for class xPawn because Monster.uc extends it but xPawn isn't in the same\
      \ directory as Monster.uc.  so do \n\n*utfind xPawn\n\nXEffects: xpawngibgroup.uc\n\
      \nXGame: xPawn.uc\n\nXGame: xPawnSoundGroup.uc\n\n===utedit===\n\nUseful for\
      \ looking at the ut files that you found with utfind.\n* Usage: utedit [class]\
      \ [ext]\n\nWhere '''class''' is the name of the file (without the extension)\
      \ to be looked in and '''ext''' is the extension (ie .uc, .ucl, .ini, etc).\
      \ If ext is not given, .uc is assumed.\n\n===utlinkpkg===\n\nUsed to symbolically\
      \ link project directories so that you do not have to move src code into the\
      \ utenv directory structure.\n* Usage: utlinkpkg [package]\n\nWhere '''package'''\
      \ is the path to the directory with the src code that you want linked.\n\n===utrun===\n\
      \nEver get tired of clicking through the menus just to play a mod you are working\
      \ on and you don't remember what the command line parameters are for starting\
      \ ut with your mod?\n\nWell, utrun does it for you.\n* Usage: utrun [map] [gametype]\n\
      \nWhere '''map''' is the map to start wit and '''gametype''' is the gametype\
      \ to use.\n\nYou avoid going through the menus by using this script.\n\n==Related\
      \ Topics==\n* [[Legacy:Native Coding On Linux|Native Coding On Linux]]\n\n==Comments\
      \ ==\n\n'''Foxpaw:''' Should this page possibly be renamed? \"The Linux Way\"\
      \ would be a catchy title for a magazine article, but as this is a more reference\
      \ oriented medium, I think that the title should give some indication to what\
      \ the page contains, other than just the fact that it has something to do with\
      \ Linux. \"Using UCC under Linux,\" or \"Coding under Linux\" or something like\
      \ that seems better to me. \"The Linux Way\" is also not very amiable to being\
      \ linked to.\n\n'''Conzar:''' Agreed.  My title is catchy :) but not the best\
      \ at describing this page.  So how do I change the title???\n\n'''Foxpaw:'''\
      \ Err, actually you can't. You can make a new page and copy everything there,\
      \ or we can probrably just leave these comments here and tarquin will probrably\
      \ see it and change the name.\n\n'''Conzar:''' Ok.  Well, I'm going to continue\
      \ to work on this then.\n\n'''Tarquin:''' done :) Remember to make use of other\
      \ pages in the wiki by linking to them :) (I've done a few for you)\n\n'''Conzar:'''\
      \ Thanks for the edits and renaming the page.\n\n'''Conzar:''' Note, I updated\
      \ script definitions to the lastest version.\n\n'''thelusiv:''' With the setup\
      \ script there, are the first two methods (the bloated and jumbled setups) really\
      \ necessary? They're not really the ideal way to set it up and only seem to\
      \ make this page more confusing...\n\n'''Conzar:''' Well, they are necessary\
      \ if the user does not want to use the sdk provided.  I think it also helps\
      \ those understand why the sdk is cool.  But what does everyone else think?\
      \  Should we re-order those subtopics, remove them, or leave it be?\n\n'''thelusiv:'''\
      \ Maybe there should be a page dedicated to doing it by hand using Linux, as\
      \ well as a separate page about the SDK. That would significantly reduce clutter\
      \ and keep all the information.\n\n'''strider:''' I'm tring to compile a mod\
      \ (Unreal Annihilation) using linux (I'd really rather not have to boot into\
      \ windows anymore purely because of compiling!)  I try wine ucc.exe make -mod=Annihilation2k4\
      \ but I get the following error:  fixme:process:GetProcessWorkingSetSize (0xffffffff,0x40dce6d8,0x40dce6d4):\
      \ stub.  After this, the CPU goes to 100% until I press ctrl-c, where it exits\
      \ with the error code 1.\n\nAny ideas?\n\n'''MythOpus:''' I'm definately not\
      \ the hugest Linux person (I don't use it at all, although my dad put it on\
      \ here) but isn't it unnecesary to type in ucc.exe make -mode=Annihilation2k4?\
      \  Doesn't it still look in it's directory for the ut2004.ini and compile all\
      \ packages neccesary?\n\n'''strider:''' It's a seperate mod, a total conversion.\
      \  So yeah it's necessary.  Typing ucc make -mod=annihilation2k4 works on windows,\
      \ but not linux using this setup.\n\n'''OlgaB:''' Is there any way to get UCC\
      \ support in UT1?\n\n'''Wormbo:''' Use WINE to run ucc.exe from the Windows\
      \ version."
  properties: []
  revId: 8984
name: "Legacy:Using UCC Under Linux"
revision:
  revid: 8984
  parentid: 8985
  user: "Wormbo"
  timestamp: 1156926618.000000000
  comment: "*"
timestamp: 1668764235.642303000
