---
parse:
  title: "Legacy:Stat Points System"
  text:
    text: "<p>This tutorial is for creating a stat-based system in which to modify\
      \ <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>\
      \ (Like UT2003RPG).</p>\n<p>For now we will be working with the firing rate\
      \ of the <a href=\"/Legacy:Minigun\" title=\"Legacy:Minigun\">minigun</a>. If\
      \ you have not already done so, you will have to <a href=\"/Legacy:Setting_Up_UnrealScript\"\
      \ title=\"Legacy:Setting Up UnrealScript\">obtain the Unrealscript sources</a>\
      \ for UT2003. You will also need to <a href=\"/Legacy:Set_Up_Package_Folders\"\
      \ title=\"Legacy:Set Up Package Folders\">Set Up Package Folders</a> for this\
      \ mod. Once you have done that, copy MinigunFire.uc from XWeapons to the folder\
      \ you just created for this mod.</p>\n<p><br />\nYou need to change the name\
      \ first: (so you don't overwrite anything)</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> SPSMinigunFire <span class=\"kw1\">extends</span>\
      \ InstantFire</pre></div>\n</div>\n<p>After that you should see a line that\
      \ looks something like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw4\">PostBeginPlay</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw6\">Super</span>.<span\
      \ class=\"kw4\">PostBeginPlay</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n    FireRate <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >1</span>.<span class=\"me0\">f</span> <span class=\"sy0\">/</span> <span class=\"\
      br0\">(</span>RoundsPerRotation <span class=\"sy0\">*</span> BarrelRotationsPerSec<span\
      \ class=\"br0\">)</span>;\n    MaxRollSpeed <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">65536</span>.<span class=\"me0\">f</span><span class=\"sy0\"\
      >*</span>BarrelRotationsPerSec;\n    Gun <span class=\"sy0\">=</span> Minigun<span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>In order to\
      \ use the variable we want, we will have to add it to the variable definitions\
      \ at the top of the page. The variable Definitions look like this:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \ MaxRollSpeed;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span> RollSpeed;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span> BarrelRotationsPerSec;\n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">int</span>   RoundsPerRotation;\n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \ FireTime;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">Sound</span> WindingSound;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">Sound</span> FiringSound;\n<span class=\"kw1\">var</span>\
      \ MiniGun Gun;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span> WindUpTime;\n \n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">String</span> FiringForce;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">String</span>\
      \ WindingForce;</pre></div>\n</div>\n<p>This declares the variables used. (<b>Yeah,\
      \ we probably know this – skip this step and give a link to the variable syntax\
      \ page instead</b>)</p>\n<p>We will be adding a line to it that looks like this</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \ StatPoints</pre></div>\n</div>\n<p>After that you will need to set up a system\
      \ for determining stat points. I'll cover that here: <a href=\"/edit/Legacy:Stat_Points_System/StatPointDetermination?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Stat Points System/StatPointDetermination (page\
      \ does not exist)\">Legacy:Stat Points System/StatPointDetermination</a></p>\n\
      <p>Anyway, add this line to under PostBeginPlay</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">function</span> ModeTick<span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> dt<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>StatPoints <span class=\"sy0\">&gt;</span> <span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>    \
      \    \n        NewFireRate <span class=\"sy0\">=</span> FireRate <span class=\"\
      sy0\">+</span> <span class=\"br0\">(</span>StatPoints <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">5</span><span class=\"br0\">)</span>;\n    <span class=\"\
      br0\">}</span>\n    <span class=\"kw2\">else</span> <span class=\"br0\">{</span>\n\
      \        FireRate <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>.<span\
      \ class=\"me0\">f</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RoundsPerRotation\
      \ <span class=\"sy0\">*</span> BarrelRotationsPerSec<span class=\"br0\">)</span>;\n\
      \    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The final code should look like this:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> <span class=\"kw4\">PostBeginPlay</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span\
      \ class=\"kw6\">Super</span>.<span class=\"kw4\">PostBeginPlay</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n    FireRate <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">1</span>.<span class=\"me0\">f</span> <span class=\"\
      sy0\">/</span> <span class=\"br0\">(</span>RoundsPerRotation <span class=\"\
      sy0\">*</span> BarrelRotationsPerSec<span class=\"br0\">)</span>;\n    MaxRollSpeed\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">65536</span>.<span class=\"\
      me0\">f</span><span class=\"sy0\">*</span>BarrelRotationsPerSec;\n    Gun <span\
      \ class=\"sy0\">=</span> Minigun<span class=\"br0\">(</span><span class=\"kw7\"\
      >Owner</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n\
      <span class=\"kw1\">function</span> ModeTick<span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> dt<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n          <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>StatPoints <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n          <span class=\"br0\">{</span>        \n \
      \               NewFireRate <span class=\"sy0\">=</span> FireRate <span class=\"\
      sy0\">+</span> <span class=\"br0\">(</span>StatPoints <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">5</span><span class=\"br0\">)</span>;\n          <span\
      \ class=\"kw2\">else</span>\n                FireRate <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>.<span class=\"me0\">f</span> <span class=\"sy0\"\
      >/</span> <span class=\"br0\">(</span>RoundsPerRotation <span class=\"sy0\"\
      >*</span> BarrelRotationsPerSec<span class=\"br0\">)</span>;\n          <span\
      \ class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>That should do it! I'm not completely sure on the uscript format, but here\
      \ is it in easy to understand format:</p>\n<pre>If the variable StatPoints is\
      \ greater than 0, then the firing rate is the old fire rate + the value of the\
      \ variable \nStatPoints divided by 5.  If it is not above zero, then the firing\
      \ rate is rounds per rotation * barrel rotations \nper sec, ie. normal firing\
      \ rate.\n</pre>\n<p>Hope I got this right!</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Comments\">Comments</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Stat_Points_System?section=1\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>RDGDanClark:</b> I didn't check the code itself,\
      \ I just noticed that you had&#160;!&gt;, which is invalid. The way to write\
      \ \"not greater than\" is \"less than or equal to\", which is &lt;=. For example\
      \ \"Negative two is not greater than zero\" is the same as \"Negative two is\
      \ less than (or equal to) zero\".</p>\n<p><b>Dragonmaw:</b> Thanks. I meant\
      \ it to be greater than 0, but I pressed a wrong key.</p>\n<p><b>Solid Snake:</b>\
      \ Good tutorial. I don't know what the replication will be like on the network\
      \ since adjusting those values is client side? I'll have to have a look into\
      \ that a little later. Also you may want to tell people that they will also\
      \ have to subclass a weapon and change the fireclass to this one (I'll bet you\
      \ will get a question in how to use this script...).</p>\n<p><b>Random Guest:</b>\
      \ I don't know if this will work.. You assign a value to NewFireRate, without\
      \ doing anything with it then. How? And can you please continue with <a href=\"\
      /edit/Legacy:Stat_Points_System/StatPointDetermination?redlink=1\" class=\"\
      new\" title=\"Legacy:Stat Points System/StatPointDetermination (page does not\
      \ exist)\">Legacy:Stat Points System/StatPointDetermination</a>? Thanks for\
      \ making what you have already though.</p>\n<p><b>dataangel</b>: Does this need\
      \ any netcode?</p>\n<p><b>Solid Snake:</b> Yes it does because only the minigun\
      \ will be affected by this type of change. Ideally you want a global stat system\
      \ in place so that all weapons will be affected by any changes. Lastly you want\
      \ replication because these are important values. You don't really want cheating\
      \ with a stat system like this.</p>\n<p><b>lizardman6:</b> Will these pages\
      \ of code also work with UT2004?</p>\n<p><b>DaWrecka:</b></p>\n<p>\"Once you\
      \ have done that, copy MinigunFire.uc from XWeapons to the folder you just created\
      \ for this mod.\"</p>\n<p>What? No! Bad! Very very bad! Copying entire source\
      \ files in their entirety is a very, very, VERY bad habit to get into, as not\
      \ only does it completely defeat the object of object orientation, but you will\
      \ have to re-copy and re-edit the entire thing to accomodate any bugfixes in\
      \ the base code.</p>\n<p>An infinitely better solution is to create a class\
      \ which is declared as:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> SPSMinigunFire <span class=\"kw1\">extends</span> MinigunFire;</pre></div>\n\
      </div>\n<p>This way it already incorporates all of the code contained in the\
      \ base MinigunFire. Then you merely edit functions to suit.</p>\n<p>Inheritance\
      \ is your friend, not your enemy.</p>\n<p>The only time you should ever duplicate\
      \ entire classes is when you want to have them as children of a new base class\
      \ with custom functions. (For example, you might have a WeaponFire subclass\
      \ which adds functions for selecting targets automatically and rendering of\
      \ a crosshair, among other things.)</p>\n<p>While I'm not trying to be unkind\
      \ here, I'd say if you don't have a good understanding of OOP and inheritance,\
      \ you still don't have a basic understanding of UnrealScript and shouldn't be\
      \ attempting a project like this until you do. I'd recommend reading and thoroughly\
      \ understanding the <a href=\"/Legacy:UnrealScript_Lessons\" title=\"Legacy:UnrealScript\
      \ Lessons\">UnrealScript Lessons</a>, and in particular <a href=\"/Legacy:Object_Oriented_Programming_Overview\"\
      \ title=\"Legacy:Object Oriented Programming Overview\">Object Oriented Programming\
      \ Overview</a> and <a href=\"/Legacy:Unreal_Object_Oriented_Programming\" title=\"\
      Legacy:Unreal Object Oriented Programming\">Unreal Object Oriented Programming</a>.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Stat_Points_System?section=2\" title=\"Edit section: Related\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><a href=\"/Legacy:Stat_Points_System/Ammo_Modifier\" title=\"Legacy:Stat\
      \ Points System/Ammo Modifier\">Legacy:Stat Points System/Ammo Modifier</a>:Your\
      \ next suggested step, this explains how to modify ammo capacity using a stat-based\
      \ system</p>\n<p><a href=\"/Legacy:UnrealScript_Lessons\" title=\"Legacy:UnrealScript\
      \ Lessons\">UnrealScript Lessons</a></p>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.142 seconds\nReal time usage: 0.144 seconds\nPreprocessor visited\
      \ node count: 85/1000000\nPreprocessor generated node count: 208/1000000\nPost‐\
      expand include size: 90/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2856-0!*!0!!*!*!*\
      \ and timestamp 20221118014925 and revision id 7624\n -->\n"
  categories:
  - sortkey: "Stat Points System"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Minigun"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Object Oriented Programming"
  - ns: 100
    exists: true
    name: "Legacy:Object Oriented Programming Overview"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Lessons"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Set Up Package Folders"
  - ns: 100
    exists: true
    name: "Legacy:Setting Up UnrealScript"
  - ns: 100
    exists: false
    name: "Legacy:Stat Points System/StatPointDetermination"
  - ns: 100
    exists: true
    name: "Legacy:Stat Points System/Ammo Modifier"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Stat_Points_System"
    byteoffset: 3024
    anchor: "Comments"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Stat_Points_System"
    byteoffset: 6065
    anchor: "Related_Topics"
  displaytitle: "Legacy:Stat Points System"
  iwlinks: []
  wikitext:
    text: "This tutorial is for creating a stat-based system in which to modify [[Legacy:UT2003|UT2003]]\
      \ (Like UT2003RPG).\n\nFor now we will be working with the firing rate of the\
      \ [[Legacy:Minigun|minigun]]. If you have not already done so, you will have\
      \ to  [[Legacy:Setting Up UnrealScript|obtain the Unrealscript sources]] for\
      \ UT2003. You will also need to [[Legacy:Set Up Package Folders|Set Up Package\
      \ Folders]] for this mod. Once you have done that, copy MinigunFire.uc from\
      \ XWeapons to the folder you just created for this mod.\n \n\nYou need to change\
      \ the name first: (so you don't overwrite anything)\n\n<uscript>\nclass SPSMinigunFire\
      \ extends InstantFire\n</uscript>\n\nAfter that you should see a line that looks\
      \ something like this:\n\n<uscript>\nsimulated function PostBeginPlay()\n{\n\
      \    Super.PostBeginPlay();\n    FireRate = 1.f / (RoundsPerRotation * BarrelRotationsPerSec);\n\
      \    MaxRollSpeed = 65536.f*BarrelRotationsPerSec;\n    Gun = Minigun(Owner);\n\
      }\n</uscript>\n\nIn order to use the variable we want, we will have to add it\
      \ to the variable definitions at the top of the page.  The variable Definitions\
      \ look like this:\n\n<uscript>\nvar() float MaxRollSpeed;\nvar() float RollSpeed;\n\
      var() float BarrelRotationsPerSec;\nvar() int   RoundsPerRotation;\nvar() float\
      \ FireTime;\nvar() Sound WindingSound;\nvar() Sound FiringSound;\nvar MiniGun\
      \ Gun;\nvar() float WindUpTime;\n\nvar() String FiringForce;\nvar() String WindingForce;\n\
      </uscript> \n\nThis declares the variables used. ('''Yeah, we probably know\
      \ this &ndash; skip this step and give a link to the variable syntax page instead''')\n\
      \nWe will be adding a line to it that looks like this\n\n<uscript>\nvar() float\
      \ StatPoints\n</uscript>\n\nAfter that you will need to set up a system for\
      \ determining stat points.  I'll cover that here: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/StatPointDetermination]]\n\
      \nAnyway, add this line to under PostBeginPlay\n\n<uscript>\nfunction ModeTick(float\
      \ dt)\n{\n    if (StatPoints > 0)\n    {        \n        NewFireRate = FireRate\
      \ + (StatPoints / 5);\n    }\n    else {\n        FireRate = 1.f / (RoundsPerRotation\
      \ * BarrelRotationsPerSec);\n    }\n}\n</uscript>\n\nThe final code should look\
      \ like this:\n\n<uscript>\nsimulated function PostBeginPlay()\n{\n    Super.PostBeginPlay();\n\
      \    FireRate = 1.f / (RoundsPerRotation * BarrelRotationsPerSec);\n    MaxRollSpeed\
      \ = 65536.f*BarrelRotationsPerSec;\n    Gun = Minigun(Owner);\n}\n\nfunction\
      \ ModeTick(float dt)\n{\n          if (StatPoints > 0)\n          {        \n\
      \                NewFireRate = FireRate + (StatPoints / 5);\n          else\n\
      \                FireRate = 1.f / (RoundsPerRotation * BarrelRotationsPerSec);\n\
      \          }\n}\n\n</uscript>\n\nThat should do it!  I'm not completely sure\
      \ on the uscript format, but here is it in easy to understand format:\n If the\
      \ variable StatPoints is greater than 0, then the firing rate is the old fire\
      \ rate + the value of the variable \n StatPoints divided by 5.  If it is not\
      \ above zero, then the firing rate is rounds per rotation * barrel rotations\
      \ \n per sec, ie. normal firing rate.\n\nHope I got this right!\n\n==Comments==\n\
      \n'''RDGDanClark:''' I didn't check the code itself, I just noticed that you\
      \ had !>, which is invalid. The way to write \"not greater than\" is \"less\
      \ than or equal to\", which is <=. For example \"Negative two is not greater\
      \ than zero\" is the same as \"Negative two is less than (or equal to) zero\"\
      .\n\n'''Dragonmaw:''' Thanks.  I meant it to be greater than 0, but I pressed\
      \ a wrong key.\n\n'''Solid Snake:''' Good tutorial. I don't know what the replication\
      \ will be like on the network since adjusting those values is client side? I'll\
      \ have to have a look into that a little later. Also you may want to tell people\
      \ that they will also have to subclass a weapon and change the fireclass to\
      \ this one (I'll bet you will get a question in how to use this script...).\n\
      \n'''Random Guest:''' I don't know if this will work.. You assign a value to\
      \ NewFireRate, without doing anything with it then. How? And can you please\
      \ continue with [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/StatPointDetermination]]?\
      \ Thanks for making what you have already though.\n\n'''dataangel''': Does this\
      \ need any netcode?\n\n'''Solid Snake:''' Yes it does because only the minigun\
      \ will be affected by this type of change. Ideally you want a global stat system\
      \ in place so that all weapons will be affected by any changes. Lastly you want\
      \ replication because these are important values. You don't really want cheating\
      \ with a stat system like this.\n\n'''lizardman6:''' Will these pages of code\
      \ also work with UT2004?\n\n'''DaWrecka:'''\n\n\"Once you have done that, copy\
      \ MinigunFire.uc from XWeapons to the folder you just created for this mod.\"\
      \n\nWhat? No! Bad! Very very bad! Copying entire source files in their entirety\
      \ is a very, very, VERY bad habit to get into, as not only does it completely\
      \ defeat the object of object orientation, but you will have to re-copy and\
      \ re-edit the entire thing to accomodate any bugfixes in the base code.\n\n\
      An infinitely better solution is to create a class which is declared as:\n\n\
      <uscript>\nclass SPSMinigunFire extends MinigunFire;\n</uscript>\n\nThis way\
      \ it already incorporates all of the code contained in the base MinigunFire.\
      \ Then you merely edit functions to suit.\n\nInheritance is your friend, not\
      \ your enemy.\n\nThe only time you should ever duplicate entire classes is when\
      \ you want to have them as children of a new base class with custom functions.\
      \ (For example, you might have a WeaponFire subclass which adds functions for\
      \ selecting targets automatically and rendering of a crosshair, among other\
      \ things.)\n\nWhile I'm not trying to be unkind here, I'd say if you don't have\
      \ a good understanding of OOP and inheritance, you still don't have a basic\
      \ understanding of UnrealScript and shouldn't be attempting a project like this\
      \ until you do. I'd recommend reading and thoroughly understanding the [[Legacy:UnrealScript\
      \ Lessons|UnrealScript Lessons]], and in particular [[Legacy:Object Oriented\
      \ Programming Overview| Object Oriented Programming Overview]] and [[Legacy:Unreal\
      \ Object Oriented Programming|Unreal Object Oriented Programming]].\n\n==Related\
      \ Topics==\n\n[[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Ammo Modifier]]:Your next\
      \ suggested step, this explains how to modify ammo capacity using a stat-based\
      \ system\n\n[[Legacy:UnrealScript Lessons|UnrealScript Lessons]]\n[[Category:Legacy\
      \ Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 7624
name: "Legacy:Stat Points System"
revision:
  revid: 7624
  parentid: 7625
  user: "Sweavo"
  timestamp: 1195498444.000000000
  comment: "*"
timestamp: 1668764372.462233000
