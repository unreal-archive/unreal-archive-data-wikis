---
parse:
  title: "Legacy:Rising Water (UT)"
  text:
    text: "<p>Trigger rising and falling water that fills a hole in the ground water.\
      \ Boxes will float in the water, players and pawns can swim and drown in the\
      \ water.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Prerequisite:\"><span class=\"tocnumber\">1</span> <span class=\"\
      toctext\">Prerequisite:</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"\
      ><a href=\"#Summary\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Summary</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#The_Tutorial\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">The Tutorial</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#The_TriggerWaterZone\"\
      ><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">The TriggerWaterZone</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-5\"><a href=\"#The_rest\"><span class=\"tocnumber\"\
      >3.2</span> <span class=\"toctext\">The rest</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#Important_notes\"><span class=\"tocnumber\">3.3</span>\
      \ <span class=\"toctext\">Important notes</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-7\"><a href=\"#Credit\"><span class=\"tocnumber\">3.4</span> <span\
      \ class=\"toctext\">Credit</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-8\"><a href=\"#Comments\"><span class=\"tocnumber\">4</span> <span\
      \ class=\"toctext\">Comments</span></a></li>\n</ul>\n</div>\n<p></p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Prerequisite:\">Prerequisite:</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=1\"\
      \ title=\"Edit section: Prerequisite:\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<ul>\n<li>Understanding <a href=\"/edit/Legacy:Liquid_Basics?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Liquid Basics (page does not exist)\">Liquid\
      \ Basics</a></li>\n<li>Understanding basics of liquid <a href=\"/Legacy:Zone\"\
      \ title=\"Legacy:Zone\">zones</a></li>\n<li>Download the <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://www.levels4you.com/cdc/ut/tutorials/\"\
      >\"Rising water Tutorial\"</a></li>\n</ul>\n<h2><span class=\"mw-headline\"\
      \ id=\"Summary\">Summary</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=2\"\
      \ title=\"Edit section: Summary\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ol>\n<li>Divide the part of your level you want to be\
      \ flooded/drained into several Zones using Zone Portals and place a TriggerWaterZone\
      \ in each part.\n<ul>\n<li>Set bWaterZone to False if you want the TriggerWaterZone\
      \ to be dry at the beginning</li>\n<li>Set bWaterZone to True if you want that\
      \ part to be filled with water at the start.</li>\n</ul>\n</li>\n</ol>\n<ol>\n\
      <li>Make a water <a href=\"/Legacy:Sheet\" title=\"Legacy:Sheet\">sheet</a>\
      \ with the texture Unlit and Transparent and turn it into a <a href=\"/Legacy:Mover\"\
      \ title=\"Legacy:Mover\">Mover</a> either with Polygons -&gt; To Brush or with\
      \ Intersecting a larger building brush). See <a href=\"/Legacy:Create_A_Mover\"\
      \ title=\"Legacy:Create A Mover\">Create A Mover</a> for more.</li>\n</ol>\n\
      <ol>\n<li>Set up a Dispatcher, which will activate the water Mover and all the\
      \ TriggerWaterZones (one by one).</li>\n</ol>\n<ol>\n<li>Set up a trigger (button)\
      \ that activates the Dispatcher.</li>\n</ol>\n<ol>\n<li>Add sounds.</li>\n</ol>\n\
      <h2><span class=\"mw-headline\" id=\"The_Tutorial\">The Tutorial</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Rising_Water_(UT)?section=3\" title=\"Edit section: The\
      \ Tutorial\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li>One Button (Tag is irrelevant, Event = Dispatcher)</li>\n<li>One <a\
      \ href=\"/Legacy:Dispatcher\" title=\"Legacy:Dispatcher\">Dispatcher</a> (Tag\
      \ = Dispatcher, there are several Events)</li>\n<li>One Watersheet converted\
      \ into a <a href=\"/Legacy:Mover\" title=\"Legacy:Mover\">Mover</a> (Tag = Water,\
      \ Event = None)</li>\n<li>Several TriggerWaterZone infos (Tags = Level1 to Level\
      \ 5, Events = None)</li>\n</ul>\n<p>When you open the example map in UnrealED\
      \ 2.0, you can see the Button (the purple box), the Watersheet (the purple sheet),\
      \ the Dispatcher, several ZoneInfo's, a Light and the all mighty Playerstart.\
      \ You can also see that the Button and the Dispatcher are connected with a red\
      \ line.</p>\n<p>When you select the Zone/Portal view in your 3D View, you can\
      \ see that the hole in the ground is divided into 6 Zones. In the lowest zone\
      \ there is a normal WaterZone, the other 5 Zones are TriggerWaterZones.</p>\n\
      <p>So, what really happens when we push the button?</p>\n<p>Obviously, the Dispatcher\
      \ is activated (remember the red line that indicates that the Button and the\
      \ Dispatcher are connected?), so open up the Properties of the Dispatcher. Under\
      \ Dispatcher there are the OutDelays and the OutEvents.</p>\n<p>In the OutEvents\
      \ are all the events that happen when the Dispatcher is triggered, in the OutDelays\
      \ are the time-delays (in seconds) that occur before an event is triggered.</p>\n\
      <p>So, looking at the first Event (that's the event next right of [0]) we see\
      \ \"Water\". \"Water\" is the Tag of the Watersheet. Looking at the first delay,\
      \ we see that the delay is 0 seconds (meaning that the Watersheet will move\
      \ (rise) immediately after the Dispatcher is triggered).</p>\n<p>The other events\
      \ are Level1 to Level5, with each a delay of 1 second.</p>\n<p>Level1 to Level5\
      \ are the Tags of the TriggerWaterZones.</p>\n<p>So if the Dispatcher is activated,\
      \ the Watersheet will move, and the TriggerWaterZones will be activated, one\
      \ by one.</p>\n<p>Since the Button can only be activated ONCE, there is no turning\
      \ back; the water will stay.</p>\n<p><br /></p>\n<h4><span class=\"mw-headline\"\
      \ id=\"The_TriggerWaterZone\">The TriggerWaterZone</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=4\"\
      \ title=\"Edit section: The TriggerWaterZone\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p><i>\"Wait a second, we don't have any TriggerWaterZone\
      \ Info's in UnrealED!\"</i></p>\n<p>You are right, you don't have them right\
      \ now – but you will soon. So get ready for some scripting!!! See <a href=\"\
      /Legacy:Create_A_Subclass\" title=\"Legacy:Create A Subclass\">Create A Subclass</a>\
      \ for quick instructions on how to put the followign script into your map.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//===========================================================================</span>\n\
      <span class=\"co1\">// TriggerWaterZone.</span>\n<span class=\"co1\">// This\
      \ class allows you to change a zone from a Regular Zone to a Water Zone</span>\n\
      <span class=\"co1\">// using the normal trigger method.</span>\n<span class=\"\
      co1\">// Created by Scott 'Slasher IV' Kircher</span>\n<span class=\"co1\">//============================================================================</span>\n\
      \ \n<span class=\"kw1\">class</span> TriggerWaterZone <span class=\"kw1\">expands</span>\
      \ WaterZone;\n \n<span class=\"kw1\">function</span> <span class=\"kw4\">PostBeginPlay</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"kw6\">Super</span>.<span class=\"kw4\">PostBeginPlay</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>bWaterZone<span\
      \ class=\"br0\">)</span>\n <span class=\"br0\">{</span>\n  ViewFlash<span class=\"\
      sy0\">=</span><span class=\"kw3\">vect</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n  ViewFog<span class=\"sy0\">=</span><span class=\"\
      kw3\">vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>;\n\
      \ <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n<span class=\"\
      kw1\">function</span> <span class=\"kw4\">Trigger</span><span class=\"br0\"\
      >(</span> <span class=\"kw9\">actor</span> Other, <span class=\"kw9\">pawn</span>\
      \ EventInstigator <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"kw1\">local</span> <span class=\"kw9\">Actor</span> A;\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw9\">Pawn</span> P;\n <span class=\"\
      kw1\">local</span> Decoration D;\n <span class=\"kw1\">local</span> TriggerWaterZone\
      \ oldself;\n oldself<span class=\"sy0\">=</span><span class=\"kw6\">self</span>;\n\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span>bWaterZone<span class=\"\
      br0\">)</span>\n <span class=\"br0\">{</span>\n  bWaterZone<span class=\"sy0\"\
      >=</span><span class=\"kw6\">false</span>;\n  ViewFlash<span class=\"sy0\">=</span><span\
      \ class=\"kw3\">vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>;\n\
      \  ViewFog<span class=\"sy0\">=</span><span class=\"kw3\">vect</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>;\n  <span class=\"kw2\"\
      >ForEach</span> <span class=\"kw2\">AllActors</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span> <span class=\"st0\">'Actor'</span>, A<span class=\"\
      br0\">)</span>\n   <span class=\"kw2\">if</span><span class=\"br0\">(</span>A.<span\
      \ class=\"me0\">Region</span>.<span class=\"me0\">Zone</span><span class=\"\
      sy0\">==</span>oldself<span class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n\
      \    ActorEntered<span class=\"br0\">(</span>A<span class=\"br0\">)</span>;\n\
      \    A.<span class=\"kw4\">ZoneChange</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n    <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>A.<span class=\"me0\">Buoyancy</span><span\
      \ class=\"sy0\">&gt;</span><span class=\"nu0\">0.0</span><span class=\"br0\"\
      >)</span>\n    <span class=\"br0\">{</span>\n     A.<span class=\"kw4\">SetPhysics</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">PHYS_Falling</span><span class=\"\
      br0\">)</span>;\n    <span class=\"br0\">}</span>\n   <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">ForEach</span> <span class=\"kw2\">AllActors</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span> <span class=\"st0\"\
      >'Pawn'</span>, P<span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n\
      \   <span class=\"kw2\">if</span><span class=\"br0\">(</span>P.<span class=\"\
      me0\">HeadRegion</span>.<span class=\"me0\">Zone</span><span class=\"sy0\">==</span>oldself<span\
      \ class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n    P.<span class=\"\
      me0\">HeadZoneChange</span><span class=\"br0\">(</span><span class=\"kw6\">self</span><span\
      \ class=\"br0\">)</span>;\n    P.<span class=\"me0\">PainTime</span><span class=\"\
      sy0\">=-</span><span class=\"nu0\">1.0</span>;\n   <span class=\"br0\">}</span>\n\
      \   <span class=\"kw2\">if</span><span class=\"br0\">(</span>P.<span class=\"\
      me0\">FootRegion</span>.<span class=\"me0\">Zone</span><span class=\"sy0\">==</span>oldself<span\
      \ class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n    P.<span class=\"\
      me0\">FootZoneChange</span><span class=\"br0\">(</span><span class=\"kw6\">self</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"br0\">}</span>\n  <span class=\"\
      br0\">}</span>\n <span class=\"br0\">}</span>\n <span class=\"kw2\">else</span>\n\
      \ <span class=\"br0\">{</span> \n  bWaterZone<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">true</span>;\n  ViewFlash<span class=\"sy0\">=</span><span class=\"\
      kw1\">Default</span>.<span class=\"me0\">ViewFlash</span>;\n  ViewFog<span class=\"\
      sy0\">=</span><span class=\"kw1\">Default</span>.<span class=\"me0\">ViewFog</span>;\n\
      \  <span class=\"kw2\">ForEach</span> <span class=\"kw2\">AllActors</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span> <span class=\"st0\"\
      >'Actor'</span>, A<span class=\"br0\">)</span>\n   <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>A.<span class=\"me0\">Region</span>.<span class=\"me0\"\
      >Zone</span><span class=\"sy0\">==</span>oldself<span class=\"br0\">)</span>\n\
      \   <span class=\"br0\">{</span>\n    ActorEntered<span class=\"br0\">(</span>A<span\
      \ class=\"br0\">)</span>;\n    A.<span class=\"kw4\">ZoneChange</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"kw2\">if</span><span class=\"br0\">(</span>A.<span class=\"\
      me0\">Buoyancy</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0.0</span><span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n     A.<span class=\"\
      kw7\">Velocity</span>.<span class=\"me0\">Z</span><span class=\"sy0\">+=</span><span\
      \ class=\"nu0\">1</span>;\n     A.<span class=\"kw4\">SetPhysics</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">PHYS_Falling</span><span class=\"\
      br0\">)</span>;\n    <span class=\"br0\">}</span>\n   <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">ForEach</span> <span class=\"kw2\">AllActors</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span> <span class=\"st0\"\
      >'Decoration'</span>, D<span class=\"br0\">)</span>\n   <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>D.<span class=\"me0\">Region</span>.<span\
      \ class=\"me0\">Zone</span><span class=\"sy0\">==</span>oldself<span class=\"\
      br0\">)</span>\n   <span class=\"br0\">{</span>\n    D.<span class=\"me0\">bBobbing</span><span\
      \ class=\"sy0\">=</span><span class=\"kw6\">False</span>;\n    D.<span class=\"\
      kw4\">Bump</span><span class=\"br0\">(</span><span class=\"kw6\">self</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"br0\">}</span>\n  <span class=\"\
      kw2\">ForEach</span> <span class=\"kw2\">AllActors</span><span class=\"br0\"\
      >(</span><span class=\"kw1\">class</span> <span class=\"st0\">'Pawn'</span>,\
      \ P<span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n   <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>P.<span class=\"me0\">HeadRegion</span>.<span\
      \ class=\"me0\">Zone</span><span class=\"sy0\">==</span>oldself<span class=\"\
      br0\">)</span>\n   <span class=\"br0\">{</span>\n    P.<span class=\"me0\">HeadZoneChange</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n\
      \    P.<span class=\"me0\">PainTime</span><span class=\"sy0\">=</span>P.<span\
      \ class=\"me0\">UnderWaterTime</span>;\n    P.<span class=\"kw4\">SetPhysics</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">PHYS_Swimming</span><span class=\"\
      br0\">)</span>;\n   <span class=\"br0\">}</span>\n   <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>P.<span class=\"me0\">FootRegion</span>.<span class=\"\
      me0\">Zone</span><span class=\"sy0\">==</span>oldself<span class=\"br0\">)</span>\n\
      \   <span class=\"br0\">{</span>\n    P.<span class=\"me0\">FootZoneChange</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n\
      \   <span class=\"br0\">}</span>   \n  <span class=\"br0\">}</span>\n <span\
      \ class=\"br0\">}</span>  \n \n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <ul>\n<li>see <a href=\"/edit/Legacy:Rising_Water_(UT)/Comments?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Rising Water (UT)/Comments (page does not exist)\"\
      >Legacy:Rising Water (UT)/Comments</a></li>\n</ul>\n<p>If you have read the\
      \ comments of Scott, you may have noticed how the TriggerWaterZone works.</p>\n\
      <p>The TriggerWaterZone can be triggered from a normal Zone into a WaterZone\
      \ and back. When the Dispatcher triggers the Levelx events it activates the\
      \ TriggerWaterZones, turning those zone into a WaterZone.</p>\n<h4><span class=\"\
      mw-headline\" id=\"The_rest\">The rest</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=5\"\
      \ title=\"Edit section: The rest\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>I have divided the part where the water will rise\
      \ in 5 parts (using Zone Portals) and put one TriggerWaterZone in each part.</p>\n\
      <p>I gave the TriggerWaterZones different Tags (Level1 to Level5) AND under\
      \ ZoneInfo in the Properties of the TriggerWaterZone I turned the bWaterZone\
      \ to False, because I wanted the level to start 'dry'.</p>\n<p>(If you want\
      \ to have a part of your level that is flooded at first and can be drained with\
      \ a button, leave the bWaterZone to True)</p>\n<p>(If you want to make a level\
      \ where you can drain/flood the same part over and over again, take a close\
      \ look the triggers in the example map from Wolf.)</p>\n<p>I placed a Dispatcher,\
      \ which activates the Mover (the Watersheet) and the TriggerZones (one by one).</p>\n\
      <p>I made a Button, which activates the Dispatcher.</p>\n<p>(The Button can\
      \ only be triggered once, so that the Dispatcher can not be activated again.)</p>\n\
      <p>You can add sounds to the rising water (just like if it was an elevator or\
      \ door) to make it more realistic.</p>\n<h4><span class=\"mw-headline\" id=\"\
      Important_notes\">Important notes</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=6\"\
      \ title=\"Edit section: Important notes\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>Your Mover may NOT be at the exact same level as the\
      \ zones. Always make sure that your Mover is 1 unit ABOVE or 1 unit BELOW the\
      \ zones (Your Keyframes of course, the Mover will move harmlessly through the\
      \ zones). If you don't do this, your mover will disappear.</p>\n<h3><span class=\"\
      mw-headline\" id=\"Credit\">Credit</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Rising_Water_(UT)?section=7\"\
      \ title=\"Edit section: Credit\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<ul>\n<li>Wolf for his WZTriggerExample map</li>\n<li>Scott\
      \ 'Slasher IV' Kircher for his script</li>\n<li>Icelord for assembling this\
      \ WIKI page</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Comments\">Comments</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Rising_Water_(UT)?section=8\" title=\"Edit section: Comments\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>ArcaneSpeech:</b>\
      \ There is another kludge useful for creating rising/falling water: Make the\
      \ area a mover, and move it down into (or up out of) the water zone. I think\
      \ this was done for the rising water on AS-(Destroy the Computers).</p>\n<p><b>Tarquin:</b>\
      \ Is there a UT2003 version of this page? Will there be?</p>\n<p><b>Buu:</b>\
      \ AS-OceanFloor's rising water isn't actually water. I opened the map in the\
      \ editor, and somewhere in the map there was a miniature base with just a sheet\
      \ that's moving, without a waterzone. So the endgame screen isn't the same base\
      \ as the assault base, and the water isn't water.</p>\n<hr />\n<p><a href=\"\
      /Category:Legacy_Mapping\" title=\"Category:Legacy Mapping\">Category:Legacy\
      \ Mapping</a><br />\n<a href=\"/Category:Legacy_Custom_Class_(UT)\" title=\"\
      Category:Legacy Custom Class (UT)\">Category:Legacy Custom Class (UT)</a><br\
      \ />\n<a href=\"/Category:Legacy_Tutorial\" title=\"Category:Legacy Tutorial\"\
      >Category:Legacy Tutorial</a><br />\n<a href=\"/Category:Legacy_To_Do\" title=\"\
      Category:Legacy To Do\">Category:Legacy To Do</a> – needs some formatting</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.057 seconds\nReal time usage:\
      \ 0.059 seconds\nPreprocessor visited node count: 53/1000000\nPreprocessor generated\
      \ node count: 110/1000000\nPost‐expand include size: 91/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2628-0!*!0!!en!*!* and timestamp 20221117201222 and revision\
      \ id 6267\n -->\n"
  categories:
  - sortkey: "Rising Water (UT)"
    name: "Legacy_Custom_Class_(UT)"
  - sortkey: "Rising Water (UT)"
    name: "Legacy_Mapping"
  - sortkey: "Rising Water (UT)"
    name: "Legacy_To_Do"
  - sortkey: "Rising Water (UT)"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: false
    name: "Legacy:Liquid Basics"
  - ns: 100
    exists: true
    name: "Legacy:Create A Mover"
  - ns: 100
    exists: true
    name: "Legacy:Dispatcher"
  - ns: 100
    exists: true
    name: "Legacy:Create A Subclass"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: false
    name: "Legacy:Rising Water (UT)/Comments"
  - ns: 14
    exists: true
    name: "Category:Legacy Custom Class (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Sheet"
  - ns: 100
    exists: true
    name: "Legacy:Zone"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 14
    exists: true
    name: "Category:Legacy Mapping"
  - ns: 14
    exists: true
    name: "Category:Legacy Tutorial"
  templates: []
  images: []
  externallinks:
  - "http://www.levels4you.com/cdc/ut/tutorials/"
  sections:
  - toclevel: 1
    level: "3"
    line: "Prerequisite:"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 156
    anchor: "Prerequisite:"
  - toclevel: 1
    level: "2"
    line: "Summary"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 373
    anchor: "Summary"
  - toclevel: 1
    level: "2"
    line: "The Tutorial"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 1139
    anchor: "The_Tutorial"
  - toclevel: 2
    level: "4"
    line: "The TriggerWaterZone"
    number: "3.1"
    index: "4"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 3044
    anchor: "The_TriggerWaterZone"
  - toclevel: 2
    level: "4"
    line: "The rest"
    number: "3.2"
    index: "5"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 5598
    anchor: "The_rest"
  - toclevel: 2
    level: "4"
    line: "Important notes"
    number: "3.3"
    index: "6"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 6586
    anchor: "Important_notes"
  - toclevel: 2
    level: "3"
    line: "Credit"
    number: "3.4"
    index: "7"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 6876
    anchor: "Credit"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "4"
    index: "8"
    fromtitle: "Legacy:Rising_Water_(UT)"
    byteoffset: 7011
    anchor: "Comments"
  displaytitle: "Legacy:Rising Water (UT)"
  iwlinks: []
  wikitext:
    text: "Trigger rising and falling water that fills a hole in the ground water.\
      \  Boxes will float in the water, players and pawns can swim and drown in the\
      \ water.\n\n===Prerequisite:===\n* Understanding [[Legacy:Liquid Basics|Liquid\
      \ Basics]]\n* Understanding basics of liquid [[Legacy:Zone|zone]]s\n* Download\
      \ the [http://www.levels4you.com/cdc/ut/tutorials/ \"Rising water Tutorial\"\
      ] \n\n==Summary==\n\n# Divide the part of your level you want to be flooded/drained\
      \ into several Zones using Zone Portals and place a TriggerWaterZone in each\
      \ part.\n#* Set bWaterZone to False if you want the TriggerWaterZone to be dry\
      \ at the beginning\n#* Set bWaterZone to True if you want that part to be filled\
      \ with water at the start.\n\n# Make a water [[Legacy:Sheet|sheet]] with the\
      \ texture Unlit and Transparent and turn it into a [[Legacy:Mover|Mover]] either\
      \ with Polygons -> To Brush or with Intersecting a larger building brush). \
      \ See [[Legacy:Create A Mover|Create A Mover]] for more.\n\n# Set up a Dispatcher,\
      \ which will activate the water Mover and all the TriggerWaterZones (one by\
      \ one).\n\n# Set up a trigger (button) that activates the Dispatcher.\n\n# Add\
      \ sounds.\n\n==The Tutorial==\n\n*One Button       (Tag is irrelevant, Event\
      \ = Dispatcher) \n*One [[Legacy:Dispatcher|Dispatcher]]      (Tag = Dispatcher,\
      \ there are several Events) \n*One Watersheet converted into a [[Legacy:Mover|Mover]]\
      \ (Tag = Water, Event = None) \n*Several TriggerWaterZone infos   (Tags = Level1\
      \ to Level 5, Events = None) \n\nWhen you open the example map in UnrealED 2.0,\
      \ you can see the Button (the purple box), the Watersheet (the purple sheet),\
      \ the Dispatcher, several ZoneInfo's, a Light and the all mighty Playerstart.\
      \ You can also see that the Button and the Dispatcher are connected with a red\
      \ line.\n\nWhen you select the Zone/Portal view in your 3D View, you can see\
      \ that the hole in the ground is divided into 6 Zones. In the lowest zone there\
      \ is a normal WaterZone, the other 5 Zones are TriggerWaterZones.\n\nSo, what\
      \ really happens when we push the button?\n\nObviously, the Dispatcher is activated\
      \ (remember the red line that indicates that the Button and the Dispatcher are\
      \ connected?), so open up the Properties of the Dispatcher. Under Dispatcher\
      \ there are the OutDelays and the OutEvents.\n\nIn the OutEvents are all the\
      \ events that happen when the Dispatcher is triggered, in the OutDelays are\
      \ the time-delays (in seconds) that occur before an event is triggered.\n\n\
      So, looking at the first Event (that's the event next right of [0]) we see \"\
      Water\". \"Water\" is the Tag of the Watersheet. Looking at the first delay,\
      \ we see that the delay is 0 seconds (meaning that the Watersheet will move\
      \ (rise) immediately after the Dispatcher is triggered).\n\nThe other events\
      \ are Level1 to Level5, with each a delay of 1 second.\n\nLevel1 to Level5 are\
      \ the Tags of the TriggerWaterZones. \n\nSo if the Dispatcher is activated,\
      \ the Watersheet will move, and the TriggerWaterZones will be activated, one\
      \ by one.\n\nSince the Button can only be activated ONCE, there is no turning\
      \ back; the water will stay.\n \n \n\n====The TriggerWaterZone====\n\n''\"Wait\
      \ a second, we don't have any TriggerWaterZone Info's in UnrealED!\"''\n\nYou\
      \ are right, you don't have them right now &ndash; but you will soon. So get\
      \ ready for some scripting!!! See [[Legacy:Create A Subclass|Create A Subclass]]\
      \ for quick instructions on how to put the followign script into your map.\n\
      \n<uscript>\n//===========================================================================\n\
      // TriggerWaterZone.\n// This class allows you to change a zone from a Regular\
      \ Zone to a Water Zone\n// using the normal trigger method.\n// Created by Scott\
      \ 'Slasher IV' Kircher\n//============================================================================\n\
      \nclass TriggerWaterZone expands WaterZone;\n\nfunction PostBeginPlay()\n{\n\
      \ Super.PostBeginPlay();\n if(!bWaterZone)\n {\n  ViewFlash=vect(0,0,0);\n \
      \ ViewFog=vect(0,0,0);\n }\n}\nfunction Trigger( actor Other, pawn EventInstigator\
      \ )\n{\n local Actor A;\n local Pawn P;\n local Decoration D;\n local TriggerWaterZone\
      \ oldself;\n oldself=self;\n if(bWaterZone)\n {\n  bWaterZone=false;\n  ViewFlash=vect(0,0,0);\n\
      \  ViewFog=vect(0,0,0);\n  ForEach AllActors(class 'Actor', A)\n   if(A.Region.Zone==oldself)\n\
      \   {\n    ActorEntered(A);\n    A.ZoneChange(self);\n    if(A.Buoyancy>0.0)\n\
      \    {\n     A.SetPhysics(PHYS_Falling);\n    }\n   }\n  ForEach AllActors(class\
      \ 'Pawn', P)\n  {\n   if(P.HeadRegion.Zone==oldself)\n   {\n    P.HeadZoneChange(self);\n\
      \    P.PainTime=-1.0;\n   }\n   if(P.FootRegion.Zone==oldself)\n   {\n    P.FootZoneChange(self);\n\
      \   }\n  }\n }\n else\n { \n  bWaterZone=true;\n  ViewFlash=Default.ViewFlash;\n\
      \  ViewFog=Default.ViewFog;\n  ForEach AllActors(class 'Actor', A)\n   if(A.Region.Zone==oldself)\n\
      \   {\n    ActorEntered(A);\n    A.ZoneChange(self);\n    if(A.Buoyancy>0.0)\n\
      \    {\n     A.Velocity.Z+=1;\n     A.SetPhysics(PHYS_Falling);\n    }\n   }\n\
      \  ForEach AllActors(class 'Decoration', D)\n   if(D.Region.Zone==oldself)\n\
      \   {\n    D.bBobbing=False;\n    D.Bump(self);\n   }\n  ForEach AllActors(class\
      \ 'Pawn', P)\n  {\n   if(P.HeadRegion.Zone==oldself)\n   {\n    P.HeadZoneChange(self);\n\
      \    P.PainTime=P.UnderWaterTime;\n    P.SetPhysics(PHYS_Swimming);\n   }\n\
      \   if(P.FootRegion.Zone==oldself)\n   {\n    P.FootZoneChange(self);\n   }\
      \   \n  }\n }  \n\n} \n</uscript>\n\n* see [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Comments]]\n\
      \nIf you have read the comments of Scott, you may have noticed how the TriggerWaterZone\
      \ works.\n\nThe TriggerWaterZone can be triggered from a normal Zone into a\
      \ WaterZone and back.  When the Dispatcher triggers the Levelx events it activates\
      \ the TriggerWaterZones, turning those zone into a WaterZone.\n\n====The rest\
      \ ====\n\nI have divided the part where the water will rise in 5 parts (using\
      \ Zone Portals) and put one TriggerWaterZone in each part. \n\nI gave the TriggerWaterZones\
      \ different Tags (Level1 to Level5) AND under ZoneInfo in the Properties of\
      \ the TriggerWaterZone I turned the bWaterZone to False, because I wanted the\
      \ level to start 'dry'. \n\n(If you want to have a part of your level that is\
      \ flooded at first and can be drained with a button, leave the bWaterZone to\
      \ True)\n\n(If you want to make a level where you can drain/flood the same part\
      \ over and over again, take a close look the triggers in the example map from\
      \ Wolf.)\n\nI placed a Dispatcher, which activates the Mover (the Watersheet)\
      \ and the TriggerZones (one by one).\n\nI made a Button, which activates the\
      \ Dispatcher.\n\n(The Button can only be triggered once, so that the Dispatcher\
      \ can not be activated again.)\n\nYou can add sounds to the rising water (just\
      \ like if it was an elevator or door) to make it more realistic.\n\n====Important\
      \ notes ====\n\nYour Mover may NOT be at the exact same level as the zones.\
      \ Always make sure that your Mover is 1 unit ABOVE or 1 unit BELOW the zones\
      \ (Your Keyframes of course, the Mover will move harmlessly through the zones).\
      \ If you don't do this, your mover will disappear. \n\n===Credit ===\n* Wolf\
      \ for his WZTriggerExample map\n* Scott 'Slasher IV' Kircher for his script\n\
      * Icelord for assembling this WIKI page\n\n==Comments==\n\n'''ArcaneSpeech:'''\
      \ There is another kludge useful for creating rising/falling water: Make the\
      \ area a mover, and move it down into (or up out of) the water zone. I think\
      \ this was done for the rising water on AS-(Destroy the Computers).\n\n'''Tarquin:'''\
      \ Is there a UT2003 version of this page? Will there be?\n\n'''Buu:''' AS-OceanFloor's\
      \ rising water isn't actually water. I opened the map in the editor, and somewhere\
      \ in the map there was a miniature base with just a sheet that's moving, without\
      \ a waterzone. So the endgame screen isn't the same base as the assault base,\
      \ and the water isn't water.\n\n----\n\n[[:Category:Legacy Mapping]] <br />[[:Category:Legacy\
      \ Custom Class (UT)]] <br />[[:Category:Legacy Tutorial]] <br />[[:Category:Legacy\
      \ To Do]] &ndash; needs some formatting\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy Custom Class (UT)|{{PAGENAME}}]]\n[[Category:Legacy Tutorial|{{PAGENAME}}]]\n\
      [[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 6267
name: "Legacy:Rising Water (UT)"
revision:
  revid: 6267
  parentid: 6268
  user: "Sweavo"
  timestamp: 1195497410.000000000
  comment: "*"
timestamp: 1668761594.776212000
