---
parse:
  title: "Legacy:Setting Up Subversion"
  text:
    text: "<p>This document is intended to walk you through a basic <a href=\"/Legacy:Subversion\"\
      \ title=\"Legacy:Subversion\">Subversion</a> setup for use in developing Unreal-related\
      \ projects. If you follow these instructions, in no time you will have a Subversion\
      \ repository set up to track changes you make to all of your project-related\
      \ files. If you will be working with other developers on the same project, you\
      \ may also want to proceed to <a href=\"/Legacy:Setting_Up_A_Subversion_Server\"\
      \ title=\"Legacy:Setting Up A Subversion Server\">Setting up a Subversion Server</a>\
      \ after reading this page, to see how to make your new repository accessible\
      \ to other people as well.</p>\n<p>This document assumes you will be developing\
      \ for an Unreal Tournament style of game such as <a href=\"/Legacy:UT2004\"\
      \ title=\"Legacy:UT2004\" class=\"mw-redirect\">UT2004</a> and that you will\
      \ be setting up your repository under Windows XP/2000/2003/etc. Many of the\
      \ directions here will also apply to other cases, but you may need to do some\
      \ tweaking.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Download_the_Software\"><span class=\"tocnumber\">1</span> <span class=\"\
      toctext\">Download the Software</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"\
      ><a href=\"#Subversion\"><span class=\"tocnumber\">1.1</span> <span class=\"\
      toctext\">Subversion</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#TortoiseSVN\"><span class=\"tocnumber\">1.2</span> <span class=\"\
      toctext\">TortoiseSVN</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-4\"><a href=\"#Install_the_Software\"><span class=\"tocnumber\"\
      >2</span> <span class=\"toctext\">Install the Software</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-5\"><a href=\"#Create_a_Repository_Directory\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Create a Repository\
      \ Directory</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"\
      #Create_a_First_Repository\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Create a First Repository</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-7\"><a href=\"#Set_up_Your_Working_Directory\"><span class=\"tocnumber\"\
      >5</span> <span class=\"toctext\">Set up Your Working Directory</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-8\"><a href=\"#Basics_of_Using_Subversion\"\
      ><span class=\"tocnumber\">6</span> <span class=\"toctext\">Basics of Using\
      \ Subversion</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"><a href=\"\
      #Setting_up_a_Subversion_Server\"><span class=\"tocnumber\">7</span> <span class=\"\
      toctext\">Setting up a Subversion Server</span></a></li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\"Download_the_Software\">Download the Software</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Setting_Up_Subversion?section=1\" title=\"Edit section:\
      \ Download the Software\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>The first step is to download the tools you'll need:</p>\n<h3><span class=\"\
      mw-headline\" id=\"Subversion\">Subversion</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Setting_Up_Subversion?section=2\"\
      \ title=\"Edit section: Subversion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>This can be obtained from the Subversion web site\
      \ (<a rel=\"nofollow\" class=\"external free\" href=\"http://subversion.tigris.org/\"\
      >http://subversion.tigris.org/</a>). A Windows installer is available under\
      \ <a rel=\"nofollow\" class=\"external free\" href=\"http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91\"\
      >http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91</a> (look\
      \ for the latest EXE file).</p>\n<h3><span class=\"mw-headline\" id=\"TortoiseSVN\"\
      >TortoiseSVN</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Setting_Up_Subversion?section=3\" title=\"Edit\
      \ section: TortoiseSVN\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>While not strictly necessary (Subversion can be used as-is from the command\
      \ line) you may also want to download the TortoiseSVN graphical client for Subversion,\
      \ which allows Subversion to integrate nicely with the Windows file manager.\
      \ This program can be obtained from the TortoiseSVN web site (<a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://tortoisesvn.tigris.org\">http://tortoisesvn.tigris.org</a>).</p>\n\
      <p>The instructions here assume you will be using TortoiseSVN in addition to\
      \ the basic Subversion package.</p>\n<h2><span class=\"mw-headline\" id=\"Install_the_Software\"\
      >Install the Software</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Setting_Up_Subversion?section=4\" title=\"Edit\
      \ section: Install the Software\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>If you downloaded one of the Windows installer files\
      \ for Subversion, installing it should be a simple matter of double-clicking\
      \ the installer and following the prompts. Likewise, the TortoiseSVN installer\
      \ is pretty much the same deal.</p>\n<p><b>Note:</b> You will need to reboot\
      \ your computer after installing TortoiseSVN.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Create_a_Repository_Directory\">Create a Repository Directory</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Setting_Up_Subversion?section=5\" title=\"Edit section:\
      \ Create a Repository Directory\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>First, you will need to create a folder to be used\
      \ to hold all of your Subversion repositories. For the purposes of this example,\
      \ we'll place our repositories under <tt>C:\\Subversion</tt> (you may want to\
      \ place this on a drive with a fair amount of spare disk space).</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Create_a_First_Repository\">Create a First Repository</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Setting_Up_Subversion?section=6\" title=\"Edit section:\
      \ Create a First Repository\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Now you will want at least one repository to store\
      \ things in (that is the point of Subversion, after all). You can create as\
      \ many repositories as you want under the main repository directory, but for\
      \ now we'll start with one:</p>\n<ol>\n<li>Open the directory you created for\
      \ repositories (<tt>C:\\Subversion</tt>) in a Windows file browser window.</li>\n\
      <li>Create a new folder in this directory with the name you would like to give\
      \ to your new repository (<tt>UT_work</tt>).</li>\n<li>Once the new folder is\
      \ created, right-click on it. The pop-up window which appears should contain\
      \ a \"TortoiseSVN\" option. Under this menu item should be several choices,\
      \ including \"Create Repository here...\"</li>\n<li>Choose \"TortoiseSVN-&gt;Create\
      \ Repository here...\" from the menu. This will bring up a dialog box asking\
      \ what type of repository to create.</li>\n<li>Choose \"Native Filesystem (FSFS)\"\
      \ (you can really choose either one, but the Native Filesystem form is potentially\
      \ faster, and in some cases easier to work with. Note: Do <i>not</i> use a Berkeley\
      \ DB repository if it will be located on a network drive. Bad Things(tm) will\
      \ happen.).</li>\n</ol>\n<p>The new folder we just created is now a Subversion\
      \ repository folder.</p>\n<p>Next, we will create a \"trunk\" directory in our\
      \ new repository (this isn't strictly required, but it is conventional to do\
      \ things this way, and makes things a lot easier later when you get into sophisticated\
      \ aspects of Subversion like branching). Subversion repositories aren't like\
      \ normal directories, however, so we can't just create a directory using the\
      \ file manager. Instead, we will need to use TortoiseSVN's \"Repository Browser\"\
      :</p>\n<ol>\n<li>Right click on a file or folder anywhere in your system (doesn't\
      \ matter where).</li>\n<li>From the pop-up menu, select \"TortoiseSVN-&gt;Repo-Browser\"\
      .</li>\n</ol>\n<p>A dialog box will pop up asking you for the URL of the repository\
      \ to use. Type the following:</p>\n<pre> file:///C:/Subversion/UT_work\n</pre>\n\
      <p>(This is the URL of our new repository, which is how we'll need to refer\
      \ to it with most Subversion commands. Note that it uses forward-slashes (/),\
      \ not backslashes (\\))</p>\n<ol>\n<li>You should now see a \"Repository Browser\"\
      \ window, with an expanded tree of folders (<tt>file:///C:</tt>, <tt>Subversion</tt>,\
      \ and <tt>UT_work</tt>). Right click on the <tt>UT_work</tt> entry.</li>\n<li>From\
      \ the pop-up menu, select \"Create Folder...\", and when it asks for the name,\
      \ type <tt>trunk</tt></li>\n<li>It will then ask you for a log message. This\
      \ is where you describe why you're doing this for future reference. Since we're\
      \ just doing initial setup here, put in something like \"Intitial Setup\" and\
      \ click \"OK\".</li>\n</ol>\n<p>If you now expand the <tt>UT_work</tt> entry,\
      \ you should see a <tt>trunk</tt> folder underneath it. That's enough for a\
      \ basic setup of our repository, time to move on to actually using it.</p>\n\
      <blockquote class=\"legacyquote\">\n<p>Alternately, you can use the Subversion\
      \ command-line tools to create a new repository using the following commands:\
      \ svnadmin create C:\\Subversion\\UT_work –fs-type fsfs svn mkdir file:///C:/Subversion/UT_work/trunk</p>\n\
      <p>(Don't create the <tt>UT_work</tt> directory first, the <tt>svnadmin create</tt>\
      \ command will do it for you)</p>\n<p><br /></p>\n</blockquote>\n<h2><span class=\"\
      mw-headline\" id=\"Set_up_Your_Working_Directory\">Set up Your Working Directory</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Setting_Up_Subversion?section=7\" title=\"Edit section:\
      \ Set up Your Working Directory\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>At this stage in the process, most Subversion documentation\
      \ tells you that you should use the Subversion \"import\" command to import\
      \ a current snapshot of your project tree into the repository. For most projects,\
      \ this makes sense, because each project has its own separate set of directories\
      \ with only its files. For Unreal development, however, the situation is a bit\
      \ different because the files being worked on are usually scattered around several\
      \ directories which contain a bunch of other files. If we're working on a map,\
      \ for example, we don't want to import our whole <tt>Maps</tt> directory into\
      \ the repository, because that would include tons of stock files that really\
      \ aren't part of the project we're working on (and don't need to be tracked),\
      \ making the repository huge and difficult to work with.</p>\n<p>For this reason,\
      \ we're going to diverge a bit here from the normal procedure for setting up\
      \ Subversion repositories. The first thing we will do instead is just associate\
      \ our working directories with the (empty) repository we just created, by doing\
      \ a \"checkout\".</p>\n<ol>\n<li>Go into a file browser window and locate the\
      \ main Unreal folder you'll be developing things under, which we want to be\
      \ at the top level of our project (for example, <tt>C:\\UT2004</tt>).</li>\n\
      <li>Right-click on this folder and from the pop-up menu, select \"Checkout...\"\
      </li>\n</ol>\n<p>The \"Checkout\" dialog box will ask for the URL of the repository\
      \ to use. Type the following and press \"OK\":</p>\n<pre> file:///C:/Subversion/UT_work/trunk\n\
      </pre>\n<p><br /></p>\n<p>(this is the URL which refers to the \"trunk\" portion\
      \ of the \"UT_work\" repository we set up in the previous step)</p>\n<p>Once\
      \ the checkout has completed, press F5 (refresh) in your file browser and you\
      \ should see that the folder now shows up with a little green check-mark next\
      \ to it. This indicates that the folder is associated with a Subversion repository,\
      \ and that it is up to date (Note: sometimes the check mark doesn't show up\
      \ in the tree view of the explorer).</p>\n<p>The next step is to actually populate\
      \ our repository with the files that are part of our project:</p>\n<ol>\n<li>Again,\
      \ right-click on the working directory folder (<tt>C:\\UT2004</tt>)</li>\n<li>You\
      \ will see a new option in the pop-up menu named \"Commit...\". Choose this\
      \ option.</li>\n<li>An \"Enter Log Message\" dialog box will appear. This is\
      \ where you write a brief description of what the change is that you're applying\
      \ to the repository. Enter something like \"Initial Import\" in the text box\
      \ at the top (If you've already been doing a lot of work on this project before\
      \ setting up the repository, it would probably also be a good idea to write\
      \ a few notes about what the current state of things is at the moment so if\
      \ you go back some time later and want to know what the state of development\
      \ was at this point, you can look at the Subversion comments for this revision\
      \ and get some idea.)</li>\n<li>In the bottom part of the \"Enter Log Message\"\
      \ window, you will see a listing of all of the files under this directory (and\
      \ all of its subdirectories), with checkboxes next to them (this display can\
      \ take a while to display while TortoiseSVN goes through all the directories\
      \ to see what's there, so be patient). This is where you specify what files\
      \ you want to check in to Subversion. Find the files that are part of your project\
      \ and check their checkboxes.</li>\n<li>When you've selected all of the right\
      \ files, press the \"OK\" button. TortoiseSVN will show a \"SVN Commit\" dialog\
      \ box with the status of the operation. Once it's completed, press \"OK\".</li>\n\
      </ol>\n<p>Congratulations! Your project files are now in a Subversion repository!</p>\n\
      <h2><span class=\"mw-headline\" id=\"Basics_of_Using_Subversion\">Basics of\
      \ Using Subversion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Setting_Up_Subversion?section=8\" title=\"Edit\
      \ section: Basics of Using Subversion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>There are many documents available out there which\
      \ are quite good at explaining how to use Subversion and TortoiseSVN (including\
      \ the help files that come with both programs, which are available under your\
      \ Start Programs menu), so we won't go into a lot of detail here, but here's\
      \ the basic procedure of how things should work most of the time:</p>\n<ul>\n\
      <li>Work on your files the same way you always do.</li>\n<li>Periodically, commit\
      \ things back to the Subversion repository by right-clicking on your work directory\
      \ and using the \"Commit...\" option.</li>\n<li>If other people are working\
      \ on files in the same repository, you will periodically need to update your\
      \ versions to match what other people have committed to the repository. To do\
      \ this, right-click on the work directory and choose \"Update\".</li>\n<li>Note\
      \ that if you rename files, Subversion won't automatically know what you've\
      \ done, and will just see that the files aren't there under the name it expects,\
      \ and will assume they've been deleted (and mark them as such in the repository).\
      \ If you want to rename a file, make sure you do the following instead:\n<ol>\n\
      <li>Right-click on the file, and select the \"TortoiseSVN\" submenu.</li>\n\
      <li>Choose the \"Rename\" option.</li>\n</ol>\n</li>\n</ul>\n<h2><span class=\"\
      mw-headline\" id=\"Setting_up_a_Subversion_Server\">Setting up a Subversion\
      \ Server</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Setting_Up_Subversion?section=9\" title=\"Edit\
      \ section: Setting up a Subversion Server\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>If all you want to do is keep backups and a change\
      \ history for your own work, and you're the only one who's going to need to\
      \ access your repository, then you can just stop here and use things as we've\
      \ set them up so far.</p>\n<p>If, however, you are going to want other people\
      \ to be able to access the repository you've just created (and thus take advantage\
      \ of some of the most powerful features of Subversion), you will want to proceed\
      \ to <a href=\"/Legacy:Setting_Up_A_Subversion_Server\" title=\"Legacy:Setting\
      \ Up A Subversion Server\">Setting up a Subversion Server</a>.</p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.051 seconds\nReal time usage: 0.143 seconds\n\
      Preprocessor visited node count: 47/1000000\nPreprocessor generated node count:\
      \ 101/1000000\nPost‐expand include size: 795/2097152 bytes\nTemplate argument\
      \ size: 339/2097152 bytes\nHighest expansion depth: 3/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%   10.672      1 - -total\n100.00%   10.672      1 - Template:Innerbox\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2953-0!*!0!!en!*!*\
      \ and timestamp 20221120162546 and revision id 33900\n -->\n"
  categories:
  - sortkey: "Setting Up Subversion"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Setting Up A Subversion Server"
  - ns: 100
    exists: true
    name: "Legacy:Subversion"
  - ns: 100
    exists: true
    name: "Legacy:UT2004"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://tortoisesvn.tigris.org"
  - "http://subversion.tigris.org/"
  - "http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91"
  sections:
  - toclevel: 1
    level: "2"
    line: "Download the Software"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 865
    anchor: "Download_the_Software"
  - toclevel: 2
    level: "3"
    line: "Subversion"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 946
    anchor: "Subversion"
  - toclevel: 2
    level: "3"
    line: "TortoiseSVN"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 1190
    anchor: "TortoiseSVN"
  - toclevel: 1
    level: "2"
    line: "Install the Software"
    number: "2"
    index: "4"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 1644
    anchor: "Install_the_Software"
  - toclevel: 1
    level: "2"
    line: "Create a Repository Directory"
    number: "3"
    index: "5"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 1988
    anchor: "Create_a_Repository_Directory"
  - toclevel: 1
    level: "2"
    line: "Create a First Repository"
    number: "4"
    index: "6"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 2293
    anchor: "Create_a_First_Repository"
  - toclevel: 1
    level: "2"
    line: "Set up Your Working Directory"
    number: "5"
    index: "7"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 5430
    anchor: "Set_up_Your_Working_Directory"
  - toclevel: 1
    level: "2"
    line: "Basics of Using Subversion"
    number: "6"
    index: "8"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 9013
    anchor: "Basics_of_Using_Subversion"
  - toclevel: 1
    level: "2"
    line: "Setting up a Subversion Server"
    number: "7"
    index: "9"
    fromtitle: "Legacy:Setting_Up_Subversion"
    byteoffset: 10230
    anchor: "Setting_up_a_Subversion_Server"
  displaytitle: "Legacy:Setting Up Subversion"
  iwlinks: []
  wikitext:
    text: "This document is intended to walk you through a basic [[Legacy:Subversion|Subversion]]\
      \ setup for use in developing Unreal-related projects.  If you follow these\
      \ instructions, in no time you will have a Subversion repository set up to track\
      \ changes you make to all of your project-related files.  If you will be working\
      \ with other developers on the same project, you may also want to proceed to\
      \ [[Legacy:Setting Up A Subversion Server|Setting up a Subversion Server]] after\
      \ reading this page, to see how to make your new repository accessible to other\
      \ people as well.\n\nThis document assumes you will be developing for an Unreal\
      \ Tournament style of game such as [[Legacy:UT2004|UT2004]] and that you will\
      \ be setting up your repository under Windows XP/2000/2003/etc.  Many of the\
      \ directions here will also apply to other cases, but you may need to do some\
      \ tweaking.\n\n==Download the Software==\n\nThe first step is to download the\
      \ tools you'll need:\n\n===Subversion===\n\nThis can be obtained from the Subversion\
      \ web site (http://subversion.tigris.org/).  A Windows installer is available\
      \ under http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91\
      \ (look for the latest EXE file).\n\n===TortoiseSVN===\n\nWhile not strictly\
      \ necessary (Subversion can be used as-is from the command line) you may also\
      \ want to download the TortoiseSVN graphical client for Subversion, which allows\
      \ Subversion to integrate nicely with the Windows file manager.  This program\
      \ can be obtained from the TortoiseSVN web site (http://tortoisesvn.tigris.org).\n\
      \nThe instructions here assume you will be using TortoiseSVN in addition to\
      \ the basic Subversion package.\n\n==Install the Software==\n\nIf you downloaded\
      \ one of the Windows installer files for Subversion, installing it should be\
      \ a simple matter of double-clicking the installer and following the prompts.\
      \  Likewise, the TortoiseSVN installer is pretty much the same deal.\n\n'''Note:'''\
      \ You will need to reboot your computer after installing TortoiseSVN.\n\n==Create\
      \ a Repository Directory==\n\nFirst, you will need to create a folder to be\
      \ used to hold all of your Subversion repositories.  For the purposes of this\
      \ example, we'll place our repositories under <tt>C:\\Subversion</tt> (you may\
      \ want to place this on a drive with a fair amount of spare disk space).\n\n\
      ==Create a First Repository==\n\nNow you will want at least one repository to\
      \ store things in (that is the point of Subversion, after all).  You can create\
      \ as many repositories as you want under the main repository directory, but\
      \ for now we'll start with one:\n\n# Open the directory you created for repositories\
      \ (<tt>C:\\Subversion</tt>) in a Windows file browser window.\n# Create a new\
      \ folder in this directory with the name you would like to give to your new\
      \ repository (<tt>UT_work</tt>).\n# Once the new folder is created, right-click\
      \ on it.  The pop-up window which appears should contain a \"TortoiseSVN\" option.\
      \  Under this menu item should be several choices, including \"Create Repository\
      \ here...\"\n# Choose \"TortoiseSVN->Create Repository here...\" from the menu.\
      \  This will bring up a dialog box asking what type of repository to create.\n\
      # Choose \"Native Filesystem (FSFS)\" (you can really choose either one, but\
      \ the Native Filesystem form is potentially faster, and in some cases easier\
      \ to work with.  Note: Do ''not'' use a Berkeley DB repository if it will be\
      \ located on a network drive.  Bad Things(tm) will happen.).\n\nThe new folder\
      \ we just created is now a Subversion repository folder.\n\nNext, we will create\
      \ a \"trunk\" directory in our new repository (this isn't strictly required,\
      \ but it is conventional to do things this way, and makes things a lot easier\
      \ later when you get into sophisticated aspects of Subversion like branching).\
      \  Subversion repositories aren't like normal directories, however, so we can't\
      \ just create a directory using the file manager.  Instead, we will need to\
      \ use TortoiseSVN's \"Repository Browser\":\n\n# Right click on a file or folder\
      \ anywhere in your system (doesn't matter where).\n# From the pop-up menu, select\
      \ \"TortoiseSVN->Repo-Browser\".\n# \nA dialog box will pop up asking you for\
      \ the URL of the repository to use.  Type the following:\n  file:///C:/Subversion/UT_work\n\
      \n(This is the URL of our new repository, which is how we'll need to refer to\
      \ it with most Subversion commands.  Note that it uses forward-slashes (/),\
      \ not backslashes (\\))\n\n# You should now see a \"Repository Browser\" window,\
      \ with an expanded tree of folders (<tt>file:///C:</tt>, <tt>Subversion</tt>,\
      \ and <tt>UT_work</tt>).  Right click on the <tt>UT_work</tt> entry.\n# From\
      \ the pop-up menu, select \"Create Folder...\", and when it asks for the name,\
      \ type <tt>trunk</tt>\n# It will then ask you for a log message.  This is where\
      \ you describe why you're doing this for future reference.  Since we're just\
      \ doing initial setup here, put in something like \"Intitial Setup\" and click\
      \ \"OK\".\n\nIf you now expand the <tt>UT_work</tt> entry, you should see a\
      \ <tt>trunk</tt> folder underneath it.  That's enough for a basic setup of our\
      \ repository, time to move on to actually using it.\n\n{{innerbox| \nAlternately,\
      \ you can use the Subversion command-line tools to create a new repository using\
      \ the following commands:\n  svnadmin create C:\\Subversion\\UT_work &ndash;fs-type\
      \ fsfs\n  svn mkdir file:///C:/Subversion/UT_work/trunk\n\n(Don't create the\
      \ <tt>UT_work</tt> directory first, the <tt>svnadmin create</tt> command will\
      \ do it for you)\n\n\n\n}}\n\n==Set up Your Working Directory==\n\nAt this stage\
      \ in the process, most Subversion documentation tells you that you should use\
      \ the Subversion \"import\" command to import a current snapshot of your project\
      \ tree into the repository.  For most projects, this makes sense, because each\
      \ project has its own separate set of directories with only its files.  For\
      \ Unreal development, however, the situation is a bit different because the\
      \ files being worked on are usually scattered around several directories which\
      \ contain a bunch of other files.  If we're working on a map, for example, we\
      \ don't want to import our whole <tt>Maps</tt> directory into the repository,\
      \ because that would include tons of stock files that really aren't part of\
      \ the project we're working on (and don't need to be tracked), making the repository\
      \ huge and difficult to work with.\n\nFor this reason, we're going to diverge\
      \ a bit here from the normal procedure for setting up Subversion repositories.\
      \  The first thing we will do instead is just associate our working directories\
      \ with the (empty) repository we just created, by doing a \"checkout\".\n\n\
      # Go into a file browser window and locate the main Unreal folder you'll be\
      \ developing things under, which we want to be at the top level of our project\
      \ (for example, <tt>C:\\UT2004</tt>).\n# Right-click on this folder and from\
      \ the pop-up menu, select \"Checkout...\"\n# \nThe \"Checkout\" dialog box will\
      \ ask for the URL of the repository to use.  Type the following and press \"\
      OK\":\n  file:///C:/Subversion/UT_work/trunk\n\n\n\n(this is the URL which refers\
      \ to the \"trunk\" portion of the \"UT_work\" repository we set up in the previous\
      \ step)\n\nOnce the checkout has completed, press F5 (refresh) in your file\
      \ browser and you should see that the folder now shows up with a little green\
      \ check-mark next to it.  This indicates that the folder is associated with\
      \ a Subversion repository, and that it is up to date (Note: sometimes the check\
      \ mark doesn't show up in the tree view of the explorer).\n\nThe next step is\
      \ to actually populate our repository with the files that are part of our project:\n\
      \n# Again, right-click on the working directory folder (<tt>C:\\UT2004</tt>)\n\
      # You will see a new option in the pop-up menu named \"Commit...\".  Choose\
      \ this option.\n# An \"Enter Log Message\" dialog box will appear.  This is\
      \ where you write a brief description of what the change is that you're applying\
      \ to the repository.  Enter something like \"Initial Import\" in the text box\
      \ at the top (If you've already been doing a lot of work on this project before\
      \ setting up the repository, it would probably also be a good idea to write\
      \ a few notes about what the current state of things is at the moment so if\
      \ you go back some time later and want to know what the state of development\
      \ was at this point, you can look at the Subversion comments for this revision\
      \ and get some idea.)\n# In the bottom part of the \"Enter Log Message\" window,\
      \ you will see a listing of all of the files under this directory (and all of\
      \ its subdirectories), with checkboxes next to them (this display can take a\
      \ while to display while TortoiseSVN goes through all the directories to see\
      \ what's there, so be patient).  This is where you specify what files you want\
      \ to check in to Subversion.  Find the files that are part of your project and\
      \ check their checkboxes.\n# When you've selected all of the right files, press\
      \ the \"OK\" button.  TortoiseSVN will show a \"SVN Commit\" dialog box with\
      \ the status of the operation.  Once it's completed, press \"OK\".\n\nCongratulations!\
      \  Your project files are now in a Subversion repository!\n\n==Basics of Using\
      \ Subversion==\n\nThere are many documents available out there which are quite\
      \ good at explaining how to use Subversion and TortoiseSVN (including the help\
      \ files that come with both programs, which are available under your Start Programs\
      \ menu), so we won't go into a lot of detail here, but here's the basic procedure\
      \ of how things should work most of the time:\n\n* Work on your files the same\
      \ way you always do.\n* Periodically, commit things back to the Subversion repository\
      \ by right-clicking on your work directory and using the \"Commit...\" option.\n\
      * If other people are working on files in the same repository, you will periodically\
      \ need to update your versions to match what other people have committed to\
      \ the repository.  To do this, right-click on the work directory and choose\
      \ \"Update\".\n* Note that if you rename files, Subversion won't automatically\
      \ know what you've done, and will just see that the files aren't there under\
      \ the name it expects, and will assume they've been deleted (and mark them as\
      \ such in the repository).  If you want to rename a file, make sure you do the\
      \ following instead:\n*# Right-click on the file, and select the \"TortoiseSVN\"\
      \ submenu.\n*# Choose the \"Rename\" option.\n\n==Setting up a Subversion Server==\n\
      \nIf all you want to do is keep backups and a change history for your own work,\
      \ and you're the only one who's going to need to access your repository, then\
      \ you can just stop here and use things as we've set them up so far.\n\nIf,\
      \ however, you are going to want other people to be able to access the repository\
      \ you've just created (and thus take advantage of some of the most powerful\
      \ features of Subversion), you will want to proceed to [[Legacy:Setting Up A\
      \ Subversion Server|Setting up a Subversion Server]].\n\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 33900
name: "Legacy:Setting Up Subversion"
revision:
  revid: 33900
  parentid: 33891
  user: "Solarsys"
  timestamp: 1231486017.000000000
  comment: ""
timestamp: 1668975799.352148000
