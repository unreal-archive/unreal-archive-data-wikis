---
parse:
  title: "Legacy:Nomad/WUtils"
  text:
    text: "<p><a href=\"/Legacy:El_Muerte_TDS/WUtils\" title=\"Legacy:El Muerte TDS/WUtils\"\
      \ class=\"mw-redirect\">What is wUtils?</a></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"wString\">wString</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Nomad/WUtils?section=1\"\
      \ title=\"Edit section: wString\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"InStrPlus.28.29\"\
      >InStrPlus()</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Nomad/WUtils?section=2\" title=\"Edit section:\
      \ InStrPlus()\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span class=\"\
      kw5\">int</span> InStrPlus<span class=\"br0\">(</span> <span class=\"kw1\">coerce</span>\
      \ <span class=\"kw5\">string</span> HayStack, <span class=\"kw1\">coerce</span>\
      \ <span class=\"kw5\">string</span> Needle, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">int</span> Start <span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n     <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \ i;\n \n     <span class=\"kw2\">for</span> <span class=\"br0\">(</span> i\
      \ <span class=\"sy0\">=</span> Start; i <span class=\"sy0\">&lt;</span> <span\
      \ class=\"kw3\">Len</span><span class=\"br0\">(</span> HayStack <span class=\"\
      br0\">)</span>; i<span class=\"sy0\">++</span> <span class=\"br0\">)</span>\n\
      \          <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span\
      \ class=\"kw3\">Mid</span><span class=\"br0\">(</span> HayStack, i, <span class=\"\
      nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> Needle\
      \ <span class=\"br0\">)</span>\n               <span class=\"kw2\">break</span>;\n\
      \ \n     <span class=\"kw2\">return</span> i;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p><b>Mychaeel:</b> I'm afraid this is a very slow and inefficient way\
      \ to implement this function; besides, it'll only search for single-character\
      \ \"Needle\"s. Better do something like InStrFrom on <a href=\"/Legacy:UT2003/Suggestions\"\
      \ title=\"Legacy:UT2003/Suggestions\">UT2003/Suggestions</a>.</p>\n<p><i><b>nomad</b></i>:\
      \ Your version is a lot better, this is something I used in Deus Ex ages ago.</p>\n\
      <h3><span class=\"mw-headline\" id=\"ReplaceOption.28.29\">ReplaceOption()</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Nomad/WUtils?section=3\" title=\"Edit section: ReplaceOption()\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p><i><b>nomad</b></i>:\
      \ Not sure wheather or not this should be added to wUtils. It allows you to\
      \ quickly change a value in the Options string used in Login and PostLogin.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">bool</span> ReplaceOption<span\
      \ class=\"br0\">(</span> <span class=\"kw1\">out</span> <span class=\"kw5\"\
      >string</span> Options, <span class=\"kw5\">string</span> Key, <span class=\"\
      kw5\">string</span> NewValue, <span class=\"kw1\">optional</span> <span class=\"\
      kw1\">out</span> <span class=\"kw5\">string</span> OldValue, <span class=\"\
      kw1\">optional</span> <span class=\"kw5\">bool</span> bAddIfMissing <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n     <span class=\"kw1\">local</span>\
      \ array<span class=\"sy0\">&lt;</span>string<span class=\"sy0\">&gt;</span>\
      \ Options<span class=\"re1\">Array</span>&lt; SEMI &gt;\n     <span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> i;\n     <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">string</span>   CurrentKey, CurrentValue;\n\
      \     <span class=\"kw1\">local</span> <span class=\"kw5\">bool</span>     bReplaced;\n\
      \     bReplaced <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\
      \ \n     <span class=\"co1\">// Need to strip the first ? from Options otherwise\
      \ Split doesn't work</span>\n     <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"kw3\">Left</span><span class=\"br0\">(</span> Options,\
      \ <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"st0\">\"?\"</span> <span class=\"br0\">)</span>\n \
      \         Options <span class=\"sy0\">=</span> <span class=\"kw3\">Right</span><span\
      \ class=\"br0\">(</span> Options, <span class=\"kw3\">Len</span><span class=\"\
      br0\">(</span> Options <span class=\"br0\">)</span> <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span> <span class=\"br0\">)</span>;\n \n     <span\
      \ class=\"kw3\">Split</span><span class=\"br0\">(</span> Options, <span class=\"\
      st0\">\"?\"</span>, OptionsArray <span class=\"br0\">)</span>;\n \n     <span\
      \ class=\"kw2\">for</span> <span class=\"br0\">(</span> i <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> OptionsArray.<span\
      \ class=\"me0\">Length</span>; i<span class=\"sy0\">++</span> <span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n          <span class=\"kw3\">Divide</span><span\
      \ class=\"br0\">(</span> OptionsArray<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>, <span class=\"st0\">\"=\"</span>, CurrentKey, CurrentValue <span\
      \ class=\"br0\">)</span>;\n \n          <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> CurrentKey ~<span class=\"sy0\">=</span> Key <span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n               OldValue\
      \ <span class=\"sy0\">=</span> CurrentValue;\n               OptionsArray<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ CurrentKey<span class=\"sy0\">$</span><span class=\"st0\">\"=\"</span><span\
      \ class=\"sy0\">$</span>NewValue;\n               bReplaced <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">true</span>;\n               <span class=\"kw3\"\
      >log</span><span class=\"br0\">(</span> <span class=\"st0\">\"ReplaceOption()\
      \ :: Replaced [\"</span><span class=\"sy0\">$</span>CurrentKey<span class=\"\
      sy0\">$</span><span class=\"st0\">\"] Old = \"</span><span class=\"sy0\">$</span>OldValue<span\
      \ class=\"sy0\">$</span><span class=\"st0\">\", new = \"</span><span class=\"\
      sy0\">$</span>NewValue, <span class=\"st0\">'wUtils'</span> <span class=\"br0\"\
      >)</span>;\n          <span class=\"br0\">}</span>\n     <span class=\"br0\"\
      >}</span>\n \n     <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ <span class=\"sy0\">!</span>bReplaced <span class=\"sy0\">&amp;&amp;</span>\
      \ bAddIfMissing <span class=\"br0\">)</span>\n          OptionsArray<span class=\"\
      br0\">[</span>OptionsArray.<span class=\"me0\">Length</span><span class=\"br0\"\
      >]</span> <span class=\"sy0\">=</span> Key<span class=\"sy0\">$</span><span\
      \ class=\"st0\">\"=\"</span><span class=\"sy0\">$</span>NewValue;\n \n     Options\
      \ <span class=\"sy0\">=</span> <span class=\"st0\">\"?\"</span><span class=\"\
      sy0\">$</span>Join<span class=\"br0\">(</span> OptionsArray, <span class=\"\
      st0\">\"?\"</span>, Options <span class=\"br0\">)</span>;\n     <span class=\"\
      kw2\">return</span> bReplaced;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.069 seconds\nReal time usage:\
      \ 0.289 seconds\nPreprocessor visited node count: 23/1000000\nPreprocessor generated\
      \ node count: 56/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2281-0!*!0!!*!*!* and timestamp 20221118071846 and revision\
      \ id 5514\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:El Muerte TDS/WUtils"
  - ns: 100
    exists: true
    name: "Legacy:UT2003/Suggestions"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "wString"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Nomad/WUtils"
    byteoffset: 49
    anchor: "wString"
  - toclevel: 2
    level: "3"
    line: "InStrPlus()"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Nomad/WUtils"
    byteoffset: 63
    anchor: "InStrPlus.28.29"
  - toclevel: 2
    level: "3"
    line: "ReplaceOption()"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Nomad/WUtils"
    byteoffset: 704
    anchor: "ReplaceOption.28.29"
  displaytitle: "Legacy:Nomad/WUtils"
  iwlinks: []
  wikitext:
    text: "[[Legacy:El Muerte TDS/WUtils|What is wUtils?]]\n\n==wString ==\n\n===InStrPlus()\
      \ ===\n\n<uscript>static final function int InStrPlus( coerce string HayStack,\
      \ coerce string Needle, optional int Start )\n{\n     local int i;\n\n     for\
      \ ( i = Start; i < Len( HayStack ); i++ )\n          if ( Mid( HayStack, i,\
      \ 1 ) == Needle )\n               break;\n\n     return i;\n}</uscript>\n\n\
      '''Mychaeel:''' I'm afraid this is a very slow and inefficient way to implement\
      \ this function; besides, it'll only search for single-character \"Needle\"\
      s.  Better do something like InStrFrom on [[Legacy:UT2003/Suggestions|UT2003/Suggestions]].\n\
      \n'''''nomad''''': Your version is a lot better, this is something I used in\
      \ Deus Ex ages ago.\n\n===ReplaceOption() ===\n\n'''''nomad''''': Not sure wheather\
      \ or not this should be added to wUtils. It allows you to quickly change a value\
      \ in the Options string used in Login and PostLogin.\n\n<uscript>static function\
      \ bool ReplaceOption( out string Options, string Key, string NewValue, optional\
      \ out string OldValue, optional bool bAddIfMissing )\n{\n     local array<string>\
      \ OptionsArray;\n     local int i;\n     local string   CurrentKey, CurrentValue;\n\
      \     local bool     bReplaced;\n     bReplaced = false;\n\n     // Need to\
      \ strip the first ? from Options otherwise Split doesn't work\n     if ( Left(\
      \ Options, 1 ) == \"?\" )\n          Options = Right( Options, Len( Options\
      \ ) - 1 );\n\n     Split( Options, \"?\", OptionsArray );\n\n     for ( i =\
      \ 0; i < OptionsArray.Length; i++ ) {\n          Divide( OptionsArray[i], \"\
      =\", CurrentKey, CurrentValue );\n\n          if ( CurrentKey ~= Key ) {\n \
      \              OldValue = CurrentValue;\n               OptionsArray[i] = CurrentKey$\"\
      =\"$NewValue;\n               bReplaced = true;\n               log( \"ReplaceOption()\
      \ :: Replaced [\"$CurrentKey$\"] Old = \"$OldValue$\", new = \"$NewValue, 'wUtils'\
      \ );\n          }\n     }\n\n     if ( !bReplaced && bAddIfMissing )\n     \
      \     OptionsArray[OptionsArray.Length] = Key$\"=\"$NewValue;\n\n     Options\
      \ = \"?\"$Join( OptionsArray, \"?\", Options );\n     return bReplaced;\n}</uscript>"
  properties: []
  revId: 5514
name: "Legacy:Nomad/WUtils"
revision:
  revid: 5514
  parentid: 5516
  user: "Nomad"
  timestamp: 1037891005.000000000
  comment: "*"
timestamp: 1668772868.389255000
