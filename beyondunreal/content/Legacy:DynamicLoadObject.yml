---
parse:
  title: "Legacy:DynamicLoadObject"
  text:
    text: "<p>DynamicLoadObject is a native function declared in <a href=\"/Legacy:Object\"\
      \ title=\"Legacy:Object\">Object</a>. It loads an object of a specified <a href=\"\
      /Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\">class</a>. Which\
      \ object of that class is specified as a string. The string is the name of the\
      \ thing that you want to load. If that thing does not exist in memory, it will\
      \ be loaded from the appropriate <a href=\"/Legacy:Package\" title=\"Legacy:Package\"\
      >package</a> file.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"\
      toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"\
      ><a href=\"#Usage\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Usage</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Syntax\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">Syntax</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Examples\"><span class=\"tocnumber\"\
      >3</span> <span class=\"toctext\">Examples</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-4\"><a href=\"#Related_Topics\"><span class=\"tocnumber\">4</span>\
      \ <span class=\"toctext\">Related Topics</span></a></li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\"Usage\">Usage</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:DynamicLoadObject?section=1\"\
      \ title=\"Edit section: Usage\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>DynamicLoadObject is used almost exclusively to load\
      \ a resource based on a name supplied as a string. For example, xPlayers.int\
      \ (<a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\"\
      >UT2003</a>) contains a list of players, each of which has a model, skin, etc.\
      \ The model name, skin name, and so forth are read in as strings. Then, DynamicLoadObject\
      \ is used to get Mesh and Material references based on those strings. The reason\
      \ why they are stored like this is it allows a class to use things that did\
      \ not exist at compile time, (such as 3rd party models) or classes that exist\
      \ at compile time, but are not visible from the class compiling time because\
      \ the class it refers to is compiled after this class.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Syntax\">Syntax</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:DynamicLoadObject?section=2\"\
      \ title=\"Edit section: Syntax\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">native</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw8\">object</span> <span\
      \ class=\"kw3\">DynamicLoadObject</span><span class=\"br0\">(</span> \n <span\
      \ class=\"kw5\">string</span> ObjectName, \n <span class=\"kw1\">class</span>\
      \ ObjectClass, \n <span class=\"kw1\">optional</span> <span class=\"kw5\">bool</span>\
      \ MayFail <span class=\"br0\">)</span>;</pre></div>\n</div>\n<p>ObjectName is\
      \ the name of the object. For instance, \"Engine.DefaultTexture\" or \"xInterface.ExtendedConsole\"\
      .</p>\n<p>ObjectClass is the class of the thing that you are loading. So, for\
      \ \"Engine.DefaultTexture\" the ObjectClass would be class'Engine.Material'\
      \ or class'Engine.Texture'. For \"xInterface.ExtendedConsole\" it would be class'Class'.\
      \ (A class is itself a class... called class.) If MayFail is false or is omitted,\
      \ and the object cannot be loaded, a warning will be printed to the <a href=\"\
      /Legacy:Log_File\" title=\"Legacy:Log File\">log file</a>. If MayFail is true,\
      \ no warning will be printed if the object cannot be loaded.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Examples\">Examples</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:DynamicLoadObject?section=3\"\
      \ title=\"Edit section: Examples\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">local</span> class<span class=\"sy0\">&lt;</span>Actor<span class=\"sy0\"\
      >&gt;</span> a<span class=\"re0\">Class</span>&lt; SEMI &gt;\n<span class=\"\
      kw1\">local</span> <span class=\"kw9\">Actor</span> A;\n \naClass <span class=\"\
      sy0\">=</span> class<span class=\"sy0\">&lt;</span>Actor<span class=\"sy0\"\
      >&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">DynamicLoadObject</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"MyPackage.MyActorClass\"</span>,\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'Class'</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\nA <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span>aClass<span class=\"\
      br0\">)</span>;</pre></div>\n</div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">local</span> class<span class=\"sy0\">&lt;</span>UWindowList<span\
      \ class=\"sy0\">&gt;</span> List<span class=\"re0\">Class</span>&lt; SEMI &gt;\n\
      <span class=\"kw1\">local</span> UWindowList L;\n \nListClass <span class=\"\
      sy0\">=</span> class<span class=\"sy0\">&lt;</span>UWindowList<span class=\"\
      sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"kw3\">DynamicLoadObject</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"MyPackage.MyList\"</span>, <span\
      \ class=\"kw1\">class</span><span class=\"st0\">'Class'</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\nL <span class=\"sy0\">=</span>\
      \ <span class=\"kw1\">New</span> List<span class=\"re0\">Class</span>&lt; SEMI\
      \ &gt;</pre></div>\n</div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">local</span> <span class=\"kw5\">Texture</span> T;\n \nT <span class=\"\
      sy0\">=</span> <span class=\"kw5\">Texture</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">DynamicLoadObject</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"MyPackage.MyTexture\"</span>, <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'Texture'</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;</pre></div>\n</div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">local</span> <span class=\"kw5\">Sound</span> S;\n \nS <span class=\"\
      sy0\">=</span> <span class=\"kw5\">Sound</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">DynamicLoadObject</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"MyPackage.MySound\"</span>, <span class=\"kw1\">class</span><span class=\"\
      st0\">'Sound'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;</pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:DynamicLoadObject?section=4\" title=\"Edit section: Related\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Object\" title=\"Legacy:Object\">Object</a></li>\n\
      <li><a href=\"/Legacy:Package\" title=\"Legacy:Package\">Package</a></li>\n\
      </ul>\n<hr />\n<p><a href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy\
      \ To Do\">Category:Legacy To Do</a> – Determine if this page has been properly\
      \ linked to, if not link up or rework info into relevant pages (i.e., Object)</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.077 seconds\nReal time usage:\
      \ 0.079 seconds\nPreprocessor visited node count: 61/1000000\nPreprocessor generated\
      \ node count: 128/1000000\nPost‐expand include size: 17/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1008-0!*!0!!en!*!* and timestamp 20221118125205 and revision\
      \ id 2710\n -->\n"
  categories:
  - sortkey: "DynamicLoadObject"
    name: "Legacy_To_Do"
  links:
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Object"
  - ns: 100
    exists: true
    name: "Legacy:Package"
  - ns: 100
    exists: true
    name: "Legacy:Class"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Log File"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Usage"
    number: "1"
    index: "1"
    fromtitle: "Legacy:DynamicLoadObject"
    byteoffset: 360
    anchor: "Usage"
  - toclevel: 1
    level: "2"
    line: "Syntax"
    number: "2"
    index: "2"
    fromtitle: "Legacy:DynamicLoadObject"
    byteoffset: 1038
    anchor: "Syntax"
  - toclevel: 1
    level: "2"
    line: "Examples"
    number: "3"
    index: "3"
    fromtitle: "Legacy:DynamicLoadObject"
    byteoffset: 1787
    anchor: "Examples"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "4"
    index: "4"
    fromtitle: "Legacy:DynamicLoadObject"
    byteoffset: 2365
    anchor: "Related_Topics"
  displaytitle: "Legacy:DynamicLoadObject"
  iwlinks: []
  wikitext:
    text: "DynamicLoadObject is a native function declared in [[Legacy:Object|Object]].\
      \ It loads an object of a specified [[Legacy:Class|class]]. Which object of\
      \ that class is specified as a string. The string is the name of the thing that\
      \ you want to load. If that thing does not exist in memory, it will be loaded\
      \ from the appropriate [[Legacy:Package|package]] file.\n\n==Usage==\n\nDynamicLoadObject\
      \ is used almost exclusively to load a resource based on a name supplied as\
      \ a string. For example, xPlayers.int ([[Legacy:UT2003|UT2003]]) contains a\
      \ list of players, each of which has a model, skin, etc. The model name, skin\
      \ name, and so forth are read in as strings. Then, DynamicLoadObject is used\
      \ to get Mesh and Material references based on those strings. The reason why\
      \ they are stored like this is it allows a class to use things that did not\
      \ exist at compile time, (such as 3rd party models) or classes that exist at\
      \ compile time, but are not visible from the class compiling time because the\
      \ class it refers to is compiled after this class.\n\n==Syntax==\n\n<uscript>\n\
      native static final function object DynamicLoadObject( \n string ObjectName,\
      \ \n class ObjectClass, \n optional bool MayFail );\n</uscript>\n\nObjectName\
      \ is the name of the object. For instance, \"Engine.DefaultTexture\" or \"xInterface.ExtendedConsole\"\
      .\n\nObjectClass is the class of the thing that you are loading. So, for \"\
      Engine.DefaultTexture\" the ObjectClass would be class'Engine.Material' or class'Engine.Texture'.\
      \ For \"xInterface.ExtendedConsole\" it would be class'Class'. (A class is itself\
      \ a class... called class.) If MayFail is false or is omitted, and the object\
      \ cannot be loaded, a warning will be printed to the [[Legacy:Log File|log file]].\
      \ If MayFail is true, no warning will be printed if the object cannot be loaded.\n\
      \n==Examples==\n\n<uscript>\nlocal class<Actor> aClass;\nlocal Actor A;\n\n\
      aClass = class<Actor>(DynamicLoadObject(\"MyPackage.MyActorClass\", class'Class'));\n\
      A = Spawn(aClass);\n</uscript>\n\n<uscript>\nlocal class<UWindowList> ListClass;\n\
      local UWindowList L;\n\nListClass = class<UWindowList>(DynamicLoadObject(\"\
      MyPackage.MyList\", class'Class'));\nL = New ListClass;\n</uscript>\n\n<uscript>\n\
      local Texture T;\n\nT = Texture(DynamicLoadObject(\"MyPackage.MyTexture\", class'Texture'));\n\
      </uscript>\n\n<uscript>\nlocal Sound S;\n\nS = Sound(DynamicLoadObject(\"MyPackage.MySound\"\
      , class'Sound'));\n</uscript>\n\n==Related Topics==\n* [[Legacy:Object|Object]]\n\
      * [[Legacy:Package|Package]]\n\n----\n\n[[:Category:Legacy To Do]] &ndash; Determine\
      \ if this page has been properly linked to, if not link up or rework info into\
      \ relevant pages (i.e., Object)\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 2710
name: "Legacy:DynamicLoadObject"
revision:
  revid: 2710
  parentid: 2712
  user: "192.251.69.54"
  timestamp: 1133578112.000000000
  comment: "*"
timestamp: 1668775925.893311000
