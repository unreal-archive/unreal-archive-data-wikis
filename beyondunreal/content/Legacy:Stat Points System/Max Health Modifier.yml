---
parse:
  title: "Legacy:Stat Points System/Max Health Modifier"
  text:
    text: "<p>This is the Maximum Health modifying script for the Stat Points Mutator.</p>\n\
      <p>First, you want to make an Inventory subclass. This class will be carried\
      \ around with the player, making sure that he has the right Maximum Health.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> HealthInv\
      \ <span class=\"kw1\">extends</span> <span class=\"kw9\">Inventory</span>;\n\
      \ \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ CalculateHealth<span class=\"br0\">(</span> <span class=\"kw5\">int</span>\
      \ StatPoints <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  \
      \  <span class=\"kw7\">Instigator</span>.<span class=\"me0\">HealthMax</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw7\">Instigator</span>.<span class=\"\
      kw1\">default</span>.<span class=\"me0\">HealthMax</span> <span class=\"sy0\"\
      >+</span> <span class=\"nu0\">20</span> <span class=\"sy0\">*</span> StatPoints;\n\
      \    <span class=\"kw7\">Instigator</span>.<span class=\"me0\">SuperHealthMax</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">HealthMax</span> <span class=\"sy0\">+</span> <span class=\"nu0\">100</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>It has the function CalculateHealth(),\
      \ which, when called, will set the Instigator's (player's) Maximum Health to\
      \ its normal value, plus 20 for each stat point. Also, the Super Health Max\
      \ of the player will be set 100 above that.</p>\n<p>Now, this doesn't do anything\
      \ right off the bat, so we need to make a Mutator that will control its execution.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> MutHealthModifier\
      \ <span class=\"kw1\">extends</span> <span class=\"kw9\">Mutator</span>;\n \n\
      <span class=\"kw1\">function</span> ModifyPawn<span class=\"br0\">(</span> <span\
      \ class=\"kw9\">Pawn</span> Other <span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"kw9\">Inventory</span>\
      \ Inv;\n    <span class=\"kw1\">local</span> HealthInv Health_Inv;\n \n    <span\
      \ class=\"kw6\">Super</span>.<span class=\"me0\">ModifyPlayer</span><span class=\"\
      br0\">(</span>Other<span class=\"br0\">)</span>;\n \n    <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> Other.<span class=\"kw9\">Controller</span>\
      \ <span class=\"sy0\">==</span> <span class=\"kw5\">None</span> <span class=\"\
      sy0\">||</span> <span class=\"sy0\">!</span>Other.<span class=\"kw9\">Controller</span>.<span\
      \ class=\"me0\">bIsPlayer</span> <span class=\"br0\">)</span>\n        <span\
      \ class=\"kw2\">return</span>;\n    Inv <span class=\"sy0\">=</span> Other.<span\
      \ class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'HealthInv'</span><span class=\"br0\"\
      >)</span>;\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span> Inv\
      \ <span class=\"sy0\">==</span> <span class=\"kw5\">None</span> <span class=\"\
      br0\">)</span>\n    <span class=\"br0\">{</span>\n        Health_Inv <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'HealthInv'</span><span class=\"\
      br0\">)</span>;\n        <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ Health_Inv <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span> <span\
      \ class=\"br0\">)</span>\n            Health_Inv.<span class=\"me0\">GiveTo</span><span\
      \ class=\"br0\">(</span>Other, <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span>;\n        Health_Inv.<span class=\"me0\">CalculateHealth</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The above goes through every player, makes sure it is controlled\
      \ and is a player, sees if it already has a HealthInv, and if not, spawns one\
      \ and gives the player an automatic 2*20 = 40 extra points to their Maximum\
      \ Health. If you want a more dynamic modifier, I suggest you start from <a href=\"\
      /edit/Legacy:Stat_Points_System/StatPointDetermination?redlink=1\" class=\"\
      new\" title=\"Legacy:Stat Points System/StatPointDetermination (page does not\
      \ exist)\">Legacy:Stat Points System/StatPointDetermination</a>.</p>\n<p>Alright,\
      \ using the above information and what you already know about making Unreal\
      \ Tournament packages, you should be able to successfully spawn with 140 Starting\
      \ and Maximum Health.</p>\n<h2><span class=\"mw-headline\" id=\"Comments\">Comments</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Stat_Points_System/Max_Health_Modifier?section=1\" title=\"\
      Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>Kohan:</b> This was created by me, not the original author. If he or she\
      \ wishes to change it, be my guest; I'm just trying to expand the tutorial.</p>\n\
      <p><b>lizardman6:</b> Isn't this code part of the UT2004RPG?</p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.058 seconds\nReal time usage: 0.059 seconds\n\
      Preprocessor visited node count: 27/1000000\nPreprocessor generated node count:\
      \ 64/1000000\nPost‐expand include size: 24/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2873-0!*!0!*!*!*!* and timestamp 20221122045057 and revision\
      \ id 7661\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: false
    name: "Legacy:Stat Points System/StatPointDetermination"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Stat_Points_System/Max_Health_Modifier"
    byteoffset: 1878
    anchor: "Comments"
  displaytitle: "Legacy:Stat Points System/Max Health Modifier"
  iwlinks: []
  wikitext:
    text: "This is the Maximum Health modifying script for the Stat Points Mutator.\n\
      \nFirst, you want to make an Inventory subclass.  This class will be carried\
      \ around with the player, making sure that he has the right Maximum Health.\n\
      \n<uscript>\nclass HealthInv extends Inventory;\n\nsimulated function CalculateHealth(\
      \ int StatPoints )\n{\n    Instigator.HealthMax = Instigator.default.HealthMax\
      \ + 20 * StatPoints;\n    Instigator.SuperHealthMax = Instigator.HealthMax +\
      \ 100;\n}\n</uscript>\n\nIt has the function CalculateHealth(), which, when\
      \ called, will set the Instigator's (player's) Maximum Health to its normal\
      \ value, plus 20 for each stat point.  Also, the Super Health Max of the player\
      \ will be set 100 above that.\n\nNow, this doesn't do anything right off the\
      \ bat, so we need to make a Mutator that will control its execution.\n\n<uscript>\n\
      class MutHealthModifier extends Mutator;\n\nfunction ModifyPawn( Pawn Other\
      \ )\n{\n    local Inventory Inv;\n    local HealthInv Health_Inv;\n\n    Super.ModifyPlayer(Other);\n\
      \n    if ( Other.Controller == None || !Other.Controller.bIsPlayer )\n     \
      \   return;\n    Inv = Other.FindInventoryType(class'HealthInv');\n    if (\
      \ Inv == None )\n    {\n        Health_Inv = Spawn(class'HealthInv');\n    \
      \    if ( Health_Inv != None )\n            Health_Inv.GiveTo(Other, None);\n\
      \        Health_Inv.CalculateHealth(2);\n    }\n}\n</uscript>\n\nThe above goes\
      \ through every player, makes sure it is controlled and is a player, sees if\
      \ it already has a HealthInv, and if not, spawns one and gives the player an\
      \ automatic 2*20 = 40 extra points to their Maximum Health.  If you want a more\
      \ dynamic modifier, I suggest you start from [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/StatPointDetermination]].\n\
      \nAlright, using the above information and what you already know about making\
      \ Unreal Tournament packages, you should be able to successfully spawn with\
      \ 140 Starting and Maximum Health.\n\n==Comments==\n\n'''Kohan:''' This was\
      \ created by me, not the original author.  If he or she wishes to change it,\
      \ be my guest; I'm just trying to expand the tutorial.\n\n'''lizardman6:'''\
      \ Isn't this code part of the UT2004RPG?"
  properties: []
  revId: 7661
name: "Legacy:Stat Points System/Max Health Modifier"
revision:
  revid: 7661
  parentid: 7662
  user: "Adsl-75-11-194-205.dsl.klmzmi.sbcglobal.net"
  timestamp: 1156783361.000000000
  comment: "*"
timestamp: 1669092657.388881000
