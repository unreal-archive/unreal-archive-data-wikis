---
parse:
  title: "Legacy:Simulated Surround Sound"
  text:
    text: "<p>\"Surround Sound\" places the user in the center of a group of speakers.\
      \ The positions of these speakers, playing different sounds, allows a person\
      \ to percieve the direction that a sound originates from. While \"Surround Sound\"\
      \ is a nice hardware configuration to have, many users do not have this configuration\
      \ of speakers.</p>\n<p>However, most users have two speakers. Most users also\
      \ have two ears. Hence, it stands to reason that by correctly calculating the\
      \ sound that should go to each ear, you should be able to get the same effect\
      \ as having an actual \"Surround Sound\" system with only two speakers. This,\
      \ of course, works best with headphones where interference between the speakers\
      \ is minimal.</p>\n<p>Software is already readily available that can do this,\
      \ but it's fairly easy to implement a simulated \"Surround Sound\" using the\
      \ Unreal Engine without any third party software. The Unreal Engine already\
      \ modifies stereo sound output based on the 3D position that the sound originates\
      \ from. As a result, the only thing you need to do is create the appropriate\
      \ sounds and position the virtual \"speakers.\"</p>\n<p>Note that you do not\
      \ need to do this simply to have positional 3D audio for a single source sound\
      \ - this is a description of how to simulate surround sound WITHIN the world\
      \ - for instance, a room in the virtual world that has a surround sound speaker\
      \ system in it.</p>\n<h2><span class=\"mw-headline\" id=\"Sound_Layout\">Sound\
      \ Layout</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Simulated_Surround_Sound?section=1\" title=\"\
      Edit section: Sound Layout\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The most common type of \"Surround Sound\" is \"5.1.\"\
      \ This setup has 6 different sound channels. This means that you will need 6\
      \ different <a href=\"/Legacy:Sound\" title=\"Legacy:Sound\">Sounds</a> and\
      \ 6 <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\">Actors</a> to play the\
      \ sounds. Some surround sound systems have more or less speakers. As all of\
      \ the speakers we are using are virtual, we can have as many or as few speakers\
      \ as desired, within the constraints of the user's sound card.</p>\n<p>In a\
      \ 5.1 system, you have 6 channels:</p>\n<ul>\n<li>Forward Left</li>\n<li>Forward\
      \ Right</li>\n<li>Rear Left</li>\n<li>Rear Right</li>\n<li>Center (Forward Center)</li>\n\
      <li>Subwoofer</li>\n</ul>\n<p>The placement of these channels in your virtual\
      \ room, of course should be fairly obvious. The subwoofer is usually placed\
      \ very near the Center channel.</p>\n<h2><span class=\"mw-headline\" id=\"Making_the_Sound_Files\"\
      >Making the Sound Files</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Simulated_Surround_Sound?section=2\"\
      \ title=\"Edit section: Making the Sound Files\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>As mentioned, you will need a different sound file\
      \ for each speaker to get the correct effect. Each channel should be a mono\
      \ sound wave, not stereo. (The stereo effect is being created using multiple\
      \ mono wavs playing simultaneously, and the Unreal Engine is doing the math\
      \ to combined them appropriately) You will need to be somewhat familliar with\
      \ a sound editing program, but generating the different waves is fairly easy.</p>\n\
      <p>The left and right channels should be, simply enough, the left and right\
      \ channels of the sound. If you were converting an existing stereo sound, you\
      \ could pull out the left and right channels independantly. If you are creating\
      \ a sound from scratch, then what should be on the left and right channels is\
      \ up to you.</p>\n<p>The left and right channels should be similar for the front\
      \ and rear sets of speakers, but you may want to tweak the phase and/or amplitude\
      \ of one relative to the other. Sound waves interfere with each other, creating\
      \ a \"sweet spot\" in a Surround Sound environment with \"dead spots\" sprinkled\
      \ around, depending on where the speakers are placed. You can tweak the \"sweet\
      \ spot\" a little bit by tweaking the phase on the sounds. Note, however, that\
      \ sound wave propogation and interference is likely to vary between simple,\
      \ on-board sound (probrably not even calculated) to higher end sound cards.</p>\n\
      <p>The center channel should be some mix of the left and right channels. You\
      \ could do a straight average of the two, or you could try taking an intersection\
      \ of the two. Which would work better will probrably depend on the source sound.</p>\n\
      <p>The sound file for the subwoofer is fairly straightforward. In this instance\
      \ you want to take your center channel and use a filter to remove high frequency\
      \ sounds. Settings for the filters on subwoofers vary, but are often between\
      \ 20 and 200 Hz. The subwoofer will not contribute much to the sound, as in\
      \ a real surround sound system it produces the \"vibration\" that you can sometimes\
      \ feel around a powerful stereo system. However, it is still of value to include\
      \ it as some are fortunate enough to have fancy force feedback devices that\
      \ will recreate this vibration based on sound playing through the speakers.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Simulated_Surround_Sound?section=3\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>EricBlade:</b> Interesting thought, though unless\
      \ you're using the engine to simulate a real-life environment that includes\
      \ a surround sound system, I don't see a whole ton of use for it. I wonder how\
      \ it would actually sound when all placed properly in an environment that includes\
      \ a nice full surround capable high end audio card. One thing that I did think\
      \ of, was that some clever programming could use Force Feedback within the engine\
      \ to do something, although I'm thinking that even ut2004 doesn't have the ability\
      \ to actually analyze the sound data. However, if you can do native programming\
      \ for your particular game, you could probably add some functions to deal with\
      \ that, and do the force feedback on your own. That would be interesting&#160;:)</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.029 seconds\nReal time usage:\
      \ 0.030 seconds\nPreprocessor visited node count: 11/1000000\nPreprocessor generated\
      \ node count: 16/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2950-0!*!0!!*!*!* and timestamp 20221118122101 and revision\
      \ id 7817\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:Sound"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Sound Layout"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Simulated_Surround_Sound"
    byteoffset: 1364
    anchor: "Sound_Layout"
  - toclevel: 1
    level: "2"
    line: "Making the Sound Files"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Simulated_Surround_Sound"
    byteoffset: 2084
    anchor: "Making_the_Sound_Files"
  - toclevel: 2
    level: "3"
    line: "Discussion"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:Simulated_Surround_Sound"
    byteoffset: 4296
    anchor: "Discussion"
  displaytitle: "Legacy:Simulated Surround Sound"
  iwlinks: []
  wikitext:
    text: "\"Surround Sound\" places the user in the center of a group of speakers.\
      \ The positions of these speakers, playing different sounds, allows a person\
      \ to percieve the direction that a sound originates from. While \"Surround Sound\"\
      \ is a nice hardware configuration to have, many users do not have this configuration\
      \ of speakers.\n\nHowever, most users have two speakers. Most users also have\
      \ two ears. Hence, it stands to reason that by correctly calculating the sound\
      \ that should go to each ear, you should be able to get the same effect as having\
      \ an actual \"Surround Sound\" system with only two speakers. This, of course,\
      \ works best with headphones where interference between the speakers is minimal.\n\
      \nSoftware is already readily available that can do this, but it's fairly easy\
      \ to implement a simulated \"Surround Sound\" using the Unreal Engine without\
      \ any third party software. The Unreal Engine already modifies stereo sound\
      \ output based on the 3D position that the sound originates from. As a result,\
      \ the only thing you need to do is create the appropriate sounds and position\
      \ the virtual \"speakers.\"\n\nNote that you do not need to do this simply to\
      \ have positional 3D audio for a single source sound - this is a description\
      \ of how to simulate surround sound WITHIN the world - for instance, a room\
      \ in the virtual world that has a surround sound speaker system in it.\n\n==Sound\
      \ Layout==\n\nThe most common type of \"Surround Sound\" is \"5.1.\" This setup\
      \ has 6 different sound channels. This means that you will need 6 different\
      \ [[Legacy:Sound|Sound]]s and 6 [[Legacy:Actor|Actor]]s to play the sounds.\
      \ Some surround sound systems have more or less speakers. As all of the speakers\
      \ we are using are virtual, we can have as many or as few speakers as desired,\
      \ within the constraints of the user's sound card.\n\nIn a 5.1 system, you have\
      \ 6 channels:\n* Forward Left\n* Forward Right\n* Rear Left\n* Rear Right\n\
      * Center (Forward Center)\n* Subwoofer\n\nThe placement of these channels in\
      \ your virtual room, of course should be fairly obvious. The subwoofer is usually\
      \ placed very near the Center channel.\n\n==Making the Sound Files==\n\nAs mentioned,\
      \ you will need a different sound file for each speaker to get the correct effect.\
      \ Each channel should be a mono sound wave, not stereo. (The stereo effect is\
      \ being created using multiple mono wavs playing simultaneously, and the Unreal\
      \ Engine is doing the math to combined them appropriately) You will need to\
      \ be somewhat familliar with a sound editing program, but generating the different\
      \ waves is fairly easy.\n\nThe left and right channels should be, simply enough,\
      \ the left and right channels of the sound. If you were converting an existing\
      \ stereo sound, you could pull out the left and right channels independantly.\
      \ If you are creating a sound from scratch, then what should be on the left\
      \ and right channels is up to you.\n\nThe left and right channels should be\
      \ similar for the front and rear sets of speakers, but you may want to tweak\
      \ the phase and/or amplitude of one relative to the other. Sound waves interfere\
      \ with each other, creating a \"sweet spot\" in a Surround Sound environment\
      \ with \"dead spots\" sprinkled around, depending on where the speakers are\
      \ placed. You can tweak the \"sweet spot\" a little bit by tweaking the phase\
      \ on the sounds. Note, however, that sound wave propogation and interference\
      \ is likely to vary between simple, on-board sound (probrably not even calculated)\
      \ to higher end sound cards.\n\nThe center channel should be some mix of the\
      \ left and right channels. You could do a straight average of the two, or you\
      \ could try taking an intersection of the two. Which would work better will\
      \ probrably depend on the source sound.\n\nThe sound file for the subwoofer\
      \ is fairly straightforward. In this instance you want to take your center channel\
      \ and use a filter to remove high frequency sounds. Settings for the filters\
      \ on subwoofers vary, but are often between 20 and 200 Hz. The subwoofer will\
      \ not contribute much to the sound, as in a real surround sound system it produces\
      \ the \"vibration\" that you can sometimes feel around a powerful stereo system.\
      \ However, it is still of value to include it as some are fortunate enough to\
      \ have fancy force feedback devices that will recreate this vibration based\
      \ on sound playing through the speakers.\n\n===Discussion ===\n\n'''EricBlade:'''\
      \ Interesting thought, though unless you're using the engine to simulate a real-life\
      \ environment that includes a surround sound system, I don't see a whole ton\
      \ of use for it.  I wonder how it would actually sound when all placed properly\
      \ in an environment that includes a nice full surround capable high end audio\
      \ card.  One thing that I did think of, was that some clever programming could\
      \ use Force Feedback within the engine to do something, although I'm thinking\
      \ that even ut2004 doesn't have the ability to actually analyze the sound data.\
      \  However, if you can do native programming for your particular game, you could\
      \ probably add some functions to deal with that, and do the force feedback on\
      \ your own.  That would be interesting :)"
  properties: []
  revId: 7817
name: "Legacy:Simulated Surround Sound"
revision:
  revid: 7817
  parentid: 7818
  user: "EricBlade"
  timestamp: 1167543803.000000000
  comment: "*"
timestamp: 1668774061.606418000
