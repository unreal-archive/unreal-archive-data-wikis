---
parse:
  title: "Legacy:Default Properties For Weapons"
  text:
    text: "<p><b>Wormbo:</b> These properties should be moved to their respective\
      \ classes <a href=\"/Legacy:Weapon_(UT)\" title=\"Legacy:Weapon (UT)\">Weapon\
      \ (UT)</a>, <a href=\"/Legacy:TournamentWeapon\" title=\"Legacy:TournamentWeapon\"\
      >TournamentWeapon</a>, <a href=\"/Legacy:Enforcer\" title=\"Legacy:Enforcer\"\
      >Enforcer</a>, <a href=\"/Legacy:SniperRifle\" title=\"Legacy:SniperRifle\"\
      >SniperRifle</a>, etc.</p>\n<hr />\n<h2><span class=\"mw-headline\" id=\"Default_properties\"\
      >Default properties</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Default_Properties_For_Weapons?section=1\" title=\"\
      Edit section: Default properties\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Here_are_only_some_of_the_default_properties_and_what_they_do.\"\
      >Here are only some of the default properties and what they do.</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Default_Properties_For_Weapons?section=2\" title=\"Edit\
      \ section: Here are only some of the default properties and what they do.\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<ul>\n\
      <li>Pulled directly from .uc files in Botpack.</li>\n</ul>\n<p><br /></p>\n\
      <p><font color=\"blue\">bCanThrow=</font> if true, player can toss this weapon\
      \ out<br /></p>\n<p><font color=\"blue\">RespawnTime=</font> Respawn after this\
      \ time, 0 for never respawns<br /></p>\n<p><font color=\"blue\">hitdamage=</font><br\
      \ /></p>\n<p><font color=\"blue\">FireAnims(0)=</font> name of firing mesh #1<br\
      \ /></p>\n<p><font color=\"blue\">FireAnims(1)=</font> name of firing mesh #2<br\
      \ /></p>\n<p><font color=\"blue\">FireAnims(2)=</font> name of firing mesh #3<br\
      \ /></p>\n<p><font color=\"blue\">FireAnims(3)=</font> name of firing mesh #4<br\
      \ /></p>\n<p><font color=\"blue\">FireAnims(4)=</font> name of firing mesh #5<br\
      \ /></p>\n<p><font color=\"blue\">bClientAnim=</font> If false, this seems to\
      \ replicate all playanim calls to the client, negating the need for specialized\
      \ playanim functions being replicated<br /></p>\n<p><font color=\"blue\">DoubleName=</font>\
      \ this allows for a name change upon picking up another (when akimbo is available)<br\
      \ /></p>\n<p><font color=\"blue\">MuzzleFlashVariations(0)=</font><br /></p>\n\
      <p><font color=\"blue\">MuzzleFlashVariations(1)=</font><br /></p>\n<p><font\
      \ color=\"blue\">MuzzleFlashVariations(2)=</font><br /></p>\n<p><font color=\"\
      blue\">MuzzleFlashVariations(3)=</font><br /></p>\n<p><font color=\"blue\">MuzzleFlashVariations(4)=</font><br\
      \ /></p>\n<p><font color=\"blue\">DoubleSwitchPriority=</font><br /></p>\n<p><font\
      \ color=\"blue\">WeaponDescription=</font> pretty self explanitory, its the\
      \ string displayed as weapon info<br /></p>\n<p><font color=\"blue\">aimerror=</font>\
      \ aim Error for bots (note this value doubled if instant hit weapon)<br /></p>\n\
      <p><font color=\"blue\">FireAdjust=</font> magnitude of firing speed adjustment\
      \ (%/100) based on skill for bots. (1.0 for non-bots)<br /></p>\n<p><font color=\"\
      blue\">InstFlash=</font><br /></p>\n<p><font color=\"blue\">InstFog=</font><br\
      \ /></p>\n<p><font color=\"blue\">AmmoName=</font> indicates the class that\
      \ is picked up to add ammo<br /></p>\n<p><font color=\"blue\">PickupAmmoCount=</font>\
      \ integer (or whole number) representing the amount of ammo weapon has upon\
      \ pickup<br /></p>\n<p><font color=\"blue\">bSplashDamage=</font> tells bot\
      \ AI whether it causes splash damage or not<br /></p>\n<p><font color=\"blue\"\
      >bRecommendSplashDamage=</font> if true, bot preferentially tries to use splash\
      \ damage rather than direct hits<br /></p>\n<p><font color=\"blue\">bRecommendAltSplashDamage=</font>\
      \ same as bRecommendSplashDamage, but for the AltFire function<br /></p>\n<p><font\
      \ color=\"blue\">bWarnTarget=</font> bot AI related - when firing projectile,\
      \ warn the target<br /></p>\n<p><font color=\"blue\">bAltWarnTarget=</font>\
      \ same as bWarnTarget, but for the AltFire function<br /></p>\n<p><font color=\"\
      blue\">bInstantHit=</font> <a href=\"/Legacy:Boolean\" title=\"Legacy:Boolean\"\
      >Boolean</a> or true/false setting for allowing instant hit damage, good for\
      \ use when you need a fast hit from the weapon (like a rifle) with no projectile<br\
      \ /></p>\n<p><font color=\"blue\">bAltInstantHit=</font> same as bInstantHit,\
      \ but for the AltFire function<br /></p>\n<p><font color=\"blue\">ProjectileClass=</font>\
      \ class of the bullet to spawn when fired<br /></p>\n<p><font color=\"blue\"\
      >AltProjectileClass=</font> same as ProjectileClass, but for the AltFire function<br\
      \ /></p>\n<p><font color=\"blue\">FiringSpeed=</font> used by human animations\
      \ in determining firing speed<br /></p>\n<p><font color=\"blue\">FireOffset=</font>\
      \ X, Y, and Z co-ordinates to adjust where a projectile or effect emits from\
      \ weapon in first-person view, calculated from the playermodel's Mesh Origin<br\
      \ /></p>\n<p><font color=\"blue\">bMeleeWeapon=</font> used by bot AI to determine\
      \ if it is a close range weapon<br /></p>\n<p><font color=\"blue\">bRapidFire=</font>\
      \ used by human animations in determining firing animation (for still firing)<br\
      \ /></p>\n<p><font color=\"blue\">MyDamageType=</font> type of damage weapon\
      \ inflicts, standard is \"shot\"<br /></p>\n<p><font color=\"blue\">AltDamageType=</font>\
      \ type of damage AltFire inflicts, same as MyDamageType<br /></p>\n<p><font\
      \ color=\"blue\">shakevert=</font> Screen shake vector X component<br /></p>\n\
      <p><font color=\"blue\">shakemag=</font> Screen shake vector Z component<br\
      \ /></p>\n<p><font color=\"blue\">shaketime=</font> Screen shake vector Y component<br\
      \ /></p>\n<p><font color=\"blue\">AIRating=</font> used by bot AI - how much\
      \ the use of this weapon is desired<br /></p>\n<p><font color=\"blue\">RefireRate=</font>\
      \ used by bot AI - how much is the chance (%) of bot holding down the fire button<br\
      \ /></p>\n<p><font color=\"blue\">AltRefireRate=</font><br />\nsame as RefireRate,\
      \ but for the AltFire function</p>\n<p><font color=\"blue\">FireSound=</font>\
      \ sound class played when Fire function is executed<br /></p>\n<p><font color=\"\
      blue\">AltFireSound=</font> same as FireSound, but for the AltFire function<br\
      \ /></p>\n<p><font color=\"blue\">CockingSound=</font> sound class played when\
      \ CockingSound function is executed<br /></p>\n<p><font color=\"blue\">SelectSound=</font>\
      \ sound class played when SelectSound function is executed<br /></p>\n<p><font\
      \ color=\"blue\">Misc1Sound=</font><br /></p>\n<p><font color=\"blue\">Misc2Sound=</font><br\
      \ /></p>\n<p><font color=\"blue\">Misc3Sound=</font><br /></p>\n<p><font color=\"\
      blue\">Misc4Sound=</font><br /></p>\n<p><font color=\"blue\">MessageNoAmmo=</font><br\
      \ /></p>\n<p><font color=\"blue\">DeathMessage=</font> message string displayed\
      \ when weapon sucessfully scores a frag<br /></p>\n<p><font color=\"blue\">NameColor=</font>\
      \ R, G, B values of weapon's name color when displayed<br /></p>\n<p><font color=\"\
      blue\">bDrawMuzzleFlash=</font> <a href=\"/Legacy:Boolean\" title=\"Legacy:Boolean\"\
      >Boolean</a> switch for showing the muzzleflash on, or off<br /></p>\n<p><font\
      \ color=\"blue\">MuzzleScale=</font> scale of muzzleflash model when displayed\
      \ (as seen from first-person view)<br /></p>\n<p><font color=\"blue\">FlashY=</font><br\
      \ /></p>\n<p><font color=\"blue\">FlashO=</font><br /></p>\n<p><font color=\"\
      blue\">FlashC=</font><br /></p>\n<p><font color=\"blue\">FlashLength=</font><br\
      \ /></p>\n<p><font color=\"blue\">FlashS=</font><br /></p>\n<p><font color=\"\
      blue\">MFTexture=</font> texture class displayed as muzzleflash, can be animated\
      \ (as seen from first-person view)<br /></p>\n<p><font color=\"blue\">AutoSwitchPriority=</font>\
      \ integer ordering its priority of being auto-switched to when picked up, can\
      \ be altered ingame from preferences<br /></p>\n<p><font color=\"blue\">InventoryGroup=</font>\
      \ (not to clear on this...) integer assigning its space in the inventory. No\
      \ two inventory items should have the same group, although it doesn't really\
      \ seem to matter. I suggest doing it anyway, better safe than sorry.<br /></p>\n\
      <p><font color=\"blue\">PickupMessage=</font> message string displayed upon\
      \ weapon pickup<br /></p>\n<p><font color=\"blue\">ItemName=</font> name of\
      \ the weapon when displayed<br /></p>\n<p><font color=\"blue\">PlayerViewOffset=</font>\
      \ This is a drawing offset vector, noting that all values are multiplied by\
      \ 100 (or -100)in the sethand function.<br /></p>\n<ul>\n<li>\n<ul>\n<li><i>X</i>\
      \ Moves the gun Forwards or Backwards from the Player, <i>Y</i> Moves Left and\
      \ Right, and Z moves Up and Down.</li>\n</ul>\n</li>\n</ul>\n<p><font color=\"\
      blue\">PlayerViewMesh=</font> lodmesh class used for first-person view of weapon\
      \ (usually contains the most animations)<br /></p>\n<p><font color=\"blue\"\
      >PickupViewMesh=</font> lodmesh class used for the pickup version of weapon<br\
      \ /></p>\n<p><font color=\"blue\">ThirdPersonMesh=</font> lodmesh class used\
      \ for the third-person version of a weapon<br /></p>\n<p><font color=\"blue\"\
      >StatusIcon=</font> texture class determining what icon to use on the hud for\
      \ weapon<br /></p>\n<p><font color=\"blue\">bMuzzleFlashParticles=</font><br\
      \ /></p>\n<p><font color=\"blue\">MuzzleFlashStyle=</font><br /></p>\n<p><font\
      \ color=\"blue\">MuzzleFlashMesh=</font> lodmesh class used for the third-person\
      \ view of the muzzleflash<br /></p>\n<p><font color=\"blue\">MuzzleFlashScale=</font>\
      \ scale of MuzzleFlashMesh<br /></p>\n<p><font color=\"blue\">MuzzleFlashTexture=</font>\
      \ texture class used on MuzzleFlashMesh, can be animated<br /></p>\n<p><font\
      \ color=\"blue\">PickupSound=</font> sound class played upon weapon pickup<br\
      \ /></p>\n<p><font color=\"blue\">Icon=</font> texture class used on hud, similar\
      \ to status icon<br /></p>\n<p><font color=\"blue\">bHidden=</font> <a href=\"\
      /Legacy:Boolean\" title=\"Legacy:Boolean\">Boolean</a> setting used to make\
      \ weapon invisible ingame<br /></p>\n<p><font color=\"blue\">Mesh=</font> lodmesh\
      \ class displayed in weapon info screens, UnrealED'smesh editor for example<br\
      \ /></p>\n<p><font color=\"blue\">bNoSmooth=</font> <a href=\"/Legacy:Boolean\"\
      \ title=\"Legacy:Boolean\">Boolean</a> setting to turn off Unreal's automatic\
      \ poly smoothing, makes meshes look more angular, good for flat edges or sharp\
      \ corners (can be manipulated on a per-poly basis using <a href=\"/Legacy:UnrealFX\"\
      \ title=\"Legacy:UnrealFX\">UnrealFX</a>)<br /></p>\n<p><font color=\"blue\"\
      >CollisionRadius=</font> amount of unreal units horizontally from weapon origin\
      \ collision occurs, see <a href=\"/edit/Legacy:Collision_Detection?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Collision Detection (page does not exist)\">Collision\
      \ Detection</a><br /></p>\n<p><font color=\"blue\">CollisionHeight=</font> amount\
      \ of unreal units vertically collision occurs see<a href=\"/edit/Legacy:Collision_Detection?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Collision Detection (page does not exist)\">Collision\
      \ Detection</a><br /></p>\n<p><font color=\"blue\">Rotation=</font><br /></p>\n\
      <p><font color=\"blue\">BobDamping=</font> how much to damp view bob<br /></p>\n\
      <p><font color=\"blue\">Mass=</font> measure of mass of an object, only use\
      \ i know of is so <a href=\"/Legacy:Pawn_(UT)\" title=\"Legacy:Pawn (UT)\">Pawn\
      \ (UT)</a> can determine which player animation to play with which items. e.g.\
      \ mass &lt; 20 means small weapon hold and fire anims like pistol, mass &gt;\
      \ 20 means large weapon hold and fire anims using 2 hands spread like rocket\
      \ launcher.<br /></p>\n<p><font color=\"blue\">SoundRadius=</font><br /></p>\n\
      <p><font color=\"blue\">SoundVolume=</font><br /></p>\n<p><font color=\"blue\"\
      >LightEffect=</font><br /></p>\n<p><font color=\"blue\">LightBrightness=</font><br\
      \ /></p>\n<p><font color=\"blue\">LightHue=</font><br /></p>\n<p><font color=\"\
      blue\">LightSaturation=</font><br /></p>\n<p><font color=\"blue\">LightRadius=</font><br\
      \ /></p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.068 seconds\nReal time\
      \ usage: 0.070 seconds\nPreprocessor visited node count: 103/1000000\nPreprocessor\
      \ generated node count: 204/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:949-0!*!0!!*!*!* and timestamp\
      \ 20221118193056 and revision id 43444\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Enforcer"
  - ns: 100
    exists: true
    name: "Legacy:UnrealFX"
  - ns: 100
    exists: true
    name: "Legacy:Boolean"
  - ns: 100
    exists: false
    name: "Legacy:Collision Detection"
  - ns: 100
    exists: true
    name: "Legacy:TournamentWeapon"
  - ns: 100
    exists: true
    name: "Legacy:SniperRifle"
  - ns: 100
    exists: true
    name: "Legacy:Weapon (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Default properties"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Default_Properties_For_Weapons"
    byteoffset: 235
    anchor: "Default_properties"
  - toclevel: 2
    level: "3"
    line: "Here are only some of the default properties and what they do."
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Default_Properties_For_Weapons"
    byteoffset: 260
    anchor: "Here_are_only_some_of_the_default_properties_and_what_they_do."
  displaytitle: "Legacy:Default Properties For Weapons"
  iwlinks: []
  wikitext:
    text: "'''Wormbo:''' These properties should be moved to their respective classes\
      \ [[Legacy:Weapon (UT)|Weapon (UT)]], [[Legacy:TournamentWeapon|TournamentWeapon]],\
      \ [[Legacy:Enforcer|Enforcer]], [[Legacy:SniperRifle|SniperRifle]], etc.\n\n\
      ----\n\n==Default properties ==\n\n===Here are only some of the default properties\
      \ and what they do. ===\n\n*Pulled directly from .uc files in Botpack.\n\n<font\
      \ color=blue></font> <br />\n\n<font color=blue>bCanThrow=</font> if true, player\
      \ can toss this weapon out<br>\n\n<font color=blue>RespawnTime=</font> Respawn\
      \ after this time, 0 for never respawns<br>\n\n<font color=blue>hitdamage=</font>\
      \ <br>\n\n<font color=blue>FireAnims(0)=</font> name of firing mesh #1<br>\n\
      \n<font color=blue>FireAnims(1)=</font> name of firing mesh #2<br>\n\n<font\
      \ color=blue>FireAnims(2)=</font> name of firing mesh #3<br>\n\n<font color=blue>FireAnims(3)=</font>\
      \ name of firing mesh #4<br>\n\n<font color=blue>FireAnims(4)=</font> name of\
      \ firing mesh #5<br>\n\n<font color=blue>bClientAnim=</font> If false, this\
      \ seems to replicate all playanim calls to the client, negating the need for\
      \ specialized playanim functions being replicated <br>\n\n<font color=blue>DoubleName=</font>\
      \ this allows for a name change upon picking up another (when akimbo is available)<br>\n\
      \n<font color=blue>MuzzleFlashVariations(0)=</font> <br>\n\n<font color=blue>MuzzleFlashVariations(1)=</font>\
      \ <br>\n\n<font color=blue>MuzzleFlashVariations(2)=</font> <br>\n\n<font color=blue>MuzzleFlashVariations(3)=</font>\
      \ <br>\n\n<font color=blue>MuzzleFlashVariations(4)=</font> <br>\n\n<font color=blue>DoubleSwitchPriority=</font>\
      \ <br>\n\n<font color=blue>WeaponDescription=</font> pretty self explanitory,\
      \ its the string displayed as weapon info <br>\n\n<font color=blue>aimerror=</font>\
      \ aim Error for bots (note this value doubled if instant hit weapon)<br>\n\n\
      <font color=blue>FireAdjust=</font> magnitude of firing speed adjustment (%/100)\
      \ based on skill for bots. (1.0 for non-bots)<br>\n\n<font color=blue>InstFlash=</font>\
      \ <br>\n\n<font color=blue>InstFog=</font> <br>\n\n<font color=blue>AmmoName=</font>\
      \ indicates the class that is picked up to add ammo <br>\n\n<font color=blue>PickupAmmoCount=</font>\
      \ integer (or whole number) representing the amount of ammo weapon has upon\
      \ pickup <br>\n\n<font color=blue>bSplashDamage=</font> tells bot AI whether\
      \ it causes splash damage or not<br>\n\n<font color=blue>bRecommendSplashDamage=</font>\
      \ if true, bot preferentially tries to use splash damage rather than direct\
      \ hits<br>\n\n<font color=blue>bRecommendAltSplashDamage=</font> same as bRecommendSplashDamage,\
      \ but for the AltFire function<br>\n\n<font color=blue>bWarnTarget=</font> bot\
      \ AI related - when firing projectile, warn the target<br>\n\n<font color=blue>bAltWarnTarget=</font>\
      \ same as bWarnTarget, but for the AltFire function<br>\n\n<font color=blue>bInstantHit=</font>\
      \ [[Legacy:Boolean|Boolean]] or true/false setting for allowing instant hit\
      \ damage, good for use when you need a fast hit from the weapon (like a rifle)\
      \ with no projectile <br>\n\n<font color=blue>bAltInstantHit=</font> same as\
      \ bInstantHit, but for the AltFire function<br>\n\n<font color=blue>ProjectileClass=</font>\
      \ class of the bullet to spawn when fired<br>\n\n<font color=blue>AltProjectileClass=</font>\
      \ same as ProjectileClass, but for the AltFire function<br>\n\n<font color=blue>FiringSpeed=</font>\
      \ used by human animations in determining firing speed<br>\n\n<font color=blue>FireOffset=</font>\
      \ X, Y, and Z co-ordinates to adjust where a projectile or effect emits from\
      \ weapon in first-person view, calculated from the playermodel's Mesh Origin\
      \ <br>\n\n<font color=blue>bMeleeWeapon=</font> used by bot AI to determine\
      \ if it is a close range weapon<br>\n\n<font color=blue>bRapidFire=</font> used\
      \ by human animations in determining firing animation (for still firing)<br>\n\
      \n<font color=blue>MyDamageType=</font> type of damage weapon inflicts, standard\
      \ is \"shot\" <br>\n\n<font color=blue>AltDamageType=</font> type of damage\
      \ AltFire inflicts, same as MyDamageType<br>\n\n<font color=blue>shakevert=</font>\
      \ Screen shake vector X component<br>\n\n<font color=blue>shakemag=</font> Screen\
      \ shake vector Z component<br>\n\n<font color=blue>shaketime=</font> Screen\
      \ shake vector Y component<br>\n\n<font color=blue>AIRating=</font> used by\
      \ bot AI - how much the use of this weapon is desired<br>\n\n<font color=blue>RefireRate=</font>\
      \ used by bot AI - how much is the chance (%) of bot holding down the fire button<br>\n\
      \n<font color=blue>AltRefireRate=</font> <br> same as RefireRate, but for the\
      \ AltFire function\n\n<font color=blue>FireSound=</font> sound class played\
      \ when Fire function is executed<br>\n\n<font color=blue>AltFireSound=</font>\
      \ same as FireSound, but for the AltFire function <br>\n\n<font color=blue>CockingSound=</font>\
      \ sound class played when CockingSound function is executed <br>\n\n<font color=blue>SelectSound=</font>\
      \ sound class played when SelectSound function is executed <br>\n\n<font color=blue>Misc1Sound=</font>\
      \ <br>\n\n<font color=blue>Misc2Sound=</font> <br>\n\n<font color=blue>Misc3Sound=</font>\
      \ <br>\n\n<font color=blue>Misc4Sound=</font> <br>\n\n<font color=blue>MessageNoAmmo=</font>\
      \ <br>\n\n<font color=blue>DeathMessage=</font> message string displayed when\
      \ weapon sucessfully scores a frag <br>\n\n<font color=blue>NameColor=</font>\
      \ R, G, B values of weapon's name color when displayed <br>\n\n<font color=blue>bDrawMuzzleFlash=</font>\
      \ [[Legacy:Boolean|Boolean]] switch for showing the muzzleflash on, or off <br>\n\
      \n<font color=blue>MuzzleScale=</font> scale of muzzleflash model when displayed\
      \ (as seen from first-person view) <br>\n\n<font color=blue>FlashY=</font> <br>\n\
      \n<font color=blue>FlashO=</font> <br>\n\n<font color=blue>FlashC=</font> <br>\n\
      \n<font color=blue>FlashLength=</font> <br>\n\n<font color=blue>FlashS=</font>\
      \ <br>\n\n<font color=blue>MFTexture=</font> texture class displayed as muzzleflash,\
      \ can be animated (as seen from first-person view) <br>\n\n<font color=blue>AutoSwitchPriority=</font>\
      \ integer ordering its priority of being auto-switched to when picked up, can\
      \ be altered ingame from preferences <br>\n\n<font color=blue>InventoryGroup=</font>\
      \ (not to clear on this...) integer assigning its space in the inventory. No\
      \ two inventory items should have the same group, although it doesn't really\
      \ seem to matter. I suggest doing it anyway, better safe than sorry.<br>\n\n\
      <font color=blue>PickupMessage=</font> message string displayed upon weapon\
      \ pickup<br>\n\n<font color=blue>ItemName=</font> name of the weapon when displayed\
      \ <br>\n\n<font color=blue>PlayerViewOffset=</font> This is a drawing offset\
      \ vector, noting that all values are multiplied by 100 (or -100)in the sethand\
      \ function.<br>\n** ''X'' Moves the gun Forwards or Backwards from the Player,\
      \ ''Y'' Moves Left and Right, and Z moves Up and Down.\n\n<font color=blue>PlayerViewMesh=</font>\
      \ lodmesh class used for first-person view of weapon (usually contains the most\
      \ animations) <br>\n\n<font color=blue>PickupViewMesh=</font> lodmesh class\
      \ used for the pickup version of weapon <br>\n\n<font color=blue>ThirdPersonMesh=</font>\
      \ lodmesh class used for the third-person version of a weapon<br>\n\n<font color=blue>StatusIcon=</font>\
      \ texture class determining what icon to use on the hud for weapon <br>\n\n\
      <font color=blue>bMuzzleFlashParticles=</font> <br>\n\n<font color=blue>MuzzleFlashStyle=</font>\
      \ <br>\n\n<font color=blue>MuzzleFlashMesh=</font> lodmesh class used for the\
      \ third-person view of the muzzleflash <br>\n\n<font color=blue>MuzzleFlashScale=</font>\
      \ scale of MuzzleFlashMesh <br>\n\n<font color=blue>MuzzleFlashTexture=</font>\
      \ texture class used on MuzzleFlashMesh, can be animated <br>\n\n<font color=blue>PickupSound=</font>\
      \ sound class played upon weapon pickup <br>\n\n<font color=blue>Icon=</font>\
      \ texture class used on hud, similar to status icon<br>\n\n<font color=blue>bHidden=</font>\
      \ [[Legacy:Boolean|Boolean]] setting used to make weapon invisible ingame <br>\n\
      \n<font color=blue>Mesh=</font> lodmesh class displayed in weapon info screens,\
      \ UnrealED'smesh editor for example<br>\n\n<font color=blue>bNoSmooth=</font>\
      \ [[Legacy:Boolean|Boolean]] setting to turn off Unreal's automatic poly smoothing,\
      \ makes meshes look more angular, good for flat edges or sharp corners (can\
      \ be manipulated on a per-poly basis using [[Legacy:UnrealFX|UnrealFX]])<br>\n\
      \n<font color=blue>CollisionRadius=</font> amount of unreal units horizontally\
      \ from weapon origin collision occurs, see [[Legacy:Collision Detection|Collision\
      \ Detection]]<br>\n\n<font color=blue>CollisionHeight=</font> amount of unreal\
      \ units vertically collision occurs see[[Legacy:Collision Detection|Collision\
      \ Detection]] <br>\n\n<font color=blue>Rotation=</font> <br>\n\n<font color=blue>BobDamping=</font>\
      \ how much to damp view bob<br>\n\n<font color=blue>Mass=</font> measure of\
      \ mass of an object, only use i know of is so [[Legacy:Pawn (UT)|Pawn (UT)]]\
      \ can determine which player animation to play with which items. e.g. mass <\
      \ 20 means small weapon hold and fire anims like pistol, mass > 20 means large\
      \ weapon hold and fire anims using 2 hands spread like rocket launcher. <br>\n\
      \n<font color=blue>SoundRadius=</font> <br>\n\n<font color=blue>SoundVolume=</font>\
      \ <br>\n\n<font color=blue>LightEffect=</font> <br>\n\n<font color=blue>LightBrightness=</font>\
      \ <br>\n\n<font color=blue>LightHue=</font> <br>\n\n<font color=blue>LightSaturation=</font>\
      \ <br>\n\n<font color=blue>LightRadius=</font> <br>"
  properties: []
  revId: 43444
name: "Legacy:Default Properties For Weapons"
revision:
  revid: 43444
  parentid: 2580
  user: "213.65.6.34"
  timestamp: 1276341272.000000000
  comment: ""
timestamp: 1668799636.175505000
