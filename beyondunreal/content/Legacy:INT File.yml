---
parse:
  title: "Legacy:INT File"
  text:
    text: "<p>INT files are one of the <a href=\"/Legacy:Unreal_Engine\" title=\"\
      Legacy:Unreal Engine\">Unreal Engine</a>'s <a href=\"/Legacy:File_Format\" title=\"\
      Legacy:File Format\">file formats</a>. These files are used by the Unreal engine\
      \ for reference. Instead of searching all the packages made accessible to it\
      \ to find the resources it's looking for, it simply reads the lists of resources\
      \ contained in these files. In addition, they are used for language localization\
      \ and that's the origin of the file extension .int for \"international\" as\
      \ well.<i>(You can do so many things with .int files, we could make a tutorial\
      \ just for them – Wormbo)</i></p>\n<p>These (and all other <a href=\"/Legacy:Localization\"\
      \ title=\"Legacy:Localization\">localization</a> files like DET, ITT, FRT, etc.)\
      \ look much like <a href=\"/Legacy:INI_File\" title=\"Legacy:INI File\">INI\
      \ files</a>. They consist of one or more sections which start with the section's\
      \ name in brackets followed by Key=Value pairs.</p>\n<p></p>\n<div id=\"toc\"\
      \ class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li\
      \ class=\"toclevel-1 tocsection-1\"><a href=\"#File_Content\"><span class=\"\
      tocnumber\">1</span> <span class=\"toctext\">File Content</span></a>\n<ul>\n\
      <li class=\"toclevel-2 tocsection-2\"><a href=\"#Public_Section\"><span class=\"\
      tocnumber\">1.1</span> <span class=\"toctext\">Public Section</span></a>\n<ul>\n\
      <li class=\"toclevel-3 tocsection-3\"><a href=\"#Object\"><span class=\"tocnumber\"\
      >1.1.1</span> <span class=\"toctext\">Object</span></a></li>\n<li class=\"toclevel-3\
      \ tocsection-4\"><a href=\"#Preferences\"><span class=\"tocnumber\">1.1.2</span>\
      \ <span class=\"toctext\">Preferences</span></a></li>\n</ul>\n</li>\n<li class=\"\
      toclevel-2 tocsection-5\"><a href=\"#Localization_Sections\"><span class=\"\
      tocnumber\">1.2</span> <span class=\"toctext\">Localization Sections</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#UnrealScript_Functions\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">UnrealScript Functions</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-7\"><a href=\"#Available_in_all_versions_of_the_UnrealEngine\"\
      ><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Available in all\
      \ versions of the UnrealEngine</span></a></li>\n<li class=\"toclevel-2 tocsection-8\"\
      ><a href=\"#Available_in_UnrealEngine2\"><span class=\"tocnumber\">2.2</span>\
      \ <span class=\"toctext\">Available in UnrealEngine2</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-9\"><a href=\"#Localized_versions\"><span class=\"tocnumber\"\
      >2.3</span> <span class=\"toctext\">Localized versions</span></a></li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"#Related_Topics\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-11\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"File_Content\">File Content</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:INT_File?section=1\" title=\"Edit section: File Content\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span\
      \ class=\"mw-headline\" id=\"Public_Section\">Public Section</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=2\"\
      \ title=\"Edit section: Public Section\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The <code>[Public]</code> section can take two different\
      \ keys, <code>Object</code> and <code>Preferences</code>. These can be used\
      \ as often as needed.</p>\n<h4><span class=\"mw-headline\" id=\"Object\">Object</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:INT_File?section=3\" title=\"Edit section: Object\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>General syntax:</p>\n\
      <pre>Object=(Name=<i>Package.ObjectName</i>,Class=<i>ObjectClass</i>,MetaClass=<i>Package.MetaClassName</i>,Description=\"\
      <i>descriptive string</i>\")\n</pre>\n<dl>\n<dt>Name&#160;</dt>\n<dd>Arbitrary\
      \ name; generally, must refer to an existing class. (Though that's no engine\
      \ requirement. If you work with GetNextIntDesc to retrieve Object keys yourself,\
      \ the Name argument can be anything.)</dd>\n</dl>\n<dl>\n<dt>Class&#160;</dt>\n\
      <dd>Class of the object described by this line. In many cases, that's simply\
      \ <code>Class</code> if the Object line refers to a class.</dd>\n</dl>\n<dl>\n\
      <dt>MetaClass&#160;</dt>\n<dd>Common superclass of all objects described in\
      \ Object lines that belong together; for mutators, that'd be <code>Engine.Mutator</code>,\
      \ for instance. (This class name is used as GetNextIntDesc's first parameter.)</dd>\n\
      </dl>\n<dl>\n<dt>Description&#160;</dt>\n<dd>Arbitrary description (optional),\
      \ also retrieved by GetNextIntDesc.</dd>\n</dl>\n<p>In <a href=\"/Legacy:UT\"\
      \ title=\"Legacy:UT\" class=\"mw-redirect\">UT</a>, Object entries are used\
      \ to make the following items known to the game:</p>\n<table>\n<tr>\n<td><b>Item</b></td>\n\
      <td><b>MetaClass</b></td>\n<td><b>Name</b></td>\n<td><b>Explanation</b></td>\n\
      </tr>\n<tr>\n<td>Mutator</td>\n<td><code>Engine.Mutator</code></td>\n<td><a\
      \ href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\">Mutator</a> subclass</td>\n\
      <td>Registers a mutator to make it show up in the <i>Mutators</i> dialog box\
      \ when starting a game. Description is \"Name,Description\".</td>\n</tr>\n<tr>\n\
      <td>Game Type</td>\n<td><code>Botpack.TournamentGameInfo</code></td>\n<td><a\
      \ href=\"/Legacy:TournamentGameInfo\" title=\"Legacy:TournamentGameInfo\">TournamentGameInfo</a>\
      \ subclass</td>\n<td>Registers a game type to make it show up in the <i>Game\
      \ Type</i> drop-down box when starting a game. Description is optional and specifies\
      \ the game type's category.</td>\n</tr>\n<tr>\n<td>Key Bindings</td>\n<td><code>UTMenu.UTExtraKeyBindings</code></td>\n\
      <td><a href=\"/Legacy:UTExtraKeyBindings\" title=\"Legacy:UTExtraKeyBindings\"\
      >UTExtraKeyBindings</a> subclass</td>\n<td>Displays the extra key bindings defined\
      \ in the given class's default properties in the standard key binder dialog.</td>\n\
      </tr>\n<tr>\n<td>Map List</td>\n<td><code>Engine.MapList</code></td>\n<td><a\
      \ href=\"/Legacy:MapList\" title=\"Legacy:MapList\">MapList</a> subclass</td>\n\
      <td>Uses the maps in the given class's default properties as the default map\
      \ list for this game type.</td>\n</tr>\n<tr>\n<td>Mod Menu Item</td>\n<td><code>UMenu.UMenuModMenuItem</code></td>\n\
      <td><a href=\"/Legacy:UMenuModMenuItem\" title=\"Legacy:UMenuModMenuItem\">UMenuModMenuItem</a>\
      \ subclass</td>\n<td>Puts an item in the <i>Mods</i> menu. Description is optional\
      \ and uses the structure \"Item Caption,Description\".</td>\n</tr>\n<tr>\n<td>Server\
      \ Browser Tab</td>\n<td><code>UTBrowser.UTBrowserServerListWindow</code></td>\n\
      <td><a href=\"/edit/Legacy:UTBrowserServerListWindow?redlink=1\" class=\"new\"\
      \ title=\"Legacy:UTBrowserServerListWindow (page does not exist)\">UTBrowserServerListWindow</a>\
      \ subclass</td>\n<td>Displays a new tab in Unreal Tournament's built-in server\
      \ browser.</td>\n</tr>\n<tr>\n<td>Weapons (Unreal)</td>\n<td><code>Engine.Weapon</code></td>\n\
      <td><a href=\"/Legacy:Weapon_(UT)\" title=\"Legacy:Weapon (UT)\">Weapon (UT)</a>\
      \ subclass</td>\n<td>Registers weapons that are not a subclass of <a href=\"\
      /Legacy:TournamentWeapon\" title=\"Legacy:TournamentWeapon\">TournamentWeapon</a>.\
      \ Not used in UT, but some custom weapon priority tools use it.</td>\n</tr>\n\
      <tr>\n<td>Weapons (Unreal Tournament)</td>\n<td><code>Botpack.TournamentWeapon</code></td>\n\
      <td><a href=\"/Legacy:TournamentWeapon\" title=\"Legacy:TournamentWeapon\">TournamentWeapon</a>\
      \ subclass</td>\n<td>Registers weapons that are a subclass of <a href=\"/Legacy:TournamentWeapon\"\
      \ title=\"Legacy:TournamentWeapon\">TournamentWeapon</a>. In UT only members\
      \ of the Botpack package are displayed in the priority window, but some custom\
      \ weapon priority tools can display all weapons.</td>\n</tr>\n</table>\n<p>In\
      \ <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>\
      \ the following Object entries are used:</p>\n<table>\n<tr>\n<td><b>Item</b></td>\n\
      <td><b>MetaClass</b></td>\n<td><b>Name</b></td>\n<td><b>Explanation</b></td>\n\
      </tr>\n<tr>\n<td>Mutator</td>\n<td><code>Engine.Mutator</code></td>\n<td><a\
      \ href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\">Mutator</a> subclass</td>\n\
      <td>Registers a mutator to make it show up in the <i>Mutators</i> dialog box\
      \ when starting a game. Description is not used in the GUI, but is nevertheless\
      \ specified for the default mutators.</td>\n</tr>\n<tr>\n<td>Game Type</td>\n\
      <td><code>Engine.GameInfo</code></td>\n<td><a href=\"/Legacy:GameInfo\" title=\"\
      Legacy:GameInfo\">GameInfo</a> subclass</td>\n<td>Registers a game type to make\
      \ it show up in the Game Type drop-down box when starting a game. Description\
      \ is important and takes the form \"A|B|C|D|E\" with the following meanings:\n\
      <ul>\n<li>A = Prefix of the maps used by this game type</li>\n<li>B = Gametype's\
      \ display name.</li>\n<li>C = a <a href=\"/Legacy:Tab_InstantActionBaseRules\"\
      \ title=\"Legacy:Tab InstantActionBaseRules\">Tab_InstantActionBaseRules</a>\
      \ subclass that - loads a class that allows mod author to change the tab for\
      \ the game type options</li>\n<li>D = A <a href=\"/Legacy:MapList\" title=\"\
      Legacy:MapList\">MapList</a> class used to save the current map list selection.</li>\n\
      <li>E = \"true\" for teamgames, \"false\" otherwise</li>\n</ul>\n</td>\n</tr>\n\
      <tr>\n<td>Weapons</td>\n<td><code>Engine.Weapon</code></td>\n<td><a href=\"\
      /Legacy:Weapon\" title=\"Legacy:Weapon\">Weapon</a> subclass</td>\n<td></td>\n\
      </tr>\n</table>\n<p>\" to create line breaks in the description. |}</p>\n<p><a\
      \ href=\"/Legacy:UT2004\" title=\"Legacy:UT2004\" class=\"mw-redirect\">UT2004</a>\
      \ has replaced the use of INT files for listing weapons, mutators, gametypes,\
      \ vehicles, crosshairs, announcers and maps with a new cache library system,\
      \ where class names and their cacheable properties are automatically exported\
      \ to UCL (\"Unreal Cache Library\") files when compiling those classes. It does\
      \ use INT files for voicepacks, though:</p>\n<table>\n<tr>\n<td><b>Item</b></td>\n\
      <td><b>MetaClass</b></td>\n<td><b>Name</b></td>\n<td><b>Explanation</b></td>\n\
      </tr>\n<tr>\n<td>Voicepack</td>\n<td><code>XGame.xVoicePack</code></td>\n<td><a\
      \ href=\"/edit/Legacy:XVoicePack?redlink=1\" class=\"new\" title=\"Legacy:XVoicePack\
      \ (page does not exist)\">xVoicePack</a> subclass</td>\n<td>Registers a voicepack\
      \ to make it show up in the character selection screen. Description is not specified.</td>\n\
      </tr>\n</table>\n<h4><span class=\"mw-headline\" id=\"Preferences\">Preferences</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:INT_File?section=4\" title=\"Edit section: Preferences\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>General\
      \ syntax:</p>\n<pre>Preferences=(Caption=\"<i>display name</i>\",Parent=\"<i>display\
      \ name of parent</i>\",Class=<i>Package.ClassName</i>,Category=<i>variable group\
      \ name</i>,Immediate=True)\n</pre>\n<p>This is used to create the options available\
      \ in the <a href=\"/Legacy:UnrealEd_Advanced_Options\" title=\"Legacy:UnrealEd\
      \ Advanced Options\">UnrealEd Advanced Options</a> window.<br />\nEither <tt>Class</tt>,\
      \ <tt>Category</tt> and <tt>Immediate</tt> are left out or <tt>Class</tt> has\
      \ to be a valid UnrealScript class and <tt>Category</tt> should be a variable\
      \ group used in that class. (see <a href=\"/Legacy:Variable_Syntax\" title=\"\
      Legacy:Variable Syntax\">Variable Syntax</a>)</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Localization_Sections\">Localization Sections</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=5\"\
      \ title=\"Edit section: Localization Sections\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Used to localize strings to different (natural) languages.\
      \ (also see <a href=\"/Legacy:Localization\" title=\"Legacy:Localization\">Localization</a>)</p>\n\
      <p>To create a class variable with different default values for different languages\
      \ use this syntax in an UnrealScript class:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> aClassName <span class=\"kw1\">extends</span>\
      \ aSuper<span class=\"re0\">Class</span>&lt; SEMI &gt;\n \n<span class=\"kw1\"\
      >var</span> <span class=\"kw1\">localized</span> <span class=\"kw5\">string</span>\
      \ Description;\n<span class=\"kw1\">var</span> <span class=\"kw1\">localized</span>\
      \ <span class=\"kw5\">float</span> SoundLength;\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n     Description<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"An example class showing localization.\"</span>\n     SoundLength<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">2.750000</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>This class is part of a package Example.u.</p>\n\
      <p>You can now create localized versions of this class by writing the corresponding\
      \ localization files. This will be easier if you use UnrealEd to create the\
      \ international (English) version of this file first. Open UnrealEd, load Example.u\
      \ and type \"dumpint example\" at the <a href=\"/Legacy:UnrealEd_Console\" title=\"\
      Legacy:UnrealEd Console\">console</a>. UnrealEd created the file Example.int\
      \ for you which contains all localizable variables <i>that have been set in\
      \ the defaultproperties</i>.</p>\n<p>For this example the file will look like\
      \ this:</p>\n<pre>[aClassName]\nDescription=An example class showing localization.\n\
      SoundLength=2.750000\n</pre>\n<p>You can copy this file and change the extension\
      \ to the desired language, e.g. DET. Now you can translate the strings and adjust\
      \ the other variables to suit the new language:</p>\n<pre>[aClassName]\nDescription=Eine\
      \ Beispielklasse, die Localization veranschaulicht.\nSoundLength=2.930000\n\
      </pre>\n<p>Since the name of the new file is Example.det the values in it automatically\
      \ become the default values of <code>aClassName</code> when this language is\
      \ selected.</p>\n<p><b>Note:</b> You can't use <i>dumpint</i> in UnrealEd due\
      \ to a bug in the current UT2003 version. UnrealEd will crash if you try. Use:\
      \ <code>ucc dumpint &lt;package(s)&gt;</code> instead.</p>\n<h2><span class=\"\
      mw-headline\" id=\"UnrealScript_Functions\">UnrealScript Functions</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:INT_File?section=6\" title=\"Edit section: UnrealScript\
      \ Functions\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Available_in_all_versions_of_the_UnrealEngine\"\
      >Available in all versions of the UnrealEngine</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=7\"\
      \ title=\"Edit section: Available in all versions of the UnrealEngine\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dt>string GetNextInt\
      \ (string ClassName, int Num)&#160;</dt>\n<dd>Returns the <code>Class</code>\
      \ string from an Object entry for the MetaClass given by <code>ClassName</code>.\
      \ <code>Num</code> is an index, starting from 0 (zero), that specifies which\
      \ (of multiple matching) entries to get. The function returns an empty string\
      \ if <code>Num</code> exceeds the number of available matching entries. <b>Warning:</b>\
      \ <code>ClassName</code> must refer to a valid, loaded class, or the game will\
      \ crash.</dd>\n</dl>\n<dl>\n<dt>GetNextIntDesc (string ClassName, int Num, out\
      \ string Entry, out string Description)&#160;</dt>\n<dd>Like GetNextInt, but\
      \ retrieves more detailed information about the Object entry, including the\
      \ content of the <code>Description</code> argument.</dd>\n</dl>\n<dl>\n<dt>string\
      \ Localize (string SectionName, string KeyName, string PackageName)&#160;</dt>\n\
      <dd>Returns the localized string value of the item given by <code>KeyName</code>\
      \ in the section given by <code>SectionName</code> for the package <code>PackageName</code>.\
      \ Only rarely needed thanks to the <a href=\"/Legacy:Localization\" title=\"\
      Legacy:Localization\">localized</a> keyword in <a href=\"/Legacy:Variable_Syntax\"\
      \ title=\"Legacy:Variable Syntax\">variable declarations</a> that automatically\
      \ performs this lookup. (Can be very handy for read-only configuration files\
      \ though.)</dd>\n</dl>\n<h3><span class=\"mw-headline\" id=\"Available_in_UnrealEngine2\"\
      >Available in UnrealEngine2</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=8\"\
      \ title=\"Edit section: Available in UnrealEngine2\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<dl>\n<dt>GetAllInt (string MetaClass,\
      \ array&lt;string&gt; Entries) [static]&#160;</dt>\n<dd>Similar to <tt>GetNextInt()</tt>,\
      \ but returns all entries for the MetaClass in the Entries array. <i>(Seems\
      \ to work even though the <b>out</b> parameter modifier is missing?)</i></dd>\n\
      <dt>GetAllIntDesc (string MetaClass, out array&lt;string&gt; Entry, out array&lt;string&gt;\
      \ Description) [static]&#160;</dt>\n<dd>Similar to <tt>GetNextIntDesc()</tt>,\
      \ but returns all entries and their descriptions through the Entry and Description\
      \ arrays.</dd>\n</dl>\n<h3><span class=\"mw-headline\" id=\"Localized_versions\"\
      >Localized versions</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:INT_File?section=9\" title=\"Edit section: Localized\
      \ versions\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <dl>\n<dt>Known versions&#160;</dt>\n<dd></dd>\n</dl>\n<dl>\n<dd>\n<ul>\n<li>.DET\
      \ - German</li>\n<li>.EST - Spanish</li>\n<li>.FRT - French</li>\n<li>.INT -\
      \ English</li>\n<li>.ITT - Italian</li>\n<li>.KOT - Korean</li>\n<li>.TCT -\
      \ Czech</li>\n<li>.RUT - Russian</li>\n</ul>\n</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=10\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Create_An_INT_File\" title=\"\
      Legacy:Create An INT File\">Create An INT File</a></li>\n<li><a href=\"/Legacy:File_Format\"\
      \ title=\"Legacy:File Format\">File Format</a></li>\n<li><a href=\"/Legacy:Localization\"\
      \ title=\"Legacy:Localization\">Localization</a></li>\n<li><a href=\"/Legacy:Unreal_Engine\"\
      \ title=\"Legacy:Unreal Engine\">Unreal Engine</a></li>\n<li><a href=\"/Legacy:DumpIntCommandlet\"\
      \ title=\"Legacy:DumpIntCommandlet\">DumpIntCommandlet</a></li>\n</ul>\n<h2><span\
      \ class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INT_File?section=11\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>JoeDark:</b> Snagged the GameType part from the\
      \ mailing list. I'm not sure exactly on the etiquette of such things, should\
      \ I have asked DJPaul before posting it here (it was his post)? Or is it considered\
      \ public domain? At any rate, I couldn't find any better place to put it. Also,\
      \ did someone want to place the UT stuff on a seperate page or is all of this\
      \ still relevent to UT2003?</p>\n<p><b>Wormbo:</b> I started a new table for\
      \ UT2k3 INT stuff from what I found out from looking at the INT files and the\
      \ code handling them.</p>\n<p><b>DJPaul:</b> JoeDark - it was my post, it is\
      \ considered public domain (that sort of info), and you're more than welcome\
      \ to quote anything usefull I say here.</p>\n<p><b>SuperApe:</b> What are all\
      \ the known extentions for the files containing localized strings in other languages?\
      \ (.DET is German, What are the others?)</p>\n<p><b>Jan:</b></p>\n<ul>\n<li>.DET\
      \ - German</li>\n<li>.EST - Spanish</li>\n<li>.FRT - French</li>\n<li>.INT -\
      \ English</li>\n<li>.ITT - Italian</li>\n<li>.KOT - Korean</li>\n</ul>\n<p>But\
      \ I don't know .SMT &amp; .TMT</p>\n<p><b>Switch:`</b> Guessing:</p>\n<ul>\n\
      <li>.SMT - Simplified Mandarin</li>\n<li>.TMT - Traditional Mandarin</li>\n\
      </ul>\n<p><b>SuperApe:</b> That's great. Yeah, .KOT must be Korean. There's\
      \ several stock font textures of Korean characters. I'm finding people to translate\
      \ my .INT file so I can release it to foriegn language sites announcing or hosting\
      \ my mutator.</p>\n<p><b>Xian:</b> Did any of you find any SMT or TMT file definitions\
      \ or are you just guessing&#160;?</p>\n<p><b>SuperApe:</b> Switch was guessing,\
      \ but doing a little searching, it appears that the guess is likely correct.\
      \ EDIT: To confirm, it has been suggested that UT2003 patch files may include\
      \ .SMT and .TMT files, so one with a knowledge of Simplified/Traditional Mandarin\
      \ could take a look at those files and give a definitive answer.</p>\n\n<!--\
      \ \nNewPP limit report\nCPU time usage: 0.062 seconds\nReal time usage: 0.064\
      \ seconds\nPreprocessor visited node count: 62/1000000\nPreprocessor generated\
      \ node count: 90/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1471-0!*!0!!en!*!* and timestamp 20221118052451 and revision\
      \ id 44482\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:TournamentGameInfo"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:Create An INT File"
  - ns: 100
    exists: false
    name: "Legacy:XVoicePack"
  - ns: 100
    exists: true
    name: "Legacy:MapList"
  - ns: 100
    exists: true
    name: "Legacy:File Format"
  - ns: 100
    exists: true
    name: "Legacy:Mutator"
  - ns: 100
    exists: true
    name: "Legacy:Tab InstantActionBaseRules"
  - ns: 100
    exists: true
    name: "Legacy:TournamentWeapon"
  - ns: 100
    exists: true
    name: "Legacy:UT"
  - ns: 100
    exists: true
    name: "Legacy:UTExtraKeyBindings"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Advanced Options"
  - ns: 100
    exists: true
    name: "Legacy:Variable Syntax"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Weapon (UT)"
  - ns: 100
    exists: true
    name: "Legacy:GameInfo"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Console"
  - ns: 100
    exists: true
    name: "Legacy:Weapon"
  - ns: 100
    exists: true
    name: "Legacy:INI File"
  - ns: 100
    exists: false
    name: "Legacy:UTBrowserServerListWindow"
  - ns: 100
    exists: true
    name: "Legacy:Localization"
  - ns: 100
    exists: true
    name: "Legacy:UT2004"
  - ns: 100
    exists: true
    name: "Legacy:DumpIntCommandlet"
  - ns: 100
    exists: true
    name: "Legacy:UMenuModMenuItem"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "File Content"
    number: "1"
    index: "1"
    fromtitle: "Legacy:INT_File"
    byteoffset: 816
    anchor: "File_Content"
  - toclevel: 2
    level: "3"
    line: "Public Section"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:INT_File"
    byteoffset: 835
    anchor: "Public_Section"
  - toclevel: 3
    level: "4"
    line: "Object"
    number: "1.1.1"
    index: "3"
    fromtitle: "Legacy:INT_File"
    byteoffset: 1010
    anchor: "Object"
  - toclevel: 3
    level: "4"
    line: "Preferences"
    number: "1.1.2"
    index: "4"
    fromtitle: "Legacy:INT_File"
    byteoffset: 5897
    anchor: "Preferences"
  - toclevel: 2
    level: "3"
    line: "Localization Sections"
    number: "1.2"
    index: "5"
    fromtitle: "Legacy:INT_File"
    byteoffset: 6469
    anchor: "Localization_Sections"
  - toclevel: 1
    level: "2"
    line: "UnrealScript Functions"
    number: "2"
    index: "6"
    fromtitle: "Legacy:INT_File"
    byteoffset: 8214
    anchor: "UnrealScript_Functions"
  - toclevel: 2
    level: "3"
    line: "Available in all versions of the UnrealEngine"
    number: "2.1"
    index: "7"
    fromtitle: "Legacy:INT_File"
    byteoffset: 8243
    anchor: "Available_in_all_versions_of_the_UnrealEngine"
  - toclevel: 2
    level: "3"
    line: "Available in UnrealEngine2"
    number: "2.2"
    index: "8"
    fromtitle: "Legacy:INT_File"
    byteoffset: 9492
    anchor: "Available_in_UnrealEngine2"
  - toclevel: 2
    level: "3"
    line: "Localized versions"
    number: "2.3"
    index: "9"
    fromtitle: "Legacy:INT_File"
    byteoffset: 9995
    anchor: "Localized_versions"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "3"
    index: "10"
    fromtitle: "Legacy:INT_File"
    byteoffset: 10180
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "4"
    index: "11"
    fromtitle: "Legacy:INT_File"
    byteoffset: 10418
    anchor: "Discussion"
  displaytitle: "Legacy:INT File"
  iwlinks: []
  wikitext:
    text: "INT files are one of the [[Legacy:Unreal Engine|Unreal Engine]]'s [[Legacy:File\
      \ Format|file format]]s. These files are used by the Unreal engine for reference.\
      \  Instead of searching all the packages made accessible to it to find the resources\
      \ it's looking for, it simply reads the lists of resources contained in these\
      \ files.  In addition, they are used for language localization and that's the\
      \ origin of the file extension .int for \"international\" as well.<i>(You can\
      \ do so many things with .int files, we could make a tutorial just for them\
      \ &ndash; Wormbo)</i> \n\nThese (and all other [[Legacy:Localization|localization]]\
      \ files like DET, ITT, FRT, etc.) look much like [[Legacy:INI File|INI file]]s.\
      \ They consist of one or more sections which start with the section's name in\
      \ brackets followed by Key=Value pairs.\n\n==File Content ==\n\n===Public Section\
      \ ===\n\nThe <code>[Public]</code> section can take two different keys, <code>Object</code>\
      \ and <code>Preferences</code>. These can be used as often as needed.\n\n====Object\
      \ ====\n\nGeneral syntax:\n Object=(Name=''Package.ObjectName'',Class=''ObjectClass'',MetaClass=''Package.MetaClassName'',Description=\"\
      ''descriptive string''\")\n\n; Name : Arbitrary name; generally, must refer\
      \ to an existing class.  (Though that's no engine requirement.  If you work\
      \ with GetNextIntDesc to retrieve Object keys yourself, the Name argument can\
      \ be anything.)\n\n; Class : Class of the object described by this line.  In\
      \ many cases, that's simply <code>Class</code> if the Object line refers to\
      \ a class.\n\n; MetaClass : Common superclass of all objects described in Object\
      \ lines that belong together; for mutators, that'd be <code>Engine.Mutator</code>,\
      \ for instance.  (This class name is used as GetNextIntDesc's first parameter.)\n\
      \n; Description : Arbitrary description (optional), also retrieved by GetNextIntDesc.\n\
      \nIn [[Legacy:UT|UT]], Object entries are used to make the following items known\
      \ to the game:\n\n{|\n\n|-\n|'''Item'''\n|'''MetaClass'''\n|'''Name'''\n|'''Explanation'''\
      \ \n|-\n|Mutator\n|<code>Engine.Mutator</code>\n|[[Legacy:Mutator|Mutator]]\
      \ subclass\n|Registers a mutator to make it show up in the ''Mutators'' dialog\
      \ box when starting a game. Description is \"Name,Description\".\n|-\n|Game\
      \ Type\n|<code>Botpack.TournamentGameInfo</code>\n|[[Legacy:TournamentGameInfo|TournamentGameInfo]]\
      \ subclass\n|Registers a game type to make it show up in the ''Game Type'' drop-down\
      \ box when starting a game. Description is optional and specifies the game type's\
      \ category.\n|-\n|Key Bindings\n|<code>UTMenu.UTExtraKeyBindings</code>\n|[[Legacy:UTExtraKeyBindings|UTExtraKeyBindings]]\
      \ subclass\n|Displays the extra key bindings defined in the given class's default\
      \ properties in the standard key binder dialog.\n|-\n|Map List\n|<code>Engine.MapList</code>\n\
      |[[Legacy:MapList|MapList]] subclass\n|Uses the maps in the given class's default\
      \ properties as the default map list for this game type.\n|-\n|Mod Menu Item\n\
      |<code>UMenu.UMenuModMenuItem</code>\n|[[Legacy:UMenuModMenuItem|UMenuModMenuItem]]\
      \ subclass\n|Puts an item in the ''Mods'' menu. Description is optional and\
      \ uses the structure \"Item Caption,Description\".\n|-\n|Server Browser Tab\n\
      |<code>UTBrowser.UTBrowserServerListWindow</code>\n|[[Legacy:UTBrowserServerListWindow|UTBrowserServerListWindow]]\
      \ subclass\n|Displays a new tab in Unreal Tournament's built-in server browser.\n\
      |-\n|Weapons (Unreal)\n|<code>Engine.Weapon</code>\n|[[Legacy:Weapon (UT)|Weapon\
      \ (UT)]] subclass\n|Registers weapons that are not a subclass of [[Legacy:TournamentWeapon|TournamentWeapon]].\
      \ Not used in UT, but some custom weapon priority tools use it.\n|-\n|Weapons\
      \ (Unreal Tournament)\n|<code>Botpack.TournamentWeapon</code>\n|[[Legacy:TournamentWeapon|TournamentWeapon]]\
      \ subclass\n|Registers weapons that are a subclass of [[Legacy:TournamentWeapon|TournamentWeapon]].\
      \ In UT only members of the Botpack package are displayed in the priority window,\
      \ but some custom weapon priority tools can display all weapons.\n|}\n\nIn [[Legacy:UT2003|UT2003]]\
      \ the following Object entries are used:\n\n{|\n\n|-\n|'''Item'''\n|'''MetaClass'''\n\
      |'''Name'''\n|'''Explanation''' \n|-\n|Mutator\n|<code>Engine.Mutator</code>\n\
      |[[Legacy:Mutator|Mutator]] subclass\n|Registers a mutator to make it show up\
      \ in the ''Mutators'' dialog box when starting a game. Description is not used\
      \ in the GUI, but is nevertheless specified for the default mutators.\n|-\n\
      |Game Type\n|<code>Engine.GameInfo</code>\n|[[Legacy:GameInfo|GameInfo]] subclass\n\
      |Registers a game type to make it show up in the Game Type drop-down box when\
      \ starting a game. Description is important and takes the form <nowiki>\"A|B|C|D|E\"\
      </nowiki> with the following meanings:\n\n* A = Prefix of the maps used by this\
      \ game type\n* B = Gametype's display name.\n* C = a [[Legacy:Tab_InstantActionBaseRules|Tab_InstantActionBaseRules]]\
      \ subclass that - loads a class that allows mod author to change the tab for\
      \ the game type options\n* D = A [[Legacy:MapList|MapList]] class used to save\
      \ the current map list selection.\n* E = \"true\" for teamgames, \"false\" otherwise\n\
      \n|-\n|Weapons\n|<code>Engine.Weapon</code>\n|[[Legacy:Weapon|Weapon]] subclass\n\
      |Registers weapons. The Description value is displayed as the weapon's description\
      \ in the priority tab. You can use \"<code>{|\n\n|}\n</code>\" to create line\
      \ breaks in the description.\n|}\n\n[[Legacy:UT2004|UT2004]] has replaced the\
      \ use of INT files for listing weapons, mutators, gametypes, vehicles, crosshairs,\
      \ announcers and maps with a new cache library system, where class names and\
      \ their cacheable properties are automatically exported to UCL (\"Unreal Cache\
      \ Library\") files when compiling those classes. It does use INT files for voicepacks,\
      \ though:\n\n{|\n\n|-\n|'''Item'''\n|'''MetaClass'''\n|'''Name'''\n|'''Explanation'''\
      \ \n|-\n|Voicepack\n|<code>XGame.xVoicePack</code>\n|[[Legacy:XVoicePack|xVoicePack]]\
      \ subclass\n|Registers a voicepack to make it show up in the character selection\
      \ screen. Description is not specified.\n|}\n\n====Preferences ====\n\nGeneral\
      \ syntax:\n Preferences=(Caption=\"''display name''\",Parent=\"''display name\
      \ of parent''\",Class=''Package.ClassName'',Category=''variable group name'',Immediate=True)\n\
      \nThis is used to create the options available in the [[Legacy:UnrealEd Advanced\
      \ Options|UnrealEd Advanced Options]] window.<br />Either <tt>Class</tt>, <tt>Category</tt>\
      \ and <tt>Immediate</tt> are left out or <tt>Class</tt> has to be a valid UnrealScript\
      \ class and <tt>Category</tt> should be a variable group used in that class.\
      \ (see [[Legacy:Variable Syntax|Variable Syntax]])\n\n===Localization Sections\
      \ ===\n\nUsed to localize strings to different (natural) languages.  (also see\
      \ [[Legacy:Localization|Localization]])\n\nTo create a class variable with different\
      \ default values for different languages use this syntax in an UnrealScript\
      \ class:\n\n<uscript>\nclass aClassName extends aSuperClass;\n\nvar localized\
      \ string Description;\nvar localized float SoundLength;\n\ndefaultproperties\n\
      {\n     Description=\"An example class showing localization.\"\n     SoundLength=2.750000\n\
      }\n</uscript>\n\nThis class is part of a package Example.u.\n\nYou can now create\
      \ localized versions of this class by writing the corresponding localization\
      \ files. This will be easier if you use UnrealEd to create the international\
      \ (English) version of this file first. Open UnrealEd, load Example.u and type\
      \ \"dumpint example\" at the [[Legacy:UnrealEd Console|console]]. UnrealEd created\
      \ the file Example.int for you which contains all localizable variables ''that\
      \ have been set in the defaultproperties''.\n\nFor this example the file will\
      \ look like this:\n [aClassName]\n Description=An example class showing localization.\n\
      \ SoundLength=2.750000\n\nYou can copy this file and change the extension to\
      \ the desired language, e.g. DET. Now you can translate the strings and adjust\
      \ the other variables to suit the new language:\n [aClassName]\n Description=Eine\
      \ Beispielklasse, die Localization veranschaulicht.\n SoundLength=2.930000\n\
      \nSince the name of the new file is Example.det the values in it automatically\
      \ become the default values of <code>aClassName</code> when this language is\
      \ selected.\n\n'''Note:''' You can't use ''dumpint'' in UnrealEd due to a bug\
      \ in the current UT2003 version. UnrealEd will crash if you try. Use: <code>ucc\
      \ dumpint <package(s)> </code> instead.\n\n==UnrealScript Functions ==\n\n===Available\
      \ in all versions of the UnrealEngine===\n; string GetNextInt (string ClassName,\
      \ int Num) : Returns the <code>Class</code> string from an Object entry for\
      \ the MetaClass given by <code>ClassName</code>.  <code>Num</code> is an index,\
      \ starting from 0 (zero), that specifies which (of multiple matching) entries\
      \ to get.  The function returns an empty string if <code>Num</code> exceeds\
      \ the number of available matching entries.  '''Warning:''' <code>ClassName</code>\
      \ must refer to a valid, loaded class, or the game will crash.\n\n; GetNextIntDesc\
      \ (string ClassName, int Num, out string Entry, out string Description) : Like\
      \ GetNextInt, but retrieves more detailed information about the Object entry,\
      \ including the content of the <code>Description</code> argument.\n\n; string\
      \ Localize (string SectionName, string KeyName, string PackageName) : Returns\
      \ the localized string value of the item given by <code>KeyName</code> in the\
      \ section given by <code>SectionName</code> for the package <code>PackageName</code>.\
      \  Only rarely needed thanks to the [[Legacy:Localization|localized]] keyword\
      \ in [[Legacy:Variable Syntax|variable declarations]] that automatically performs\
      \ this lookup.  (Can be very handy for read-only configuration files though.)\n\
      \n===Available in UnrealEngine2===\n; GetAllInt (string MetaClass, array<string>\
      \ Entries) [static] : Similar to <tt>GetNextInt()</tt>, but returns all entries\
      \ for the MetaClass in the Entries array. ''(Seems to work even though the '''out'''\
      \ parameter modifier is missing?)''\n; GetAllIntDesc (string MetaClass, out\
      \ array<string> Entry, out array<string> Description) [static] : Similar to\
      \ <tt>GetNextIntDesc()</tt>, but returns all entries and their descriptions\
      \ through the Entry and Description arrays.\n\n===Localized versions===\n\n\
      ; Known versions :\n;* .DET - German\n;* .EST - Spanish\n;* .FRT - French\n\
      ;* .INT - English\n;* .ITT - Italian\n;* .KOT - Korean\n;* .TCT - Czech\n;*\
      \ .RUT - Russian\n\n==Related Topics ==\n* [[Legacy:Create An INT File|Create\
      \ An INT File]]\n* [[Legacy:File Format|File Format]]\n* [[Legacy:Localization|Localization]]\n\
      * [[Legacy:Unreal Engine|Unreal Engine]]\n* [[Legacy:DumpIntCommandlet|DumpIntCommandlet]]\n\
      \n==Discussion ==\n\n'''JoeDark:''' Snagged the GameType part from the mailing\
      \ list. I'm not sure exactly on the etiquette of such things, should I have\
      \ asked DJPaul before posting it here (it was his post)? Or is it considered\
      \ public domain? At any rate, I couldn't find any better place to put it. Also,\
      \ did someone want to place the UT stuff on a seperate page or is all of this\
      \ still relevent to UT2003?\n\n'''Wormbo:''' I started a new table for UT2k3\
      \ INT stuff from what I found out from looking at the INT files and the code\
      \ handling them.\n\n'''DJPaul:''' JoeDark - it was my post, it is considered\
      \ public domain (that sort of info), and you're more than welcome to quote anything\
      \ usefull I say here.\n\n'''SuperApe:''' What are all the known extentions for\
      \ the files containing localized strings in other languages?  (.DET is German,\
      \ What are the others?)\n\n'''Jan:'''\n* .DET - German\n* .EST - Spanish\n*\
      \ .FRT - French\n* .INT - English\n* .ITT - Italian\n* .KOT - Korean\n\nBut\
      \ I don't know .SMT & .TMT\n\n'''Switch:`''' Guessing:\n* .SMT - Simplified\
      \ Mandarin\n* .TMT - Traditional Mandarin\n\n'''SuperApe:''' That's great. \
      \ Yeah, .KOT must be Korean.  There's several stock font textures of Korean\
      \ characters.  I'm finding people to translate my .INT file so I can release\
      \ it to foriegn language sites announcing or hosting my mutator.\n\n'''Xian:'''\
      \ Did any of you find any SMT or TMT file definitions or are you just guessing\
      \ ?\n\n'''SuperApe:''' Switch was guessing, but doing a little searching, it\
      \ appears that the guess is likely correct.  EDIT: To confirm, it has been suggested\
      \ that UT2003 patch files may include .SMT and .TMT files, so one with a knowledge\
      \ of Simplified/Traditional Mandarin could take a look at those files and give\
      \ a definitive answer."
  properties: []
  revId: 44482
name: "Legacy:INT File"
revision:
  revid: 44482
  parentid: 3692
  user: "Bobbuz"
  timestamp: 1307695485.000000000
  comment: ""
timestamp: 1668763654.322739000
