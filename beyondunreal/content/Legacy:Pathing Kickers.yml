---
parse:
  title: "Legacy:Pathing Kickers"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#UT200x.27s_UTJumpPad\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">UT200x's UTJumpPad</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#UT\"><span class=\"tocnumber\"\
      >2</span> <span class=\"toctext\">UT</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-3\"><a href=\"#Related_Topics\"><span class=\"tocnumber\">3</span>\
      \ <span class=\"toctext\">Related Topics</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-4\"><a href=\"#Discussion\"><span class=\"tocnumber\">4</span>\
      \ <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\"UT200x.27s_UTJumpPad\">UT200x's UTJumpPad</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Pathing_Kickers?section=1\" title=\"Edit section: UT200x's\
      \ UTJumpPad\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\"\
      >UT2003</a>'s <a href=\"/Legacy:UTJumpPad\" title=\"Legacy:UTJumpPad\">UTJumpPad</a>\
      \ is much easier to use. Most of the pathing is taken care off by the engine,\
      \ so LiftCenter and LiftExit actors are no longer necessary. The jumppad itself\
      \ is also a <a href=\"/Legacy:NavigationPoint\" title=\"Legacy:NavigationPoint\"\
      >NavigationPoint</a> and will automagically be linked into the pathnetwork upon\
      \ a rebuild.</p>\n<p>An UTJumpPad is basically linked to a <a href=\"/Legacy:PathNode\"\
      \ title=\"Legacy:PathNode\">PathNode</a> or any other actor which can act as\
      \ one, such as another jumppad, weapons, ammo, etc., which'll function as it's\
      \ destination. This is done using the NavigationPoint -&gt; ForcedPaths[0] property.\
      \ Simply set this to the name of the destination PathNode (found in the Object\
      \ -&gt; Name property, such as <b>PathNode35</b>) and (partially) rebuild the\
      \ path network.</p>\n<p>After the rebuild you can see the jumppad's path simply\
      \ by selecting it. It'll show up as a pink parabola. If you're not satisfied\
      \ with the height of the jump, then you can change this with the JumpZModifier\
      \ property. Another rebuild is needed after changing this, or the change won't\
      \ show up in the editor nor work ingame.</p>\n<p>Finally, you can set up a sound\
      \ using the JumpSound property. Select one with the sound browser, click the\
      \ property's input field and the small \"Use\" button. (or you can manually\
      \ type it)</p>\n<p>Example maps: DM-Plunge, CTF-Face3</p>\n<h2><span class=\"\
      mw-headline\" id=\"UT\">UT</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Pathing_Kickers?section=2\"\
      \ title=\"Edit section: UT\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Pathnoding kickers in UT is an abolute pain, if not\
      \ a nigh impossibility - especially as there are a few quirks in the bot/kicker\
      \ interaction.</p>\n<p>Generally, when putting a <a href=\"/Legacy:Kicker\"\
      \ title=\"Legacy:Kicker\">Kicker</a> in a level you need to get completely consistent\
      \ results out of the <a href=\"/Legacy:Kicker\" title=\"Legacy:Kicker\">Kicker</a>\
      \ (being booted across a huge gap is great as long as you always wind up on\
      \ the other side). There are two attributes of the <a href=\"/Legacy:Kicker\"\
      \ title=\"Legacy:Kicker\">Kicker</a> that will effect this.</p>\n<dl>\n<dt>bKillVelocity&#160;</dt>\n\
      <dd>Setting this to true ensures that the player or bot velocity is \"removed\"\
      \ before the kicker velocity is applied. If this property is set to false then\
      \ it will appear that you are getting an element of random \"kick\" behaviour\
      \ even though that's not the case. I reccomend setting this to true.</dd>\n\
      <dt>bRandomise&#160;</dt>\n<dd>If this is true then you will get random behaviour\
      \ from your kicker - use at your peril&#160;:)</dd>\n</dl>\n<p>Now, besides\
      \ the kick velocity there is one other really useful attribute of the <a href=\"\
      /Legacy:Kicker\" title=\"Legacy:Kicker\">Kicker</a> - KickedClasses. If you\
      \ have ever placed a Kicker on a map that has X and Y components you will see\
      \ that every now and then the bots will simply bounce vertically upwards. For\
      \ some reason the bots do not always have the horizontal velocity components\
      \ applied to them. The KickedClasses property will let you get around this.</p>\n\
      <p>Simply add another Kicker to your map directly above the \"real\" one and\
      \ set the KickedClasses property to \"Bot\". This will ensure that only bots\
      \ are kicked by the kicker not players. Players always interact correctly with\
      \ Kickers.</p>\n<hr />\n<p>Now that we have covered off all of the basics, lets\
      \ get down to actually pathing the kicker in so that the bots will use them.\
      \ Typically a <a href=\"/Legacy:Kicker\" title=\"Legacy:Kicker\">Kicker</a>\
      \ and path is represented by these objects.</p>\n<dl>\n<dt><a href=\"/Legacy:Kicker\"\
      \ title=\"Legacy:Kicker\">Kicker</a>&#160;</dt>\n<dd>Well, you need one really\
      \ don't you. Generally you need two - a primary one for players, and a secondary\
      \ one to kick bots that have got \"stuck\" bouncing on the jump pad for eternity.</dd>\n\
      <dt><a href=\"/Legacy:SpecialEvent\" title=\"Legacy:SpecialEvent\">SpecialEvent</a>&#160;</dt>\n\
      <dd>This is used to make the kicker sound.</dd>\n<dt><a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a>&#160;</dt>\n<dd>Used to trigger the SpecialEvent.\
      \ This should also be used as a trigger for the lift in the LiftExit object.</dd>\n\
      </dl>\n<dl>\n<dd><i>You don't need a separate <a href=\"/Legacy:Trigger\" title=\"\
      Legacy:Trigger\">Trigger</a> to fire an event when the Kicker is touched. Just\
      \ set the Kicker's <a href=\"/Legacy:Event\" title=\"Legacy:Event\">Event</a>\
      \ property... —<a href=\"/Legacy:Mychaeel\" title=\"Legacy:Mychaeel\">Mychaeel</a></i></dd>\n\
      <dd><i>I did wonder about that, but that's the way Epic do it. However, I've\
      \ found that the bots use the kicker more readily if the trigger is placed on\
      \ the kicker and the bots believe they have to touch it to trigger the \"lift\"\
      . - <a href=\"/Legacy:EntropicLqd\" title=\"Legacy:EntropicLqd\">EntropicLqd</a></i></dd>\n\
      </dl>\n<dl>\n<dt><a href=\"/Legacy:LiftExit_(UT)\" title=\"Legacy:LiftExit (UT)\"\
      >LiftExit (UT)</a>&#160;</dt>\n<dd>You will need two of these. One placed just\
      \ in front of the lift exit, and one placed near the point the bots are supposed\
      \ to land. They will both need the same <tt>LiftTag</tt> property. It's also\
      \ worth while setting the <tt>LiftTrigger</tt> property to the <a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a> used to make the kicker sound. This ensures\
      \ that the bots will run into the kicker.</dd>\n<dt><a href=\"/Legacy:LiftCenter\"\
      \ title=\"Legacy:LiftCenter\">LiftCenter</a>&#160;</dt>\n<dd>In this case the\
      \ LiftCenter is primarily used to determine whether the bots will attempt to\
      \ use the kicker or not. The LiftTag property needs to be set to the same value\
      \ as the two LiftExit objects. The <tt>MaxDist2D</tt> and <tt>MaxZDiffAdd</tt>\
      \ properties define how close the <a href=\"/Legacy:LiftCenter\" title=\"Legacy:LiftCenter\"\
      >LiftCenter</a> needs to be before the bots will try and use/jump onto the lift.\
      \ By setting the <tt>LiftTrigger</tt> property these values seem to have less\
      \ of an effect. If your <a href=\"/Legacy:LiftCenter\" title=\"Legacy:LiftCenter\"\
      >LiftCenter</a> needs to be in mid air then you MUST use a <a href=\"/Legacy:JumpSpot\"\
      \ title=\"Legacy:JumpSpot\">JumpSpot</a> as LiftCenters are not pathed to if\
      \ they are floating. If you do use a <a href=\"/Legacy:JumpSpot\" title=\"Legacy:JumpSpot\"\
      >JumpSpot</a> as your lift center then its well worth setting the <tt>bAlwaysAccelerate</tt>\
      \ property to true.</dd>\n<dd>The most important thing about the placement of\
      \ the lift center is that the bot must be able to travel through it while walking\
      \ (being kicked through a lift center doesn't seem to count).</dd>\n</dl>\n\
      <p>Essentially, the common structures are as follows:</p>\n<table>\n<tr>\n<td><a\
      \ href=\"/Legacy:LiftExit_(UT)\" title=\"Legacy:LiftExit (UT)\">LiftExit (UT)</a></td>\n\
      </tr>\n<tr>\n<td style=\"text-align: center\"><a href=\"/Legacy:SpecialEvent\"\
      \ title=\"Legacy:SpecialEvent\">SpecialEvent</a><br />\n<a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a><br />\n<a href=\"/Legacy:Kicker\" title=\"\
      Legacy:Kicker\">Kicker</a><br />\n<a href=\"/Legacy:LiftCenter\" title=\"Legacy:LiftCenter\"\
      >LiftCenter</a></td>\n</tr>\n<tr>\n<td>Your big gap</td>\n</tr>\n<tr>\n<td><a\
      \ href=\"/Legacy:LiftExit_(UT)\" title=\"Legacy:LiftExit (UT)\">LiftExit (UT)</a></td>\n\
      </tr>\n</table>\n<p>or</p>\n<table>\n<tr>\n<td><a href=\"/Legacy:LiftExit_(UT)\"\
      \ title=\"Legacy:LiftExit (UT)\">LiftExit (UT)</a></td>\n</tr>\n<tr>\n<td style=\"\
      text-align: center\"><a href=\"/Legacy:SpecialEvent\" title=\"Legacy:SpecialEvent\"\
      >SpecialEvent</a><br />\n<a href=\"/Legacy:Trigger\" title=\"Legacy:Trigger\"\
      >Trigger</a><br />\n<a href=\"/Legacy:Kicker\" title=\"Legacy:Kicker\">Kicker</a></td>\n\
      </tr>\n<tr>\n<td>Your big gap</td>\n</tr>\n<tr>\n<td><a href=\"/Legacy:LiftCenter\"\
      \ title=\"Legacy:LiftCenter\">LiftCenter</a></td>\n</tr>\n<tr>\n<td><a href=\"\
      /Legacy:LiftExit_(UT)\" title=\"Legacy:LiftExit (UT)\">LiftExit (UT)</a></td>\n\
      </tr>\n</table>\n<p>If you've built the kicker this way and are still seeing\
      \ strange things happening with your bots then try using two one way lifts (set\
      \ the bOneWayPath property to true for your two <a href=\"/Legacy:LiftExit_(UT)\"\
      \ title=\"Legacy:LiftExit (UT)\">LiftExit (UT)s</a> and <a href=\"/Legacy:LiftCenter\"\
      \ title=\"Legacy:LiftCenter\">LiftCenter</a>) and see if that helps.</p>\n<p>Example\
      \ maps: UT's DM-Morpheus, CTF3-InstaTheEyes.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Pathing_Kickers?section=3\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Bot_Support\" title=\"Legacy:Bot\
      \ Support\">Bot Support</a> – Main topic\n<ul>\n<li><a href=\"/Legacy:Bot_Pathing\"\
      \ title=\"Legacy:Bot Pathing\">Bot Pathing</a> – Concepts and elements of the\
      \ botpath network\n<ul>\n<li><a href=\"/Legacy:Basic_Bot_Pathing\" title=\"\
      Legacy:Basic Bot Pathing\">Basic Bot Pathing</a> – A tutorial on basic bot pathing</li>\n\
      </ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Legacy:UTJumpPad\" title=\"Legacy:UTJumpPad\"\
      >UTJumpPad</a>: UT200x's UTJumpPad page in the <a href=\"/Legacy:Actor_Class_Hierarchy\"\
      \ title=\"Legacy:Actor Class Hierarchy\">Actor Class Hierarchy</a></li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Pathing_Kickers?section=4\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.048 seconds\n\
      Real time usage: 0.050 seconds\nPreprocessor visited node count: 21/1000000\n\
      Preprocessor generated node count: 46/1000000\nPost‐expand include size: 30/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:2394-0!*!0!!en!*!*\
      \ and timestamp 20221118020327 and revision id 5741\n -->\n"
  categories:
  - sortkey: "Pathing Kickers"
    name: "Legacy_Tutorial"
  - sortkey: "Pathing Kickers"
    name: "Legacy_Mapping"
  links:
  - ns: 100
    exists: true
    name: "Legacy:EntropicLqd"
  - ns: 100
    exists: true
    name: "Legacy:PathNode"
  - ns: 100
    exists: true
    name: "Legacy:Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:LiftCenter"
  - ns: 100
    exists: true
    name: "Legacy:Bot Support"
  - ns: 100
    exists: true
    name: "Legacy:SpecialEvent"
  - ns: 100
    exists: true
    name: "Legacy:LiftExit (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Kicker"
  - ns: 100
    exists: true
    name: "Legacy:Event"
  - ns: 100
    exists: true
    name: "Legacy:JumpSpot"
  - ns: 100
    exists: true
    name: "Legacy:NavigationPoint"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Actor Class Hierarchy"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Basic Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:UTJumpPad"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "UT200x's UTJumpPad"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Pathing_Kickers"
    byteoffset: 0
    anchor: "UT200x.27s_UTJumpPad"
  - toclevel: 1
    level: "2"
    line: "UT"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Pathing_Kickers"
    byteoffset: 1336
    anchor: "UT"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Pathing_Kickers"
    byteoffset: 6401
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Pathing_Kickers"
    byteoffset: 6780
    anchor: "Discussion"
  displaytitle: "Legacy:Pathing Kickers"
  iwlinks: []
  wikitext:
    text: "==UT200x's UTJumpPad ==\n\n[[Legacy:UT2003|UT2003]]'s [[Legacy:UTJumpPad|UTJumpPad]]\
      \ is much easier to use.  Most of the pathing is taken care off by the engine,\
      \ so LiftCenter and LiftExit actors are no longer necessary. The jumppad itself\
      \ is also a [[Legacy:NavigationPoint|NavigationPoint]] and will automagically\
      \ be linked into the pathnetwork upon a rebuild.\n\nAn UTJumpPad is basically\
      \ linked to a [[Legacy:PathNode|PathNode]] or any other actor which can act\
      \ as one, such as another jumppad, weapons, ammo, etc., which'll function as\
      \ it's destination. This is done using the NavigationPoint -> ForcedPaths[0]\
      \ property. Simply set this to the name of the destination PathNode (found in\
      \ the Object -> Name property, such as '''PathNode35''') and (partially) rebuild\
      \ the path network.\n\nAfter the rebuild you can see the jumppad's path simply\
      \ by selecting it. It'll show up as a pink parabola. If you're not satisfied\
      \ with the height of the jump, then you can change this with the JumpZModifier\
      \ property. Another rebuild is needed after changing this, or the change won't\
      \ show up in the editor nor work ingame.\n\nFinally, you can set up a sound\
      \ using the JumpSound property. Select one with the sound browser, click the\
      \ property's input field and the small \"Use\" button. (or you can manually\
      \ type it)\n\nExample maps: DM-Plunge, CTF-Face3\n\n==UT ==\n\nPathnoding kickers\
      \ in UT is an abolute pain, if not a nigh impossibility - especially as there\
      \ are a few quirks in the bot/kicker interaction.\n\nGenerally, when putting\
      \ a [[Legacy:Kicker|Kicker]] in a level you need to get completely consistent\
      \ results out of the [[Legacy:Kicker|Kicker]] (being booted across a huge gap\
      \ is great as long as you always wind up on the other side).  There are two\
      \ attributes of the [[Legacy:Kicker|Kicker]] that will effect this.\n\n; bKillVelocity\
      \ : Setting this to true ensures that the player or bot velocity is \"removed\"\
      \ before the kicker velocity is applied.  If this property is set to false then\
      \ it will appear that you are getting an element of random \"kick\" behaviour\
      \ even though that's not the case.  I reccomend setting this to true.\n; bRandomise\
      \ : If this is true then you will get random behaviour from your kicker - use\
      \ at your peril :)\n\nNow, besides the kick velocity there is one other really\
      \ useful attribute of the [[Legacy:Kicker|Kicker]] - KickedClasses.  If you\
      \ have ever placed a Kicker on a map that has X and Y components you will see\
      \ that every now and then the bots will simply bounce vertically upwards.  For\
      \ some reason the bots do not always have the horizontal velocity components\
      \ applied to them.  The KickedClasses property will let you get around this.\n\
      \nSimply add another Kicker to your map directly above the \"real\" one and\
      \ set the KickedClasses property to \"Bot\".  This will ensure that only bots\
      \ are kicked by the kicker not players.  Players always interact correctly with\
      \ Kickers.\n\n----\n\nNow that we have covered off all of the basics, lets get\
      \ down to actually pathing the kicker in so that the bots will use them.  Typically\
      \ a [[Legacy:Kicker|Kicker]] and path is represented by these objects.\n\n;\
      \ [[Legacy:Kicker|Kicker]] : Well, you need one really don't you.  Generally\
      \ you need two - a primary one for players, and a secondary one to kick bots\
      \ that have got \"stuck\" bouncing on the jump pad for eternity.\n; [[Legacy:SpecialEvent|SpecialEvent]]\
      \ : This is used to make the kicker sound.\n; [[Legacy:Trigger|Trigger]] : Used\
      \ to trigger the SpecialEvent.  This should also be used as a trigger for the\
      \ lift in the LiftExit object.\n\n:<i>You don't need a separate [[Legacy:Trigger|Trigger]]\
      \ to fire an event when the Kicker is touched. Just set the Kicker's [[Legacy:Event|Event]]\
      \ property...  &mdash;[[Legacy:Mychaeel|Mychaeel]]</i>\n:<i>I did wonder about\
      \ that, but that's the way Epic do it.  However, I've found that the bots use\
      \ the kicker more readily if the trigger is placed on the kicker and the bots\
      \ believe they have to touch it to trigger the \"lift\". - [[Legacy:EntropicLqd|EntropicLqd]]</i>\n\
      \n; [[Legacy:LiftExit (UT)|LiftExit (UT)]] : You will need two of these.  One\
      \ placed just in front of the lift exit, and one placed near the point the bots\
      \ are supposed to land.  They will both need the same <tt>LiftTag</tt> property.\
      \  It's also worth while setting the <tt>LiftTrigger</tt> property to the [[Legacy:Trigger|Trigger]]\
      \ used to make the kicker sound.  This ensures that the bots will run into the\
      \ kicker.\n; [[Legacy:LiftCenter|LiftCenter]] : In this case the LiftCenter\
      \ is primarily used to determine whether the bots will attempt to use the kicker\
      \ or not.  The LiftTag property needs to be set to the same value as the two\
      \ LiftExit objects.  The <tt>MaxDist2D</tt> and <tt>MaxZDiffAdd</tt> properties\
      \ define how close the [[Legacy:LiftCenter|LiftCenter]] needs to be before the\
      \ bots will try and use/jump onto the lift.  By setting the <tt>LiftTrigger</tt>\
      \ property these values seem to have less of an effect.  If your [[Legacy:LiftCenter|LiftCenter]]\
      \ needs to be in mid air then you MUST use a [[Legacy:JumpSpot|JumpSpot]] as\
      \ LiftCenters are not pathed to if they are floating.  If you do use a [[Legacy:JumpSpot|JumpSpot]]\
      \ as your lift center then its well worth setting the  <tt>bAlwaysAccelerate</tt>\
      \ property to true.\n: The most important thing about the placement of the lift\
      \ center is that the bot must be able to travel through it while walking (being\
      \ kicked through a lift center doesn't seem to count).\n\nEssentially, the common\
      \ structures are as follows:\n\n{|\n\n|-\n|[[Legacy:LiftExit (UT)|LiftExit (UT)]]\n\
      |->\n| style=\"text-align: center\" |[[Legacy:SpecialEvent|SpecialEvent]]<br\
      \ />[[Legacy:Trigger|Trigger]]<br />[[Legacy:Kicker|Kicker]]<br />[[Legacy:LiftCenter|LiftCenter]]\n\
      |->\n|Your big gap\n|->\n|[[Legacy:LiftExit (UT)|LiftExit (UT)]]\n|}\n\nor\n\
      \n{|\n\n|-\n|[[Legacy:LiftExit (UT)|LiftExit (UT)]]\n|->\n| style=\"text-align:\
      \ center\" |[[Legacy:SpecialEvent|SpecialEvent]]<br />[[Legacy:Trigger|Trigger]]<br\
      \ />[[Legacy:Kicker|Kicker]]\n|->\n|Your big gap\n|->\n|[[Legacy:LiftCenter|LiftCenter]]\n\
      |->\n|[[Legacy:LiftExit (UT)|LiftExit (UT)]]\n|}\n\nIf you've built the kicker\
      \ this way and are still seeing strange things happening with your bots then\
      \ try using two one way lifts (set the bOneWayPath property to true for your\
      \ two [[Legacy:LiftExit (UT)|LiftExit (UT)]]s and [[Legacy:LiftCenter|LiftCenter]])\
      \ and see if that helps.\n\nExample maps: UT's DM-Morpheus, CTF3-InstaTheEyes.\n\
      \n==Related Topics ==\n* [[Legacy:Bot Support|Bot Support]] &ndash; Main topic\n\
      ** [[Legacy:Bot Pathing|Bot Pathing]] &ndash; Concepts and elements of the botpath\
      \ network\n*** [[Legacy:Basic Bot Pathing|Basic Bot Pathing]] &ndash; A tutorial\
      \ on basic bot pathing\n* [[Legacy:UTJumpPad|UTJumpPad]]: UT200x's UTJumpPad\
      \ page in the [[Legacy:Actor Class Hierarchy|Actor Class Hierarchy]]\n\n==Discussion==\n\
      \n[[Category:Legacy Mapping|{{PAGENAME}}]]\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 5741
name: "Legacy:Pathing Kickers"
revision:
  revid: 5741
  parentid: 5743
  user: "SuperApe"
  timestamp: 1132176324.000000000
  comment: "*"
timestamp: 1668763701.927011000
