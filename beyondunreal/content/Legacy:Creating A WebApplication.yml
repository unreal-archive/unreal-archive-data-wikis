---
parse:
  title: "Legacy:Creating A WebApplication"
  text:
    text: "<p><a href=\"/Legacy:WebApplication\" title=\"Legacy:WebApplication\">WebApplications</a>\
      \ are very useful for adding online administration to your mod. You could also\
      \ use a WebApplication to display information about the server.</p>\n<p>This\
      \ document will describe how you can create your own WebApplication. This document\
      \ is focused on <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"\
      mw-redirect\">UT2003</a>, so something will not work the same if you use it\
      \ for a other version.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"\
      toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"\
      ><a href=\"#Setup\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Setup</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Configuration\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Configuration</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-3\"><a href=\"#Files\"><span class=\"tocnumber\"\
      >1.2</span> <span class=\"toctext\">Files</span></a></li>\n</ul>\n</li>\n<li\
      \ class=\"toclevel-1 tocsection-4\"><a href=\"#WebApplication_class\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">WebApplication class</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-5\"><a href=\"#MyImageServer_class_.28optional.29\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">MyImageServer class\
      \ (optional)</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"\
      #Differences_between_UT2003_and_Devastation\"><span class=\"tocnumber\">4</span>\
      \ <span class=\"toctext\">Differences between UT2003 and Devastation</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-7\"><a href=\"#Another_method_of_nationalization\"\
      ><span class=\"tocnumber\">5</span> <span class=\"toctext\">Another method of\
      \ nationalization</span></a></li>\n<li class=\"toclevel-1 tocsection-8\"><a\
      \ href=\"#Related_Topics\"><span class=\"tocnumber\">6</span> <span class=\"\
      toctext\">Related Topics</span></a></li>\n<li class=\"toclevel-1 tocsection-9\"\
      ><a href=\"#Discussion\"><span class=\"tocnumber\">7</span> <span class=\"toctext\"\
      >Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Setup\">Setup</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=1\" title=\"\
      Edit section: Setup\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Configuration\">Configuration</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Creating_A_WebApplication?section=2\" title=\"Edit section:\
      \ Configuration\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"br0\">[</span>UWeb.<span\
      \ class=\"me0\">WebServer</span><span class=\"br0\">]</span>\nApplications<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span>xWebAdmin.<span class=\"me0\">UTServerAdmin</span>\n\
      ApplicationPaths<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">=/</span>ServerAdmin\nApplications<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span>xWebAdmin.<span class=\"me0\">UTImageServer</span>\n\
      ApplicationPaths<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">=/</span>images\nApplications<span\
      \ class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span>MyMod.<span class=\"me0\">MyWebAdmin</span>\nApplicationPaths<span\
      \ class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=/</span>MyWebAdmin\nApplications<span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>MyMod.<span\
      \ class=\"me0\">MyImageServer</span>\nApplicationPaths<span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=/</span>MyImages\n\
      DefaultApplication<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\n\
      bEnabled<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\nListenPort<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">80</span>\nMaxConnections<span class=\"\
      sy0\">=</span><span class=\"nu0\">30</span>\nServerName<span class=\"sy0\">=</span>myserver.<span\
      \ class=\"me0\">com</span>\nExpirationSeconds<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">86400</span></pre></div>\n</div>\n<p>In order to use your WebApplication\
      \ you have to add it to the Applications list of the UWeb.WebServer. You can\
      \ add up to 10 WebApplications. You also have to define the ApplicationPaths\
      \ for your WebApplication. The ApplicationPath defines what WebApplication that\
      \ should handle the request.</p>\n<p>For example, when the request URL is:</p>\n\
      <pre> <a rel=\"nofollow\" class=\"external free\" href=\"http://myserver.com/ServerAdmin/somepage\"\
      >http://myserver.com/ServerAdmin/somepage</a>\n</pre>\n<p>It will forward the\
      \ request to the WebApplication with it's path set to: /ServerAdmin<br />\n\
      In this case that would be xWebAdmin.UTServerAdmin</p>\n<p>If there's no Application\
      \ assigned to the requested path it will load the default application.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Files\">Files</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=3\"\
      \ title=\"Edit section: Files\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>There are two ways to provide the data for the resulting\
      \ pages.</p>\n<p>The first method is to provide the output HTML inline with\
      \ the code. This is a bad choice because it's ugly and difficult to maintain.\
      \ It will also use more memory because the source code is much larger.</p>\n\
      <p>The second method is to provide the HTML (and images) as loose files in a\
      \ directory.</p>\n<p>All Web files are provided from the \"Web\" dir in your\
      \ Unreal directory, when you include a file in the respons the location specified\
      \ will be relative from this directory. It's best that you create a new subdirectory\
      \ for your own WebApplication.</p>\n<p>So your directory listing will look like\
      \ this:</p>\n<pre> UT2003\n |\n +- Web\n    |\n    +- images \n    +- ServerAdmin\
      \ \n    +- MyWebAdmin   (place your HTML and CSS files here)\n    +- MyImages\
      \     (for your graphics, if you use your own ImageServer)\n</pre>\n<p>For the\
      \ rest of this document we assume we have the following files in the MyWebAdmin\
      \ directory:</p>\n<ul>\n<li>index.html (the main document)</li>\n<li>about.html\
      \ (about document)</li>\n</ul>\n<p>And in the MyImages directory:</p>\n<ul>\n\
      <li>title.gif</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"WebApplication_class\"\
      >WebApplication class</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=4\" title=\"\
      Edit section: WebApplication class\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>TODO: note about <a href=\"/Legacy:Modular_Mod\" title=\"\
      Legacy:Modular Mod\">Modular_Mod</a></p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">class</span> MyWebAdmin <span class=\"kw1\">extends</span>\
      \ <span class=\"kw8\">WebApplication</span>;\n \n<span class=\"kw1\">var</span>\
      \ <span class=\"kw1\">localized</span> <span class=\"kw5\">string</span> url_root;\n\
      <span class=\"kw1\">var</span> <span class=\"kw1\">localized</span> <span class=\"\
      kw5\">string</span> file_default;\n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">localized</span> <span class=\"kw5\">string</span> file_about;</pre></div>\n\
      </div>\n<p>Create a class that extends a WebApplication.</p>\n<p>I've specified\
      \ all files that this WebApplication serves as a localisable variable. This\
      \ is usefull because it will prevents stupid typos in the filename, but also\
      \ provides you with an easy way to localise your WebApplication. For an other\
      \ language you just specify an other filename to use.</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">event</span> Init<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"co1\">// do some init stuff</span>\n  <span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">Init</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"MyWebAdmin loaded\"</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>The Init method is called when the WebApplication\
      \ will be loaded. If you need to load some things, or find some references (find\
      \ a mutator or something), you should do it here.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">event</span> <span class=\"kw5\">bool</span>\
      \ PreQuery<span class=\"br0\">(</span><span class=\"kw8\">WebRequest</span>\
      \ Request, <span class=\"kw8\">WebResponse</span> Response<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw7\">Level</span>.<span\
      \ class=\"kw7\">Game</span>.<span class=\"me0\">AccessControl</span>.<span class=\"\
      me0\">ValidLogin</span><span class=\"br0\">(</span>Request.<span class=\"me0\"\
      >Username</span>, Request.<span class=\"me0\">Password</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n\
      \    Response.<span class=\"me0\">FailAuthentication</span><span class=\"br0\"\
      >(</span><span class=\"kw7\">Level</span>.<span class=\"kw7\">Game</span>.<span\
      \ class=\"me0\">GameReplicationInfo</span>.<span class=\"me0\">ServerName</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\" MyWebAdmin\"</span><span class=\"\
      br0\">)</span>;\n    <span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      \  <span class=\"br0\">}</span>\n  <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>PreQuery\
      \ is called before the Query is handled. If your WebApplication needs some authentication\
      \ you should do it here.</p>\n<p>In the above example I call the ValidLogin\
      \ method of AccessControl, this will validate the username and password entered\
      \ in the browser. If AccessControlIni is used it will check for a valid user/pass\
      \ combination, otherwise it will just check if the adminpassword is correct.</p>\n\
      <p>When the username and password are correct it will return true and the WebApplication\
      \ will continue with the Query event. Otherwise false is returned and query\
      \ processes stops, a FailAuthentication is sent to the browser requiring the\
      \ user to login again.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> Query<span class=\"br0\">(</span><span class=\"kw8\">WebRequest</span>\
      \ Request, <span class=\"kw8\">WebResponse</span> Response<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw2\">switch</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Mid</span><span class=\"br0\"\
      >(</span>Request.<span class=\"me0\">URI</span>, <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n  <span class=\"br0\"\
      >{</span>\n    <span class=\"kw2\">case</span> <span class=\"st0\">\"\"</span>:\n\
      \    <span class=\"kw2\">case</span> file_default:  RequestIndex<span class=\"\
      br0\">(</span>Request, Response<span class=\"br0\">)</span>; <span class=\"\
      kw2\">return</span>;\n    <span class=\"kw2\">case</span> file_about:    RequestAbout<span\
      \ class=\"br0\">(</span>Request, Response<span class=\"br0\">)</span>; <span\
      \ class=\"kw2\">return</span>;\n  <span class=\"br0\">}</span>\n  Response.<span\
      \ class=\"me0\">HTTPError</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >404</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>Query event is called when\
      \ a user requests a file. The Request.URI value is relative to the Application\
      \ path defined for this application.</p>\n<p>For example, when a user requests\
      \ the following page:</p>\n<pre> <a rel=\"nofollow\" class=\"external free\"\
      \ href=\"http://myserver.com/ServerAdmin/index.html\">http://myserver.com/ServerAdmin/index.html</a>\n\
      </pre>\n<p>Request.URI will contain the following value:</p>\n<pre> /index.html\n\
      </pre>\n<p>We strip off the leading slash to check what file is requested. If\
      \ the string is empty or same as the variable file_default we will call the\
      \ RequestIndex method to handle.</p>\n<p>If none of the cases match we will\
      \ return a 404 HTTP Error.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> <span class=\"kw5\">bool</span> RequestIndex<span class=\"\
      br0\">(</span><span class=\"kw8\">WebRequest</span> Request, <span class=\"\
      kw8\">WebResponse</span> Response<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  Response.<span class=\"me0\">Subst</span><span class=\"br0\"\
      >(</span><span class=\"st0\">\"replace\"</span>, <span class=\"st0\">\"withthis\"\
      </span><span class=\"br0\">)</span>;\n  Response.<span class=\"me0\">IncludeUHTM</span><span\
      \ class=\"br0\">(</span>url_root<span class=\"sy0\">$</span><span class=\"st0\"\
      >\"/\"</span><span class=\"sy0\">$</span>file_default<span class=\"br0\">)</span>;\n\
      \  Response.<span class=\"me0\">ClearSubst</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The\
      \ above method is called by Query when the client requests either \"/\" or \"\
      /index.html\" (file_default = \"index.html\").</p>\n<p>Response.Subst will replace\
      \ all occurances of \"&lt;%replace%&gt;\" in the file to \"withthis\". Response.IncludeUHTM\
      \ will include the HTML file to send. Response.ClearSubst will perform the substitutions\
      \ in the included file.</p>\n<p>Let's say that our index.html file looks like\
      \ this:</p>\n<pre> &lt;html&gt;\n &lt;head&gt;\n   &lt;title&gt;MyWebAdmin&lt;/title&gt;\n\
      \ &lt;/head&gt;\n &lt;body&gt;\n &lt;img src=\"/MyImages/title.gif\" alt=\"\
      title image&gt;\n The replace item is replaced with: &lt;%replace%&gt; &lt;br&gt;\n\
      \ &lt;a href=\"about.html\"&gt;about this thing&lt;/a&gt;\n &lt;/body&gt;\n\
      \ &lt;/html&gt;\n</pre>\n<p>The file returned by the server will look like this:</p>\n\
      <pre> &lt;html&gt;\n &lt;head&gt;\n   &lt;title&gt;MyWebAdmin&lt;/title&gt;\n\
      \ &lt;/head&gt;\n &lt;body&gt;\n &lt;img src=\"/MyImages/title.gif\" alt=\"\
      title image&gt;\n The replace item is replaced with: withthis &lt;br&gt;\n &lt;a\
      \ href=\"about.html\"&gt;about this thing&lt;/a&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n\
      </pre>\n<p><i><b>Note:</b></i> I've added an image to the index.html doc, it\
      \ refers to /MyImages/title.gif , if you do not provide your own ImageServer\
      \ (this is usually not very useful to do) you should place your pictures in\
      \ the UWeb/images dir and use /images/title.gif as image source.</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> PostQuery<span class=\"\
      br0\">(</span><span class=\"kw8\">WebRequest</span> Request, <span class=\"\
      kw8\">WebResponse</span> Response<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  <span class=\"co1\">// do some cleanup here</span>\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p>PostQuery is called after the\
      \ the query was executed, you may want to do some clean up here.</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">defaultproperties</span> \n<span class=\"\
      br0\">{</span>\n  url_root<span class=\"sy0\">=</span><span class=\"st0\">\"\
      MyWebAdmin\"</span>\n  file_default<span class=\"sy0\">=</span><span class=\"\
      st0\">\"index.html\"</span>\n  file_about<span class=\"sy0\">=</span><span class=\"\
      st0\">\"about.html\"</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>Well these are the default values of the variable described above. If you\
      \ have localized html files you could overwrite these within an .int file, so\
      \ for file_default you could set it to: index-de.html (for german files) and\
      \ index-fr.html (for french files)</p>\n<h2><span class=\"mw-headline\" id=\"\
      MyImageServer_class_.28optional.29\">MyImageServer class (optional)</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Creating_A_WebApplication?section=5\" title=\"Edit section:\
      \ MyImageServer class (optional)\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> MyImageServer <span class=\"kw1\">extends</span> ImageServer;\n\
      \ \n<span class=\"kw1\">var</span> <span class=\"kw5\">string</span> imagedir;\n\
      \ \n<span class=\"kw1\">event</span> Query<span class=\"br0\">(</span><span\
      \ class=\"kw8\">WebRequest</span> Request, <span class=\"kw8\">WebResponse</span>\
      \ Response<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">string</span> Image;\n \n \
      \ Image <span class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span class=\"\
      br0\">(</span>Request.<span class=\"me0\">URI</span>, <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span> <span class=\"kw3\">Right</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Caps</span><span class=\"br0\">(</span>Image<span class=\"br0\"\
      >)</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">==</span> <span class=\"st0\">\".JPG\"</span> <span class=\"sy0\">||</span>\
      \ <span class=\"kw3\">Right</span><span class=\"br0\">(</span><span class=\"\
      kw3\">Caps</span><span class=\"br0\">(</span>Image<span class=\"br0\">)</span>,\
      \ <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"st0\">\".JPEG\"</span> <span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    Response.<span class=\"me0\">SendStandardHeaders</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"image/jpeg\"</span>, <span class=\"\
      kw6\">true</span><span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span> <span class=\"kw3\">Right</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Caps</span><span class=\"br0\">(</span>Image<span class=\"br0\"\
      >)</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">==</span> <span class=\"st0\">\".GIF\"</span> <span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    Response.<span class=\"me0\">SendStandardHeaders</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"image/gif\"</span>, <span class=\"\
      kw6\">true</span><span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span> <span class=\"kw3\">Right</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Caps</span><span class=\"br0\">(</span>Image<span class=\"br0\"\
      >)</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">==</span> <span class=\"st0\">\".BMP\"</span> <span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    Response.<span class=\"me0\">SendStandardHeaders</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"image/bmp\"</span>, <span class=\"\
      kw6\">true</span><span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span> <span class=\"kw3\">Right</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">Caps</span><span class=\"br0\">(</span>Image<span class=\"br0\"\
      >)</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">==</span> <span class=\"st0\">\".PNG\"</span> <span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    Response.<span class=\"me0\">SendStandardHeaders</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"image/png\"</span>, <span class=\"\
      kw6\">true</span><span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \  <span class=\"kw2\">else</span>\n  <span class=\"br0\">{</span>\n    Response.<span\
      \ class=\"me0\">HTTPError</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >404</span><span class=\"br0\">)</span>;\n    <span class=\"kw2\">return</span>;\n\
      \  <span class=\"br0\">}</span>\n  Response.<span class=\"me0\">IncludeBinaryFile</span><span\
      \ class=\"br0\">(</span> imagedir<span class=\"sy0\">$</span><span class=\"\
      st0\">\"/\"</span><span class=\"sy0\">$</span>Image <span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n  imagedir<span class=\"sy0\">=</span><span class=\"\
      st0\">\"MyImages\"</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>Providing your own ImageServer is optional, and you should only do that if\
      \ you provide a pretty large WebApplication with a lot of images.</p>\n<p>The\
      \ only thing diffirent from the default ImageServer and the above code is that\
      \ this image server will serve the files from a diffirent directory (Web/MyImages)\
      \ and I've added an extra mime type: \"image/png\"</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Differences_between_UT2003_and_Devastation\">Differences between UT2003\
      \ and Devastation</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=6\" title=\"\
      Edit section: Differences between UT2003 and Devastation\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>There are a few differences\
      \ between the code described above and that needed by <a href=\"/Legacy:Devastation\"\
      \ title=\"Legacy:Devastation\">Devastation</a>. These are detailed below. From\
      \ the looks of the code the Devastation codebase is much closer to that of UT\
      \ so these comments may apply to UT as well.</p>\n<p>All files served by the\
      \ Web Server application must be contained within the /Web directory. Files\
      \ in sub-directories (or any filename containing a forwardslash or backslash\
      \ will not be served. Instead you will see a <b>Dangerous characters in requested\
      \ filename</b> error in your log.</p>\n<p>The version of the engine used by\
      \ Devastation does not support the <i>event bool PreQuery(WebRequest Request,\
      \ WebResponse Response)</i> method within UScript (the function is defined as\
      \ native). This means that a different approach needs to be taken for user authnentication.\
      \ The code required is below.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// Add the following variables as class attributes.</span>\n\
      <span class=\"kw1\">var</span> <span class=\"kw1\">config</span> <span class=\"\
      kw5\">String</span> AdminRealm;\n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">config</span> <span class=\"kw5\">String</span> AdminUsername;\n<span\
      \ class=\"kw1\">var</span> <span class=\"kw1\">config</span> <span class=\"\
      kw5\">String</span> AdminPassword;\n \n<span class=\"co1\">// Add the following\
      \ code at the start of your Query(WebRequest Request, WebResponse Response)\
      \ function.</span>\n<span class=\"co1\">// Check authentication:</span>\n<span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>AdminUsername\
      \ <span class=\"sy0\">!=</span> <span class=\"st0\">\"\"</span> <span class=\"\
      sy0\">&amp;&amp;</span> <span class=\"kw3\">Caps</span><span class=\"br0\">(</span>Request.<span\
      \ class=\"me0\">Username</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >!=</span> <span class=\"kw3\">Caps</span><span class=\"br0\">(</span>AdminUsername<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span>\
      \ <span class=\"br0\">(</span>AdminPassword <span class=\"sy0\">!=</span> <span\
      \ class=\"st0\">\"\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      kw3\">Caps</span><span class=\"br0\">(</span>Request.<span class=\"me0\">Password</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw3\">Caps</span><span\
      \ class=\"br0\">(</span>AdminPassword<span class=\"br0\">)</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n  Response.<span\
      \ class=\"me0\">FailAuthentication</span><span class=\"br0\">(</span>AdminRealm<span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">return</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<h2><span class=\"mw-headline\" id=\"Another_method_of_nationalization\"\
      >Another method of nationalization</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=7\"\
      \ title=\"Edit section: Another method of nationalization\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>If you do not wish to store\
      \ all of your pages in localized variables then an alternative is to prefix\
      \ all of your files with the language identifier and an underscore.</p>\n<p>Declare\
      \ attributes on your class as follows:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">var</span> <span class=\"kw1\">localized</span> <span\
      \ class=\"kw5\">String</span> LangPrefix; <span class=\"co1\">// This should\
      \ be set to the language prefix (I use eng for English)</span>\n<span class=\"\
      kw1\">var</span> <span class=\"kw5\">String</span> pageDirectory;</pre></div>\n\
      </div>\n<p>Then add the following line of code to your Web Application's Init()\
      \ function:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw6\">self</span>.<span class=\"me0\">pageDirectory</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">self</span>.<span class=\"me0\">root_url</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\"/\"</span><span class=\"sy0\"\
      >$</span>self.<span class=\"me0\">LangPrefix</span><span class=\"sy0\">$</span><span\
      \ class=\"st0\">\"_\"</span>;</pre></div>\n</div>\n<p>The code to determine\
      \ which page has been requested then becomes the following:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> Query<span class=\"\
      br0\">(</span><span class=\"kw8\">WebRequest</span> Request, <span class=\"\
      kw8\">WebResponse</span> Response<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n  <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \ underscorePos;\n  <span class=\"kw1\">local</span> <span class=\"kw5\">String</span>\
      \ requestedPage;\n \n  underscorePos <span class=\"sy0\">=</span> <span class=\"\
      kw3\">InStr</span><span class=\"br0\">(</span> Request.<span class=\"me0\">URI</span>,\
      \ <span class=\"st0\">\"_\"</span> <span class=\"br0\">)</span>;\n \n  <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>underscorePos <span class=\"\
      sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">Len</span><span class=\"\
      br0\">(</span>Request.<span class=\"me0\">URI</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"\
      br0\">)</span>\n  <span class=\"br0\">{</span>\n    <span class=\"kw3\">Log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"WebAdmin:: Bad URL requested\
      \ - it has no underscore.  URL=\"</span><span class=\"sy0\">$</span>Request.<span\
      \ class=\"me0\">URI</span> <span class=\"br0\">)</span>;\n  <span class=\"br0\"\
      >}</span>\n  <span class=\"kw2\">else</span>\n  <span class=\"br0\">{</span>\n\
      \    requestedPage <span class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span\
      \ class=\"br0\">(</span>Request.<span class=\"me0\">URI</span>, underscorePos<span\
      \ class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \    Response.<span class=\"me0\">Subst</span><span class=\"br0\">(</span> <span\
      \ class=\"st0\">\"AdminDir\"</span>, <span class=\"kw6\">self</span>.<span class=\"\
      me0\">pageDirectory</span> <span class=\"br0\">)</span>; <span class=\"co1\"\
      >// Replacement for page locations done here as it applies to all pages</span>\n\
      \    <span class=\"kw3\">Log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"DevWebAdmin:: Requested page is \"</span><span class=\"sy0\">$</span>requestedPage\
      \ <span class=\"br0\">)</span>;\n \n    <span class=\"kw2\">switch</span> <span\
      \ class=\"br0\">(</span> requestedPage <span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n      <span class=\"kw2\">case</span> <span class=\"\
      st0\">\"/\"</span>:\n      <span class=\"kw2\">case</span> <span class=\"st0\"\
      >\"index.html\"</span>:\n        RequestIndex<span class=\"br0\">(</span>Request,\
      \ Response<span class=\"br0\">)</span>;\n        <span class=\"kw2\">return</span>;\n\
      \      <span class=\"co1\">// Rest of code follows as expected</span></pre></div>\n\
      </div>\n<p>And finally, when declareing URLs within your html file you should\
      \ use the following notation:</p>\n<p>&lt;a href=\"&lt;%AdminDir%&gt;index.html\"\
      &gt;Home&lt;/a&gt;</p>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\"\
      >Related Topics</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=8\" title=\"\
      Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Modular_Mod\" title=\"Legacy:Modular\
      \ Mod\">Modular Mod</a></li>\n<li><a href=\"/Legacy:Sessions\" title=\"Legacy:Sessions\"\
      >Sessions</a></li>\n<li><a href=\"/Legacy:WebServer\" title=\"Legacy:WebServer\"\
      >WebServer</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Creating_A_WebApplication?section=9\" title=\"\
      Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>EntropicLqd:</b> Tarquin - I'm thinking of writing a tutorial for a fully\
      \ working example based on the Devastation engine. Some of the content will\
      \ obviously overlap the stuff on this page (I may be able to create the pages\
      \ such that I avoid some duplication, but only by moving a fair amonut of content\
      \ around) - any thoughts? Also, I'll be wanting to include the contents of the\
      \ HTML pages used in the app. so I'll want to display the raw html. How do I\
      \ do that using Wiki Markup. I can't see anything obvious on the Wiki Markup\
      \ page (although it's quite possible I'm being particularly dense).</p>\n<p><b>Tarquin:</b>\
      \ Hmm... method 1: &lt;br /&gt; method 2:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"sy0\">&lt;</span>br<span class=\"sy0\">&gt;</span></pre></div>\n\
      </div>\n<p>I know naaaaaathing (in the style of Manuel) about this topic, so\
      \ do whatever you think is best&#160;:)</p>\n<p><b>EntropicLqd:</b> Cool. I'll\
      \ get on it. If I can send the kids outside to playin the street with cars over\
      \ the weekend I might get it done this weekend - if not middle of next week.\
      \ Considering you know nothing about it, the page is amazingly comprehensive.\
      \ RE: The markup - I was being particuarly dense.</p>\n<p><b>Tarquin:</b> I\
      \ didn't write any of it...&#160;:) Is the page you mean <a href=\"/Legacy:Devastation_Dedicated_Server\"\
      \ title=\"Legacy:Devastation Dedicated Server\">Devastation Dedicated Server</a>?\
      \ There's <a href=\"/Legacy:Running_A_Dedicated_Server_With_UCC\" title=\"Legacy:Running\
      \ A Dedicated Server With UCC\">Running A Dedicated Server With UCC</a> too.\
      \ If all these are related can we try &amp; structure it around a hub page of\
      \ some sort, eg <a href=\"/edit/Legacy:Dedicated_Server?redlink=1\" class=\"\
      new\" title=\"Legacy:Dedicated Server (page does not exist)\">Dedicated Server</a>?</p>\n\
      <p><b>EntropicLqd:</b> I'm sure it's related. And yes, a dedicated server page\
      \ would probable make a lot of sense. Has anyone found a way of getting more\
      \ than 24 hours into the day yet? I think I need to know how. So that's two\
      \ areas on my work stack - this one (Web admin) and a dedicated server page.\
      \ How nice.</p>\n<p><b>Tarquin:</b> .... erm... just leave it for someone else\
      \ to do, Ent! Don't stress it! <a href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy\
      \ To Do\">Category:Legacy To Do</a>&#160;:p</p>\n<p><b>ScratchMonkey:</b> Fixed\
      \ the Subst examples. I spent a couple hours yesterday figuring out what I was\
      \ doing wrong with a new UT2004 WebApplication subclass and called my brother\
      \ in to compare my code to that of the XWebAdmin. He spotted the need for angle\
      \ brackets in addition to the percent signs around the template variables in\
      \ the HTML template file.</p>\n<p>The Subst function actually registers a substitution,\
      \ and the actual substitution happens when the file is rendered. I'm a little\
      \ skeptical about the description of ClearSubst. I suspect it really removes\
      \ the Subst entries from an internal table in the Response object.</p>\n\n<!--\
      \ \nNewPP limit report\nCPU time usage: 0.215 seconds\nReal time usage: 0.218\
      \ seconds\nPreprocessor visited node count: 169/1000000\nPreprocessor generated\
      \ node count: 370/1000000\nPost‐expand include size: 25/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:797-0!*!0!!en!*!* and timestamp 20221118125114 and revision\
      \ id 2255\n -->\n"
  categories:
  - sortkey: "Creating A WebApplication"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Devastation Dedicated Server"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Running A Dedicated Server With UCC"
  - ns: 100
    exists: true
    name: "Legacy:WebApplication"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Devastation"
  - ns: 100
    exists: true
    name: "Legacy:Sessions"
  - ns: 100
    exists: true
    name: "Legacy:Modular Mod"
  - ns: 100
    exists: true
    name: "Legacy:WebServer"
  - ns: 100
    exists: false
    name: "Legacy:Dedicated Server"
  templates: []
  images: []
  externallinks:
  - "http://myserver.com/ServerAdmin/somepage"
  - "http://myserver.com/ServerAdmin/index.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "Setup"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 381
    anchor: "Setup"
  - toclevel: 2
    level: "3"
    line: "Configuration"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 393
    anchor: "Configuration"
  - toclevel: 2
    level: "3"
    line: "Files"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 1454
    anchor: "Files"
  - toclevel: 1
    level: "2"
    line: "WebApplication class"
    number: "2"
    index: "4"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 2523
    anchor: "WebApplication_class"
  - toclevel: 1
    level: "2"
    line: "MyImageServer class (optional)"
    number: "3"
    index: "5"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 7269
    anchor: "MyImageServer_class_.28optional.29"
  - toclevel: 1
    level: "2"
    line: "Differences between UT2003 and Devastation"
    number: "4"
    index: "6"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 8464
    anchor: "Differences_between_UT2003_and_Devastation"
  - toclevel: 1
    level: "2"
    line: "Another method of nationalization"
    number: "5"
    index: "7"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 9881
    anchor: "Another_method_of_nationalization"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "6"
    index: "8"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 11442
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "7"
    index: "9"
    fromtitle: "Legacy:Creating_A_WebApplication"
    byteoffset: 11564
    anchor: "Discussion"
  displaytitle: "Legacy:Creating A WebApplication"
  iwlinks: []
  wikitext:
    text: "[[Legacy:WebApplication|WebApplication]]s are very useful for adding online\
      \ administration to your mod. You could also use a WebApplication to  display\
      \ information about the server.\n\nThis document will describe how you can create\
      \ your own WebApplication. This document is focused on [[Legacy:UT2003|UT2003]],\
      \ so something will not work the same if you use it for a other version.\n\n\
      ==Setup ==\n\n===Configuration ===\n\n<uscript>\n[UWeb.WebServer]\nApplications[0]=xWebAdmin.UTServerAdmin\n\
      ApplicationPaths[0]=/ServerAdmin\nApplications[1]=xWebAdmin.UTImageServer\n\
      ApplicationPaths[1]=/images\nApplications[2]=MyMod.MyWebAdmin\nApplicationPaths[2]=/MyWebAdmin\n\
      Applications[3]=MyMod.MyImageServer\nApplicationPaths[3]=/MyImages\nDefaultApplication=0\n\
      bEnabled=True\nListenPort=80\nMaxConnections=30\nServerName=myserver.com\nExpirationSeconds=86400\n\
      </uscript>\n\nIn order to use your WebApplication you have to add it to the\
      \ Applications list of the UWeb.WebServer. You can add up to 10 WebApplications.\
      \ You also have to define the ApplicationPaths for your WebApplication. The\
      \ ApplicationPath defines what WebApplication that should handle the request.\n\
      \nFor example, when the request URL is:\n  http://myserver.com/ServerAdmin/somepage\n\
      \nIt will forward the request to the WebApplication with it's path set to: /ServerAdmin<br\
      \ />In this case that would be xWebAdmin.UTServerAdmin\n\nIf there's no Application\
      \ assigned to the requested path it will load the default application.\n\n===Files\
      \ ===\n\nThere are two ways to provide the data for the resulting pages.\n\n\
      The first method is to provide the output HTML inline with the code. This is\
      \ a bad choice because it's ugly and difficult to maintain. It will also use\
      \ more memory because the source code is much larger.\n\nThe second method is\
      \ to provide the HTML (and images) as loose files in a directory.\n\nAll Web\
      \ files are provided from the \"Web\" dir in your Unreal directory, when you\
      \ include a file in the respons the location specified will be relative from\
      \ this directory. It's best that you create a new subdirectory for your own\
      \ WebApplication.\n\nSo your directory listing will look like this:\n\n  UT2003\n\
      \  |\n  +- Web\n     |\n     +- images \n     +- ServerAdmin \n     +- MyWebAdmin\
      \   (place your HTML and CSS files here)\n     +- MyImages     (for your graphics,\
      \ if you use your own ImageServer)\n\nFor the rest of this document we assume\
      \ we have the following files in the MyWebAdmin directory:\n* index.html (the\
      \ main document)\n* about.html (about document)\n\nAnd in the MyImages directory:\n\
      * title.gif\n\n==WebApplication class ==\n\nTODO: note about [[Legacy:Modular_Mod|Modular_Mod]]\n\
      \n<uscript>\nclass MyWebAdmin extends WebApplication;\n\nvar localized string\
      \ url_root;\nvar localized string file_default;\nvar localized string file_about;\n\
      </uscript>\n\nCreate a class that extends a WebApplication.\n\nI've specified\
      \ all files that this WebApplication serves as a localisable variable. This\
      \ is usefull because it will prevents stupid typos in the filename, but also\
      \ provides you with an easy way to localise your WebApplication. For an other\
      \ language you just specify an other filename to use.\n\n<uscript>\nevent Init()\n\
      {\n  // do some init stuff\n  Super.Init();\n  log(\"MyWebAdmin loaded\");\n\
      }\n</uscript>\n\nThe Init method is called when the WebApplication will be loaded.\
      \ If you need to load some things, or find some references (find a mutator or\
      \ something), you should do it here.\n\n<uscript>\nevent bool PreQuery(WebRequest\
      \ Request, WebResponse Response)\n{\n  if (!Level.Game.AccessControl.ValidLogin(Request.Username,\
      \ Request.Password))\n  {\n    Response.FailAuthentication(Level.Game.GameReplicationInfo.ServerName$\"\
      \ MyWebAdmin\");\n    return false;\n  }\n  return true;\n}\n</uscript>\n\n\
      PreQuery is called before the Query is handled. If your WebApplication needs\
      \ some authentication you should do it here. \n\nIn the above example I call\
      \ the ValidLogin method of AccessControl, this will validate the username and\
      \ password entered in the browser. If AccessControlIni is used it will check\
      \ for a valid user/pass combination, otherwise it will just check if the adminpassword\
      \ is correct.\n\nWhen the username and password are correct it will return true\
      \ and the WebApplication will continue with the Query event. Otherwise false\
      \ is returned and query processes stops, a FailAuthentication is sent to the\
      \ browser requiring the user to login again.\n\n<uscript>\nfunction Query(WebRequest\
      \ Request, WebResponse Response)\n{\n  switch (Mid(Request.URI, 1))\n  {\n \
      \   case \"\":\n    case file_default:  RequestIndex(Request, Response); return;\n\
      \    case file_about:    RequestAbout(Request, Response); return;\n  }\n  Response.HTTPError(404,\
      \ \"\");\n}\n</uscript>\n\nQuery event is called when a user requests a file.\
      \ The Request.URI value is relative to the Application path defined for this\
      \ application.\n\nFor example, when a user requests the following page:\n  http://myserver.com/ServerAdmin/index.html\n\
      \nRequest.URI will contain the following value:\n  /index.html\n\nWe strip off\
      \ the leading slash to check what file is requested. If the string is empty\
      \ or same as the variable file_default we will call the RequestIndex method\
      \ to handle.\n\nIf none of the cases match we will return a 404 HTTP Error.\n\
      \n<uscript>\nfunction bool RequestIndex(WebRequest Request, WebResponse Response)\n\
      {\n  Response.Subst(\"replace\", \"withthis\");\n  Response.IncludeUHTM(url_root$\"\
      /\"$file_default);\n  Response.ClearSubst();\n  return true;\n}\n</uscript>\n\
      \nThe above method is called by Query when the client requests either \"/\"\
      \ or \"/index.html\" (file_default = \"index.html\").\n\nResponse.Subst will\
      \ replace all occurances of \"&lt;%replace%&gt;\" in the file to \"withthis\"\
      . Response.IncludeUHTM will include the HTML file to send. Response.ClearSubst\
      \ will perform the substitutions in the included file.\n\nLet's say that our\
      \ index.html file looks like this:\n\n  &lt;html>\n  &lt;head>\n    &lt;title>MyWebAdmin&lt;/title>\n\
      \  &lt;/head>\n  &lt;body>\n  &lt;img src=\"/MyImages/title.gif\" alt=\"title\
      \ image>\n  The replace item is replaced with: &lt;%replace%&gt; &lt;br>\n \
      \ &lt;a href=\"about.html\">about this thing&lt;/a>\n  &lt;/body>\n  &lt;/html>\n\
      \nThe file returned by the server will look like this:\n\n  &lt;html>\n  &lt;head>\n\
      \    &lt;title>MyWebAdmin&lt;/title>\n  &lt;/head>\n  &lt;body>\n  &lt;img src=\"\
      /MyImages/title.gif\" alt=\"title image>\n  The replace item is replaced with:\
      \ withthis &lt;br>\n  &lt;a href=\"about.html\">about this thing&lt;/a>\n  &lt;/body>\n\
      \  &lt;/html>\n\n'''''Note:''''' I've added an image to the index.html doc,\
      \ it refers to /MyImages/title.gif , if you do not provide your own ImageServer\
      \ (this is usually not very useful to do) you should place your pictures in\
      \ the UWeb/images dir and use /images/title.gif as image source.\n\n<uscript>\n\
      function PostQuery(WebRequest Request, WebResponse Response)\n{\n  // do some\
      \ cleanup here\n}\n</uscript>\n\nPostQuery is called after the the query was\
      \ executed, you may want to do some clean up here.\n\n<uscript>\ndefaultproperties\
      \ \n{\n  url_root=\"MyWebAdmin\"\n  file_default=\"index.html\"\n  file_about=\"\
      about.html\"\n}\n</uscript>\n\nWell these are the default values of the variable\
      \ described above. If you have localized html files you could overwrite these\
      \ within an .int file, so for file_default you could set it to: index-de.html\
      \ (for german files) and index-fr.html (for french files)\n\n==MyImageServer\
      \ class (optional) ==\n\n<uscript>\nclass MyImageServer extends ImageServer;\n\
      \nvar string imagedir;\n\nevent Query(WebRequest Request, WebResponse Response)\n\
      {\n  local string Image;\n\t\n  Image = Mid(Request.URI, 1);\n  if( Right(Caps(Image),\
      \ 4) == \".JPG\" || Right(Caps(Image), 5) == \".JPEG\" )\n  {\n    Response.SendStandardHeaders(\"\
      image/jpeg\", true);\n  }\n  else if( Right(Caps(Image), 4) == \".GIF\" )\n\
      \  {\n    Response.SendStandardHeaders(\"image/gif\", true);\n  }\n  else if(\
      \ Right(Caps(Image), 4) == \".BMP\" )\n  {\n    Response.SendStandardHeaders(\"\
      image/bmp\", true);\n  }\n  else if( Right(Caps(Image), 4) == \".PNG\" )\n \
      \ {\n    Response.SendStandardHeaders(\"image/png\", true);\n  }\n  else\n \
      \ {\n    Response.HTTPError(404);\n    return;\n  }\n  Response.IncludeBinaryFile(\
      \ imagedir$\"/\"$Image );\n}\n\ndefaultproperties\n{\n  imagedir=\"MyImages\"\
      \n}\n</uscript>\n\nProviding your own ImageServer is optional, and you should\
      \ only do that if you provide a pretty large WebApplication with a lot of images.\n\
      \nThe only thing diffirent from the default ImageServer and the above code is\
      \ that this image server will serve the files from a diffirent directory (Web/MyImages)\
      \ and I've added an extra mime type: \"image/png\"\n\n==Differences between\
      \ UT2003 and Devastation ==\n\nThere are a few differences between the code\
      \ described above and that needed by [[Legacy:Devastation|Devastation]].  These\
      \ are detailed below.  From the looks of the code the Devastation codebase is\
      \ much closer to that of UT so these comments may apply to UT as well.\n\nAll\
      \ files served by the Web Server application must be contained within the /Web\
      \ directory.  Files in sub-directories (or any filename containing a forwardslash\
      \ or backslash will not be served.  Instead you will see a '''Dangerous characters\
      \ in requested filename''' error in your log.\n\nThe version of the engine used\
      \ by Devastation does not support the ''event bool PreQuery(WebRequest Request,\
      \ WebResponse Response)'' method within UScript (the function is defined as\
      \ native).  This means that a different approach needs to be taken for user\
      \ authnentication.  The code required is below.\n\n<uscript>\n// Add the following\
      \ variables as class attributes.\nvar config String AdminRealm;\nvar config\
      \ String AdminUsername;\nvar config String AdminPassword;\n\n// Add the following\
      \ code at the start of your Query(WebRequest Request, WebResponse Response)\
      \ function.\n// Check authentication:\nif ((AdminUsername != \"\" && Caps(Request.Username)\
      \ != Caps(AdminUsername)) || (AdminPassword != \"\" && Caps(Request.Password)\
      \ != Caps(AdminPassword))) {\n  Response.FailAuthentication(AdminRealm);\n \
      \ return;\n}\n</uscript>\n\n==Another method of nationalization ==\n\nIf you\
      \ do not wish to store all of your pages in localized variables then an alternative\
      \ is to prefix all of your files with the language identifier and an underscore.\n\
      \nDeclare attributes on your class as follows:\n\n<uscript>\nvar localized String\
      \ LangPrefix; // This should be set to the language prefix (I use eng for English)\n\
      var String pageDirectory;\n</uscript>\n\nThen add the following line of code\
      \ to your Web Application's Init() function:\n\n<uscript>\nself.pageDirectory\
      \ = self.root_url$\"/\"$self.LangPrefix$\"_\";\n</uscript>\n\nThe code to determine\
      \ which page has been requested then becomes the following:\n\n<uscript>\nfunction\
      \ Query(WebRequest Request, WebResponse Response)\n{\n  local int underscorePos;\n\
      \  local String requestedPage;\n\n  underscorePos = InStr( Request.URI, \"_\"\
      \ );\n\n  if (underscorePos == -1 && Len(Request.URI) > 1)\n  {\n    Log( \"\
      WebAdmin:: Bad URL requested - it has no underscore.  URL=\"$Request.URI );\n\
      \  }\n  else\n  {\n    requestedPage = Mid(Request.URI, underscorePos+1);\n\
      \    Response.Subst( \"AdminDir\", self.pageDirectory ); // Replacement for\
      \ page locations done here as it applies to all pages\n    Log( \"DevWebAdmin::\
      \ Requested page is \"$requestedPage );\n\n    switch ( requestedPage )\n  \
      \  {\n      case \"/\":\n      case \"index.html\":\n        RequestIndex(Request,\
      \ Response);\n        return;\n      // Rest of code follows as expected\n</uscript>\n\
      \nAnd finally, when declareing URLs within your html file you should use the\
      \ following notation:\n\n<nowiki><a href=\"<%AdminDir%>index.html\">Home</a></nowiki>\n\
      \n==Related Topics ==\n* [[Legacy:Modular Mod|Modular Mod]]\n* [[Legacy:Sessions|Sessions]]\n\
      * [[Legacy:WebServer|WebServer]]\n\n==Discussion==\n\n'''EntropicLqd:''' Tarquin\
      \ - I'm thinking of writing a tutorial for a fully working example based on\
      \ the Devastation engine.  Some of the content will obviously overlap the stuff\
      \ on this page (I may be able to create the pages such that I avoid some duplication,\
      \ but only by moving a fair amonut of content around) - any thoughts?  Also,\
      \ I'll be wanting to include the contents of the HTML pages used in the app.\
      \ so I'll want to display the raw html.  How do I do that using Wiki Markup.\
      \  I can't see anything obvious on the Wiki Markup page (although it's quite\
      \ possible I'm being particularly dense).\n\n'''Tarquin:''' Hmm... method 1:\
      \ <nowiki><br /></nowiki> method 2:\n\n<uscript>\n<br>\n</uscript>\n\nI know\
      \ naaaaaathing (in the style of Manuel) about this topic, so do whatever you\
      \ think is best :)\n\n'''EntropicLqd:''' Cool.  I'll get on it.  If I can send\
      \ the kids outside to playin the street with cars over the weekend I might get\
      \ it done this weekend - if not middle of next week.  Considering you know nothing\
      \ about it, the page is amazingly comprehensive.  RE: The markup - I was being\
      \ particuarly dense.\n\n'''Tarquin:''' I didn't write any of it... :) Is the\
      \ page you mean [[Legacy:Devastation Dedicated Server|Devastation Dedicated\
      \ Server]]? There's [[Legacy:Running A Dedicated Server With UCC|Running A Dedicated\
      \ Server With UCC]] too. If all these are related can we try & structure it\
      \ around a hub page of some sort, eg [[Legacy:Dedicated Server|Dedicated Server]]?\n\
      \n'''EntropicLqd:'''  I'm sure it's related.  And yes, a dedicated server page\
      \ would probable make a lot of sense.  Has anyone found a way of getting more\
      \ than 24 hours into the day yet?  I think I need to know how.  So that's two\
      \ areas on my work stack - this one (Web admin) and a dedicated server page.\
      \  How nice.\n\n'''Tarquin:''' .... erm... just leave it for someone else to\
      \ do, Ent! Don't stress it! [[:Category:Legacy To Do]] :p\n\n'''ScratchMonkey:'''\
      \ Fixed the Subst examples. I spent a couple hours yesterday figuring out what\
      \ I was doing wrong with a new UT2004 WebApplication subclass and called my\
      \ brother in to compare my code to that of the XWebAdmin. He spotted the need\
      \ for angle brackets in addition to the percent signs around the template variables\
      \ in the HTML template file.\n\nThe Subst function actually registers a substitution,\
      \ and the actual substitution happens when the file is rendered. I'm a little\
      \ skeptical about the description of ClearSubst. I suspect it really removes\
      \ the Subst entries from an internal table in the Response object.\n[[Category:Legacy\
      \ To Do|{{PAGENAME}}]]"
  properties: []
  revId: 2255
name: "Legacy:Creating A WebApplication"
revision:
  revid: 2255
  parentid: 2257
  user: "192.251.69.54"
  timestamp: 1133577578.000000000
  comment: "*"
timestamp: 1668775875.166103000
