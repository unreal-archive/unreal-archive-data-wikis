---
parse:
  title: "Legacy:Linking Karma Ragdolls"
  text:
    text: "<p><b>Update October 23rd</b> - by SkullboX (Email addresses: SkullboX@planetquake.com)</p>\n\
      <p>This info will apply when the first <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\"\
      \ class=\"mw-redirect\">UT2003</a> patch has been released. For mod developers\
      \ the info below is still relevant. However, for those making custom <a href=\"\
      /Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a> player\
      \ models that require custom ragdoll skeletons, it will be easier when the new\
      \ patch is released. The info has been posted on the <a rel=\"nofollow\" class=\"\
      external text\" href=\"http://udn.epicgames.com/pub/Content/RagdollsInUT2003/\"\
      >this Unreal Developer Network page</a>.</p>\n<blockquote class=\"legacyquote\"\
      >\n<p>{{{1}}}</p>\n</blockquote>\n<p><b>October 15th</b></p>\n<p>This tutorial\
      \ briefly explains how to get a custom ragdoll linked to a custom model. The\
      \ tutorial isn't very detailed and written rather fast, so if you come across\
      \ any problems or if it still doesn't work after having done all this, please\
      \ leave me a note.</p>\n<p>If you've got a model set up using one of the existing\
      \ <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>\
      \ skeletons, it *should* work when using one of the existing <a href=\"/Legacy:Karma\"\
      \ title=\"Legacy:Karma\">karma</a> collision models. Make sure the Skeleton\
      \ setup you chose for your model (for example, Jugg) matches the Species (Species=xGame.SPECIES_Jugg).\
      \ If you've got one of the human skeletons, you should probably use SPECIES_Egypt,\
      \ _Merc or _Night.</p>\n<p>The subject model in this case is named MoP, and\
      \ MoP's been imported into UnrealEd and has all the sockets set up as they should.\
      \ If you need info on getting the model working in UT, go to <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://sv2.3dbuzz.com/vbforum/showthread.php?s=9039e52622606cd238abb245e1bfdf27&amp;threadid=14484\"\
      >this post</a> by Praetorius.</p>\n<p>It also has a custom ragdoll created for\
      \ it, if you don't know how to make one take <a rel=\"nofollow\" class=\"external\
      \ text\" href=\"http://www.mathengine.com/kat/2k3_tutorial/KAT_UT2003_Tutorial.html\"\
      >this tutorial</a>.</p>\n<p>Start by putting the MoP.ka file in the UT2003\\\
      KarmaData folder.</p>\n<p>Start UnrealEd, and go to the <a href=\"/Legacy:Actor_Classes\"\
      \ title=\"Legacy:Actor Classes\" class=\"mw-redirect\">Actor Classes</a> tab\
      \ (if you do not have that window, go to View -&gt; Show Actor Class Browser.\
      \ This should bring up a list of Unreal scripts.</p>\n<p>Start by unchecking\
      \ the two options on top of that list, 'Use 'Actor' as Parent?' and 'Placeable\
      \ classes Only?'.</p>\n<p>Once you've done that, the list of scripts should\
      \ be noticeably longer. Scroll down and look for a subtree called <a href=\"\
      /Legacy:SpeciesType\" title=\"Legacy:SpeciesType\">SpeciesType</a>, expand it.\
      \ Four scripts should be there; SPECIES_Alien, SPECIES_Bot, SPECIES_Human and\
      \ SPECIES_Jugg.</p>\n<p>Now select the SpeciesType subtree, and click the new\
      \ script icon on top of the browser. Behind Package, fill in something related\
      \ to you model, in this case I would name it MoPScripts (Calling it just MoP\
      \ will cause confusion and effors when making the .UPL file.) For name fill\
      \ in SPECIES_MoP. (see <a href=\"/Legacy:Create_A_Subclass\" title=\"Legacy:Create\
      \ A Subclass\">Create a subclass</a>)</p>\n<p>Now the new script will come up,\
      \ and you should see something like:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// SPECIES_MoP.</span>\n<span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> SPECIES_MoP <span class=\"kw1\">extends</span>\
      \ <span class=\"kw8\">SpeciesType</span>\n<span class=\"kw1\">placeable</span>;</pre></div>\n\
      </div>\n<p>Now Open one of the other Species scripts, SPECIES_Alien for example,\
      \ and copy the info from 'abstract;' to the bottom. Then go back to your own\
      \ script and paste it over 'placeable'. Finally, rename \"Alien2\" to \"MoP\"\
      . Your script should look liek this by now:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// SPECIES_MoP.</span>\n<span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> SPECIES_MoP <span class=\"kw1\">extends</span>\
      \ <span class=\"kw8\">SpeciesType</span>\n<span class=\"kw1\">abstract</span>;\n\
      <span class=\"kw1\">static</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">string</span> GetRagSkelName<span class=\"br0\">(</span><span\
      \ class=\"kw5\">String</span> MeshName<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n<span class=\"kw2\">return</span> <span class=\"st0\">\"MoP\"\
      </span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>To finish the\
      \ scripting part, chose from the class window, Tools -&gt; Compile Changed.\
      \ Then finally press View in the Actor Class Browser and check Show Packages.\
      \ Select your newly created script and choose to Save Selected Packages. The\
      \ created file, MoPScripts.u, shouldn't be bigger than 1 kb, if it's larger\
      \ you've probably saved all the scripts together.</p>\n<p>You're now done with\
      \ the Unreal Scripting, the last step in Linking the Ragdoll to the model is\
      \ to alter the UPL file of your model. Look for the part with 'species=' and\
      \ change the stuff behind it to match the location of your newly created script.\
      \ In my case it would look like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\">Species<span class=\"sy0\">=</span>MoPScripts.<span class=\"me0\">SPECIES_MoP</span></pre></div>\n\
      </div>\n<p>Save the UPL file, and it should work.</p>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.063 seconds\nReal time usage: 0.064 seconds\nPreprocessor\
      \ visited node count: 20/1000000\nPreprocessor generated node count: 127/1000000\n\
      Post‐expand include size: 132/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 3/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    5.079      1 - -total\n100.00%    5.079      1 - Template:Innerbox\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:1675-0!*!0!*!*!*!*\
      \ and timestamp 20221118015754 and revision id 4142\n -->\n"
  categories:
  - sortkey: "Linking Karma Ragdolls"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:SpeciesType"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Karma"
  - ns: 100
    exists: true
    name: "Legacy:Actor Classes"
  - ns: 100
    exists: true
    name: "Legacy:Create A Subclass"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://udn.epicgames.com/pub/Content/RagdollsInUT2003/"
  - "http://sv2.3dbuzz.com/vbforum/showthread.php?s=9039e52622606cd238abb245e1bfdf27&threadid=14484"
  - "http://www.mathengine.com/kat/2k3_tutorial/KAT_UT2003_Tutorial.html"
  sections: []
  displaytitle: "Legacy:Linking Karma Ragdolls"
  iwlinks: []
  wikitext:
    text: "'''Update October 23rd''' - by SkullboX (Email addresses: SkullboX@planetquake.com)\n\
      \nThis info will apply when the first [[Legacy:UT2003|UT2003]] patch has been\
      \ released. For mod developers the info below is still relevant. However, for\
      \ those making custom [[Legacy:UT2003|UT2003]] player models that require custom\
      \ ragdoll skeletons, it will be easier when the new patch is released. The info\
      \ has been posted on the [http://udn.epicgames.com/pub/Content/RagdollsInUT2003/\
      \ this Unreal Developer Network page].\n\n{{innerbox|In the release version\
      \ of UT2003 (version 2107) you had to create your own species in a new .u file\
      \ to use a custom ragdoll. This was a little fiddly, but more importantly was\
      \ caught by the cheat protection code. This approach is still suitable for mod\
      \ development though, where you are creating a new species anyway to add new\
      \ animations etc. \n\nIn the forthcoming patch there is an alternative way to\
      \ use your own ragdoll. Remember that a ragdoll asset is identified by its asset\
      \ name not the name of the .ka file, so make sure the asset name is unique.\
      \ \n\n1) Place the new .ka file in the /KarmaData directory. \n\n2) Create a\
      \ new .upl file in the /System directory for your new character. \n\n3) At the\
      \ end of the Player=(... line, inside the brackets, add: \n\nRagdoll=AssetName\
      \ \n\nObviously replacing 'AssetName' with the name of the ragdoll asset to\
      \ use for that character. \n\nThats it! If no Ragdoll is supplied, it will simply\
      \ use the one specified by the character's species.\n\n}}\n\n'''October 15th'''\n\
      \nThis tutorial briefly explains how to get a custom ragdoll linked to a custom\
      \ model. The tutorial isn't very detailed and written rather fast, so if you\
      \ come across any problems or if it still doesn't work after having done all\
      \ this, please leave me a note.\n\nIf you've got a model set up using one of\
      \ the existing [[Legacy:UT2003|UT2003]] skeletons, it *should* work when using\
      \ one of the existing [[Legacy:Karma|karma]] collision models. Make sure the\
      \ Skeleton setup you chose for your model (for example, Jugg) matches the Species\
      \ (Species=xGame.SPECIES_Jugg). If you've got one of the human skeletons, you\
      \ should probably use SPECIES_Egypt, _Merc or _Night.\n\nThe subject model in\
      \ this case is named MoP, and MoP's been imported into UnrealEd and has all\
      \ the sockets set up as they should. If you need info on getting the model working\
      \ in UT, go to [http://sv2.3dbuzz.com/vbforum/showthread.php?s=9039e52622606cd238abb245e1bfdf27&threadid=14484\
      \ this post] by Praetorius.\n\nIt also has a custom ragdoll created for it,\
      \ if you don't know how to make one take [http://www.mathengine.com/kat/2k3_tutorial/KAT_UT2003_Tutorial.html\
      \ this tutorial].\n\nStart by putting the MoP.ka file in the UT2003\\KarmaData\
      \ folder.\n\nStart UnrealEd, and go to the [[Legacy:Actor Classes|Actor Classes]]\
      \ tab (if you do not have that window, go to View -> Show Actor Class Browser.\
      \ This should bring up a list of Unreal scripts.\n\nStart by unchecking the\
      \ two options on top of that list, 'Use 'Actor' as Parent?' and 'Placeable classes\
      \ Only?'.\n\nOnce you've done that, the list of scripts should be noticeably\
      \ longer. Scroll down and look for a subtree called [[Legacy:SpeciesType|SpeciesType]],\
      \ expand it. Four scripts should be there; SPECIES_Alien, SPECIES_Bot, SPECIES_Human\
      \ and SPECIES_Jugg.\n\nNow select the SpeciesType subtree, and click the new\
      \ script icon on top of the browser. Behind Package, fill in something related\
      \ to you model, in this case I would name it MoPScripts (Calling it just MoP\
      \ will cause confusion and effors when making the .UPL file.) For name fill\
      \ in SPECIES_MoP. (see [[Legacy:Create A Subclass|Create a subclass]])\n\nNow\
      \ the new script will come up, and you should see something like:\n\n<uscript>\n\
      //=============================================================================\n\
      // SPECIES_MoP.\n//=============================================================================\n\
      class SPECIES_MoP extends SpeciesType\nplaceable;\n</uscript>\n\nNow Open one\
      \ of the other Species scripts, SPECIES_Alien for example, and copy the info\
      \ from 'abstract;' to the bottom. Then go back to your own script and paste\
      \ it over 'placeable'. Finally, rename \"Alien2\" to \"MoP\". Your script should\
      \ look liek this by now:\n\n<uscript>\n//=============================================================================\n\
      // SPECIES_MoP.\n//=============================================================================\n\
      class SPECIES_MoP extends SpeciesType\nabstract;\nstatic function string GetRagSkelName(String\
      \ MeshName)\n{\nreturn \"MoP\";\n}\n</uscript>\n\nTo finish the scripting part,\
      \ chose from the class window, Tools -> Compile Changed. Then finally press\
      \ View in the Actor Class Browser and check Show Packages. Select your newly\
      \ created script and choose to Save Selected Packages. The created file, MoPScripts.u,\
      \ shouldn't be bigger than 1 kb, if it's larger you've probably saved all the\
      \ scripts together.\n\nYou're now done with the Unreal Scripting, the last step\
      \ in Linking the Ragdoll to the model is to alter the UPL file of your model.\
      \ Look for the part with 'species=' and change the stuff behind it to match\
      \ the location of your newly created script. In my case it would look like this:\n\
      \n<uscript>\nSpecies=MoPScripts.SPECIES_MoP\n</uscript>\n\nSave the UPL file,\
      \ and it should work.\n\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 4142
name: "Legacy:Linking Karma Ragdolls"
revision:
  revid: 4142
  parentid: 4144
  user: "Mychaeel"
  timestamp: 1051567547.000000000
  comment: "*"
timestamp: 1668764637.150039000
