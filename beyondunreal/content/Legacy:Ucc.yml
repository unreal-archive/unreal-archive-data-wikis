---
parse:
  title: "Legacy:Ucc"
  text:
    text: "<p><b>UCC</b> stands for Unreal Commandline Client or something like that.\
      \ This is the console application that compiles .uc <a href=\"/Legacy:UnrealScript\"\
      \ title=\"Legacy:UnrealScript\">UnrealScript</a> files into .u <a href=\"/Legacy:Package\"\
      \ title=\"Legacy:Package\">packages</a>.</p>\n<p>You can use it \"by hand\"\
      \ in a windows console / DOS box, but it's not terribly user-friendly. We recommend\
      \ you use one of these tools instead:</p>\n<ul>\n<li><a href=\"/Legacy:UMake\"\
      \ title=\"Legacy:UMake\">UMake</a></li>\n<li><a href=\"/MonkeyBuild\" title=\"\
      MonkeyBuild\">MonkeyBuild</a></li>\n<li>The multi-purpose <a href=\"/Legacy:UClasses\"\
      \ title=\"Legacy:UClasses\">UClasses</a></li>\n<li>Write batch files (.bat)\
      \ for running UCC.</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"ucc_under_Linux\"\
      >ucc under Linux</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Ucc?section=1\" title=\"Edit section: ucc under\
      \ Linux\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>The Linux version of <a href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"\
      mw-redirect\">UT2003</a> comes with an executable called ucc, but it's missing\
      \ the make functionality and a lot of other bits which make the Windows version\
      \ so useful for developers. Under Linux, it's just the server executable. So\
      \ what if you want to develop UnrealScript under Linux? Well, if you have a\
      \ Windows install of UT2003 available, it's simple... just run it under WineX.\
      \ Make sure your WineX drive configuration matches that which your Windows install\
      \ of UT2003 is expecting, and it should work just fine. This is not the place\
      \ to tell you how to configure WineX, check its documentation for that. Nothing\
      \ non-standard is required, however.</p>\n<p>Ok, just to clarify, when I say\
      \ \"WineHQ\", I mean the version of Wine available from <a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://www.winehq.com/\">http://www.winehq.com/</a>\
      \ (as opposed to WineX, from <a rel=\"nofollow\" class=\"external free\" href=\"\
      http://www.transgaming.com\">http://www.transgaming.com</a>).</p>\n<p>UT2003\
      \ for Windows installs under either WineHQ or WineX, although with WineX it\
      \ crashed near the end for me when it tried to update DirectX without asking\
      \ me first. UCC runs fine under WineX, either the Transgaming binary or one\
      \ built from their CVS source. WineHQ doesn't work well with UCC, make seems\
      \ to hang indefinitely, but not at the same place every time (sometimes it will\
      \ even complete successfully). If you use WineX to play games, you may want\
      \ to use WineHQ to install UT2003, or back up the registry and system files\
      \ from your WineX installation, because UT2003 tries to install DirectX without\
      \ prompting first (at least, this is what happened to me). UT2003 itself doesn't\
      \ seem to rely on anything in the registry, it just need the files in place,\
      \ so if you use WineHQ just to install it, you can then safely move the UT2003\
      \ directory elsewhere. I symlinked mine from my .wine directory to my home directory,\
      \ and that seems to work fine, too. Also, I've had trouble with updates via\
      \ WineHQ or WineX - the last one, 2186, seemed to install fine, but didn't actually\
      \ install the files. It looks like for this one, at least, you can unzip the\
      \ .exe file and install the unpacked files over your existing UT2003 directory\
      \ - this is what I had to do before I could compile a mutator that uses the\
      \ GUIUserKeyBinding class. Also, if you have UT2003 for linux installed on the\
      \ same machine, you can make the files that are the same in both hardlinks from\
      \ your Wine UT2003 directory to to linux one - use cmp or md5sum to find the\
      \ identical files. This can save you almost all of the space wasted by two UT2003\
      \ installs, since almost all of it is the same, except for the executables and\
      \ a few other files which use very little space. If I didn't put you to sleep,\
      \ go enjoy building your mods under Linux.&#160;:-)</p>\n<h2><span class=\"\
      mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Ucc?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Compiling_With_UCC\" title=\"\
      Legacy:Compiling With UCC\">Compiling with UCC</a></li>\n<li><a href=\"/Legacy:Running_A_Dedicated_Server_With_UCC\"\
      \ title=\"Legacy:Running A Dedicated Server With UCC\">Running a Dedicated Server\
      \ with UCC</a></li>\n<li>UCC <a href=\"/Legacy:Commandlet\" title=\"Legacy:Commandlet\"\
      >Commandlets</a></li>\n<li><a href=\"/Legacy:Setting_Up_UnrealScript\" title=\"\
      Legacy:Setting Up UnrealScript\">Setting Up UnrealScript</a> – compiling basics</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Ucc?section=3\" title=\"Edit section: Discussion\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Trystan:</b>\
      \ I need to install RedHat on my box again. What exactly comprises ucc? Is it\
      \ possible to bundle up the required ucc files and make them available to folks\
      \ who want to work under Linux? Would Epic permit this? It's got to be a great\
      \ deal smaller than installing all of UT2003 on a Windows partition. I think\
      \ I'm going to go install RedHat and find out..</p>\n<p><b>Wormbo:</b> Commandlets\
      \ like MakeCommandlet or <a href=\"/Legacy:BatchExportCommandlet\" title=\"\
      Legacy:BatchExportCommandlet\">BatchExportCommandlet</a> are components of UnrealEd\
      \ and stored in .dll files. I highly doubt that Linux folks can use them.</p>\n\
      <p><b>El Muerte TDS:</b> well the only difficult part in porting the any editor\
      \ stuff is UnrealEd itself (because of the MFC), I don't <i>think</i> the make\
      \ and export commandlets would be that difficult.</p>\n<p><b>Mychaeel:</b> I\
      \ found even porting a C++ program from gcc to MSVC++ to be a non-trivial task.\
      \ I could imagine that doing it the other way around isn't much less of a hassle...</p>\n\
      <p><b>Trystan:</b> I was more concerned with the possibility of taking Win32\
      \ ucc, all the related and necessary files, putting them in a tar/gzipped file\
      \ and allowing them to be downloaded separately from anything else. The basic\
      \ thought being that this would free a Linux developer from having a Windows\
      \ partition solely for UT2K3 development. We would need Epic's permission to\
      \ make those files available. That ucc would still require Wine/WineX but most\
      \ Linux distributions have associated Win32 executables with the Wine executable\
      \ anyway.</p>\n<p><b>El Muerte TDS:</b> Ryan Gordon replied to my email, here's\
      \ what he had to say: <i>ucc make is broken at the moment, the rest is untested,\
      \ and it adds 15 minutes to the build time to include it. It should be there\
      \ in the future, but it's low priority.</i></p>\n<p><b>MeltDown:</b> Take a\
      \ look at PyUClasses at <a rel=\"nofollow\" class=\"external free\" href=\"\
      http://www.unrealtower.org/downloads/26\">http://www.unrealtower.org/downloads/26</a>.\
      \ It can use Wine and ucc.exe to compile mods for UT. See <a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://www.unrealtower.org/documentation/pyuclasses/\"\
      >http://www.unrealtower.org/documentation/pyuclasses/</a> for more information.</p>\n\
      <p><b>Conzar:</b> Any status on the windows files to be packaged up? I copied\
      \ all the .dlls and .exe files in System from the UT2K4 dvd into my System directory\
      \ and have some compile errors while using ucc.exe.</p>\n<pre>cedega UCC.exe\
      \ make\n</pre>\n<p>Can't find 'intAActorexecAddToPackageMap' in 'Engine.dll'</p>\n\
      <p><br />\nHistory: UPackage::GetDllExport &lt;- UFunction::Bind &lt;- UField::PostLoad\
      \ &lt;- UStruct::PostLoad &lt;- UFunction::PostLoad &lt;- UObject::ConditionalPostLoad\
      \ &lt;- (Function Engine.Actor.AddToPackageMap) &lt;- PostLoadObjects &lt;-\
      \ UObject::EndLoad &lt;- UObject::StaticLoadObject &lt;- (Core.Class Editor.EditorEngine\
      \ NULL) &lt;- UEngine::Init &lt;- UEditorEngine::InitEditor &lt;- UMakeCommandlet::Main</p>\n\
      <p><b>Wormbo:</b> Never copy only .DLLs or only .Us, they only work if the same\
      \ versions are used.</p>\n<p><b>DarthDevilous:</b> Why is there a <i>UCC for\
      \ Linux</i> bit here as well as <a href=\"/Legacy:Using_UCC_Under_Linux\" title=\"\
      Legacy:Using UCC Under Linux\">here</a>?</p>\n<p><b>Tarquin:</b> No idea. someone\
      \ should merge them.</p>\n<p><b>EricBlade:</b> Anyone have any specific knowledge\
      \ on using \"ucc master\" to create an install program? There are docs on UDN,\
      \ but they don't seem too helpful if you don't already know what you're doing\
      \ with it.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.035 seconds\n\
      Real time usage: 0.287 seconds\nPreprocessor visited node count: 12/1000000\n\
      Preprocessor generated node count: 24/1000000\nPost‐expand include size: 3/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:3403-0!*!0!!*!*!* and\
      \ timestamp 20221118020225 and revision id 33136\n -->\n"
  categories:
  - sortkey: "Ucc"
    name: "Legacy_Application"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Running A Dedicated Server With UCC"
  - ns: 100
    exists: true
    name: "Legacy:UMake"
  - ns: 100
    exists: true
    name: "Legacy:Commandlet"
  - ns: 100
    exists: true
    name: "Legacy:Compiling With UCC"
  - ns: 100
    exists: true
    name: "Legacy:Using UCC Under Linux"
  - ns: 100
    exists: true
    name: "Legacy:BatchExportCommandlet"
  - ns: 0
    exists: true
    name: "MonkeyBuild"
  - ns: 100
    exists: true
    name: "Legacy:Package"
  - ns: 100
    exists: true
    name: "Legacy:Setting Up UnrealScript"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:UClasses"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  templates: []
  images: []
  externallinks:
  - "http://www.winehq.com/"
  - "http://www.transgaming.com"
  - "http://www.unrealtower.org/downloads/26"
  - "http://www.unrealtower.org/documentation/pyuclasses/"
  sections:
  - toclevel: 1
    level: "2"
    line: "ucc under Linux"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Ucc"
    byteoffset: 483
    anchor: "ucc_under_Linux"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Ucc"
    byteoffset: 3170
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Ucc"
    byteoffset: 3453
    anchor: "Discussion"
  displaytitle: "Legacy:Ucc"
  iwlinks: []
  wikitext:
    text: "'''UCC''' stands for Unreal Commandline Client or something like that.\
      \ This is the console application that compiles .uc [[Legacy:UnrealScript|UnrealScript]]\
      \ files into .u [[Legacy:Package|package]]s.\n\nYou can use it \"by hand\" in\
      \ a windows console / DOS box, but it's not terribly user-friendly. We recommend\
      \ you use one of these tools instead:\n\n* [[Legacy:UMake|UMake]]\n* [[MonkeyBuild]]\n\
      * The multi-purpose [[Legacy:UClasses|UClasses]]\n* Write batch files (.bat)\
      \ for running UCC.\n\n==ucc under Linux ==\n\nThe Linux version of [[Legacy:UT2003|UT2003]]\
      \ comes with an executable called ucc, but it's missing the make functionality\
      \ and a lot of other bits which make the Windows version so useful for developers.\
      \ Under Linux, it's just the server executable. So what if you want to develop\
      \ UnrealScript under Linux? Well, if you have a Windows install of UT2003 available,\
      \ it's simple... just run it under WineX. Make sure your WineX drive configuration\
      \ matches that which your Windows install of UT2003 is expecting, and it should\
      \ work just fine. This is not the place to tell you how to configure WineX,\
      \ check its documentation for that. Nothing non-standard is required, however.\n\
      \nOk, just to clarify, when I say \"WineHQ\", I mean the version of Wine available\
      \ from http://www.winehq.com/ (as opposed to WineX, from http://www.transgaming.com).\n\
      \nUT2003 for Windows installs under either WineHQ or WineX, although with WineX\
      \ it crashed near the end for me when it tried to update DirectX without asking\
      \ me first.  UCC runs fine under WineX, either the Transgaming binary or one\
      \ built from their CVS source.  WineHQ doesn't work well with UCC, make seems\
      \ to hang indefinitely, but not at the same place every time (sometimes it will\
      \ even complete successfully).  If you use WineX to play games, you may want\
      \ to use WineHQ to install UT2003, or back up the registry and system files\
      \ from your WineX installation, because UT2003 tries to install DirectX without\
      \ prompting first (at least, this is what happened to me).  UT2003 itself doesn't\
      \ seem to rely on anything in the registry, it just need the files in place,\
      \ so if you use WineHQ just to install it, you can then safely move the UT2003\
      \ directory elsewhere.  I symlinked mine from my .wine directory to my home\
      \ directory, and that seems to work fine, too.  Also, I've had trouble with\
      \ updates via WineHQ or WineX - the last one, 2186, seemed to install fine,\
      \ but didn't actually install the files.  It looks like for this one, at least,\
      \ you can unzip the .exe file and install the unpacked files over your existing\
      \ UT2003 directory - this is what I had to do before I could compile a mutator\
      \ that uses the GUIUserKeyBinding class.  Also, if you have UT2003 for linux\
      \ installed on the same machine, you can make the files that are the same in\
      \ both hardlinks from your Wine UT2003 directory to to linux one - use cmp or\
      \ md5sum to find the identical files.  This can save you almost all of the space\
      \ wasted by two UT2003 installs, since almost all of it is the same, except\
      \ for the executables and a few other files which use very little space.  If\
      \ I didn't put you to sleep, go enjoy building your mods under Linux. :-)\n\n\
      ==Related Topics ==\n* [[Legacy:Compiling With UCC|Compiling with UCC]]\n* [[Legacy:Running\
      \ A Dedicated Server With UCC|Running a Dedicated Server with UCC]]\n* UCC [[Legacy:Commandlet|Commandlet]]s\n\
      * [[Legacy:Setting Up UnrealScript|Setting Up UnrealScript]] &ndash; compiling\
      \ basics\n\n==Discussion==\n\n'''Trystan:''' I need to install RedHat on my\
      \ box again.  What exactly comprises ucc?  Is it possible to bundle up the required\
      \ ucc files and make them available to folks who want to work under Linux? \
      \ Would Epic permit this?  It's got to be a great deal smaller than installing\
      \ all of UT2003 on a Windows partition.  I think I'm going to go install RedHat\
      \ and find out..\n\n'''Wormbo:''' Commandlets like MakeCommandlet or [[Legacy:BatchExportCommandlet|BatchExportCommandlet]]\
      \ are components of UnrealEd and stored in .dll files. I highly doubt that Linux\
      \ folks can use them.\n\n'''El Muerte TDS:''' well the only difficult part in\
      \ porting the any editor stuff is UnrealEd itself (because of the MFC), I don't\
      \ ''think'' the make and export commandlets would be that difficult.\n\n'''Mychaeel:'''\
      \ I found even porting a C++ program from gcc to MSVC++ to be a non-trivial\
      \ task.  I could imagine that doing it the other way around isn't much less\
      \ of a hassle...\n\n'''Trystan:''' I was more concerned with the possibility\
      \ of taking Win32 ucc, all the related and necessary files, putting them in\
      \ a tar/gzipped file and allowing them to be downloaded separately from anything\
      \ else.  The basic thought being that this would free a Linux developer from\
      \ having a Windows partition solely for UT2K3 development.  We would need Epic's\
      \ permission to make those files available.  That ucc would still require Wine/WineX\
      \ but most Linux distributions have associated Win32 executables with the Wine\
      \ executable anyway.\n\n'''El Muerte TDS:''' Ryan Gordon replied to my email,\
      \ here's what he had to say: ''ucc make is broken at the moment, the rest is\
      \ untested, and it adds 15 minutes to the build time to include it. It should\
      \ be there in the future, but it's low priority.''\n\n'''MeltDown:''' Take a\
      \ look at PyUClasses at http://www.unrealtower.org/downloads/26. It can use\
      \ Wine and ucc.exe to compile mods for UT. See http://www.unrealtower.org/documentation/pyuclasses/\
      \ for more information.\n\n'''Conzar:''' Any status on the windows files to\
      \ be packaged up?  I copied all the .dlls and .exe files in System from the\
      \ UT2K4 dvd into my System directory and have some compile errors while using\
      \ ucc.exe.\n cedega UCC.exe make\n\nCan't find 'intAActorexecAddToPackageMap'\
      \ in 'Engine.dll'\n \n\nHistory: UPackage::GetDllExport <- UFunction::Bind <-\
      \ UField::PostLoad <- UStruct::PostLoad <- UFunction::PostLoad <- UObject::ConditionalPostLoad\
      \ <- (Function Engine.Actor.AddToPackageMap) <- PostLoadObjects <- UObject::EndLoad\
      \ <- UObject::StaticLoadObject <- (Core.Class Editor.EditorEngine NULL) <- UEngine::Init\
      \ <- UEditorEngine::InitEditor <- UMakeCommandlet::Main\n\n'''Wormbo:''' Never\
      \ copy only .DLLs or only .Us, they only work if the same versions are used.\
      \ \n\n'''DarthDevilous:''' Why is there a ''UCC for Linux'' bit here as well\
      \ as [[Legacy:Using_UCC_Under_Linux|here]]?\n\n'''Tarquin:''' No idea. someone\
      \ should merge them.\n\n'''EricBlade:''' Anyone have any specific knowledge\
      \ on using \"ucc master\" to create an install program?  There are docs on UDN,\
      \ but they don't seem too helpful if you don't already know what you're doing\
      \ with it.\n\n[[Category:Legacy Application|{{PAGENAME}}]]"
  properties: []
  revId: 33136
name: "Legacy:Ucc"
revision:
  revid: 33136
  parentid: 8775
  user: "GreatEmerald"
  timestamp: 1224269815.000000000
  comment: "Mentioned MonkeyBuild"
timestamp: 1668765056.429535000
