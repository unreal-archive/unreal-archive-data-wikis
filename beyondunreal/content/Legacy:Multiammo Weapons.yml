---
parse:
  title: "Legacy:Multiammo Weapons"
  text:
    text: "<p>The last two versions of the ChaosUT mods have made use of weapons that\
      \ have multiple types of ammo. In the UT version we made a new weapon for each\
      \ ammo type. Then when you picked up one of these weapons, we gave the user\
      \ all of the other weapons based on the ammo types just with out any ammo. Once\
      \ a user found a different ammo type in a map, that version of the weapon now\
      \ had ammo which the user now could use. This help to create the illusion of\
      \ one weapon that can fire different ammo types. However this method was not\
      \ fool proof. For example if you dropped the weapon or die with these weapons\
      \ then only the standard weapon ammo type could be picked up.</p>\n<p>UT2003\
      \ provided us with a way to correct the issues and truly make one weapon that\
      \ can support more than 2 ammo types. I will attempt to walk you through how\
      \ we did it for a Grenade Launcher. Keep in mind that this code is what worked.\
      \ Its not the best code and I am sure there are other ways that are more elegant\
      \ in handling this task. This is my first tut so forgive a few mistakes as I\
      \ try to learn how to write these better. I will to post at first the key functions\
      \ then the complete source at the end. But with that out of the way lets start.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Requirements_of_Grenade_Launcher\">Requirements\
      \ of Grenade Launcher</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Multiammo_Weapons?section=1\" title=\"Edit section:\
      \ Requirements of Grenade Launcher\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Here is a list of what we want our Grenade Launcher\
      \ to do:</p>\n<ul>\n<li>The Grenade Launcher must support at least four types\
      \ of Grenades. Standard, Poison, Napalm and Flash.</li>\n<li>The user can switch\
      \ ammo any time they have another ammo type to use in the Grenade Launcher</li>\n\
      <li>The Grenade Launcher should have a timed Grenade as one fire type and an\
      \ instant hit/explosion as the other fire type for each style of grenade</li>\n\
      <li>The Grenade Launcher should have an visible indicator (new skin on weapon\
      \ mesh) on which ammo type you have loaded other than the Ammo Counter</li>\n\
      </ul>\n<p>Now that we have a design goal lets see how this can be done.</p>\n\
      <p>The basic plan of attack is like so:</p>\n<ul>\n<li>We will add new fire\
      \ mode(s) to handle the new each of the new ammo types</li>\n<li>Each ammo will\
      \ have two fire modes one for the timed grenade another for the instant grenade</li>\n\
      <li>We will reset the attachment and pickup classes to the players viewing this\
      \ weapon (or if it was dropped) so anyone can see what ammo is currently loaded\
      \ into the weapon</li>\n<li>We will use an EXEC in the weapon class to do the\
      \ ammo changing</li>\n<li>We will need a separate weapon pickup and attachment\
      \ class for each ammo type</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"\
      Needed_Functions\">Needed Functions</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Multiammo_Weapons?section=2\"\
      \ title=\"Edit section: Needed Functions\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The main part we need is to do the actual swapping\
      \ of the ammo types. We should use a variable to store which ammo is currently\
      \ loaded (we will use var int Count for that). This should be a global and not\
      \ a local function for reasons we will get to later. The basics are first we\
      \ check to see if we have any ammo. Then we should not allow an ammo change\
      \ if we are firing the weapon. We start at our current count and then look at\
      \ the next available ammo type. If we have ammo of that type we will try to\
      \ change to it. We do this by removing the current fire class. Spawning a new\
      \ fire class for the new ammo type. We then change the ammo to that type. We\
      \ repeat this process so we change both the current firing modes. Then we remove\
      \ the current attachment and pickup classes and replace them with correct ones.\
      \ We do this so that the 3rd player views and the dropped pickups will have\
      \ the right skin and ammo types</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// manual key function to swich ammo out</span>\n<span\
      \ class=\"kw1\">exec</span> <span class=\"kw1\">function</span> ChangeAmmo<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"kw1\">local</span> <span class=\"kw9\">Inventory</span> Inv;\n\
      \ \n    <span class=\"co1\">// Check to see if they even have ammo to switch</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>HasAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n      <span class=\"kw2\">return</span>;\n \n    <span\
      \ class=\"co1\">// dont let them chang ammo if they are firing</span>\n    <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span> <span class=\"sy0\">||</span> FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span><span class=\"br0\">)</span>\n       <span class=\"\
      kw2\">return</span>;\n \n    <span class=\"kw2\">while</span> <span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>bChangedAmmo<span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n \n      <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         Count <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span>;\n\
      \ \n         Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_napalm'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_napalm'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span> <span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmonapalm'</span>;\n        \
      \     <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n             <span class=\"\
      co1\">// Remove old Attchment and spawn new one with correct skin</span>\n \
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span> AttachmentClass\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n               DetachFromPawn<span class=\"br0\">(</span><span\
      \ class=\"kw7\">instigator</span><span class=\"br0\">)</span>;\n           \
      \  AttachmentClass<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'GrenadeLauncher_NapalmAttachment'</span>;\n             AttachToPawn<span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span class=\"\
      br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_NapalmPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">1</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         Count <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span>;\n\
      \         Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_flash'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoFlash'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_flash'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoFlash'</span>;\n             <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n             <span class=\"co1\">// Remove old Attchment and\
      \ spawn new one with correct skin</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> AttachmentClass <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n            \
      \   DetachFromPawn<span class=\"br0\">(</span><span class=\"kw7\">instigator</span><span\
      \ class=\"br0\">)</span>;\n             AttachmentClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_FlashAttachment'</span>;\n\
      \             AttachToPawn<span class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span\
      \ class=\"br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_FlashPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">2</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         Count <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span>;\n\
      \         Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_poison'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoPoison'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_poison'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmopoison'</span>;\n             <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n             <span class=\"co1\">// Remove old Attchment and\
      \ spawn new one with correct skin</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> AttachmentClass <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n            \
      \   DetachFromPawn<span class=\"br0\">(</span><span class=\"kw7\">instigator</span><span\
      \ class=\"br0\">)</span>;\n             AttachmentClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_PoisonAttachment'</span>;\n\
      \             AttachToPawn<span class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span\
      \ class=\"br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_PoisonPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">3</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; \
      \ <span class=\"co1\">// reset counter on last type of ammo</span>\n       \
      \  Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span class=\"\
      br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary'</span>, <span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n             FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoStandard'</span>;\n           \
      \  <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n             <span class=\"co1\"\
      >// Remove old fire mode 1</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">none</span><span class=\"br0\">)</span>\n                 FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// secondary fire</span>\n    \
      \         FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw4\">Spawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'GrenadeLauncher_Secondary'</span>, <span class=\"kw6\">self</span><span class=\"\
      br0\">)</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me0\">ThisModeNum</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>;\n             FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw9\">Weapon</span> <span class=\"sy0\">=</span> <span class=\"kw6\"\
      >self</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw7\">Instigator</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw7\">Instigator</span>;\n    \
      \         FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      sy0\">=</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span>;\n\
      \             <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n             <span class=\"\
      co1\">// Remove old Attchment and spawn new one with correct skin</span>\n \
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span> AttachmentClass\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 DetachFromPawn<span class=\"br0\">(</span><span\
      \ class=\"kw7\">instigator</span><span class=\"br0\">)</span>;\n           \
      \  AttachmentClass<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'GrenadeLauncher_Attachment'</span>;\n             AttachToPawn<span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span class=\"\
      br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Pickup'</span>;\n   \
      \          <span class=\"kw2\">Break</span>;\n         <span class=\"br0\">}</span>\n\
      \      <span class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n    bChangedAmmo<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>; <span class=\"co1\"\
      >// set to flase as we have changed ammo at this point and need to reset the\
      \ flag</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The next\
      \ key function is the ammo check. The default HasAmmo only looks at the current\
      \ fire types. With a weapon that has more than one, this is no good. We changed\
      \ ours to look for the inventory types of each possible ammo type:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">// needed to overide\
      \ the weapons call as we have a multi-ammo weapon</span>\n<span class=\"kw1\"\
      >simulated</span> <span class=\"kw1\">function</span> <span class=\"kw5\">bool</span>\
      \ HasAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n       <span class=\"kw1\">local</span> <span class=\"kw9\"\
      >Inventory</span> Inv;\n \n       inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       <span class=\"kw2\">return</span> <span class=\"\
      kw6\">false</span>; <span class=\"co1\">// if we got this far no ammo for nade\
      \ launcher</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The\
      \ next function we needed to change was the Outofammo(). The reason for this\
      \ change is that the standard Outofammo function is not aware that you have\
      \ more than one ammo type. So it should check to see if you have any of the\
      \ other ammotypes in your current inventory. If it does not find any you are\
      \ truly out of ammo. If it does, then you should change ammo types:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">// needed to add\
      \ this check for a multi-ammo weapon</span>\n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> OutOfAmmo<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n \n   <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw7\">Level</span>.<span\
      \ class=\"me0\">NetMode</span> <span class=\"sy0\">==</span> NM_Standalone <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">IsLocallyControlled</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \      <span class=\"kw2\">return</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw9\"\
      >Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span> <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoAmount</span> <span class=\"\
      sy0\">&gt;=</span> FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoPerFire</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span> <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoAmount</span> <span class=\"\
      sy0\">&gt;=</span> FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoPerFire</span><span class=\"\
      br0\">)</span> <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw2\">return</span>; <span class=\"co1\">// we have ammo\
      \ return</span>\n    <span class=\"br0\">}</span>\n    <span class=\"kw2\">else</span>\n\
      \    <span class=\"br0\">{</span>\n        <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>HasAmmo<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>\n        <span class=\"br0\">{</span>\n\
      \            ChangeAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>;\
      \ <span class=\"co1\">// meaning we have some type of nade ammo change to it</span>\n\
      \        <span class=\"br0\">}</span>\n        <span class=\"kw2\">else</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"co1\">//if\
      \ we have gotten to this point we are really out of ammo...better swich weapons</span>\n\
      \            DoAutoSwitch<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \        <span class=\"br0\">}</span>\n     <span class=\"br0\">}</span>\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p>That is the basics you will\
      \ need. What if your new ammo type required a 1st person view mesh change? If\
      \ you pickup up a dropped version what skin/mesh will be displayed on your screen?\
      \ What about network replications? How does the animations play? What happens\
      \ when a users tries to fire during an ammo change? What happens if you run\
      \ out of ammo while your firing? This is where we have to get a bit ugly as\
      \ the code above will have all of these are issues.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Complete_Code\">Complete Code</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Multiammo_Weapons?section=3\"\
      \ title=\"Edit section: Complete Code\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Since we have more than one weapon that supports multi-ammo\
      \ types we decided to use a parent class and place in some specific code to\
      \ help with network replication, changing of the mesh/skins and animations.</p>\n\
      <p>The parent class of the weapon is this:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// ChaosWeapon</span>\n<span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> ChaosWeapon <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Weapon</span> <span class=\"kw1\">abstract</span>;\n \n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> count;       \
      \                 <span class=\"co1\">// use this to keep track of the current\
      \ selected ammo and replicate this to clients</span>\n<span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">bool</span> bChangedAmmo;      <span class=\"co1\">//\
      \ use this flag to break out of loop  in change ammo functions and replicate\
      \ this to clients</span>\n<span class=\"kw1\">var</span> <span class=\"kw5\"\
      >Int</span> OldCount;                   <span class=\"co1\">// used to tell\
      \ us when to play the \"changeammo\" function and do not replicate this to clients</span>\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bPlayChangeAmmo;\
      \ <span class=\"co1\">// used by the Animnotify to tell use when to change mesh/skins\
      \ and do not replicate this to clients</span>\n \n<span class=\"kw1\">replication</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"co1\">// Things the server should\
      \ send to the client.</span>\n    <span class=\"kw1\">reliable</span> <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span> <span class=\"kw7\">Role</span><span\
      \ class=\"sy0\">==</span><span class=\"kw7\">ROLE_Authority</span> <span class=\"\
      br0\">)</span>\n        count, bChangedAmmo;\n \n    <span class=\"co1\">//\
      \ functions called by client on server</span>\n    <span class=\"kw1\">reliable</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span> Role<span class=\"\
      sy0\">&lt;</span><span class=\"kw7\">ROLE_Authority</span> <span class=\"br0\"\
      >)</span>\n        ChangeAmmo;\n<span class=\"br0\">}</span>\n \n<span class=\"\
      co1\">//---</span>\n<span class=\"co1\">// ChangeAmmo</span>\n<span class=\"\
      co1\">//   *Switches ammo types.</span>\n<span class=\"co1\">//   *Implemented\
      \ in subclasses.</span>\n<span class=\"co1\">// ---</span>\n<span class=\"kw1\"\
      >exec</span> <span class=\"kw1\">function</span> ChangeAmmo<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n<span class=\"\
      br0\">}</span>\n \n<span class=\"co1\">//---</span>\n<span class=\"co1\">//\
      \ Timer</span>\n<span class=\"co1\">//   * This is needed to help us prevent\
      \ playing animations client side during a relaod.</span>\n<span class=\"co1\"\
      >// ---</span>\n<span class=\"kw1\">Simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">Timer</span> <span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n   <span class=\"kw6\">super</span>.<span\
      \ class=\"kw4\">Timer</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;          <span class=\"co1\">// call to super</span>\n   <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>bPlayChangeAmmo<span class=\"br0\"\
      >)</span>    <span class=\"co1\">// dont play the animtions if we are reloading</span>\n\
      \     bPlayChangeAmmo<span class=\"sy0\">=</span><span class=\"kw6\">false</span>;\n\
      \ \n<span class=\"br0\">}</span>\n \n \n<span class=\"co1\">//---</span>\n<span\
      \ class=\"co1\">// PutDown()</span>\n<span class=\"co1\">//   * This is needed\
      \ to help prevent ANs for multi-ammo weapons.</span>\n<span class=\"co1\">//\
      \ ---</span>\n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">bool</span> PutDown<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> Mode;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>ClientState <span class=\"sy0\">==</span> WS_BringUp\
      \ <span class=\"sy0\">||</span> ClientState <span class=\"sy0\">==</span> WS_ReadyToFire<span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"\
      co1\">// For our multi-ammo weapons Instigator.PendingWeapon maybe none so check\
      \ for that</span>\n        <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span><span class=\"kw7\">Instigator</span>.<span class=\"me0\">PendingWeapon</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span> <span class=\"\
      sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"kw7\">Instigator</span>.<span\
      \ class=\"me0\">PendingWeapon</span>.<span class=\"me0\">bForceSwitch</span><span\
      \ class=\"br0\">)</span>\n        <span class=\"br0\">{</span>\n           \
      \ <span class=\"kw2\">for</span> <span class=\"br0\">(</span>Mode <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>; Mode <span class=\"sy0\">&lt;</span>\
      \ NUM_FIRE_MODES; Mode<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \            <span class=\"br0\">{</span>\n                <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>FireMode<span class=\"br0\">[</span>Mode<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bFireOnRelease</span> <span class=\"\
      sy0\">&amp;&amp;</span> FireMode<span class=\"br0\">[</span>Mode<span class=\"\
      br0\">]</span>.<span class=\"me0\">bIsFiring</span><span class=\"br0\">)</span>\n\
      \                    <span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      \            <span class=\"br0\">}</span>\n        <span class=\"br0\">}</span>\n\
      \ \n        <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw7\">Instigator</span>.<span class=\"me0\">IsLocallyControlled</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>Mode <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>; Mode <span class=\"sy0\">&lt;</span> NUM_FIRE_MODES; Mode<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n            <span class=\"\
      br0\">{</span>\n                <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span>Mode<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span><span class=\"br0\">)</span>\n             \
      \       ClientStopFire<span class=\"br0\">(</span>Mode<span class=\"br0\">)</span>;\n\
      \            <span class=\"br0\">}</span>\n \n            <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>ClientState <span class=\"sy0\">!=</span>\
      \ WS_BringUp <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw4\">HasAnim</span><span\
      \ class=\"br0\">(</span>PutDownAnim<span class=\"br0\">)</span><span class=\"\
      br0\">)</span>\n                <span class=\"kw4\">PlayAnim</span><span class=\"\
      br0\">(</span>PutDownAnim, PutDownAnimRate, <span class=\"nu0\">0.0</span><span\
      \ class=\"br0\">)</span>;\n        <span class=\"br0\">}</span>\n        ClientState\
      \ <span class=\"sy0\">=</span> WS_PutDown;\n \n        <span class=\"kw4\">SetTimer</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0.3</span>, <span class=\"kw6\"\
      >false</span><span class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">for</span> <span class=\"br0\">(</span>Mode <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>; Mode <span class=\"sy0\">&lt;</span>\
      \ NUM_FIRE_MODES; Mode<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n  FireMode<span class=\"br0\">[</span>Mode<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bServerDelayStartFire</span> <span\
      \ class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n  FireMode<span\
      \ class=\"br0\">[</span>Mode<span class=\"br0\">]</span>.<span class=\"me0\"\
      >bServerDelayStopFire</span> <span class=\"sy0\">=</span> <span class=\"kw6\"\
      >false</span>;\n <span class=\"br0\">}</span>\n    <span class=\"kw7\">Instigator</span>.<span\
      \ class=\"kw9\">AmbientSound</span> <span class=\"sy0\">=</span> <span class=\"\
      kw5\">None</span>;\n    OldWeapon <span class=\"sy0\">=</span> <span class=\"\
      kw5\">None</span>;\n    <span class=\"kw2\">return</span> <span class=\"kw6\"\
      >true</span>; <span class=\"co1\">// return false if preventing weapon switch</span>\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"co1\">//---</span>\n<span\
      \ class=\"co1\">// State WaitforAmmoChange</span>\n<span class=\"co1\">// This\
      \ state helps to pause the guns unitl so that</span>\n<span class=\"co1\">//\
      \ We can switch ammos</span>\n<span class=\"co1\">// ---</span>\n<span class=\"\
      kw1\">Simulated</span> <span class=\"kw1\">State</span> WaitforAmmoChange\n\
      <span class=\"br0\">{</span>\n   <span class=\"kw1\">Ignores</span> ServerStartFire,\
      \ ServerStopFire, ClientWeaponSet, Fire, ClientStopFire,ClientStartFire;\n \n\
      \ \n <span class=\"kw2\">Begin</span>:\n       <span class=\"co1\">// put the\
      \ fire modes to \"sleep\" while we run the ammo chaning animations</span>\n\
      \       <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n            FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw3\">GotoState</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'ChangeAmmo'</span><span class=\"\
      br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n            FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw3\">GotoState</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'ChangeAmmo'</span><span class=\"\
      br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw7\">Level</span>.<span class=\"me0\">NetMode</span> <span class=\"\
      sy0\">==</span> NM_DedicatedServer<span class=\"br0\">)</span>\n         <span\
      \ class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >1.75</span><span class=\"br0\">)</span>;\n       <span class=\"co1\">// Ok\
      \ back to normal</span>\n       <span class=\"kw3\">GotoState</span><span class=\"\
      br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span>;\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p>Let me touch on a few parts\
      \ of the above code. The count var became useful to replicate to the clients.\
      \ We can use that to display client message when your changing ammo as well\
      \ as help figure out which mesh/skin to change to. The next three, bChangedAmmo,\
      \ OldCount, bPlayChangeAmmo were all used to help avoid network animation issues.\
      \ Basically they help to tell the client when then need to change skins/mesh\
      \ for the new ammo types as well as help syncing of animations in network play.\
      \ The modify PutDown() was needed to help avoid AN in the logs. The only weirdo\
      \ thing their is the WaitforAmmoChange state. We needed to disallow people from\
      \ playing firing animations. In on-line games you would hit the change ammo\
      \ key and as soon as the animation started to play you could spam the fire key.\
      \ This would cause the fire animations to play however no new projectile would\
      \ be spawned. Thus it looked like a bug. Using this we help to lock out user\
      \ fire commands during the ammo switch and this allows the animations to play\
      \ with out being interrupted. The Sleep(1.75) is an ugly hack but this cause\
      \ the weapon to sleep during the reloading. Again maybe a cleaner way to do\
      \ this. But it accomplishes the effect and disallows any firing during the ammo\
      \ change.</p>\n<p>You also probably saw that FireMode[0].GotoState('ChangeAmmo')\
      \ command. And you should realize that that is not a standard state in the weapon\
      \ fire class. You are correct. With multi ammo we have some issues to work around\
      \ in the fire class. Again these basically help to avoid the user from firing\
      \ during an ammo change. As well as they help to address when you the ammo changes\
      \ and weapon changes happen automatically. Here is the parent class we use for\
      \ all changing ammo fire modes:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">//==============================================================================</span>\n\
      <span class=\"co1\">// CUT_ProjectileFire - by DJPaul</span>\n<span class=\"\
      co1\">//   *$Id: CUT_ProjectileFire.uc,v 1.4 2003/07/01 12:32:54 Wormbo Exp\
      \ $</span>\n<span class=\"co1\">//   *All variable ammo types should derive\
      \ from this class.</span>\n<span class=\"co1\">//==============================================================================</span>\n\
      <span class=\"kw1\">class</span> CUT_ProjectileFire <span class=\"kw1\">extends</span>\
      \ ProjectileFire <span class=\"kw1\">abstract</span>;\n \n<span class=\"co1\"\
      >// This function below will handle the automatic reload of the weapon</span>\n\
      <span class=\"co1\">// if we have another ammo type when the current one runes\
      \ out</span>\n<span class=\"kw1\">function</span> StopFiring<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n     <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"kw9\">Weapon</span>.<span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span>ThisModeNum<span class=\"\
      br0\">]</span>.<span class=\"me0\">AmmoAmount</span> <span class=\"sy0\">&lt;=</span>\
      \ <span class=\"nu0\">0</span> <span class=\"br0\">)</span>\n       <span class=\"\
      kw3\">GotoState</span><span class=\"br0\">(</span><span class=\"st0\">'ChangeAmmo'</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n \n<span class=\"\
      co1\">// This function will disallow at the playing of the client side animation</span>\n\
      <span class=\"co1\">// During a reload</span>\n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">bool</span> AllowFire<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"kw2\">return</span> <span class=\"kw6\">Super</span>.<span class=\"\
      me0\">AllowFire</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>ChaosWeapon<span\
      \ class=\"br0\">(</span><span class=\"kw9\">Weapon</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">bPlayChangeAmmo</span>;\n<span class=\"br0\">}</span>\n\
      \ \n \n \n<span class=\"co1\">// We need this state to previent the client side\
      \ fire animations</span>\n<span class=\"co1\">// to play while the \"reload\"\
      \ animations are playing</span>\n<span class=\"kw1\">State</span> ChangeAmmo\n\
      <span class=\"br0\">{</span>\n <span class=\"kw1\">Ignores</span> PlayFireEnd,\
      \ PlayFiring, PlayStartHold, PlayPreFire;\n \n \n  <span class=\"kw2\">Begin</span>:\n\
      \     <span class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0.5</span><span class=\"br0\">)</span>;         <span class=\"co1\">//\
      \ Wait for current firing animation to finnish</span>\n     <span class=\"kw9\"\
      >Weapon</span>.<span class=\"me0\">OutOfAmmo</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;   <span class=\"co1\">// change the ammo</span>\n\
      \     <span class=\"kw4\">Sleep</span><span class=\"br0\">(</span><span class=\"\
      nu0\">1.50</span><span class=\"br0\">)</span>;         <span class=\"co1\">//\
      \ lets the animations play before we try to fire</span>\n     <span class=\"\
      kw3\">GotoState</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span\
      \ class=\"br0\">)</span>;        <span class=\"co1\">// ok ready to rock...</span>\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> StartBerserk<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    FireRate <span class=\"sy0\">=</span> <span class=\"kw1\">default</span>.<span\
      \ class=\"me0\">FireRate</span> <span class=\"sy0\">*</span> <span class=\"\
      nu0\">0.75</span>;\n    FireAnimRate <span class=\"sy0\">=</span> <span class=\"\
      kw1\">default</span>.<span class=\"me0\">FireAnimRate</span> <span class=\"\
      sy0\">/</span> <span class=\"nu0\">0.75</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>You can see now why we replicated the bPlayChangeAmmo to help avoid\
      \ the issues of animations in network play.</p>\n<p>Now for the complete GenadeLauncher\
      \ code we used:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// GrenadeLauncher - by DJPaul</span>\n<span class=\"co1\"\
      >// $Id: GrenadeLauncher.uc,v 1.34 2003/07/13 01:03:23 jb Exp $</span>\n<span\
      \ class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> GrenadeLauncher <span class=\"kw1\">extends</span>\
      \ ChaosWeapon <span class=\"kw1\">config</span><span class=\"br0\">(</span>user<span\
      \ class=\"br0\">)</span>;\n \n<span class=\"kw1\">var</span> <span class=\"\
      kw5\">sound</span> Nadelauncher_select1;\n \n \n<span class=\"co1\">// AI Interface</span>\n\
      <span class=\"kw1\">function</span> <span class=\"kw5\">float</span> GetAIRating<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"kw1\">local</span> <span class=\"kw9\">Bot</span> B;\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">float</span> EnemyDist;\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">vector</span> EnemyDir;\n \n\
      \ B <span class=\"sy0\">=</span> <span class=\"kw9\">Bot</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span\
      \ class=\"br0\">)</span>;\n <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"br0\">(</span>B <span class=\"sy0\">==</span> <span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >||</span> <span class=\"br0\">(</span>B.<span class=\"me0\">Enemy</span> <span\
      \ class=\"sy0\">==</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span> <span class=\"br0\">)</span>\n  <span class=\"kw2\">return</span>\
      \ AIRating;\n \n EnemyDir <span class=\"sy0\">=</span> B.<span class=\"me0\"\
      >Enemy</span>.<span class=\"kw7\">Location</span> <span class=\"sy0\">-</span>\
      \ <span class=\"kw7\">Instigator</span>.<span class=\"kw7\">Location</span>;\n\
      \ EnemyDist <span class=\"sy0\">=</span> <span class=\"kw3\">VSize</span><span\
      \ class=\"br0\">(</span>EnemyDir<span class=\"br0\">)</span>;\n <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span> EnemyDist <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">750</span> <span class=\"br0\">)</span>\n <span class=\"\
      br0\">{</span>\n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ EnemyDist <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2000</span>\
      \ <span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n   <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span> EnemyDist <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">3500</span> <span class=\"br0\">)</span>\n    <span class=\"\
      kw2\">return</span> <span class=\"nu0\">0.2</span>;\n   <span class=\"kw2\"\
      >return</span> <span class=\"br0\">(</span>AIRating <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">0.3</span><span class=\"br0\">)</span>;\n  <span class=\"\
      br0\">}</span>\n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ EnemyDir.<span class=\"me0\">Z</span> <span class=\"sy0\">&lt;</span> <span\
      \ class=\"sy0\">-</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span>\
      \ EnemyDist <span class=\"br0\">)</span>\n   <span class=\"kw2\">return</span>\
      \ <span class=\"br0\">(</span>AIRating <span class=\"sy0\">-</span> <span class=\"\
      nu0\">0.3</span><span class=\"br0\">)</span>;\n <span class=\"br0\">}</span>\n\
      \ <span class=\"kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"br0\">(</span>B.<span class=\"me0\">Enemy</span>.<span\
      \ class=\"kw9\">Weapon</span> <span class=\"sy0\">!=</span> <span class=\"kw5\"\
      >None</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ B.<span class=\"me0\">Enemy</span>.<span class=\"kw9\">Weapon</span>.<span\
      \ class=\"me0\">bMeleeWeapon</span> <span class=\"br0\">)</span>\n  <span class=\"\
      kw2\">return</span> <span class=\"br0\">(</span>AIRating <span class=\"sy0\"\
      >+</span> <span class=\"nu0\">0.35</span><span class=\"br0\">)</span>;\n <span\
      \ class=\"kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> EnemyDist <span class=\"sy0\">&lt;</span> <span class=\"nu0\">400</span>\
      \ <span class=\"br0\">)</span>\n  <span class=\"kw2\">return</span> <span class=\"\
      br0\">(</span>AIRating <span class=\"sy0\">+</span> <span class=\"nu0\">0.2</span><span\
      \ class=\"br0\">)</span>;\n <span class=\"kw2\">return</span> <span class=\"\
      kw3\">FMax</span><span class=\"br0\">(</span>AIRating <span class=\"sy0\">+</span>\
      \ <span class=\"nu0\">0.2</span> <span class=\"sy0\">-</span> <span class=\"\
      br0\">(</span>EnemyDist <span class=\"sy0\">-</span> <span class=\"nu0\">400</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.0008</span>,\
      \ <span class=\"nu0\">0.2</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"coMULTI\">/* BestMode()\nchoose between regular\
      \ or alt-fire\n*/</span>\n<span class=\"kw1\">function</span> <span class=\"\
      kw5\">byte</span> BestMode<span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n <span class=\"kw1\">local</span> <span class=\"\
      kw5\">vector</span> EnemyDir;\n <span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> EnemyDist;\n <span class=\"kw1\">local</span> <span class=\"\
      kw9\">bot</span> B;\n \n B <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Bot</span><span class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span\
      \ class=\"kw9\">Controller</span><span class=\"br0\">)</span>;\n <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span>B <span\
      \ class=\"sy0\">==</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>B.<span\
      \ class=\"me0\">Enemy</span> <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >None</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n  <span\
      \ class=\"kw2\">return</span> <span class=\"nu0\">0</span>;\n \n EnemyDir <span\
      \ class=\"sy0\">=</span> B.<span class=\"me0\">Enemy</span>.<span class=\"kw7\"\
      >Location</span> <span class=\"sy0\">-</span> <span class=\"kw7\">Instigator</span>.<span\
      \ class=\"kw7\">Location</span>;\n EnemyDist <span class=\"sy0\">=</span> <span\
      \ class=\"kw3\">VSize</span><span class=\"br0\">(</span>EnemyDir<span class=\"\
      br0\">)</span>;\n <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ EnemyDist <span class=\"sy0\">&gt;</span> <span class=\"nu0\">700</span> <span\
      \ class=\"br0\">)</span>\n   <span class=\"kw2\">return</span> <span class=\"\
      nu0\">1</span>;\n <span class=\"kw2\">else</span> <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"br0\">(</span>B.<span class=\"\
      me0\">Enemy</span>.<span class=\"kw9\">Weapon</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">&amp;&amp;</span> B.<span class=\"me0\">Enemy</span>.<span class=\"kw9\"\
      >Weapon</span>.<span class=\"me0\">bMeleeWeapon</span> <span class=\"br0\">)</span>\n\
      \  <span class=\"kw2\">return</span> <span class=\"nu0\">0</span>;\n <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ <span class=\"br0\">(</span>EnemyDist <span class=\"sy0\">&lt;</span> <span\
      \ class=\"nu0\">400</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span>\
      \ <span class=\"br0\">(</span>EnemyDir.<span class=\"me0\">Z</span> <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span>\
      \ <span class=\"br0\">)</span>\n  <span class=\"kw2\">return</span> <span class=\"\
      nu0\">0</span>;\n <span class=\"kw2\">else</span> <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"kw3\">FRand</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span\
      \ class=\"nu0\">0.65</span> <span class=\"br0\">)</span>\n  <span class=\"kw2\"\
      >return</span> <span class=\"nu0\">1</span>;\n <span class=\"kw2\">return</span>\
      \ <span class=\"nu0\">0</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">function</span> <span class=\"kw5\">float</span> SuggestAttackStyle<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"\
      br0\">(</span><span class=\"kw9\">AIController</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n  <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      br0\">(</span><span class=\"kw9\">AIController</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">Skill</span> <span class=\"sy0\"\
      >&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n  <span class=\"kw2\">return</span> <span class=\"\
      nu0\">0.4</span>;\n    <span class=\"kw2\">return</span> <span class=\"nu0\"\
      >0.8</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">float</span> SuggestDefenseStyle<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw2\"\
      >return</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.4</span>;\n\
      <span class=\"br0\">}</span>\n<span class=\"co1\">// End AI Interface</span>\n\
      \ \n \n<span class=\"co1\">// charge is used to both increase volecity and for\
      \ the time delay if app,</span>\n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">float</span> ChargeBar<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span><span class=\"br0\">)</span>\n       <span class=\"\
      kw2\">return</span> <span class=\"kw3\">FMin</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">1</span>,FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me0\">HoldTime</span><span\
      \ class=\"sy0\">/</span>GrenadeLauncher_SecondaryFireModeAbstract<span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me0\">MaxStrength</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw2\">else</span>\n       <span\
      \ class=\"kw2\">return</span> <span class=\"nu0\">0.0</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> <span class=\"kw4\">tick</span> <span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> dt<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n   <span class=\"co1\">// check for an ammo change and if so...change\
      \ the 1st view skin..</span>\n   <span class=\"co1\">// and play a reloading\
      \ animation</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>OldCount\
      \ <span class=\"sy0\">!=</span> Count<span class=\"br0\">)</span>\n <span class=\"\
      br0\">{</span>\n        OldCount <span class=\"sy0\">=</span> Count;\n     \
      \   bPlayChangeAmmo<span class=\"sy0\">=</span><span class=\"kw6\">True</span>;\n\
      \        PlayChangeAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">Simulated</span> <span class=\"kw1\">function</span> PlayChangeAmmo<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \     <span class=\"co1\">// Because we have to swtich the skin we will have\
      \ the animation call (via an amin notify)</span>\n     <span class=\"co1\">//\
      \ the PlayAmmoMeshSwitch() function to ensure we are snyced as we dont want\
      \ to swtich the</span>\n     <span class=\"co1\">// skin until we have finnshed\
      \ playing the AmmoDown animation</span>\n \n     <span class=\"co1\">// use\
      \ this timer to let animtions finnish playing </span>\n     <span class=\"kw4\"\
      >SetTimer</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span>,\
      \ <span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n     <span class=\"\
      co1\">// Play the down animations here</span>\n     <span class=\"kw4\">PlayAnim</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">'AmmoDown'</span>, <span class=\"\
      nu0\">1.25</span>, <span class=\"nu0\">0.3</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> PlayAmmoMeshSwitch<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n   <span class=\"co1\"\
      >// The animnotify will fire off this function when the weapon is playing the\
      \ Ammodown animation at the 9th frame</span>\n   <span class=\"co1\">// and\
      \ the bPlayChangeAmmo flag is used to know that we are indeed in a changing\
      \ of ammo sequnce</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>bPlayChangeAmmo<span class=\"br0\">)</span>\n    <span class=\"br0\"\
      >{</span>\n        <span class=\"co1\">// Change 1st Skin here</span>\n    \
      \    <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadelauncher_id1'</span>;\n\
      \        <span class=\"kw2\">Switch</span> <span class=\"br0\">(</span>Count<span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n        <span class=\"\
      kw2\">Case</span> <span class=\"nu0\">1</span>:\n            <span class=\"\
      kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.Chaos_NadeFlame'</span>;\n            <span\
      \ class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"\
      kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadeshell'</span>;\n\
      \            <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">FinalBlend</span><span class=\"st0\">'XEffectMat.Shield.RedShell'</span>;\n\
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">PlayerController</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n                  <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"me0\">ReceiveLocalizedMessage</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'NapalmAmmoChangeNotification'</span>, <span class=\"nu0\">0</span>, <span\
      \ class=\"kw5\">none</span>, <span class=\"kw5\">none</span>, FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw1\">Class</span><span class=\"br0\">)</span>;\n            <span\
      \ class=\"kw4\">PlayOwnedSound</span><span class=\"br0\">(</span>Nadelauncher_select1,\
      \ <span class=\"kw7\">SLOT_Interact</span>,,,,, <span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">break</span>;\n \
      \       <span class=\"kw2\">Case</span> <span class=\"nu0\">2</span>:\n    \
      \        <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.chaos_nadeflash'</span>;\n\
      \            <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_NadeshellFlash'</span>;\n\
      \            <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Shader</span><span class=\"st0\">'XGameShaders.PlayerShaders.LightningHit'</span>;\n\
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">PlayerController</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n                 <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"me0\">ReceiveLocalizedMessage</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'FlashAmmoChangeNotification'</span>, <span class=\"nu0\">0</span>, <span class=\"\
      kw5\">none</span>, <span class=\"kw5\">none</span>, FireMode<span class=\"br0\"\
      >[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"\
      kw1\">Class</span><span class=\"br0\">)</span>;\n            <span class=\"\
      kw4\">PlayOwnedSound</span><span class=\"br0\">(</span>Nadelauncher_select1,\
      \ <span class=\"kw7\">SLOT_Interact</span>,,,,, <span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">break</span>;\n \
      \       <span class=\"kw2\">Case</span> <span class=\"nu0\">3</span>:\n    \
      \         <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.chaos_nadepoison'</span>;\n\
      \             <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_NadeshellPoison'</span>;\n\
      \             <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">FinalBlend</span><span class=\"st0\">'XEffectMat.goop.GoopFB'</span>;\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">PlayerController</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n                 <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"me0\">ReceiveLocalizedMessage</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'PoisonAmmoChangeNotification'</span>, <span class=\"nu0\">0</span>, <span\
      \ class=\"kw5\">none</span>, <span class=\"kw5\">none</span>, FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw1\">Class</span><span class=\"br0\">)</span>;\n             <span\
      \ class=\"kw4\">PlayOwnedSound</span><span class=\"br0\">(</span>Nadelauncher_select1,\
      \ <span class=\"kw7\">SLOT_Interact</span>,,,,, <span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n             <span class=\"kw2\">break</span>;\n\
      \        <span class=\"kw1\">default</span>:\n            <span class=\"kw7\"\
      >Skins</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.chaos_nadeexplo'</span>;\n            <span\
      \ class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"\
      kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadeshell'</span>;\n\
      \            <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Texture</span><span class=\"st0\">'WeaponSkins.Skins.GrenadeTex'</span>;\n\
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">PlayerController</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n                  <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"me0\">ReceiveLocalizedMessage</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'ExplosiveAmmoChangeNotification'</span>, <span class=\"nu0\">0</span>, <span\
      \ class=\"kw5\">none</span>, <span class=\"kw5\">none</span>, FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw1\">Class</span><span class=\"br0\">)</span>;\n            <span\
      \ class=\"kw4\">PlayOwnedSound</span><span class=\"br0\">(</span>Nadelauncher_select1,\
      \ <span class=\"kw7\">SLOT_Interact</span>,,,,, <span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n            <span class=\"kw2\">break</span>;\n \
      \       <span class=\"br0\">}</span>\n        <span class=\"co1\">// now we\
      \ have changed the skins on the 1st views play the Ammoup animation</span>\n\
      \        <span class=\"kw4\">Playanim</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">'AmmoUp'</span>, <span class=\"nu0\">1.2</span>, <span class=\"\
      nu0\">0.3</span><span class=\"br0\">)</span>;\n     <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"co1\">// needed to overide\
      \ the weapons call as we have a multi-ammo weapon</span>\n<span class=\"kw1\"\
      >simulated</span> <span class=\"kw1\">function</span> <span class=\"kw5\">bool</span>\
      \ HasAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n       <span class=\"kw1\">local</span> <span class=\"kw9\"\
      >Inventory</span> Inv;\n \n       inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       inv <span class=\"sy0\">=</span> <span class=\"kw9\"\
      >Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>inv <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"kw2\">return</span> <span class=\"\
      kw6\">true</span>;\n       <span class=\"kw2\">return</span> <span class=\"\
      kw6\">false</span>; <span class=\"co1\">// if we got this far no ammo for nade\
      \ launcher</span>\n<span class=\"br0\">}</span>\n \n<span class=\"co1\">// needed\
      \ to add this check for a multi-ammo weapon</span>\n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> BringUp<span class=\"br0\">(</span><span\
      \ class=\"kw1\">optional</span> <span class=\"kw9\">Weapon</span> PrevWeapon<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    OutOfAmmo<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;  <span class=\"co1\">// check to\
      \ make sure we have some type of ammo</span>\n    <span class=\"co1\">// Make\
      \ sure we load the right skin... but don't wast server time with this...</span>\n\
      \    <span class=\"kw2\">If</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Level</span>.<span class=\"me0\">NetMode</span> <span class=\"sy0\">!=</span>\
      \ NM_DedicatedServer<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadelauncher_id1'</span>;\n\
      \        <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Count <span\
      \ class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'ChaosTex_001.Nades.Chaos_NadeFlame'</span>;\n            <span class=\"kw7\"\
      >Skins</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"\
      br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadeshell'</span>;\n            <span\
      \ class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"\
      kw5\">FinalBlend</span><span class=\"st0\">'XEffectMat.Shield.RedShell'</span>;\n\
      \        <span class=\"br0\">}</span>\n        <span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Count <span class=\"\
      sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>\n \
      \       <span class=\"br0\">{</span>\n            <span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'ChaosTex_001.Nades.chaos_nadeflash'</span>;\n            <span class=\"kw7\"\
      >Skins</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"\
      br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.Chaos_NadeshellFlash'</span>;\n        \
      \    <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"\
      nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span\
      \ class=\"kw5\">Shader</span><span class=\"st0\">'XGameShaders.PlayerShaders.LightningHit'</span>;\n\
      \        <span class=\"br0\">}</span>\n        <span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Count <span class=\"\
      sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>\n \
      \       <span class=\"br0\">{</span>\n             <span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'ChaosTex_001.Nades.chaos_nadepoison'</span>;\n             <span class=\"\
      kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.Chaos_NadeshellPoison'</span>;\n       \
      \      <span class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"\
      nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span\
      \ class=\"kw5\">FinalBlend</span><span class=\"st0\">'XEffectMat.goop.GoopFB'</span>;\n\
      \        <span class=\"br0\">}</span>\n        <span class=\"kw2\">else</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span\
      \ class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'ChaosTex_001.Nades.chaos_nadeexplo'</span>;\n            <span class=\"kw7\"\
      >Skins</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"\
      br0\">]</span><span class=\"sy0\">=</span> <span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'ChaosTex_001.Nades.Chaos_Nadeshell'</span>;\n            <span\
      \ class=\"kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >3</span><span class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"\
      kw5\">Texture</span><span class=\"st0\">'WeaponSkins.Skins.GrenadeTex'</span>;\n\
      \        <span class=\"br0\">}</span>\n     <span class=\"br0\">}</span>\n \
      \    <span class=\"kw6\">Super</span>.<span class=\"me0\">BringUp</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"co1\">// needed to add this check for a multi-ammo weapon</span>\n\
      <span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> OutOfAmmo<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ \n   <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      kw7\">Level</span>.<span class=\"me0\">NetMode</span> <span class=\"sy0\">==</span>\
      \ NM_Standalone <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span\
      \ class=\"kw7\">Instigator</span>.<span class=\"me0\">IsLocallyControlled</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \      <span class=\"kw2\">return</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw9\"\
      >Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span> <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoAmount</span> <span class=\"\
      sy0\">&gt;=</span> FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoPerFire</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span> <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoAmount</span> <span class=\"\
      sy0\">&gt;=</span> FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoPerFire</span><span class=\"\
      br0\">)</span> <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw2\">return</span>; <span class=\"co1\">// we have ammo\
      \ return</span>\n    <span class=\"br0\">}</span>\n    <span class=\"kw2\">else</span>\n\
      \    <span class=\"br0\">{</span>\n        <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>HasAmmo<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>\n        <span class=\"br0\">{</span>\n\
      \            ChangeAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>;\
      \ <span class=\"co1\">// meaning we have some type of nade ammo change to it</span>\n\
      \        <span class=\"br0\">}</span>\n        <span class=\"kw2\">else</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"co1\">//if\
      \ we have gotten to this point we are really out of ammo...better swich weapons</span>\n\
      \            DoAutoSwitch<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \        <span class=\"br0\">}</span>\n     <span class=\"br0\">}</span>\n<span\
      \ class=\"br0\">}</span>\n \n \n<span class=\"co1\">// manual key function to\
      \ swich ammo out</span>\n<span class=\"kw1\">exec</span> <span class=\"kw1\"\
      >function</span> ChangeAmmo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n   <span class=\"kw1\">local</span> <span class=\"\
      kw9\">Inventory</span> Inv;\n \n   <span class=\"co1\">// Check to see if they\
      \ even have ammo to switch</span>\n   <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>HasAmmo<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n     <span class=\"kw2\"\
      >return</span>;\n \n   <span class=\"co1\">// dont let them chang ammo if they\
      \ are firing</span>\n   <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span> <span class=\"sy0\">||</span> FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bIsFiring</span><span class=\"br0\">)</span>\n       <span class=\"\
      kw2\">return</span>;\n \n   <span class=\"co1\">//DJP: Stops stuff firing when\
      \ the type switches (when out of ammo).</span>\n   <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw9\">Pawn</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">none</span> <span class=\"sy0\"\
      >&amp;&amp;</span> <span class=\"kw9\">Pawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span class=\"kw9\"\
      >Controller</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n        <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"kw9\">Controller</span>.<span class=\"\
      me0\">bFire</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \        <span class=\"kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Owner</span><span class=\"br0\">)</span>.<span class=\"kw9\">Controller</span>.<span\
      \ class=\"me0\">bAltFire</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>;\n   <span class=\"br0\">}</span>\n \n \n    <span class=\"kw2\"\
      >while</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>bChangedAmmo<span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n \n      <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span>\
      \ <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n      <span class=\"\
      br0\">{</span>\n         Count <span class=\"sy0\">+=</span> <span class=\"\
      nu0\">1</span>;\n \n         Inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_napalm'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_napalm'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span> <span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmonapalm'</span>;\n        \
      \     <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n             <span class=\"\
      co1\">// Remove old Attchment and spawn new one with correct skin</span>\n \
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span> AttachmentClass\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n               DetachFromPawn<span class=\"br0\">(</span><span\
      \ class=\"kw7\">instigator</span><span class=\"br0\">)</span>;\n           \
      \  AttachmentClass<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'GrenadeLauncher_NapalmAttachment'</span>;\n             AttachToPawn<span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span class=\"\
      br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_NapalmPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">1</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         Count <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span>;\n\
      \         Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_flash'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoFlash'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_flash'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoFlash'</span>;\n             <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n             <span class=\"co1\">// Remove old Attchment and\
      \ spawn new one with correct skin</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> AttachmentClass <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n            \
      \   DetachFromPawn<span class=\"br0\">(</span><span class=\"kw7\">instigator</span><span\
      \ class=\"br0\">)</span>;\n             AttachmentClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_FlashAttachment'</span>;\n\
      \             AttachToPawn<span class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span\
      \ class=\"br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_FlashPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">2</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         Count <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span>;\n\
      \         Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\"\
      >)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_poison'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoPoison'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n             <span class=\"\
      kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// Remove old fire mode 1</span>\n\
      \             <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// secondary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Secondary_poison'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n           \
      \  FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmopoison'</span>;\n             <span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span>.<span class=\"\
      me0\">FindInventoryType</span><span class=\"br0\">(</span>FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n             <span class=\"co1\">// Remove old Attchment and\
      \ spawn new one with correct skin</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> AttachmentClass <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n            \
      \   DetachFromPawn<span class=\"br0\">(</span><span class=\"kw7\">instigator</span><span\
      \ class=\"br0\">)</span>;\n             AttachmentClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_PoisonAttachment'</span>;\n\
      \             AttachToPawn<span class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span\
      \ class=\"br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_PoisonPickup'</span>;\n\
      \             <span class=\"kw2\">Break</span>;\n         <span class=\"br0\"\
      >}</span>\n      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Count <span class=\"sy0\">==</span> <span class=\"\
      nu0\">3</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \         count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; \
      \ <span class=\"co1\">// reset counter on last type of ammo</span>\n       \
      \  Inv <span class=\"sy0\">=</span> <span class=\"kw9\">Pawn</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Owner</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">FindInventoryType</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span class=\"\
      br0\">)</span>;\n         <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>Inv  <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \  <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>inv<span class=\"br0\">)</span>.<span class=\"me0\"\
      >HasAmmo</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \   bChangedAmmo<span class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n\
      \             <span class=\"co1\">// Remove old fire mode 0</span>\n       \
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n             <span class=\"\
      co1\">// primary fire</span>\n             FireMode<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary'</span>, <span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n             FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n          \
      \   FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Instigator</span>;\n             FireMode<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"sy0\">=</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'GrenadeAmmoStandard'</span>;\n           \
      \  <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n             <span class=\"co1\"\
      >// Remove old fire mode 1</span>\n             <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">none</span><span class=\"br0\">)</span>\n                 FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n             <span class=\"co1\">// secondary fire</span>\n    \
      \         FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw4\">Spawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'GrenadeLauncher_Secondary'</span>, <span class=\"kw6\">self</span><span class=\"\
      br0\">)</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me0\">ThisModeNum</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>;\n             FireMode<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw9\">Weapon</span> <span class=\"sy0\">=</span> <span class=\"kw6\"\
      >self</span>;\n             FireMode<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw7\">Instigator</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw7\">Instigator</span>;\n    \
      \         FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      sy0\">=</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span>;\n\
      \             <span class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">Ammunition</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span>FireMode<span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">AmmoClass</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n             <span class=\"\
      co1\">// Remove old Attchment and spawn new one with correct skin</span>\n \
      \            <span class=\"kw2\">if</span> <span class=\"br0\">(</span> AttachmentClass\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n                 DetachFromPawn<span class=\"br0\">(</span><span\
      \ class=\"kw7\">instigator</span><span class=\"br0\">)</span>;\n           \
      \  AttachmentClass<span class=\"sy0\">=</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'GrenadeLauncher_Attachment'</span>;\n             AttachToPawn<span\
      \ class=\"br0\">(</span><span class=\"kw7\">Instigator</span><span class=\"\
      br0\">)</span>;\n             PickupClass<span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Pickup'</span>;\n   \
      \          <span class=\"kw2\">Break</span>;\n         <span class=\"br0\">}</span>\n\
      \      <span class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n    bChangedAmmo<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>; <span class=\"co1\"\
      >// set to flase as we have changed ammo at this point and need to reset the\
      \ flag</span>\n    <span class=\"kw3\">GoToState</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">'WaitforAmmoChange'</span><span class=\"br0\">)</span>; <span\
      \ class=\"co1\">// \"Pauses\" the gun so that the player can load the new ammo</span>\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"kw1\">function</span> GiveTo<span\
      \ class=\"br0\">(</span><span class=\"kw9\">Pawn</span> Other, <span class=\"\
      kw1\">optional</span> <span class=\"kw9\">Pickup</span> <span class=\"kw9\"\
      >Pickup</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw9\">Inventory</span> Inv;\n \n\
      \ <span class=\"kw6\">Super</span>.<span class=\"me0\">GiveTo</span><span class=\"\
      br0\">(</span>Other, <span class=\"kw9\">Pickup</span><span class=\"br0\">)</span>;\n\
      \ \n <span class=\"co1\">// add empty ammo for player (for Mutant, Last Man\
      \ Standing and AllAmmo)</span>\n <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"sy0\">!</span>bDeleteMe <span class=\"br0\">)</span>\
      \ <span class=\"br0\">{</span>\n  Inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> Inv <span class=\"sy0\">==</span> <span class=\"kw5\">None</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">{</span>\n   Inv <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoStandard'</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw9\">Ammunition</span><span class=\"\
      br0\">(</span>Inv<span class=\"br0\">)</span>.<span class=\"me0\">AmmoAmount</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   Inv.<span class=\"\
      me0\">GiveTo</span><span class=\"br0\">(</span>Other<span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n  Inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> Inv <span class=\"sy0\">==</span> <span class=\"kw5\">None</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">{</span>\n   Inv <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw9\">Ammunition</span><span class=\"\
      br0\">(</span>Inv<span class=\"br0\">)</span>.<span class=\"me0\">AmmoAmount</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   Inv.<span class=\"\
      me0\">GiveTo</span><span class=\"br0\">(</span>Other<span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n  Inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> Inv <span class=\"sy0\">==</span> <span class=\"kw5\">None</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">{</span>\n   Inv <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoPoison'</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw9\">Ammunition</span><span class=\"\
      br0\">(</span>Inv<span class=\"br0\">)</span>.<span class=\"me0\">AmmoAmount</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   Inv.<span class=\"\
      me0\">GiveTo</span><span class=\"br0\">(</span>Other<span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n  Inv <span class=\"sy0\">=</span> <span class=\"\
      kw9\">Pawn</span><span class=\"br0\">(</span><span class=\"kw7\">Owner</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">FindInventoryType</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> Inv <span class=\"sy0\">==</span> <span class=\"kw5\">None</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">{</span>\n   Inv <span class=\"\
      sy0\">=</span> <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeAmmoFlash'</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw9\">Ammunition</span><span class=\"\
      br0\">(</span>Inv<span class=\"br0\">)</span>.<span class=\"me0\">AmmoAmount</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n   Inv.<span class=\"\
      me0\">GiveTo</span><span class=\"br0\">(</span>Other<span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n <span class=\"br0\">}</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>Whew. Big and ugly. Again I should touch\
      \ on a few key points. In the tick we needed to modify it to tell the client\
      \ that we have changed ammo and we need to play the changeammo animations as\
      \ well as change the skin. That's where the vars from the ChaosWeapon were used.\
      \ The PlayChangeAmmo() was used to kick off the animation of the changing of\
      \ the ammo. However we uses different skins for the different ammo type loaded\
      \ into the 1st view of the weapon. So we needed to change the skins. We want\
      \ to wait until the 1st model is out of view before we change the skin. We used\
      \ an AnimNotify in the animation file to do this. We broke the animation up\
      \ into two parts, an Ammodown then and Ammoup. Ammodown plays the \"unloading\"\
      \ part. At the 2nd to the last frame of that AmmoDown animation we set up the\
      \ AnimNotify to call the PlayAmmoMeshSwitch() function. This function will then\
      \ change to the new skin (or mesh) and then play the up animation. Thus the\
      \ skin/mesh changing all happens out of view of the player and when see the\
      \ AmmoUp animation play its playing with the correct skin (or mesh). Please\
      \ note that for this example we just changed the skin. In the other weapons\
      \ we had to change the weapon mesh and did that in the PlayAmmoMeshSwitch()\
      \ as well. We also play to the client a change ammo message. This is not needed.\
      \ The BringUp() function needed to be modify to handle the dropped weapons.\
      \ With out a check for the skins (or mesh) you would get the default skin/mesh\
      \ of the weapon and not the current loaded ammo skin/mesh. The rest is more\
      \ or less standard \"stuff'.</p>\n<p>A couple of things I should mention.</p>\n\
      <ul>\n<li>Using this method you will may need a new attachment class for each\
      \ of the other ammo types. This attachment class can be a subclass of the default\
      \ attachment class you use in your weapon. Nothing special is need here just\
      \ change any skins/mesh in this attachment class if it applies.</li>\n<li>You\
      \ will also need to have a new weapon pickup for each of the other ammo type\
      \ that you have. This handles the case of you having a different ammo type loaded\
      \ when you toss your weapon or die. If you did not add a new pickup, then the\
      \ person that picks up your dropped weapon is left with the original ammo and\
      \ not the ammo you have it loaded with. Here is an example of one:</li>\n</ul>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// GrenadeLauncher_Napalmpickup</span>\n<span class=\"co1\"\
      >// $Id: GrenadeLauncher_Napalmpickup.uc,v 1.9 2003/07/12 20:48:44 jb Exp $</span>\n\
      <span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> GrenadeLauncher_Napalmpickup <span class=\"\
      kw1\">extends</span> GrenadeLauncher_pickup;\n \n<span class=\"co1\">//over\
      \ ride this to give out proper ammo to Nade (Napalm ammo)</span>\n<span class=\"\
      kw1\">function</span> <span class=\"kw9\">inventory</span> SpawnCopy<span class=\"\
      br0\">(</span> <span class=\"kw9\">pawn</span> Other <span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n <span class=\"kw1\">local</span> <span class=\"\
      kw9\">inventory</span> Copy;\n        <span class=\"kw1\">local</span> <span\
      \ class=\"kw9\">Weapon</span> W;\n    <span class=\"kw1\">local</span> GrenadeLauncher\
      \ GL;\n \n <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span\
      \ class=\"kw9\">Inventory</span> <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span> <span class=\"br0\">)</span>\n <span class=\"br0\">{</span>\n\
      \  Copy <span class=\"sy0\">=</span> <span class=\"kw9\">Inventory</span>;\n\
      \  <span class=\"kw9\">Inventory</span> <span class=\"sy0\">=</span> <span class=\"\
      kw5\">None</span>;\n <span class=\"br0\">}</span>\n <span class=\"kw2\">else</span>\n\
      \  Copy <span class=\"sy0\">=</span> <span class=\"kw4\">spawn</span><span class=\"\
      br0\">(</span>InventoryType,Other,,,<span class=\"kw3\">rot</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n    <span class=\"co1\">// add in the Napalm nade stuff here</span>\n  \
      \  W <span class=\"sy0\">=</span> <span class=\"kw9\">Weapon</span><span class=\"\
      br0\">(</span>copy<span class=\"br0\">)</span>;\n    <span class=\"co1\">//\
      \ Clean up \"old\" fire mode(s)</span>\n    <span class=\"co1\">// primary fire</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>W.<span class=\"\
      me0\">FireMode</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span\
      \ class=\"br0\">)</span>\n      W.<span class=\"me0\">FireMode</span><span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n    <span class=\"co1\">// Set Primary Fire to Napalm Stuff</span>\n\
      \    W.<span class=\"me0\">FireMode</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeLauncher_Primary_napalm'</span>,\
      \ <span class=\"kw6\">self</span><span class=\"br0\">)</span>;\n    W.<span\
      \ class=\"me0\">FireMode</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span>.<span class=\"me0\">ThisModeNum</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n    W.<span class=\"\
      me0\">FireMode</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"kw9\">Weapon</span> <span class=\"sy0\"\
      >=</span> W;\n    W.<span class=\"me0\">FireMode</span><span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"kw7\">Instigator</span>\
      \ <span class=\"sy0\">=</span> Other;\n    W.<span class=\"me0\">FireMode</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span><span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmoNapalm'</span>;    <span class=\"\
      co1\">// need these two to change the ammo</span>\n    W.<span class=\"kw9\"\
      >Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>Other.<span class=\"me0\">FindInventoryType</span><span\
      \ class=\"br0\">(</span>W.<span class=\"me0\">FireMode</span><span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n    <span class=\"co1\">// secondary fire</span>\n    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>W.<span class=\"me0\">FireMode</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n       W.<span class=\"me0\">FireMode</span><span class=\"br0\"\
      >[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"\
      kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      \    <span class=\"co1\">// Set secondary Fire to Napalm Stuff</span>\n    W.<span\
      \ class=\"me0\">FireMode</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"\
      kw4\">Spawn</span><span class=\"br0\">(</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'GrenadeLauncher_Secondary_napalm'</span>, <span class=\"kw6\"\
      >self</span><span class=\"br0\">)</span>;\n    W.<span class=\"me0\">FireMode</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">ThisModeNum</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">1</span>;\n    W.<span class=\"me0\">FireMode</span><span class=\"br0\"\
      >[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"\
      kw9\">Weapon</span> <span class=\"sy0\">=</span> W;\n    W.<span class=\"me0\"\
      >FireMode</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"kw7\">Instigator</span> <span class=\"\
      sy0\">=</span> Other;\n    W.<span class=\"me0\">FireMode</span><span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span> <span class=\"sy0\">=</span> <span class=\"\
      kw1\">class</span><span class=\"st0\">'GrenadeAmmonapalm'</span>;\n    W.<span\
      \ class=\"kw9\">Ammo</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">Ammunition</span><span\
      \ class=\"br0\">(</span>Other.<span class=\"me0\">FindInventoryType</span><span\
      \ class=\"br0\">(</span>w.<span class=\"me0\">FireMode</span><span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">AmmoClass</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n    W.<span class=\"me0\">PickupClass</span><span class=\"sy0\"\
      >=</span><span class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_NapalmPickup'</span>;\n\
      \    W.<span class=\"me0\">AttachmentClass</span><span class=\"sy0\">=</span><span\
      \ class=\"kw1\">class</span><span class=\"st0\">'GrenadeLauncher_NapalmAttachment'</span>;\n\
      \ \n    <span class=\"co1\">// Finally set the Count of the nade launcher to\
      \ Napalm and give it to em :)</span>\n    GL <span class=\"sy0\">=</span> GrenadeLauncher<span\
      \ class=\"br0\">(</span>copy<span class=\"br0\">)</span>;\n    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>GL <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n       GL.<span\
      \ class=\"me0\">Count</span><span class=\"sy0\">=</span><span class=\"nu0\"\
      >1</span>;\n \n Copy.<span class=\"me0\">GiveTo</span><span class=\"br0\">(</span>\
      \ Other, <span class=\"kw6\">self</span> <span class=\"br0\">)</span>;\n \n\
      \ <span class=\"kw2\">return</span> Copy;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>This ammo pickup looks a lot like our change ammo function and its\
      \ very simular to that other than a few tweaks. So did you make it through this\
      \ tut? I hope that this gives you the basics on how to handle a weapon that\
      \ can fire more than one ammo types. It also should avoid all of the issues\
      \ with animations, network play and handle out of ammo, change ammo and droppen\
      \ weapon issues. Thanks for your time.</p>\n<p><b>Jb:</b> Fixed an error that\
      \ produced AN on the weapon pickup class. Sorry saw it only a few times and\
      \ never had a chance to go back and fix it till now.</p>\n<p><b>Zer0:</b> This\
      \ needs updating for UT2004, there are some weird issues with FireModes in 2k4.\
      \ I can't get firemodes to change at all in 04, various type mismatch/destroy\
      \ is not a member of Firemode/bad or missing etc errors.</p>\n<p><b>zugy:</b>\
      \ Hmmm...Is there a way to get this working in 2k4? It'd help out a LOT for\
      \ the grenade code I'm working on for Project Torlan...</p>\n\n<!-- \nNewPP\
      \ limit report\nCPU time usage: 0.530 seconds\nReal time usage: 0.997 seconds\n\
      Preprocessor visited node count: 51/1000000\nPreprocessor generated node count:\
      \ 164/1000000\nPost‐expand include size: 17/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2107-0!*!*!!*!*!* and timestamp 20221118020323 and revision\
      \ id 5135\n -->\n"
  categories:
  - sortkey: "Multiammo Weapons"
    name: "Legacy_Tutorial"
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Requirements of Grenade Launcher"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Multiammo_Weapons"
    byteoffset: 1217
    anchor: "Requirements_of_Grenade_Launcher"
  - toclevel: 1
    level: "2"
    line: "Needed Functions"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Multiammo_Weapons"
    byteoffset: 2401
    anchor: "Needed_Functions"
  - toclevel: 1
    level: "2"
    line: "Complete Code"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Multiammo_Weapons"
    byteoffset: 13011
    anchor: "Complete_Code"
  displaytitle: "Legacy:Multiammo Weapons"
  iwlinks: []
  wikitext:
    text: "The last two versions of  the ChaosUT mods have made use of weapons that\
      \ have multiple types of ammo. In the UT version we made a new weapon for each\
      \ ammo type. Then when you picked up one of these weapons, we gave the user\
      \ all of the other weapons based on the ammo types just with out any ammo. Once\
      \ a user found a different ammo type in a map, that version of the weapon now\
      \ had ammo which the user now could use. This help to create the illusion of\
      \ one weapon that can fire different ammo types. However this method was not\
      \ fool proof. For example if you dropped the weapon or die with these weapons\
      \ then only the standard weapon ammo type could be picked up. \n\nUT2003 provided\
      \ us with a way to correct the issues and truly make one weapon that can support\
      \ more than 2 ammo types. I will attempt to walk you through how we did it for\
      \ a Grenade Launcher. Keep in mind that this code is what worked. Its not the\
      \ best code and I am sure there are other ways that are more elegant in handling\
      \ this task. This is my first tut so forgive a few mistakes as I try to learn\
      \ how to write these better. I will to post at first the key functions then\
      \ the complete source at the end. But with that out of the way lets start.\n\
      \n==Requirements of Grenade Launcher ==\n\nHere is a list of what we want our\
      \ Grenade Launcher to do:\n* The Grenade Launcher must support at least four\
      \ types of Grenades. Standard, Poison, Napalm and Flash. \n* The user can switch\
      \ ammo any time they have another ammo type to use in the Grenade Launcher\n\
      * The Grenade Launcher should have a timed Grenade as one fire type and an instant\
      \ hit/explosion as the other fire type for each style of grenade\n* The Grenade\
      \ Launcher should have an visible indicator (new skin on weapon mesh) on which\
      \ ammo type you have loaded other than the Ammo Counter\n\nNow that we have\
      \ a design goal lets see how this can be done. \n\nThe basic plan of attack\
      \ is like so:\n* We will add new fire mode(s) to handle the new each of the\
      \ new ammo types  \n* Each ammo will have two fire modes one for the timed grenade\
      \ another for the instant grenade\n* We will reset the attachment and pickup\
      \ classes to the players viewing this weapon (or if it was dropped) so anyone\
      \ can see what ammo is currently loaded into the weapon\n* We will use an EXEC\
      \ in the weapon class to do the ammo changing\n* We will need a separate weapon\
      \ pickup and attachment class for each ammo type\n\n==Needed Functions ==\n\n\
      The main part we need is to do the actual swapping of the ammo types. We should\
      \ use a variable to store which ammo is currently loaded (we will use var int\
      \ Count for that). This should be a global and not a local function for reasons\
      \ we will get to later. The basics are first we check to see if we have any\
      \ ammo. Then we should not allow an ammo change if we are firing the weapon.\
      \ We start at our current count and then look at the next available ammo type.\
      \ If we have ammo of that type we will try to change to it. We do this by removing\
      \ the current fire class. Spawning a new fire class for the new ammo type. We\
      \ then change the ammo to that type. We repeat this process so we change both\
      \ the current firing modes. Then we remove the current attachment and pickup\
      \ classes and replace them with correct ones. We do this so that the 3rd player\
      \ views and the dropped pickups will have the right skin and ammo types\n\n\
      <uscript>\n// manual key function to swich ammo out\nexec function ChangeAmmo()\n\
      {\n    local Inventory Inv;\n\n    // Check to see if they even have ammo to\
      \ switch\n    if (!HasAmmo())\n      return;\n\n    // dont let them chang ammo\
      \ if they are firing\n    if (FireMode[0].bIsFiring || FireMode[1].bIsFiring)\n\
      \       return;\n\n    while (!bChangedAmmo)\n    {\n\n      if (Count == 0)\n\
      \      {\n         Count += 1;\n\n         Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoNapalm');\n\
      \         if (Inv  != none  && Ammunition(inv).HasAmmo())\n         {\n    \
      \         bChangedAmmo=true;\n             // Remove old fire mode 0\n     \
      \        if (FireMode[0] != none)\n                 FireMode[0].Destroy();\n\
      \             // primary fire\n             FireMode[0] = Spawn(class'GrenadeLauncher_Primary_napalm',\
      \ self);\n             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass\
      \ =class'GrenadeAmmoNapalm';    // need these two to change the ammo\n     \
      \        Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_napalm', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass\
      \ = class'GrenadeAmmonapalm';\n             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_NapalmAttachment';\n   \
      \          AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_NapalmPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 1)\n      {\n\
      \         Count += 1;\n         Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoFlash');\n\
      \         if (Inv  != none  && Ammunition(inv).HasAmmo() )\n         {\n   \
      \          bChangedAmmo=true;\n             // Remove old fire mode 0\n    \
      \         if (FireMode[0] != none)\n                 FireMode[0].Destroy();\n\
      \             // primary fire\n             FireMode[0] = Spawn(class'GrenadeLauncher_Primary_flash',\
      \ self);\n             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoFlash';\
      \    // need these two to change the ammo\n             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_flash', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmoFlash';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_FlashAttachment';\n    \
      \         AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_FlashPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 2)\n      {\n\
      \         Count += 1;\n         Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoPoison');\n\
      \         if (Inv  != none  && Ammunition(inv).HasAmmo() )\n         {\n   \
      \          bChangedAmmo=true;\n             // Remove old fire mode 0\n    \
      \         if (FireMode[0] != none)\n                 FireMode[0].Destroy();\n\
      \             // primary fire\n             FireMode[0] = Spawn(class'GrenadeLauncher_Primary_poison',\
      \ self);\n             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoPoison';\
      \    // need these two to change the ammo\n             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_poison', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmopoison';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_PoisonAttachment';\n   \
      \          AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_PoisonPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 3)\n      {\n\
      \         count = 0;  // reset counter on last type of ammo\n         Inv =\
      \ Pawn(Owner).FindInventoryType(class'GrenadeAmmoStandard');\n         if (Inv\
      \  != none  && Ammunition(inv).HasAmmo())\n         {\n             bChangedAmmo=true;\n\
      \             // Remove old fire mode 0\n             if (FireMode[0] != none)\n\
      \                 FireMode[0].Destroy();\n             // primary fire\n   \
      \          FireMode[0] = Spawn(class'GrenadeLauncher_Primary', self);\n    \
      \         FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon = self;\n\
      \             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoStandard';\n\
      \             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmoStandard';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n                 DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_Attachment';\n         \
      \    AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_Pickup';\n\
      \             Break;\n         }\n      }\n    }\n    bChangedAmmo=false; //\
      \ set to flase as we have changed ammo at this point and need to reset the flag\n\
      }\n</uscript>\n\nThe next key function is the ammo check. The default HasAmmo\
      \ only looks at the current fire types. With a weapon that has more than one,\
      \ this is no good. We changed ours to look for the inventory types of each possible\
      \ ammo type:\n\n<uscript>\n// needed to overide the weapons call as we have\
      \ a multi-ammo weapon\nsimulated function bool HasAmmo()\n{\n       local Inventory\
      \ Inv;\n\n       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoNapalm');\n\
      \       if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoFlash');\n    \
      \   if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoPoison');\n   \
      \    if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoStandard');\n \
      \      if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       return false; // if we got this far no ammo for nade launcher\n}\n</uscript>\n\
      \nThe next function we needed to change was the Outofammo(). The reason for\
      \ this change is that the standard Outofammo function is not aware that you\
      \ have more than one ammo type. So it should check to see if you have any of\
      \ the other ammotypes in your current inventory. If it does not find any you\
      \ are truly out of ammo. If it does, then you should change ammo types:\n\n\
      <uscript>\n// needed to add this check for a multi-ammo weapon\nsimulated function\
      \ OutOfAmmo()\n{\n\n   if (Level.NetMode == NM_Standalone && !Instigator.IsLocallyControlled())\n\
      \      return;\n\n    if ((Ammo[0] != None && FireMode[0] != None && Ammo[0].AmmoAmount\
      \ >= FireMode[0].AmmoPerFire) || (Ammo[1] != none && FireMode[1] != none &&\
      \ Ammo[1].AmmoAmount >= FireMode[1].AmmoPerFire) )\n    {\n        return; //\
      \ we have ammo return\n    }\n    else\n    {\n        if (HasAmmo())\n    \
      \    {\n            ChangeAmmo(); // meaning we have some type of nade ammo\
      \ change to it\n        }\n        else\n        {\n            //if we have\
      \ gotten to this point we are really out of ammo...better swich weapons\n  \
      \          DoAutoSwitch();\n        }\n     }\n}\n</uscript>\n\nThat is the\
      \ basics you will need. What if your new ammo type required a 1st person view\
      \ mesh change? If you pickup up a dropped version what skin/mesh will be displayed\
      \ on your screen? What about network replications? How does the animations play?\
      \ What happens when a users tries to fire during an ammo change? What happens\
      \ if you run out of ammo while your firing? This is where we have to get a bit\
      \ ugly as the code above will have all of these are issues. \n\n==Complete Code\
      \ ==\n\nSince we have more than one weapon that supports multi-ammo types we\
      \ decided to use a parent class and place in some specific code to help with\
      \ network replication, changing of the mesh/skins and animations.\n\nThe parent\
      \ class of the weapon is this:\n\n<uscript>\n//=============================================================================\n\
      // ChaosWeapon\n//=============================================================================\n\
      class ChaosWeapon extends Weapon abstract;\n\nvar int count;               \
      \         // use this to keep track of the current selected ammo and replicate\
      \ this to clients\nvar bool bChangedAmmo;      // use this flag to break out\
      \ of loop  in change ammo functions and replicate this to clients\nvar Int OldCount;\
      \                   // used to tell us when to play the \"changeammo\" function\
      \ and do not replicate this to clients\nvar bool bPlayChangeAmmo; // used by\
      \ the Animnotify to tell use when to change mesh/skins and do not replicate\
      \ this to clients\n\nreplication\n{\n    // Things the server should send to\
      \ the client.\n    reliable if( Role==ROLE_Authority )\n        count, bChangedAmmo;\n\
      \n    // functions called by client on server\n    reliable if( Role<ROLE_Authority\
      \ )\n        ChangeAmmo;\n}\n\n//---\n// ChangeAmmo\n//   *Switches ammo types.\n\
      //   *Implemented in subclasses.\n// ---\nexec function ChangeAmmo()\n{\n}\n\
      \n//---\n// Timer\n//   * This is needed to help us prevent playing animations\
      \ client side during a relaod.\n// ---\nSimulated function Timer ()\n{\n   super.Timer();\
      \          // call to super\n   if (bPlayChangeAmmo)    // dont play the animtions\
      \ if we are reloading\n     bPlayChangeAmmo=false;\n\n}\n\n\n//---\n// PutDown()\n\
      //   * This is needed to help prevent ANs for multi-ammo weapons.\n// ---\n\
      simulated function bool PutDown()\n{\n    local int Mode;\n\n    if (ClientState\
      \ == WS_BringUp || ClientState == WS_ReadyToFire)\n    {\n        // For our\
      \ multi-ammo weapons Instigator.PendingWeapon maybe none so check for that\n\
      \        if (Instigator.PendingWeapon != None && !Instigator.PendingWeapon.bForceSwitch)\n\
      \        {\n            for (Mode = 0; Mode < NUM_FIRE_MODES; Mode++)\n    \
      \        {\n                if (FireMode[Mode].bFireOnRelease && FireMode[Mode].bIsFiring)\n\
      \                    return false;\n            }\n        }\n\n        if (Instigator.IsLocallyControlled())\n\
      \        {\n            for (Mode = 0; Mode < NUM_FIRE_MODES; Mode++)\n    \
      \        {\n                if (FireMode[Mode].bIsFiring)\n                \
      \    ClientStopFire(Mode);\n            }\n\n            if (ClientState !=\
      \ WS_BringUp && HasAnim(PutDownAnim))\n                PlayAnim(PutDownAnim,\
      \ PutDownAnimRate, 0.0);\n        }\n        ClientState = WS_PutDown;\n\n \
      \       SetTimer(0.3, false);\n    }\n    for (Mode = 0; Mode < NUM_FIRE_MODES;\
      \ Mode++)\n    {\n  FireMode[Mode].bServerDelayStartFire = false;\n  FireMode[Mode].bServerDelayStopFire\
      \ = false;\n }\n    Instigator.AmbientSound = None;\n    OldWeapon = None;\n\
      \    return true; // return false if preventing weapon switch\n}\n\n\n//---\n\
      // State WaitforAmmoChange\n// This state helps to pause the guns unitl so that\n\
      // We can switch ammos\n// ---\nSimulated State WaitforAmmoChange\n{\n   Ignores\
      \ ServerStartFire, ServerStopFire, ClientWeaponSet, Fire, ClientStopFire,ClientStartFire;\n\
      \n\n Begin:\n       // put the fire modes to \"sleep\" while we run the ammo\
      \ chaning animations\n       if (FireMode[0] != none)\n            FireMode[0].GotoState('ChangeAmmo');\n\
      \       if (FireMode[1] != none)\n            FireMode[1].GotoState('ChangeAmmo');\n\
      \       if (Level.NetMode == NM_DedicatedServer)\n         Sleep(1.75);\n  \
      \     // Ok back to normal\n       GotoState('');\n}\n</uscript>\n\nLet me touch\
      \ on a few parts of the above code. The count var became useful to replicate\
      \ to the clients. We can use that to display client message when your changing\
      \ ammo as well as help figure out which mesh/skin to change to. The next three,\
      \ bChangedAmmo, OldCount, bPlayChangeAmmo were all used to help avoid network\
      \ animation issues. Basically they help to tell the client when then need to\
      \ change skins/mesh for the new ammo types as well as help syncing of animations\
      \ in network play. The modify PutDown() was needed to help avoid AN in the logs.\
      \ The only weirdo thing their is the WaitforAmmoChange state. We needed to disallow\
      \ people from playing firing animations. In on-line games you would hit the\
      \ change ammo key and as soon as the animation started to play you could spam\
      \ the fire key. This would cause the fire animations to play however no new\
      \ projectile would be spawned. Thus it looked like a bug. Using this we help\
      \ to lock out user fire commands during the ammo switch and this allows the\
      \ animations to play with out being interrupted. The Sleep(1.75) is an ugly\
      \ hack but this cause the weapon to sleep during the reloading. Again maybe\
      \ a cleaner way to do this. But it accomplishes the effect and disallows any\
      \ firing during the ammo change.\n\nYou also probably saw that FireMode[0].GotoState('ChangeAmmo')\
      \ command. And you should realize that that is not a standard state in the weapon\
      \ fire class. You are correct. With multi ammo we have some issues to work around\
      \ in the fire class. Again these basically help to avoid the user from firing\
      \ during an ammo change. As well as they help to address when you the ammo changes\
      \ and weapon changes happen automatically. Here is the parent class we use for\
      \ all changing ammo fire modes:\n\n<uscript>\n//==============================================================================\n\
      // CUT_ProjectileFire - by DJPaul\n//   *$Id: CUT_ProjectileFire.uc,v 1.4 2003/07/01\
      \ 12:32:54 Wormbo Exp $\n//   *All variable ammo types should derive from this\
      \ class.\n//==============================================================================\n\
      class CUT_ProjectileFire extends ProjectileFire abstract;\n\n// This function\
      \ below will handle the automatic reload of the weapon\n// if we have another\
      \ ammo type when the current one runes out\nfunction StopFiring()\n{\n     if\
      \ ( Weapon.Ammo[ThisModeNum].AmmoAmount <= 0 )\n       GotoState('ChangeAmmo');\n\
      }\n\n\n// This function will disallow at the playing of the client side animation\n\
      // During a reload\nsimulated function bool AllowFire()\n{\n return Super.AllowFire()\
      \ && !ChaosWeapon(Weapon).bPlayChangeAmmo;\n}\n\n\n\n// We need this state to\
      \ previent the client side fire animations\n// to play while the \"reload\"\
      \ animations are playing\nState ChangeAmmo\n{\n Ignores PlayFireEnd, PlayFiring,\
      \ PlayStartHold, PlayPreFire;\n\n\n  Begin:\n     Sleep(0.5);         // Wait\
      \ for current firing animation to finnish\n     Weapon.OutOfAmmo();   // change\
      \ the ammo\n     Sleep(1.50);         // lets the animations play before we\
      \ try to fire\n     GotoState('');        // ok ready to rock...\n}\n\nfunction\
      \ StartBerserk()\n{\n    FireRate = default.FireRate * 0.75;\n    FireAnimRate\
      \ = default.FireAnimRate / 0.75;\n}\n</uscript>\n\nYou can see now why we replicated\
      \ the bPlayChangeAmmo to help avoid the issues of animations in network play.\
      \ \n\nNow for the complete GenadeLauncher code we used:\n\n<uscript>\n//=============================================================================\n\
      // GrenadeLauncher - by DJPaul\n// $Id: GrenadeLauncher.uc,v 1.34 2003/07/13\
      \ 01:03:23 jb Exp $\n//=============================================================================\n\
      class GrenadeLauncher extends ChaosWeapon config(user);\n\nvar sound Nadelauncher_select1;\n\
      \n\n// AI Interface\nfunction float GetAIRating()\n{\n local Bot B;\n local\
      \ float EnemyDist;\n local vector EnemyDir;\n\n B = Bot(Instigator.Controller);\n\
      \ if ( (B == None) || (B.Enemy == None) )\n  return AIRating;\n\n EnemyDir =\
      \ B.Enemy.Location - Instigator.Location;\n EnemyDist = VSize(EnemyDir);\n if\
      \ ( EnemyDist > 750 )\n {\n  if ( EnemyDist > 2000 )\n  {\n   if ( EnemyDist\
      \ > 3500 )\n    return 0.2;\n   return (AIRating - 0.3);\n  }\n  if ( EnemyDir.Z\
      \ < -0.5 * EnemyDist )\n   return (AIRating - 0.3);\n }\n else if ( (B.Enemy.Weapon\
      \ != None) && B.Enemy.Weapon.bMeleeWeapon )\n  return (AIRating + 0.35);\n else\
      \ if ( EnemyDist < 400 )\n  return (AIRating + 0.2);\n return FMax(AIRating\
      \ + 0.2 - (EnemyDist - 400) * 0.0008, 0.2);\n}\n\n/* BestMode()\nchoose between\
      \ regular or alt-fire\n*/\nfunction byte BestMode()\n{\n local vector EnemyDir;\n\
      \ local float EnemyDist;\n local bot B;\n\n B = Bot(Instigator.Controller);\n\
      \ if ( (B == None) || (B.Enemy == None) )\n  return 0;\n\n EnemyDir = B.Enemy.Location\
      \ - Instigator.Location;\n EnemyDist = VSize(EnemyDir);\n if ( EnemyDist > 700\
      \ )\n   return 1;\n else if ( (B.Enemy.Weapon != None) && B.Enemy.Weapon.bMeleeWeapon\
      \ )\n  return 0;\n else if ( (EnemyDist < 400) || (EnemyDir.Z > 30) )\n  return\
      \ 0;\n else if ( FRand() < 0.65 )\n  return 1;\n return 0;\n}\n\nfunction float\
      \ SuggestAttackStyle()\n{\n if ( (AIController(Instigator.Controller) != None)\n\
      \  && (AIController(Instigator.Controller).Skill < 3) )\n  return 0.4;\n   \
      \ return 0.8;\n}\n\nfunction float SuggestDefenseStyle()\n{\n    return -0.4;\n\
      }\n// End AI Interface\n\n\n// charge is used to both increase volecity and\
      \ for the time delay if app,\nsimulated function float ChargeBar()\n{\n    if\
      \ (FireMode[1].bIsFiring)\n       return FMin(1,FireMode[1].HoldTime/GrenadeLauncher_SecondaryFireModeAbstract(FireMode[1]).MaxStrength);\n\
      \    else\n       return 0.0;\n}\n\nsimulated function tick (float dt)\n{\n\
      \   // check for an ammo change and if so...change the 1st view skin..\n   //\
      \ and play a reloading animation\n    if (OldCount != Count)\n {\n        OldCount\
      \ = Count;\n        bPlayChangeAmmo=True;\n        PlayChangeAmmo();\n    }\n\
      }\n\nSimulated function PlayChangeAmmo()\n{\n     // Because we have to swtich\
      \ the skin we will have the animation call (via an amin notify)\n     // the\
      \ PlayAmmoMeshSwitch() function to ensure we are snyced as we dont want to swtich\
      \ the\n     // skin until we have finnshed playing the AmmoDown animation\n\n\
      \     // use this timer to let animtions finnish playing \n     SetTimer(2.0,\
      \ true);\n     // Play the down animations here\n     PlayAnim('AmmoDown', 1.25,\
      \ 0.3);\n}\n\nsimulated function PlayAmmoMeshSwitch()\n{\n   // The animnotify\
      \ will fire off this function when the weapon is playing the Ammodown animation\
      \ at the 9th frame\n   // and the bPlayChangeAmmo flag is used to know that\
      \ we are indeed in a changing of ammo sequnce\n    if (bPlayChangeAmmo)\n  \
      \  {\n        // Change 1st Skin here\n        Skins[0]=Texture'ChaosTex_001.Nades.Chaos_Nadelauncher_id1';\n\
      \        Switch (Count) {\n        Case 1:\n            Skins[1]= Texture'ChaosTex_001.Nades.Chaos_NadeFlame';\n\
      \            Skins[2]= Texture'ChaosTex_001.Nades.Chaos_Nadeshell';\n      \
      \      Skins[3]= FinalBlend'XEffectMat.Shield.RedShell';\n            if (PlayerController(Instigator.Controller)\
      \ != none)\n                  PlayerController(Instigator.Controller).ReceiveLocalizedMessage(class'NapalmAmmoChangeNotification',\
      \ 0, none, none, FireMode[0].Class);\n            PlayOwnedSound(Nadelauncher_select1,\
      \ SLOT_Interact,,,,, false);\n            break;\n        Case 2:\n        \
      \    Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadeflash';\n            Skins[2]=\
      \ Texture'ChaosTex_001.Nades.Chaos_NadeshellFlash';\n            Skins[3]= Shader'XGameShaders.PlayerShaders.LightningHit';\n\
      \            if (PlayerController(Instigator.Controller) != none)\n        \
      \         PlayerController(Instigator.Controller).ReceiveLocalizedMessage(class'FlashAmmoChangeNotification',\
      \ 0, none, none, FireMode[0].Class);\n            PlayOwnedSound(Nadelauncher_select1,\
      \ SLOT_Interact,,,,, false);\n            break;\n        Case 3:\n        \
      \     Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadepoison';\n            \
      \ Skins[2]= Texture'ChaosTex_001.Nades.Chaos_NadeshellPoison';\n           \
      \  Skins[3]= FinalBlend'XEffectMat.goop.GoopFB';\n             if (PlayerController(Instigator.Controller)\
      \ != none)\n                 PlayerController(Instigator.Controller).ReceiveLocalizedMessage(class'PoisonAmmoChangeNotification',\
      \ 0, none, none, FireMode[0].Class);\n             PlayOwnedSound(Nadelauncher_select1,\
      \ SLOT_Interact,,,,, false);\n             break;\n        default:\n      \
      \      Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadeexplo';\n            Skins[2]=\
      \ Texture'ChaosTex_001.Nades.Chaos_Nadeshell';\n            Skins[3]= Texture'WeaponSkins.Skins.GrenadeTex';\n\
      \            if (PlayerController(Instigator.Controller) != none)\n        \
      \          PlayerController(Instigator.Controller).ReceiveLocalizedMessage(class'ExplosiveAmmoChangeNotification',\
      \ 0, none, none, FireMode[0].Class);\n            PlayOwnedSound(Nadelauncher_select1,\
      \ SLOT_Interact,,,,, false);\n            break;\n        }\n        // now\
      \ we have changed the skins on the 1st views play the Ammoup animation\n   \
      \     Playanim('AmmoUp', 1.2, 0.3);\n     }\n}\n\n\n// needed to overide the\
      \ weapons call as we have a multi-ammo weapon\nsimulated function bool HasAmmo()\n\
      {\n       local Inventory Inv;\n\n       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoNapalm');\n\
      \       if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoFlash');\n    \
      \   if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoPoison');\n   \
      \    if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoStandard');\n \
      \      if (inv != none  && Ammunition(inv).HasAmmo())\n         return true;\n\
      \       return false; // if we got this far no ammo for nade launcher\n}\n\n\
      // needed to add this check for a multi-ammo weapon\nsimulated function BringUp(optional\
      \ Weapon PrevWeapon)\n{\n    OutOfAmmo();  // check to make sure we have some\
      \ type of ammo\n    // Make sure we load the right skin... but don't wast server\
      \ time with this...\n    If(Level.NetMode != NM_DedicatedServer)\n    {\n  \
      \      Skins[0]=Texture'ChaosTex_001.Nades.Chaos_Nadelauncher_id1';\n      \
      \  if (Count == 1)\n        {\n            Skins[1]= Texture'ChaosTex_001.Nades.Chaos_NadeFlame';\n\
      \            Skins[2]= Texture'ChaosTex_001.Nades.Chaos_Nadeshell';\n      \
      \      Skins[3]= FinalBlend'XEffectMat.Shield.RedShell';\n        }\n      \
      \  else if (Count == 2)\n        {\n            Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadeflash';\n\
      \            Skins[2]= Texture'ChaosTex_001.Nades.Chaos_NadeshellFlash';\n \
      \           Skins[3]= Shader'XGameShaders.PlayerShaders.LightningHit';\n   \
      \     }\n        else if (Count == 3)\n        {\n             Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadepoison';\n\
      \             Skins[2]= Texture'ChaosTex_001.Nades.Chaos_NadeshellPoison';\n\
      \             Skins[3]= FinalBlend'XEffectMat.goop.GoopFB';\n        }\n   \
      \     else\n        {\n            Skins[1]= Texture'ChaosTex_001.Nades.chaos_nadeexplo';\n\
      \            Skins[2]= Texture'ChaosTex_001.Nades.Chaos_Nadeshell';\n      \
      \      Skins[3]= Texture'WeaponSkins.Skins.GrenadeTex';\n        }\n     }\n\
      \     Super.BringUp();\n}\n\n// needed to add this check for a multi-ammo weapon\n\
      simulated function OutOfAmmo()\n{\n\n   if (Level.NetMode == NM_Standalone &&\
      \ !Instigator.IsLocallyControlled())\n      return;\n\n    if ((Ammo[0] != None\
      \ && FireMode[0] != None && Ammo[0].AmmoAmount >= FireMode[0].AmmoPerFire) ||\
      \ (Ammo[1] != none && FireMode[1] != none && Ammo[1].AmmoAmount >= FireMode[1].AmmoPerFire)\
      \ )\n    {\n        return; // we have ammo return\n    }\n    else\n    {\n\
      \        if (HasAmmo())\n        {\n            ChangeAmmo(); // meaning we\
      \ have some type of nade ammo change to it\n        }\n        else\n      \
      \  {\n            //if we have gotten to this point we are really out of ammo...better\
      \ swich weapons\n            DoAutoSwitch();\n        }\n     }\n}\n\n\n// manual\
      \ key function to swich ammo out\nexec function ChangeAmmo()\n{\n   local Inventory\
      \ Inv;\n\n   // Check to see if they even have ammo to switch\n   if (!HasAmmo())\n\
      \     return;\n\n   // dont let them chang ammo if they are firing\n   if (FireMode[0].bIsFiring\
      \ || FireMode[1].bIsFiring)\n       return;\n\n   //DJP: Stops stuff firing\
      \ when the type switches (when out of ammo).\n   if (Pawn(Owner) != none &&\
      \ Pawn(Owner).Controller != none)\n   {\n        Pawn(Owner).Controller.bFire\
      \ = 0;\n        Pawn(Owner).Controller.bAltFire = 0;\n   }\n\n\n    while (!bChangedAmmo)\n\
      \    {\n\n      if (Count == 0)\n      {\n         Count += 1;\n\n         Inv\
      \ = Pawn(Owner).FindInventoryType(class'GrenadeAmmoNapalm');\n         if (Inv\
      \  != none  && Ammunition(inv).HasAmmo())\n         {\n             bChangedAmmo=true;\n\
      \             // Remove old fire mode 0\n             if (FireMode[0] != none)\n\
      \                 FireMode[0].Destroy();\n             // primary fire\n   \
      \          FireMode[0] = Spawn(class'GrenadeLauncher_Primary_napalm', self);\n\
      \             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass\
      \ =class'GrenadeAmmoNapalm';    // need these two to change the ammo\n     \
      \        Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_napalm', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass\
      \ = class'GrenadeAmmonapalm';\n             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_NapalmAttachment';\n   \
      \          AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_NapalmPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 1)\n      {\n\
      \         Count += 1;\n         Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoFlash');\n\
      \         if (Inv  != none  && Ammunition(inv).HasAmmo() )\n         {\n   \
      \          bChangedAmmo=true;\n             // Remove old fire mode 0\n    \
      \         if (FireMode[0] != none)\n                 FireMode[0].Destroy();\n\
      \             // primary fire\n             FireMode[0] = Spawn(class'GrenadeLauncher_Primary_flash',\
      \ self);\n             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoFlash';\
      \    // need these two to change the ammo\n             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_flash', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmoFlash';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_FlashAttachment';\n    \
      \         AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_FlashPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 2)\n      {\n\
      \         Count += 1;\n         Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoPoison');\n\
      \         if (Inv  != none  && Ammunition(inv).HasAmmo() )\n         {\n   \
      \          bChangedAmmo=true;\n             // Remove old fire mode 0\n    \
      \         if (FireMode[0] != none)\n                 FireMode[0].Destroy();\n\
      \             // primary fire\n             FireMode[0] = Spawn(class'GrenadeLauncher_Primary_poison',\
      \ self);\n             FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon\
      \ = self;\n             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoPoison';\
      \    // need these two to change the ammo\n             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_poison', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmopoison';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n               DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_PoisonAttachment';\n   \
      \          AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_PoisonPickup';\n\
      \             Break;\n         }\n      }\n      if (Count == 3)\n      {\n\
      \         count = 0;  // reset counter on last type of ammo\n         Inv =\
      \ Pawn(Owner).FindInventoryType(class'GrenadeAmmoStandard');\n         if (Inv\
      \  != none  && Ammunition(inv).HasAmmo())\n         {\n             bChangedAmmo=true;\n\
      \             // Remove old fire mode 0\n             if (FireMode[0] != none)\n\
      \                 FireMode[0].Destroy();\n             // primary fire\n   \
      \          FireMode[0] = Spawn(class'GrenadeLauncher_Primary', self);\n    \
      \         FireMode[0].ThisModeNum = 0;\n             FireMode[0].Weapon = self;\n\
      \             FireMode[0].Instigator = Instigator;\n             FireMode[0].AmmoClass=class'GrenadeAmmoStandard';\n\
      \             Ammo[0] = Ammunition(Instigator.FindInventoryType(FireMode[0].AmmoClass));\n\
      \             // Remove old fire mode 1\n             if (FireMode[1] != none)\n\
      \                 FireMode[1].Destroy();\n             // secondary fire\n \
      \            FireMode[1] = Spawn(class'GrenadeLauncher_Secondary', self);\n\
      \             FireMode[1].ThisModeNum = 1;\n             FireMode[1].Weapon\
      \ = self;\n             FireMode[1].Instigator = Instigator;\n             FireMode[1].AmmoClass=class'GrenadeAmmoStandard';\n\
      \             Ammo[1] = Ammunition(Instigator.FindInventoryType(FireMode[1].AmmoClass));\n\
      \n             // Remove old Attchment and spawn new one with correct skin\n\
      \             if ( AttachmentClass != none)\n                 DetachFromPawn(instigator);\n\
      \             AttachmentClass=class'GrenadeLauncher_Attachment';\n         \
      \    AttachToPawn(Instigator);\n             PickupClass=class'GrenadeLauncher_Pickup';\n\
      \             Break;\n         }\n      }\n    }\n    bChangedAmmo=false; //\
      \ set to flase as we have changed ammo at this point and need to reset the flag\n\
      \    GoToState('WaitforAmmoChange'); // \"Pauses\" the gun so that the player\
      \ can load the new ammo\n}\n\n\nfunction GiveTo(Pawn Other, optional Pickup\
      \ Pickup)\n{\n local Inventory Inv;\n\n Super.GiveTo(Other, Pickup);\n\n //\
      \ add empty ammo for player (for Mutant, Last Man Standing and AllAmmo)\n if\
      \ ( !bDeleteMe ) {\n  Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoStandard');\n\
      \  if ( Inv == None ) {\n   Inv = Spawn(class'GrenadeAmmoStandard');\n   Ammunition(Inv).AmmoAmount\
      \ = 0;\n   Inv.GiveTo(Other);\n  }\n  Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoNapalm');\n\
      \  if ( Inv == None ) {\n   Inv = Spawn(class'GrenadeAmmoNapalm');\n   Ammunition(Inv).AmmoAmount\
      \ = 0;\n   Inv.GiveTo(Other);\n  }\n  Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoPoison');\n\
      \  if ( Inv == None ) {\n   Inv = Spawn(class'GrenadeAmmoPoison');\n   Ammunition(Inv).AmmoAmount\
      \ = 0;\n   Inv.GiveTo(Other);\n  }\n  Inv = Pawn(Owner).FindInventoryType(class'GrenadeAmmoFlash');\n\
      \  if ( Inv == None ) {\n   Inv = Spawn(class'GrenadeAmmoFlash');\n   Ammunition(Inv).AmmoAmount\
      \ = 0;\n   Inv.GiveTo(Other);\n  }\n }\n}\n</uscript>\n\nWhew. Big and ugly.\
      \ Again I should touch on a few key points. In the tick we needed to modify\
      \ it to tell the client that we have changed ammo and we need to play the changeammo\
      \ animations as well as change the skin. That's where the vars from the ChaosWeapon\
      \ were used. The PlayChangeAmmo() was used to kick off the animation of the\
      \ changing of the ammo. However we uses different skins for the different ammo\
      \ type loaded into the 1st view of the weapon. So we needed to change the skins.\
      \ We want to wait until the 1st model is out of view before we change the skin.\
      \ We used an AnimNotify in the animation file to do this. We broke the animation\
      \ up into two parts, an Ammodown then and Ammoup. Ammodown plays the \"unloading\"\
      \ part. At the 2nd to the last frame of that AmmoDown animation we set up the\
      \ AnimNotify to call the PlayAmmoMeshSwitch() function. This function will then\
      \ change to the new skin (or mesh) and then play the up animation. Thus the\
      \ skin/mesh changing all happens out of view of the player and when see the\
      \ AmmoUp animation play its playing with the correct skin (or mesh). Please\
      \ note that for this example we just changed the skin. In the other weapons\
      \ we had to change the weapon mesh and did that in the PlayAmmoMeshSwitch()\
      \ as well. We also play to the client a change ammo message. This is not needed.\
      \ The BringUp() function needed to be modify to handle the dropped weapons.\
      \ With out a check for the skins (or mesh) you would get the default skin/mesh\
      \ of the weapon and not the current loaded ammo skin/mesh. The rest is more\
      \ or less standard \"stuff'.\n\nA couple of things I should mention.\n* Using\
      \ this method you will may need a new attachment class for each of the other\
      \ ammo types. This attachment class can be a subclass of the default attachment\
      \ class you use in your weapon. Nothing special is need here just change any\
      \ skins/mesh in this attachment class if it applies. \n* You will also need\
      \ to have a new weapon pickup for each of the other ammo type that you have.\
      \ This handles the case of you having a different ammo type loaded when you\
      \ toss your weapon or die. If you did not add a new pickup, then the person\
      \ that picks up your dropped weapon is left with the original ammo and not the\
      \ ammo you have it loaded with. Here is an example of one:\n\n<uscript>\n//=============================================================================\n\
      // GrenadeLauncher_Napalmpickup\n// $Id: GrenadeLauncher_Napalmpickup.uc,v 1.9\
      \ 2003/07/12 20:48:44 jb Exp $\n//=============================================================================\n\
      class GrenadeLauncher_Napalmpickup extends GrenadeLauncher_pickup;\n\n//over\
      \ ride this to give out proper ammo to Nade (Napalm ammo)\nfunction inventory\
      \ SpawnCopy( pawn Other )\n{\n local inventory Copy;\n        local Weapon W;\n\
      \    local GrenadeLauncher GL;\n\n if ( Inventory != None )\n {\n  Copy = Inventory;\n\
      \  Inventory = None;\n }\n else\n  Copy = spawn(InventoryType,Other,,,rot(0,0,0));\n\
      \n    // add in the Napalm nade stuff here\n    W = Weapon(copy);\n    // Clean\
      \ up \"old\" fire mode(s)\n    // primary fire\n    if (W.FireMode[0] != none)\n\
      \      W.FireMode[0].Destroy();\n    // Set Primary Fire to Napalm Stuff\n \
      \   W.FireMode[0] = Spawn(class'GrenadeLauncher_Primary_napalm', self);\n  \
      \  W.FireMode[0].ThisModeNum = 0;\n    W.FireMode[0].Weapon = W;\n    W.FireMode[0].Instigator\
      \ = Other;\n    W.FireMode[0].AmmoClass =class'GrenadeAmmoNapalm';    // need\
      \ these two to change the ammo\n    W.Ammo[0] = Ammunition(Other.FindInventoryType(W.FireMode[0].AmmoClass));\n\
      \n    // secondary fire\n    if (W.FireMode[1] != none)\n       W.FireMode[1].Destroy();\n\
      \    // Set secondary Fire to Napalm Stuff\n    W.FireMode[1] = Spawn(class'GrenadeLauncher_Secondary_napalm',\
      \ self);\n    W.FireMode[1].ThisModeNum = 1;\n    W.FireMode[1].Weapon = W;\n\
      \    W.FireMode[1].Instigator = Other;\n    W.FireMode[1].AmmoClass = class'GrenadeAmmonapalm';\n\
      \    W.Ammo[1] = Ammunition(Other.FindInventoryType(w.FireMode[1].AmmoClass));\n\
      \    W.PickupClass=class'GrenadeLauncher_NapalmPickup';\n    W.AttachmentClass=class'GrenadeLauncher_NapalmAttachment';\n\
      \n    // Finally set the Count of the nade launcher to Napalm and give it to\
      \ em :)\n    GL = GrenadeLauncher(copy);\n    if (GL != none)\n       GL.Count=1;\n\
      \n Copy.GiveTo( Other, self );\n\n return Copy;\n}\n</uscript>\n\nThis ammo\
      \ pickup looks a lot like our change ammo function and its very simular to that\
      \ other than a few tweaks. So did you make it through this tut? I hope that\
      \ this gives you the basics on how to handle a weapon that can fire more than\
      \ one ammo types. It also should avoid all of the issues with animations, network\
      \ play and handle out of ammo, change ammo and droppen weapon issues. Thanks\
      \ for your time.\n\n'''Jb:''' Fixed an error that produced AN on the weapon\
      \ pickup class. Sorry saw it only a few times and never had a chance to go back\
      \ and fix it till now.\n\n'''Zer0:''' This needs updating for UT2004, there\
      \ are some weird issues with FireModes in 2k4. I can't get firemodes to change\
      \ at all in 04, various type mismatch/destroy is not a member of Firemode/bad\
      \ or missing etc errors.\n\n'''zugy:''' Hmmm...Is there a way to get this working\
      \ in 2k4? It'd help out a LOT for the grenade code I'm working on for Project\
      \ Torlan...\n\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 5135
name: "Legacy:Multiammo Weapons"
revision:
  revid: 5135
  parentid: 5136
  user: "Zugy"
  timestamp: 1120287854.000000000
  comment: "*"
timestamp: 1668788033.443381000
