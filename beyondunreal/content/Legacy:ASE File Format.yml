---
parse:
  title: "Legacy:ASE File Format"
  text:
    text: "<p>The ASE <a href=\"/Legacy:File_Format\" title=\"Legacy:File Format\"\
      >file format</a>, short for <a href=\"http://en.wikipedia.org/wiki/ASCII\" class=\"\
      extiw\" title=\"wikipedia:ASCII\">Wikipedia:ASCII</a> Scene Exporter, is the\
      \ prefered format to import <a href=\"/Legacy:Static_Mesh\" title=\"Legacy:Static\
      \ Mesh\">static meshes</a> into <a href=\"/Legacy:UnrealEd\" title=\"Legacy:UnrealEd\"\
      \ class=\"mw-redirect\">UnrealEd</a> from anything except <a href=\"/Legacy:Lightwave\"\
      \ title=\"Legacy:Lightwave\">Lightwave</a>. The format is native to <a href=\"\
      /Legacy:3D_Studio_Max\" title=\"Legacy:3D Studio Max\">3D Studio Max</a>, but\
      \ <a href=\"/Legacy:ActorX\" title=\"Legacy:ActorX\">ActorX</a> for <a href=\"\
      /Legacy:Maya\" title=\"Legacy:Maya\">Maya</a> can also export it. The format\
      \ is based on identifiers, all in the form *ASTERISK_THEN_NAME, which are followed\
      \ by zero or more values, and then for a few a block of further identifiers\
      \ surrounded by curly braces. As there is no official specification, it is unknown\
      \ whether there is differentiation of whitespace, but for UnrealEd, each identifier\
      \ must start on its own line, preceded only by spaces, tabs and closing curly\
      \ braces.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Top_Level_Identifiers\"><span class=\"tocnumber\">1</span> <span class=\"\
      toctext\">Top Level Identifiers</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"\
      ><a href=\"#Scene_Identifiers\"><span class=\"tocnumber\">2</span> <span class=\"\
      toctext\">Scene Identifiers</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"\
      ><a href=\"#Material_List_Identifiers\"><span class=\"tocnumber\">3</span> <span\
      \ class=\"toctext\">Material List Identifiers</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-4\"><a href=\"#Material_Identifiers\"><span class=\"tocnumber\"\
      >4</span> <span class=\"toctext\">Material Identifiers</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-5\"><a href=\"#Map_Identifiers\"><span class=\"\
      tocnumber\">5</span> <span class=\"toctext\">Map Identifiers</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-6\"><a href=\"#Geometry_Object_Identifiers\"\
      ><span class=\"tocnumber\">6</span> <span class=\"toctext\">Geometry Object\
      \ Identifiers</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"\
      #Node_Transformation_Matrix_Identifiers\"><span class=\"tocnumber\">7</span>\
      \ <span class=\"toctext\">Node Transformation Matrix Identifiers</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-8\"><a href=\"#Mesh_Identifiers\"><span class=\"\
      tocnumber\">8</span> <span class=\"toctext\">Mesh Identifiers</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-9\"><a href=\"#Mesh_Geometry_Specification\"\
      ><span class=\"tocnumber\">9</span> <span class=\"toctext\">Mesh Geometry Specification</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-10\"><a href=\"#Mesh_Texture_Coordinate_Specification\"\
      ><span class=\"tocnumber\">10</span> <span class=\"toctext\">Mesh Texture Coordinate\
      \ Specification</span></a></li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"\
      #Mesh_Vertex_Color_Specification\"><span class=\"tocnumber\">11</span> <span\
      \ class=\"toctext\">Mesh Vertex Color Specification</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-12\"><a href=\"#Mesh_Vertex_Normal_Specification\"><span\
      \ class=\"tocnumber\">12</span> <span class=\"toctext\">Mesh Vertex Normal Specification</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-13\"><a href=\"#Node_Animation_Specifiers\"\
      ><span class=\"tocnumber\">13</span> <span class=\"toctext\">Node Animation\
      \ Specifiers</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Top_Level_Identifiers\">Top Level Identifiers</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=1\"\
      \ title=\"Edit section: Top Level Identifiers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>*3DSMAX_ASCIIEXPORT <i>version</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. indicates the version of the file. typical value for 'version'\
      \ seems to be 200.</dd>\n<dt>*COMMENT \"<i>comment</i>\"</dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Contains version of the exporter and export date in files\
      \ generated by <a href=\"/Legacy:3D_Studio_Max\" title=\"Legacy:3D Studio Max\"\
      >3D Studio Max</a>. Presumably could contain anything you want and might occur\
      \ in any block.</dd>\n<dt>*SCENE</dt>\n<dd><b>ignored by UnrealEd</b>. <b>Block</b>\
      \ contains information about the scene, animation, ambient light, background\
      \ color. See <i><b>Scene Identifiers</b></i>.</dd>\n<dt>*MATERIAL_LIST</dt>\n\
      <dd><b>Block</b> contains all materials used by the objects in this file. See\
      \ <i><b>Material List Identifiers</b></i>.</dd>\n<dt>*GEOMOBJECT</dt>\n<dd><b>Block</b>\
      \ contains actual geometry of objects in the file. See <i><b>Geometry Object\
      \ Identifiers</b></i>.</dd>\n<dt>*LIGHTOBJECT &amp; *CAMERAOBJECT</dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. <b>Blocks</b> contain information about lights and cameras\
      \ in the scene. They're pretty straightforwards and not at all relevant to UnrealEd,\
      \ so I'm not covering them.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"\
      Scene_Identifiers\">Scene Identifiers</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=2\"\
      \ title=\"Edit section: Scene Identifiers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>*SCENE_FILENAME \"<i>filename</i>\"</dt>\n\
      <dd><b>ignored by UnrealEd</b>. Orignal .max file name that this ASE was generated\
      \ from</dd>\n<dt>*SCENE_FIRSTFRAME <i>frame</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ Unknown, presumed to be frame on which animation begins.</dd>\n<dt>*SCENE_LASTFRAME\
      \ <i>frame</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown, presumed to be\
      \ frame on which animation ends.</dd>\n<dt>*SCENE_FRAMESPEED <i>frames_per_second</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to be frame rate for scene\
      \ (whether it's rendered or keyed frame rate is unknown).</dd>\n<dt>*SCENE_TICKSPERFRAME\
      \ <i>frame</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.</dd>\n<dt>*SCENE_BACKGROUND_STATIC\
      \ <i>red</i> <i>green</i> <i>blue</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ Unknown, presumed to be background color. The three variables are floats between\
      \ 0.0 and 1.0.</dd>\n<dt>*SCENE_AMBIENT_STATIC <i>red</i> <i>green</i> <i>blue</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Ambient light color and brightness. The three\
      \ variables are floats between 0.0 and 1.0.</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Material_List_Identifiers\">Material List Identifiers</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:ASE_File_Format?section=3\" title=\"Edit section: Material\
      \ List Identifiers\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>*MATERIAL_COUNT <i>num</i></dt>\n<dd>Must be first identifier in *MATERIAL_LIST.\
      \ <i>num</i> is the number of materials contained in the *MATERIAL_LIST block.</dd>\n\
      <dt>*MATERIAL <i>index</i></dt>\n<dd><b>Block</b> contains specification of\
      \ a material. <i>index</i> is the index of the material, counting from zero.\
      \ UnrealEd ignores the index and assigns material indices starting from zero\
      \ in the order they occur in the file. See <i><b>Material Identifiers</b></i>.\
      \ Unlike the previous block identifiers, UnrealEd needs to see this one to function\
      \ properly.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Material_Identifiers\"\
      >Material Identifiers</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:ASE_File_Format?section=4\" title=\"Edit section:\
      \ Material Identifiers\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>*MATERIAL_NAME \"<i>name</i>\"</dt>\n<dd>Name of the material. UnrealEd\
      \ may look for a texture by this name, but it has not been tested.</dd>\n<dt>*MATERIAL_CLASS\
      \ \"<i>class</i>\"</dt>\n<dd><b>ignored by UnrealEd</b>. Unknown. Usually \"\
      Standard\", but \"Multi/Sub-Object\" has been observed.</dd>\n<dt>*MATERIAL_AMBIENT\
      \ <i>red</i> <i>green</i> <i>blue</i></dt>\n<dd>Ambient glow of this material.\
      \ It is unknown if this adds to or overrides *SCENE_AMBIENT_STATIC. UnrealEd\
      \ appears to interpret this identifier, but it is unknown what it does with\
      \ it. The three variables are floats between 0.0 and 1.0.</dd>\n<dt>*MATERIAL_DIFFUSE\
      \ <i>red</i> <i>green</i> <i>blue</i></dt>\n<dd>Diffuse color material. UnrealEd\
      \ appears to interpret this identifier, but it is unknown what it does with\
      \ it. The three variables are floats between 0.0 and 1.0.</dd>\n<dt>*MATERIAL_SPECULAR\
      \ <i>red</i> <i>green</i> <i>blue</i></dt>\n<dd>Specular highlight color material.\
      \ UnrealEd appears to interpret this identifier, but it is unknown what it does\
      \ with it. The three variables are floats between 0.0 and 1.0.</dd>\n<dt>*MATERIAL_SHINE\
      \ <i>shine</i></dt>\n<dd><b>ignored by UnrealEd</b>. Defines how focused the\
      \ Specular shine is.</dd>\n<dt>*MATERIAL_SHINESTRENGTH <i>strength</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown.</dd>\n<dt>*MATERIAL_TRANSPARENCY <i>transparency</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to be transparency of the\
      \ material represented as a float from 0 to 1.</dd>\n<dt>*MATERIAL_WIRESIZE\
      \ <i>size</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown, presumed to be\
      \ the pixel width that wires should draw as when viewed as wire frame.</dd>\n\
      <dd>Now, if the material has submaterials, you'll have this:</dd>\n<dt>*NUMSUBMTLS\
      \ <i>num</i></dt>\n<dd>Number of sub-materials for this material;</dd>\n<dt>*SUBMATERIAL\
      \ <i>index</i></dt>\n<dd><b>Block</b> containing a complete material definition.\
      \ indexes start at 0 and count up to NUMSUBMTLS-1. This block contains a complete\
      \ material definition, but may not contain submaterials.</dd>\n<dd>If the material\
      \ is regular (no submaterials, you'll have this the rest of this stuff:</dd>\n\
      <dt>*MATERIAL_SHADING <i>mode</i></dt>\n<dd><b>ignored by UnrealEd</b>. Shading\
      \ algorithm to use. Observed values are Blinn and Phong. Note that this value\
      \ is not quoted.</dd>\n<dt>*MATERIAL_XP_FALLOFF <i>falloff</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown, presumed to be exponential falloff of something\
      \ related to lighting. Float.</dd>\n<dt>*MATERIAL_SELFILLUM <i>illum</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to be some sort of ambient\
      \ glow. Float.</dd>\n<dt>*MATERIAL_FALLOFF <i>falloff</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown. Only observed value is \"In\" (whout quotes).</dd>\n\
      <dt>*MATERIAL_XP_TYPE <i>type</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.\
      \ Only observed value is \"Filter\" (whout quotes).</dd>\n<dt>*MAP_DIFFUSE</dt>\n\
      <dd><b>Block</b> containing a texture map specification for the diffuse channel.\
      \ See <i><b>Map Identifiers</b></i>.</dd>\n<dd>There may be other MAP types\
      \ (for example MAP_AMBIENT, MAP_OPACITY or MAP_SPECULAR) but I don't know of\
      \ them.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Map_Identifiers\"\
      >Map Identifiers</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:ASE_File_Format?section=5\" title=\"Edit section:\
      \ Map Identifiers\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>*MAP_NAME \"<i>name</i>\"</dt>\n<dd><b>ignored by UnrealEd</b>. Unknown,\
      \ presumed to be the name of this texture map for display in the editor.</dd>\n\
      <dt>*MAP_CLASS \"<i>class</i>\"</dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.\
      \ Observed value is \"Bitmap\".</dd>\n<dt>*MAP_SUBNO <i>subno</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown. Observed value is 1.</dd>\n<dt>*MAP_AMOUNT 1.0000</dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to be</dd>\n<dt>*BITMAP \"\
      <i>path</i>\"</dt>\n<dd><i><b>UNREALED USES THIS ONE!</b></i>. It appears to\
      \ be a path to a BMP file. I'm not sure if UnrealEd will add the texture or\
      \ what, but this identifier appears in UnrealEd's strings.</dd>\n<dt>*MAP_TYPE\
      \ <i>type</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown. Observed value\
      \ is \"Screen\" (without quotes).</dd>\n<dt>*UVW_U_OFFSET <i>value</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown. Value is a float.</dd>\n<dt>*UVW_V_OFFSET\
      \ <i>value</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown. Value is a float.</dd>\n\
      <dt>*UVW_U_TILING <i>value</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.\
      \ Value is a float.</dd>\n<dt>*UVW_V_TILING <i>value</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown. Value is a float.</dd>\n<dt>*UVW_ANGLE <i>value</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown. Value is a float.</dd>\n<dt>*UVW_BLUR\
      \ <i>value</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown. Value is a float.</dd>\n\
      <dt>*UVW_BLUR_OFFSET <i>value</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.\
      \ Value is a float.</dd>\n<dt>*UVW_NOUSE_AMT <i>value</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown. Value is a float.</dd>\n<dt>*UVW_NOISE_SIZE <i>value</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown. Value is a float.</dd>\n<dt>*UVW_NOISE_LEVEL\
      \ <i>level</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown. Observed value\
      \ is 1.</dd>\n<dt>*UVW_NOISE_PHASE <i>value</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ Unknown. Value is a float.</dd>\n<dt>*BITMAP_FILTER <i>filter</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown, presumed to be filter for generating <a href=\"\
      /edit/Legacy:Mipmap?redlink=1\" class=\"new\" title=\"Legacy:Mipmap (page does\
      \ not exist)\">MIP Maps</a>. Only observed value is \"Pyramidal\" (without the\
      \ quotes).</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Geometry_Object_Identifiers\"\
      >Geometry Object Identifiers</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=6\"\
      \ title=\"Edit section: Geometry Object Identifiers\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt>*NODE_NAME \"<i>name</i>\"\
      </dt>\n<dd><b>ignored by UnrealEd</b>. Name of this object.</dd>\n<dt>*NODE_TM</dt>\n\
      <dd><b>Block</b> containing information about the transformation matrix on this\
      \ object. Like the outer blocks, UnrealEd doesn't care about seeing this identifier,\
      \ just the ones that are supposed to be inside it. See <i><b>Node Transformation\
      \ Matrix Identifiers</b></i>.</dd>\n<dt>*MESH</dt>\n<dd><b>Block</b> containing\
      \ the actual mesh and texturing info. Like the outer blocks, UnrealEd doesn't\
      \ care about seeing this identifier, just the ones that are supposed to be inside\
      \ it. See <i><b>Mesh Identifiers</b></i>.</dd>\n<dt>*PROP_MOTIONBLUR <i>bool</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to indicate that this object\
      \ should be motion blurred if 1, and not if 0.</dd>\n<dt>*PROP_CASTSHADOW <i>bool</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to indicate that this object\
      \ should cast shadows if 1, and not if 0.</dd>\n<dt>*PROP_RECVSHADOW <i>bool</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Unknown, presumed to indicate that this object\
      \ should receive shadows if 1, and not if 0.</dd>\n<dt>*TM_ANIMATION&#160;</dt>\n\
      <dd><b>Block</b> containing information about the transformation of the animation.\
      \ I don't understand this block. (Different Editor: I understand this block,\
      \ however, I have lost my example ASE files and have forgotten the identifiers\
      \ for within this block. There's a section at the bottom of the page allocating\
      \ space for when I get my hands on another animated ASE file.)</dd>\n<dt>*MATERIAL_REF\
      \ <i>index</i></dt>\n<dd>Index of the texture to use for this object. Default\
      \ for faces without a *MESH_MTLID.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"Node_Transformation_Matrix_Identifiers\">Node Transformation Matrix Identifiers</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:ASE_File_Format?section=7\" title=\"Edit section: Node\
      \ Transformation Matrix Identifiers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>*NODE_NAME \"<i>name</i>\"</dt>\n<dd>Should\
      \ be same name as the containing *GEOM_OBJECT.</dd>\n<dt>*INHERIT_POS <i>int</i>\
      \ <i>int</i> <i>int</i></dt>\n<dd><b>ignored by UnrealEd</b>. Unknown.</dd>\n\
      <dt>*INHERIT_ROT <i>int</i> <i>int</i> <i>int</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ Unknown.</dd>\n<dt>*INHERIT_SCL <i>int</i> <i>int</i> <i>int</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Unknown.</dd>\n<dt>*TM_ROW0 <i>float</i> <i>float</i> <i>float</i></dt>\n\
      <dd>First row of the transformation matrix.</dd>\n<dt>*TM_ROW1 <i>float</i>\
      \ <i>float</i> <i>float</i></dt>\n<dd>Second row of the transformation matrix.</dd>\n\
      <dt>*TM_ROW2 <i>float</i> <i>float</i> <i>float</i></dt>\n<dd>Third row of the\
      \ transformation matrix.</dd>\n<dt>*TM_ROW3 <i>float</i> <i>float</i> <i>float</i></dt>\n\
      <dd>Fourth row of the transformation matrix.</dd>\n<dt>*TM_POS <i>float</i>\
      \ <i>float</i> <i>float</i></dt>\n<dd><b>ignored by UnrealEd</b>. The translation\
      \ part of the transformation. It's here just for convenience, as the information\
      \ is also in the matrix.</dd>\n<dt>*TM_ROTAXIS <i>float</i> <i>float</i> <i>float</i></dt>\n\
      <dd><b>ignored by UnrealEd</b>. Axis of the rotation part of the transformacion.\
      \ Also extracted from the matrix, it's not really needed if you already use\
      \ the full matrix.</dd>\n<dt>*TM_ROTANGLE <i>float</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Angle of rotation part of the transformation.</dd>\n<dt>*TM_SCALE\
      \ <i>float</i> <i>float</i> <i>float</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ Scale of the transformation. Also from the matrix.</dd>\n<dt>*TM_SCALEAXIS\
      \ <i>float</i> <i>float</i> <i>float</i></dt>\n<dd><b>ignored by UnrealEd</b>.\
      \ The axis of the scaling. Not sure how to use it, but the information is also\
      \ on the matrix.</dd>\n<dt>*TM_SCALEAXISANG <i>float</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Angle of the scaling.. Ditto.</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Mesh_Identifiers\">Mesh Identifiers</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=8\"\
      \ title=\"Edit section: Mesh Identifiers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dt>*TIMEVALUE <i>int</i></dt>\n<dd><b>ignored\
      \ by UnrealEd</b>. Represents the frame of animation for which this mesh represents\
      \ (This generally means there are more *MESH declarations within the *GEOMOBJECT\
      \ block to represent the vertex positions in different frames).</dd>\n<dt>*MESH_NUMVERTEX\
      \ <i>num</i></dt>\n<dd>Number of vertices used in the model. Vertex indices\
      \ range from 0 to <i>num</i>-1.</dd>\n<dt>*MESH_VERTEX_LIST</dt>\n<dd><i>Block</i>\
      \ containing vertex positions. UnrealEd doesn't care about this identifier,\
      \ just the ones inside of it. See <i><b>Mesh Geometry Specification</b></i>.</dd>\n\
      <dt>*MESH_NUMFACES <i>num</i></dt>\n<dd>Number of faces used in the model. Face\
      \ indices range from 0 to <i>num</i>-1.</dd>\n<dt>*MESH_FACE_LIST</dt>\n<dd><b>Block</b>\
      \ containing face definitions. Again, UnrealEd only care about the identifiers\
      \ inside. See <i><b>Mesh Geometry Specification</b></i>.</dd>\n<dt>*MESH_NUMTVERTEX\
      \ <i>num</i></dt>\n<dd>Number of vertices used in the first UV set of the model.\
      \ Texture vertex indices range from 0 to <i>num</i>-1.</dd>\n<dt>*MESH_TVERTLIST</dt>\n\
      <dd><b>Block</b> containing texture vertex positions for the first UV set. Just\
      \ like the others UnrealEd doesn't actually need to see this identifier. See\
      \ <i><b>Mesh Texture Specification</b></i>.</dd>\n<dt>*MESH_NUMTVFACES <i>num</i></dt>\n\
      <dd>Number of texture faces used in the first UV set of model. Should always\
      \ be identical to *MESH_NUMFACES.</dd>\n<dt>*MESH_TFACELIST</dt>\n<dd><b>Block</b>\
      \ containing texture face definitions for the first UV set. Do I need to say\
      \ it again?</dd>\n<dt>*MESH_MAPPINGCHANNEL <i>number</i></dt>\n<dd><i>Block\
      \ containing the an additional UV set. a single *MESH can conatin multiple *MESH_MAPPINGCHANNELs.\
      \ Each one has a number starting at 2 and counting upwards. See</i> <b>Mesh\
      \ Texture Specification</b><i>.</i></dd>\n<dt>*MESH_NUMCVERTEX <i>num</i></dt>\n\
      <dd>Number of color vertices. Usually same as *MESH_NUMVERTEX.</dd>\n<dt>*MESH_CVERTLIST</dt>\n\
      <dd><b>Block</b> containing vertex color information. See <i><b>Mesh Color Specification</b></i>.</dd>\n\
      <dt>*MESH_NUMCVFACES <i>num</i></dt>\n<dd>Number of color faces. Should always\
      \ be identical to *MESH_NUMFACES.</dd>\n<dt>*MESH_CFACELIST</dt>\n<dd><b>Block</b>\
      \ containing color face definitions. See <i><b>Mesh Color Specification</b></i>.</dd>\n\
      <dt>*MESH_NORMALS</dt>\n<dd><b>Ignored by UnrealEd???</b> <i>Block</i> containing\
      \ normal information for faces and vertices. See <i><b>Mesh Normal Specification</b></i>.</dd>\n\
      </dl>\n<p>At this level the consistency of the file format breaks down, so will\
      \ my consistency of presentation.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Mesh_Geometry_Specification\">Mesh Geometry Specification</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=9\"\
      \ title=\"Edit section: Mesh Geometry Specification\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>A Mesh is made up of a set\
      \ of triangles built by selecting 3 vertices. the \"front\" of this triangle\
      \ is the side that when viewed from causes the vertices to rotate in a counter-clockwise\
      \ direction around the middle. The mesh is specified by listing all the verticies,\
      \ and then listing polygons that use them. The vertices are specified as follows:</p>\n\
      <pre>*MESH_NUMVERTEX 4\n*MESH_VERTEX_LIST {\n    *MESH_VERTEX  0  -128.0  -128.0\
      \  0.000 \n    *MESH_VERTEX  1   128.0  -128.0  0.000\n    *MESH_VERTEX  2 \
      \  128.0   128.0  0.000\n    *MESH_VERTEX  3  -128.0   128.0  0.000\n}\n</pre>\n\
      <p>Each *MESH_VERTEX line contains 4 numbers, which are the vertex's index followed\
      \ by its X, Y, and Z coordinates. The vertex indices start at 0 and count upwards\
      \ to one less than the value in MESH_NUMVERTEX. Once the vertices are specified,\
      \ the faces are defined like this:</p>\n<pre>*MESH_NUMFACES 2\n*MESH_FACE_LIST\
      \ { \n    *MESH_FACE 0: A: 3 B: 0 C: 2 AB: 1 BC: 0 CA: 1 *MESH_SMOOTHING 1 *MESH_MTLID\
      \ 0 \n    *MESH_FACE 1: A: 1 B: 2 C: 0 AB: 1 BC: 0 CA: 1 *MESH_SMOOTHING 1 *MESH_MTLID\
      \ 0 \n}\n</pre>\n<p>Here the format takes a complete departure from everywhere\
      \ else. Suddenly the values get labeled? The first number is the face index,\
      \ starting at 0 just like all the other indices. the A, B and C numbers are\
      \ the vertex indices of the three corners of the triangle, in counter-clockwise\
      \ order. the AB, BC, and CA are ignored by UnrealEd, but it's believed that\
      \ they determine whether the edge should be drawn when viewed as wire frame.\
      \ It gets stranger still as two identifiers show up on the same line as the\
      \ *MESH_FACE. *MESH_SMOOTHING determines which smoothing groups the triangle\
      \ is a member of and is a comma-delimited list. *MESH_MTLID specifies which\
      \ submaterial to use for this triangle.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Mesh_Texture_Coordinate_Specification\">Mesh Texture Coordinate Specification</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:ASE_File_Format?section=10\" title=\"Edit section: Mesh\
      \ Texture Coordinate Specification\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Once the geometry is in place, we can paint pretty\
      \ pictures on it. The texture coordinate specification is identical to the vertex\
      \ coordinate specification:</p>\n<pre>*MESH_NUMTVERTEX 4\n*MESH_TVERTLIST {\n\
      \    *MESH_TVERT 0  0.000  0.000  0.500\n    *MESH_TVERT 1  1.000  0.000  0.500\n\
      \    *MESH_TVERT 2  1.000  1.000  0.500\n    *MESH_TVERT 3  0.000  1.000  0.500\n\
      }\n</pre>\n<p>The last value is some sort of 3rd texture coordinate. It's not\
      \ clear how or even if it's used. Once the coordinates are defined, you can\
      \ apply the coordinates to the polygons:</p>\n<pre>*MESH_NUMTVFACES 2\n*MESH_TFACELIST\
      \ {\n    *MESH_TFACE 0  3  0  2\n    *MESH_TFACE 1  1  2  0\n}\n</pre>\n<p>The\
      \ first number of each *MESH_TFACE selects a face to apply a texture to. The\
      \ three numbers after that select coordinates from the *MESH_TVERTLIST to use\
      \ for each of the three corners o the triangle.</p>\n<p>Additional texture coordinate\
      \ sets can be specified like this:</p>\n<pre>*MESH_MAPPINGCHANNEL 2 {\n    *MESH_NUMTVERTEX\
      \ 4 \n    *MESH_TVERTLIST { ... } \n    *MESH_NUMTVFACES 2 \n    *MESH_TFACELIST\
      \ { ... } \n}\n</pre>\n<p>The only thing new here is the *MESH_MAPPINGCHANNEL\
      \ block, which contains another copy of the texturing info with different values.\
      \ The number after *MESH_MAPPINGCHANNEL seems to start at 2 for the 2nd set\
      \ (the first one is outside any *MESH_MAPPINGCHANNEL), and count upwards for\
      \ each additional set.</p>\n<h2><span class=\"mw-headline\" id=\"Mesh_Vertex_Color_Specification\"\
      >Mesh Vertex Color Specification</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:ASE_File_Format?section=11\"\
      \ title=\"Edit section: Mesh Vertex Color Specification\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>Now, it seems UnrealEd supports\
      \ this. It shouldn't be able to, but it does. Nowhere in the binary do the strings\
      \ identifying color information occur, yet it does seems to be able to extract\
      \ it. Can either use this color information as lighting, or use the red channel\
      \ to blend between two textures. Anyway, on with the specification.</p>\n<p>Colors\
      \ are specified in a similar way to geometry and textures. First a block of\
      \ vertex data:</p>\n<pre>*MESH_NUMCVERTEX 4\n*MESH_CVERTLIST {\n    *MESH_VERTCOL\
      \ 0 1.0000 0.0000 0.0000\n    *MESH_VERTCOL 1 0.0000 1.0000 0.0000\n    *MESH_VERTCOL\
      \ 2 0.0000 0.0000 1.0000\n    *MESH_VERTCOL 3 1.0000 1.0000 1.0000\n}\n</pre>\n\
      <p>the first value is the color vertex index, the other three are the red green\
      \ and blue of that vertex, from 0 to 1. Then just like textures, they're mapped\
      \ onto polygons:</p>\n<pre>*MESH_NUMCVFACES 2\n*MESH_CFACELIST {\n    *MESH_CFACE\
      \ 0  3  0  2\n    *MESH_CFACE 1  1  2  0\n}\n</pre>\n<h2><span class=\"mw-headline\"\
      \ id=\"Mesh_Vertex_Normal_Specification\">Mesh Vertex Normal Specification</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:ASE_File_Format?section=12\" title=\"Edit section: Mesh\
      \ Vertex Normal Specification\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Yet another bizarre twist here: two types of identifiers\
      \ show up inside the MESH_NORMALS list. The first one is *MESH_FACENORMAL, which\
      \ is followed by a face index and then three float values which are the normalized\
      \ (length 1) normal for that vertex. the *MESH_FACENORMAL may be followed by\
      \ exactly 3 *MESH_VERTEXNORMAL commands which are again followed by the vertex\
      \ index (from *MESH_VERTEX_LIST) and three floats that form the normal for that\
      \ corner of the triangle. I haven't checked if UnrealEd will let you specify\
      \ different normals for the same vertex index, but my initial guess is no.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Node_Animation_Specifiers\">Node Animation\
      \ Specifiers</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:ASE_File_Format?section=13\" title=\"Edit section:\
      \ Node Animation Specifiers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>More to come...</p>\n<hr />\n<p>Well, that's all I\
      \ know. There's still one identifier that shows up in UnrealEd's strings that\
      \ I don't know about: *NUMSUBMTLS. I'm guessing this has something to do with\
      \ materials. I also don't know how vertex colors are specified. I know the internal\
      \ format supports them, as CTF-Magma makes use of vertex colors to blend between\
      \ textures, but I don't know how to get the into UnrealEd.</p>\n<p>Lots of info\
      \ on the UnrealEd side of things, and a sample ASE file can be found at the\
      \ <a href=\"http://udn.epicgames.com/Two/VertexBlendingTutorial\" class=\"extiw\"\
      \ title=\"udn2:VertexBlendingTutorial\">udn2:VertexBlendingTutorial</a>.</p>\n\
      <hr />\n<p><a href=\"/Category:Legacy_Modeling\" title=\"Category:Legacy Modeling\"\
      >Category:Legacy Modeling</a></p>\n<p><b>Tarquin:</b> You mean <a href=\"/Category:Legacy_Application\"\
      \ title=\"Category:Legacy Application\">Category:Legacy Application</a>? but\
      \ this is a file format, not an app! *confused*</p>\n<p><b>inio:</b> I'm blind&#160;:-).\
      \ yeah, relevancy is questionable. Maybe there should be a tools coding category\
      \ or something, for stuff like this. I've come across a couple pages that seemed\
      \ targeted more at people writing tools than people creating content.</p>\n\
      <p><b>Tarquin:</b> interesting idea. Suggest it on the main categories page.\
      \ in the meantime, link this page from <a href=\"/Legacy:File_Format\" title=\"\
      Legacy:File Format\">file format</a> if not already.</p>\n<p><b>Tarquin:</b>\
      \ Is there a way to export ASE files from UnrealEd?</p>\n<p><b>Anonymous:</b>\
      \ the AB,BC,CA are Edge flags. see glEdgeFlag.</p>\n<p><b>Anonymous:</b> most\
      \ engines ignore the vertex normals, they are not guaranteed to be orthonormal\
      \ in the ASE format. This is done by regenerating the normals at each vertex\
      \ per face, averaging them togethor to get the normal. Assuming the engine even\
      \ uses the normals.</p>\n<p><b>0beron</b> I've been trying to get a script working\
      \ to convert STL meshes into ASE format, and have discovered that UEd 3 (UT2004)\
      \ at least is picky about whitespace. In particular lines like *MESH_TVERT work\
      \ best if they are in the form *MESH_TVERT index_number U&lt;tab&gt;V&lt;tab&gt;0.000&lt;newline&gt;\
      \ (with a space being a literal space). A mesh face line is best formatted *MESH_FACE\
      \ 0: A: 0 B: 2 C: 1 AB: 1 BC: 1 CA: 1 *MESH_SMOOTHING 1 &lt;tab&gt;*MESH_MTLID\
      \ 0&lt;newline&gt; (note the space followed by a tab.) My guess is that UED\
      \ splits on tabs and spaces at different times to hack up the strings it reads\
      \ in, and if they don't appear in the right order it gets rubbish.</p>\n<p>for\
      \ info on how to use .ase for biped animation check out: <a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://area.autodesk.com/forum/autodesk-3ds-max/animation/ascii-scene-export-format-explanation/\"\
      >http://area.autodesk.com/forum/autodesk-3ds-max/animation/ascii-scene-export-format-explanation/</a></p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.119 seconds\nReal time usage:\
      \ 0.121 seconds\nPreprocessor visited node count: 835/1000000\nPreprocessor\
      \ generated node count: 1804/1000000\nPost‐expand include size: 15/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:429-0!*!0!!en!*!* and timestamp\
      \ 20221118024841 and revision id 35397\n -->\n"
  categories:
  - sortkey: "ASE File Format"
    name: "Legacy_Modeling"
  links:
  - ns: 100
    exists: true
    name: "Legacy:File Format"
  - ns: 14
    exists: true
    name: "Category:Legacy Application"
  - ns: 100
    exists: true
    name: "Legacy:Lightwave"
  - ns: 100
    exists: true
    name: "Legacy:ActorX"
  - ns: 100
    exists: false
    name: "Legacy:Mipmap"
  - ns: 100
    exists: true
    name: "Legacy:Static Mesh"
  - ns: 14
    exists: true
    name: "Category:Legacy Modeling"
  - ns: 100
    exists: true
    name: "Legacy:3D Studio Max"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:Maya"
  templates: []
  images: []
  externallinks:
  - "http://area.autodesk.com/forum/autodesk-3ds-max/animation/ascii-scene-export-format-explanation/"
  sections:
  - toclevel: 1
    level: "2"
    line: "Top Level Identifiers"
    number: "1"
    index: "1"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 800
    anchor: "Top_Level_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Scene Identifiers"
    number: "2"
    index: "2"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 1955
    anchor: "Scene_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Material List Identifiers"
    number: "3"
    index: "3"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 3035
    anchor: "Material_List_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Material Identifiers"
    number: "4"
    index: "4"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 3624
    anchor: "Material_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Map Identifiers"
    number: "5"
    index: "5"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 6740
    anchor: "Map_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Geometry Object Identifiers"
    number: "6"
    index: "6"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 8868
    anchor: "Geometry_Object_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Node Transformation Matrix Identifiers"
    number: "7"
    index: "7"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 10555
    anchor: "Node_Transformation_Matrix_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Mesh Identifiers"
    number: "8"
    index: "8"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 12354
    anchor: "Mesh_Identifiers"
  - toclevel: 1
    level: "2"
    line: "Mesh Geometry Specification"
    number: "9"
    index: "9"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 14929
    anchor: "Mesh_Geometry_Specification"
  - toclevel: 1
    level: "2"
    line: "Mesh Texture Coordinate Specification"
    number: "10"
    index: "10"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 16727
    anchor: "Mesh_Texture_Coordinate_Specification"
  - toclevel: 1
    level: "2"
    line: "Mesh Vertex Color Specification"
    number: "11"
    index: "11"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 18122
    anchor: "Mesh_Vertex_Color_Specification"
  - toclevel: 1
    level: "2"
    line: "Mesh Vertex Normal Specification"
    number: "12"
    index: "12"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 19076
    anchor: "Mesh_Vertex_Normal_Specification"
  - toclevel: 1
    level: "2"
    line: "Node Animation Specifiers"
    number: "13"
    index: "13"
    fromtitle: "Legacy:ASE_File_Format"
    byteoffset: 19713
    anchor: "Node_Animation_Specifiers"
  displaytitle: "Legacy:ASE File Format"
  iwlinks:
  - prefix: "udn2"
    url: "http://udn.epicgames.com/Two/VertexBlendingTutorial"
    name: "udn2:VertexBlendingTutorial"
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/ASCII"
    name: "wikipedia:ASCII"
  wikitext:
    text: "The ASE [[Legacy:File Format|file format]], short for [[Wikipedia:ASCII]]\
      \ Scene Exporter, is the prefered format to import [[Legacy:Static Mesh|static\
      \ mesh]]es into [[Legacy:UnrealEd|UnrealEd]] from anything except [[Legacy:Lightwave|Lightwave]].\
      \ The format is native to [[Legacy:3D Studio Max|3D Studio Max]], but [[Legacy:ActorX|ActorX]]\
      \ for [[Legacy:Maya|Maya]] can also export it. The format is based on identifiers,\
      \ all in the form *ASTERISK_THEN_NAME, which are followed by zero or more values,\
      \ and then for a few a block of further identifiers surrounded by curly braces.\
      \  As there is no official specification, it is unknown whether there is differentiation\
      \ of whitespace, but for UnrealEd, each identifier must start on its own line,\
      \ preceded only by spaces, tabs and closing curly braces.\n\n==Top Level Identifiers==\n\
      \n; <nowiki>*</nowiki>3DSMAX_ASCIIEXPORT ''version'': '''ignored by UnrealEd'''.\
      \ indicates the version of the file.  typical value for 'version' seems to be\
      \ 200.\n; <nowiki>*</nowiki>COMMENT \"''comment''\": '''ignored by UnrealEd'''.\
      \  Contains version of the exporter and export date in files generated by [[Legacy:3D\
      \ Studio Max|3D Studio Max]].  Presumably could contain anything you want and\
      \ might occur in any block.\n; <nowiki>*</nowiki>SCENE: '''ignored by UnrealEd'''.\
      \ '''Block''' contains information about the scene, animation, ambient light,\
      \ background color.  See '''''Scene Identifiers'''''.\n; <nowiki>*</nowiki>MATERIAL_LIST:\
      \ '''Block''' contains all materials used by the objects in this file.  See\
      \ '''''Material List Identifiers'''''. \n; <nowiki>*</nowiki>GEOMOBJECT: '''Block'''\
      \ contains actual geometry of objects  in the file.  See '''''Geometry Object\
      \ Identifiers'''''.\n; <nowiki>*</nowiki>LIGHTOBJECT & *CAMERAOBJECT: '''ignored\
      \ by UnrealEd'''. '''Blocks''' contain information about lights and cameras\
      \ in the scene.  They're pretty straightforwards and not at all relevant to\
      \ UnrealEd, so I'm not covering them.\n\n==Scene Identifiers==\n\n; <nowiki>*</nowiki>SCENE_FILENAME\
      \ \"''filename''\": '''ignored by UnrealEd'''.  Orignal .max file name that\
      \ this ASE was generated from\n; <nowiki>*</nowiki>SCENE_FIRSTFRAME ''frame'':\
      \ '''ignored by UnrealEd'''.  Unknown, presumed to be frame on which animation\
      \ begins.\n; <nowiki>*</nowiki>SCENE_LASTFRAME ''frame'': '''ignored by UnrealEd'''.\
      \  Unknown, presumed to be frame on which animation ends.\n; <nowiki>*</nowiki>SCENE_FRAMESPEED\
      \ ''frames_per_second'': '''ignored by UnrealEd'''.  Unknown, presumed to be\
      \ frame rate for scene (whether it's rendered or keyed frame rate is unknown).\n\
      ; <nowiki>*</nowiki>SCENE_TICKSPERFRAME ''frame'': '''ignored by UnrealEd'''.\
      \  Unknown.\n; <nowiki>*</nowiki>SCENE_BACKGROUND_STATIC ''red'' ''green'' ''blue'':\
      \ '''ignored by UnrealEd'''.  Unknown, presumed to be background color.  The\
      \ three variables are floats between 0.0 and 1.0.\n; <nowiki>*</nowiki>SCENE_AMBIENT_STATIC\
      \ ''red'' ''green'' ''blue'': '''ignored by UnrealEd'''.  Ambient light color\
      \ and brightness.  The three variables are floats between 0.0 and 1.0.\n\n==Material\
      \ List Identifiers==\n\n; <nowiki>*</nowiki>MATERIAL_COUNT ''num'': Must be\
      \ first identifier in *MATERIAL_LIST.  ''num'' is the number of materials contained\
      \ in the *MATERIAL_LIST block.\n; <nowiki>*</nowiki>MATERIAL ''index'': '''Block'''\
      \ contains specification of a material.  ''index'' is the index of the material,\
      \ counting from zero.  UnrealEd ignores the index and assigns material indices\
      \ starting from zero in the order they occur in the file.  See '''''Material\
      \ Identifiers'''''.  Unlike the previous block identifiers, UnrealEd needs to\
      \ see this one to function properly.\n\n==Material Identifiers==\n\n; <nowiki>*</nowiki>MATERIAL_NAME\
      \ \"''name''\": Name of the material.  UnrealEd may look for a texture by this\
      \ name, but it has not been tested.\n; <nowiki>*</nowiki>MATERIAL_CLASS \"''class''\"\
      : '''ignored by UnrealEd'''.  Unknown.  Usually \"Standard\", but \"Multi/Sub-Object\"\
      \ has been observed.\n; <nowiki>*</nowiki>MATERIAL_AMBIENT  ''red'' ''green''\
      \ ''blue'': Ambient glow of this material.  It is unknown if this adds to or\
      \ overrides *SCENE_AMBIENT_STATIC.  UnrealEd appears to interpret this identifier,\
      \ but it is unknown what it does with it.  The three variables are floats between\
      \ 0.0 and 1.0.\n; <nowiki>*</nowiki>MATERIAL_DIFFUSE  ''red'' ''green'' ''blue'':\
      \ Diffuse color material.  UnrealEd appears to interpret this identifier, but\
      \ it is unknown what it does with it.  The three variables are floats between\
      \ 0.0 and 1.0.\n; <nowiki>*</nowiki>MATERIAL_SPECULAR ''red'' ''green'' ''blue'':\
      \ Specular highlight color material.  UnrealEd appears to interpret this identifier,\
      \ but it is unknown what it does with it.  The three variables are floats between\
      \ 0.0 and 1.0.\n; <nowiki>*</nowiki>MATERIAL_SHINE ''shine'': '''ignored by\
      \ UnrealEd'''.  Defines how focused the Specular shine is.\n; <nowiki>*</nowiki>MATERIAL_SHINESTRENGTH\
      \ ''strength'': '''ignored by UnrealEd'''.  Unknown.\n; <nowiki>*</nowiki>MATERIAL_TRANSPARENCY\
      \ ''transparency'': '''ignored by UnrealEd'''.  Unknown, presumed to be transparency\
      \ of the material represented as a float from 0 to 1.\n; <nowiki>*</nowiki>MATERIAL_WIRESIZE\
      \ ''size'': '''ignored by UnrealEd'''.  Unknown, presumed to be the pixel width\
      \ that wires should draw as when viewed as wire frame.\n: Now, if the material\
      \ has submaterials, you'll have this:\n; <nowiki>*</nowiki>NUMSUBMTLS ''num'':\
      \ Number of sub-materials for this material;\n; <nowiki>*</nowiki>SUBMATERIAL\
      \ ''index'': '''Block''' containing a complete material definition.  indexes\
      \ start at 0 and count up to NUMSUBMTLS-1.  This block contains a complete material\
      \ definition, but may not contain submaterials.\n: If the material is regular\
      \ (no submaterials, you'll have this the rest of this stuff:\n; <nowiki>*</nowiki>MATERIAL_SHADING\
      \ ''mode'': '''ignored by UnrealEd'''.  Shading algorithm to use.  Observed\
      \ values are Blinn and Phong.  Note that this value is not quoted.\n; <nowiki>*</nowiki>MATERIAL_XP_FALLOFF\
      \ ''falloff'': '''ignored by UnrealEd'''.  Unknown, presumed to be exponential\
      \ falloff of something related to lighting.  Float.\n; <nowiki>*</nowiki>MATERIAL_SELFILLUM\
      \ ''illum'': '''ignored by UnrealEd'''.  Unknown, presumed to be some sort of\
      \ ambient glow.  Float.\n; <nowiki>*</nowiki>MATERIAL_FALLOFF ''falloff'': '''ignored\
      \ by UnrealEd'''.  Unknown.  Only observed value is \"In\" (whout quotes).\n\
      ; <nowiki>*</nowiki>MATERIAL_XP_TYPE ''type'': '''ignored by UnrealEd'''.  Unknown.\
      \  Only observed value is \"Filter\" (whout quotes).\n; <nowiki>*</nowiki>MAP_DIFFUSE:\
      \ '''Block''' containing a texture map specification for the diffuse channel.\
      \  See '''''Map Identifiers'''''.\n: There may be other MAP types (for example\
      \ MAP_AMBIENT, MAP_OPACITY or MAP_SPECULAR) but I don't know of them.\n\n==Map\
      \ Identifiers==\n\n; <nowiki>*</nowiki>MAP_NAME \"''name''\": '''ignored by\
      \ UnrealEd'''.  Unknown, presumed to be the name of this texture map for display\
      \ in the editor.\n; <nowiki>*</nowiki>MAP_CLASS \"''class''\": '''ignored by\
      \ UnrealEd'''.  Unknown.  Observed value is \"Bitmap\".\n; <nowiki>*</nowiki>MAP_SUBNO\
      \ ''subno'': '''ignored by UnrealEd'''.  Unknown.  Observed value is 1.\n; <nowiki>*</nowiki>MAP_AMOUNT\
      \ 1.0000: '''ignored by UnrealEd'''.  Unknown, presumed to be\n; <nowiki>*</nowiki>BITMAP\
      \ \"''path''\": '''''UNREALED USES THIS ONE!'''''.  It appears to be a path\
      \ to a BMP file.  I'm not sure if UnrealEd will add the texture or what, but\
      \ this identifier appears in UnrealEd's strings.\n; <nowiki>*</nowiki>MAP_TYPE\
      \ ''type'': '''ignored by UnrealEd'''.  Unknown.  Observed value is \"Screen\"\
      \ (without quotes).\n; <nowiki>*</nowiki>UVW_U_OFFSET ''value'': '''ignored\
      \ by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_V_OFFSET\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_U_TILING\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_V_TILING\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_ANGLE\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_BLUR\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_BLUR_OFFSET\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_NOUSE_AMT\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_NOISE_SIZE\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>UVW_NOISE_LEVEL\
      \ ''level'': '''ignored by UnrealEd'''.  Unknown.  Observed value is 1.\n; <nowiki>*</nowiki>UVW_NOISE_PHASE\
      \ ''value'': '''ignored by UnrealEd'''.  Unknown.  Value is a float.\n; <nowiki>*</nowiki>BITMAP_FILTER\
      \ ''filter'': '''ignored by UnrealEd'''.  Unknown, presumed to be filter for\
      \ generating [[Legacy:Mipmap|MIP Maps]].  Only observed value is \"Pyramidal\"\
      \ (without the quotes).\n\n==Geometry Object Identifiers==\n\n; <nowiki>*</nowiki>NODE_NAME\
      \ \"''name''\": '''ignored by UnrealEd'''.  Name of this object.\n; <nowiki>*</nowiki>NODE_TM:\
      \ '''Block''' containing information about the transformation matrix on this\
      \ object.  Like the outer blocks, UnrealEd doesn't care about seeing this identifier,\
      \ just the ones that are supposed to be inside it.  See '''''Node Transformation\
      \ Matrix Identifiers'''''.\n; <nowiki>*</nowiki>MESH: '''Block''' containing\
      \ the actual mesh and texturing info.  Like the outer blocks, UnrealEd doesn't\
      \ care about seeing this identifier, just the ones that are supposed to be inside\
      \ it.  See '''''Mesh Identifiers'''''.\n; <nowiki>*</nowiki>PROP_MOTIONBLUR\
      \ ''bool'': '''ignored by UnrealEd'''.  Unknown, presumed to indicate that this\
      \ object should be motion blurred if 1, and not if 0.\n; <nowiki>*</nowiki>PROP_CASTSHADOW\
      \ ''bool'': '''ignored by UnrealEd'''.  Unknown, presumed to indicate that this\
      \ object should cast shadows if 1, and not if 0.\n; <nowiki>*</nowiki>PROP_RECVSHADOW\
      \ ''bool'': '''ignored by UnrealEd'''.  Unknown, presumed to indicate that this\
      \ object should receive shadows if 1, and not if 0.\n; <nowiki>*</nowiki>TM_ANIMATION\
      \ : '''Block''' containing information about the transformation of the animation.\
      \  I don't understand this block. (Different Editor: I understand this block,\
      \ however, I have lost my example ASE files and have forgotten the identifiers\
      \ for within this block. There's a section at the bottom of the page allocating\
      \ space for when I get my hands on another animated ASE file.)\n; <nowiki>*</nowiki>MATERIAL_REF\
      \ ''index'': Index of the texture to use for this object.  Default for faces\
      \ without a *MESH_MTLID.\n\n==Node Transformation Matrix Identifiers==\n\n;\
      \ <nowiki>*</nowiki>NODE_NAME \"''name''\": Should be same name as the containing\
      \ *GEOM_OBJECT.\n; <nowiki>*</nowiki>INHERIT_POS ''int'' ''int'' ''int'': '''ignored\
      \ by UnrealEd'''.  Unknown.\n; <nowiki>*</nowiki>INHERIT_ROT ''int'' ''int''\
      \ ''int'': '''ignored by UnrealEd'''.  Unknown.\n; <nowiki>*</nowiki>INHERIT_SCL\
      \ ''int'' ''int'' ''int'': '''ignored by UnrealEd'''.  Unknown.\n; <nowiki>*</nowiki>TM_ROW0\
      \ ''float'' ''float'' ''float'': First row of the transformation matrix.\n;\
      \ <nowiki>*</nowiki>TM_ROW1 ''float'' ''float'' ''float'': Second row of the\
      \ transformation matrix.\n; <nowiki>*</nowiki>TM_ROW2 ''float'' ''float'' ''float'':\
      \ Third row of the transformation matrix.\n; <nowiki>*</nowiki>TM_ROW3 ''float''\
      \ ''float'' ''float'': Fourth row of the transformation matrix.\n; <nowiki>*</nowiki>TM_POS\
      \ ''float'' ''float'' ''float'': '''ignored by UnrealEd'''.  The translation\
      \ part of the transformation. It's here just for convenience, as the information\
      \ is also in the matrix.\n; <nowiki>*</nowiki>TM_ROTAXIS  ''float'' ''float''\
      \ ''float'': '''ignored by UnrealEd'''.  Axis of the rotation part of the transformacion.\
      \ Also extracted from the matrix, it's not really needed if you already use\
      \ the full matrix.\n; <nowiki>*</nowiki>TM_ROTANGLE ''float'': '''ignored by\
      \ UnrealEd'''.  Angle of rotation part of the transformation.\n; <nowiki>*</nowiki>TM_SCALE\
      \ ''float'' ''float'' ''float'': '''ignored by UnrealEd'''.  Scale of the transformation.\
      \ Also from the matrix.\n; <nowiki>*</nowiki>TM_SCALEAXIS ''float'' ''float''\
      \ ''float'': '''ignored by UnrealEd'''.  The axis of the scaling. Not sure how\
      \ to use it, but the information is also on the matrix.\n; <nowiki>*</nowiki>TM_SCALEAXISANG\
      \ ''float'': '''ignored by UnrealEd'''.  Angle of the scaling.. Ditto.\n\n==Mesh\
      \ Identifiers==\n\n; <nowiki>*</nowiki>TIMEVALUE ''int'': '''ignored by UnrealEd'''.\
      \  Represents the frame of animation for which this mesh represents (This generally\
      \ means there are more *MESH declarations within the *GEOMOBJECT block to represent\
      \ the vertex positions in different frames).\n; <nowiki>*</nowiki>MESH_NUMVERTEX\
      \ ''num'': Number of vertices used in the model.  Vertex indices range from\
      \ 0 to ''num''-1.\n; <nowiki>*</nowiki>MESH_VERTEX_LIST: ''Block'' containing\
      \ vertex positions.  UnrealEd doesn't care about this identifier, just the ones\
      \ inside of it.  See '''''Mesh Geometry Specification'''''.\n; <nowiki>*</nowiki>MESH_NUMFACES\
      \ ''num'': Number of faces used in the model.  Face indices range from 0 to\
      \ ''num''-1.\n; <nowiki>*</nowiki>MESH_FACE_LIST: '''Block''' containing face\
      \ definitions.  Again, UnrealEd only care about the identifiers inside.  See\
      \ '''''Mesh Geometry Specification'''''.\n; <nowiki>*</nowiki>MESH_NUMTVERTEX\
      \ ''num'': Number of vertices used in the first UV set of the model.  Texture\
      \ vertex indices range from 0 to ''num''-1.\n; <nowiki>*</nowiki>MESH_TVERTLIST:\
      \ '''Block''' containing texture vertex positions for the first UV set.  Just\
      \ like the others UnrealEd doesn't actually need to see this identifier.  See\
      \ '''''Mesh Texture Specification'''''.\n; <nowiki>*</nowiki>MESH_NUMTVFACES\
      \ ''num'': Number of texture faces used in the first UV set of model.  Should\
      \ always be identical to *MESH_NUMFACES.\n; <nowiki>*</nowiki>MESH_TFACELIST:\
      \ '''Block''' containing texture face definitions for the first UV set.  Do\
      \ I need to say it again?\n; <nowiki>*</nowiki>MESH_MAPPINGCHANNEL ''number'':\
      \ ''Block containing the an additional UV set.  a single *MESH can conatin multiple\
      \ *MESH_MAPPINGCHANNELs.  Each one has a number starting at 2 and counting upwards.\
      \ See '''''Mesh Texture Specification'''''.\n; <nowiki>*</nowiki>MESH_NUMCVERTEX\
      \ ''num'': Number of color vertices.  Usually same as *MESH_NUMVERTEX.\n; <nowiki>*</nowiki>MESH_CVERTLIST:\
      \ '''Block''' containing vertex color information. See '''''Mesh Color Specification'''''.\n\
      ; <nowiki>*</nowiki>MESH_NUMCVFACES ''num'': Number of color faces.  Should\
      \ always be identical to *MESH_NUMFACES.\n; <nowiki>*</nowiki>MESH_CFACELIST:\
      \ '''Block''' containing color face definitions. See '''''Mesh Color Specification'''''.\n\
      ; <nowiki>*</nowiki>MESH_NORMALS: '''Ignored by UnrealEd???''' ''Block'' containing\
      \ normal information for faces and vertices. See '''''Mesh Normal Specification'''''.\n\
      \nAt this level the consistency of the file format breaks down, so will my consistency\
      \ of presentation.\n\n==Mesh Geometry Specification==\n\nA Mesh is made up of\
      \ a set of triangles built by selecting 3 vertices.  the \"front\" of this triangle\
      \ is the side that when viewed from causes the vertices to rotate in a counter-clockwise\
      \ direction around the middle.  The mesh is specified by listing all the verticies,\
      \ and then listing polygons that use them.  The vertices are specified as follows:\n\
      \n *MESH_NUMVERTEX 4\n *MESH_VERTEX_LIST {\n     *MESH_VERTEX  0  -128.0  -128.0\
      \  0.000 \n     *MESH_VERTEX  1   128.0  -128.0  0.000\n     *MESH_VERTEX  2\
      \   128.0   128.0  0.000\n     *MESH_VERTEX  3  -128.0   128.0  0.000\n }\n\n\
      Each *MESH_VERTEX line contains 4 numbers, which are the vertex's index followed\
      \ by its X, Y, and Z coordinates.  The vertex indices start at 0 and count upwards\
      \ to one less than the value in MESH_NUMVERTEX.  Once the vertices are specified,\
      \ the faces are defined like this:\n\n *MESH_NUMFACES 2\n *MESH_FACE_LIST {\
      \ \n     *MESH_FACE 0: A: 3 B: 0 C: 2 AB: 1 BC: 0 CA: 1 *MESH_SMOOTHING 1 *MESH_MTLID\
      \ 0 \n     *MESH_FACE 1: A: 1 B: 2 C: 0 AB: 1 BC: 0 CA: 1 *MESH_SMOOTHING 1\
      \ *MESH_MTLID 0 \n }\n\nHere the format takes a complete departure from everywhere\
      \ else.  Suddenly the values get labeled?  The first number is the face index,\
      \ starting at 0 just like all the other indices.  the A, B and C numbers are\
      \ the vertex indices of the three corners of the triangle, in counter-clockwise\
      \ order.  the AB, BC, and CA are ignored by UnrealEd, but it's believed that\
      \ they determine whether the edge should be drawn when viewed as wire frame.\
      \  It gets stranger still as two identifiers show up on the same line as the\
      \ *MESH_FACE.  *MESH_SMOOTHING determines which smoothing groups the triangle\
      \ is a member of and is a comma-delimited list.  *MESH_MTLID specifies which\
      \ submaterial to use for this triangle.\n\n==Mesh Texture Coordinate Specification==\n\
      \nOnce the geometry is in place, we can paint pretty pictures on it.  The texture\
      \ coordinate specification is identical to the vertex coordinate specification:\n\
      \n *MESH_NUMTVERTEX 4\n *MESH_TVERTLIST {\n     *MESH_TVERT 0  0.000  0.000\
      \  0.500\n     *MESH_TVERT 1  1.000  0.000  0.500\n     *MESH_TVERT 2  1.000\
      \  1.000  0.500\n     *MESH_TVERT 3  0.000  1.000  0.500\n }\n\nThe last value\
      \ is some sort of 3rd texture coordinate.  It's not clear how or even if it's\
      \ used.  Once the coordinates are defined, you can apply the coordinates to\
      \ the polygons:\n\n *MESH_NUMTVFACES 2\n *MESH_TFACELIST {\n     *MESH_TFACE\
      \ 0  3  0  2\n     *MESH_TFACE 1  1  2  0\n }\n\nThe first number of each *MESH_TFACE\
      \ selects a face to apply a texture to.  The three numbers after that select\
      \ coordinates from the *MESH_TVERTLIST to use for each of the three corners\
      \ o the triangle.\n\nAdditional texture coordinate sets can be specified like\
      \ this:\n\n *MESH_MAPPINGCHANNEL 2 {\n     *MESH_NUMTVERTEX 4 \n     *MESH_TVERTLIST\
      \ { ... } \n     *MESH_NUMTVFACES 2 \n     *MESH_TFACELIST { ... } \n }\n\n\
      The only thing new here is the *MESH_MAPPINGCHANNEL block, which contains another\
      \ copy of the texturing info with different values.  The number after *MESH_MAPPINGCHANNEL\
      \ seems to start at 2 for the 2nd set (the first one is outside any *MESH_MAPPINGCHANNEL),\
      \ and count upwards for each additional set.\n\n==Mesh Vertex Color Specification==\n\
      \nNow, it seems UnrealEd supports this.  It shouldn't be able to, but it does.\
      \  Nowhere in the binary do the strings identifying color information occur,\
      \ yet it does seems to be able to extract it.  Can either use this color information\
      \ as lighting, or use the red channel to blend between two textures.  Anyway,\
      \ on with the specification.\n\nColors are specified in a similar way to geometry\
      \ and textures.  First a block of vertex data:\n\n *MESH_NUMCVERTEX 4\n *MESH_CVERTLIST\
      \ {\n     *MESH_VERTCOL 0 1.0000 0.0000 0.0000\n     *MESH_VERTCOL 1 0.0000\
      \ 1.0000 0.0000\n     *MESH_VERTCOL 2 0.0000 0.0000 1.0000\n     *MESH_VERTCOL\
      \ 3 1.0000 1.0000 1.0000\n }\n\nthe first value is the color vertex index, the\
      \ other three are the red green and blue of that vertex, from 0 to 1.  Then\
      \ just like textures, they're mapped onto polygons:\n\n *MESH_NUMCVFACES 2\n\
      \ *MESH_CFACELIST {\n     *MESH_CFACE 0  3  0  2\n     *MESH_CFACE 1  1  2 \
      \ 0\n }\n\n==Mesh Vertex Normal Specification==\n\nYet another bizarre twist\
      \ here: two types of identifiers show up inside the MESH_NORMALS list.  The\
      \ first one is *MESH_FACENORMAL, which is followed by a face index and then\
      \ three float values which are the normalized (length 1) normal for that vertex.\
      \  the *MESH_FACENORMAL may be followed by exactly 3 *MESH_VERTEXNORMAL commands\
      \ which are again followed by the vertex index (from *MESH_VERTEX_LIST) and\
      \ three floats that form the normal for that corner of the triangle.  I haven't\
      \ checked if UnrealEd will let you specify different normals for the same vertex\
      \ index, but my initial guess is no.\n\n==Node Animation Specifiers==\n\nMore\
      \ to come...\n\n----\n\nWell, that's all I know.  There's still one identifier\
      \ that shows up in UnrealEd's strings that I don't know about: *NUMSUBMTLS.\
      \  I'm guessing this has something to do with materials.  I also don't know\
      \ how vertex colors are specified.  I know the internal format supports them,\
      \ as CTF-Magma makes use of vertex colors to blend between textures, but I don't\
      \ know how to get the into UnrealEd.\n\nLots of info on the UnrealEd side of\
      \ things, and a sample ASE file can be found at the [[udn2:VertexBlendingTutorial]].\n\
      \n----\n\n[[:Category:Legacy Modeling]]\n\n'''Tarquin:''' You mean [[:Category:Legacy\
      \ Application]]? but this is a file format, not an app! *confused*\n\n'''inio:'''\
      \ I'm blind :-).  yeah, relevancy is questionable.  Maybe there should be a\
      \ tools coding category or something, for stuff like this.  I've come across\
      \ a couple pages that seemed targeted more at people writing tools than people\
      \ creating content.\n\n'''Tarquin:''' interesting idea. Suggest it on the main\
      \ categories page. in the meantime, link this page from [[Legacy:File Format|file\
      \ format]] if not already.\n\n'''Tarquin:''' Is there a way to export ASE files\
      \ from UnrealEd?\n\n'''Anonymous:''' the AB,BC,CA are Edge flags. see glEdgeFlag.\n\
      \n'''Anonymous:''' most engines ignore the vertex normals, they are not guaranteed\
      \ to be orthonormal in the ASE format. This is done by regenerating the normals\
      \ at each vertex per face, averaging them togethor to get the normal. Assuming\
      \ the engine even uses the normals.\n[[Category:Legacy Modeling|{{PAGENAME}}]]\n\
      \n'''0beron''' I've been trying to get a script working to convert STL meshes\
      \ into ASE format, and have discovered that UEd 3 (UT2004) at least is picky\
      \ about whitespace. In particular lines like *MESH_TVERT work best if they are\
      \ in the form *MESH_TVERT index_number U<tab>V<tab>0.000<newline> (with a space\
      \ being a literal space). A mesh face line is best formatted *MESH_FACE  0:\
      \ A: 0 B: 2 C: 1 AB: 1 BC: 1 CA: 1 *MESH_SMOOTHING 1 <tab>*MESH_MTLID 0<newline>\
      \ (note the space followed by a tab.) My guess is that UED splits on tabs and\
      \ spaces at different times to hack up the strings it reads in, and if they\
      \ don't appear in the right order it gets rubbish.\n\nfor info on how to use\
      \ .ase for biped animation check out:\nhttp://area.autodesk.com/forum/autodesk-3ds-max/animation/ascii-scene-export-format-explanation/"
  properties: []
  revId: 35397
name: "Legacy:ASE File Format"
revision:
  revid: 35397
  parentid: 35360
  user: "217.169.229.152"
  timestamp: 1251966824.000000000
  comment: "MESH_NUMTVFACES is not supposed to stand there, it should be MESH_NUMFACES\
    \ wich is actually interceded by *MESH_VERTEX_LIST"
timestamp: 1668766496.312887000
