---
parse:
  title: "Legacy:Wormbo/WUtils"
  text:
    text: "<p>For the full list of classes, methods, etc. go to the <a href=\"/Legacy:WUtils\"\
      \ title=\"Legacy:WUtils\">wUtils</a> page.</p>\n<p></p>\n<div id=\"toc\" class=\"\
      toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"\
      toclevel-1 tocsection-1\"><a href=\"#wString\"><span class=\"tocnumber\">1</span>\
      \ <span class=\"toctext\">wString</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"\
      ><a href=\"#Methods\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\"\
      >Methods</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-3\"\
      ><a href=\"#wDraw\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >wDraw</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Structs\"\
      ><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Structs</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-5\"><a href=\"#Methods_2\"><span class=\"\
      tocnumber\">2.2</span> <span class=\"toctext\">Methods</span></a></li>\n</ul>\n\
      </li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"wString\"\
      >wString</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Wormbo/WUtils?section=1\" title=\"Edit section:\
      \ wString\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Methods\">Methods</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Wormbo/WUtils?section=2\"\
      \ title=\"Edit section: Methods\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>FloatToString <i>(maybe in v105)</i>&#160;</dt>\n\
      <dd>Converts a float to string.<br />\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> FloatToString<span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> Value, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">int</span> Precision<span class=\"br0\">)</span></pre></div>\n\
      </div>\n</dd>\n</dl>\n<p><span class=\"br0\">{</span></p>\n<pre>   <span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> IntPart;\n   <span class=\"\
      kw1\">local</span> <span class=\"kw5\">float</span> FloatPart;\n   <span class=\"\
      kw1\">local</span> <span class=\"kw5\">string</span> IntString, FloatString;\n\
      </pre>\n<p>&#160; \tPrecision <span class=\"sy0\">=</span> <span class=\"kw3\"\
      >Max</span><span class=\"br0\">(</span>Precision, <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>;\t<span class=\"co1\">// otherwise a simple int cast\
      \ should be used</span> &#160; \t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> Value <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">{</span> \t\tIntString <span\
      \ class=\"sy0\">=</span> <span class=\"st0\">\"-\"</span>; \t\tValue <span class=\"\
      sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>; \t\
      <span class=\"br0\">}</span> \tIntPart <span class=\"sy0\">=</span> <span class=\"\
      kw5\">int</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span>;\
      \ \tFloatPart <span class=\"sy0\">=</span> Value <span class=\"sy0\">-</span>\
      \ IntPart; \tIntString <span class=\"sy0\">=</span> IntString <span class=\"\
      sy0\">$</span> <span class=\"kw5\">string</span><span class=\"br0\">(</span>IntPart<span\
      \ class=\"br0\">)</span>; \tFloatString <span class=\"sy0\">=</span> <span class=\"\
      kw5\">string</span><span class=\"br0\">(</span><span class=\"kw5\">int</span><span\
      \ class=\"br0\">(</span>FloatPart <span class=\"sy0\">*</span> <span class=\"\
      nu0\">10</span> <span class=\"sy0\">**</span> Precision<span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>; \t<span class=\"kw2\">while</span> <span class=\"\
      br0\">(</span><span class=\"kw3\">Len</span><span class=\"br0\">(</span>FloatString<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> Precision<span class=\"\
      br0\">)</span> \t\tFloatString <span class=\"sy0\">=</span> <span class=\"st0\"\
      >\"0\"</span> <span class=\"sy0\">$</span> FloatString; &#160; \t<span class=\"\
      kw2\">return</span> IntString<span class=\"sy0\">$</span><span class=\"st0\"\
      >\".\"</span><span class=\"sy0\">$</span>FloatString;</p>\n<p><span class=\"\
      br0\">}</span></p>\n<h2><span class=\"mw-headline\" id=\"wDraw\">wDraw</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Wormbo/WUtils?section=3\" title=\"Edit section: wDraw\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span\
      \ class=\"mw-headline\" id=\"Structs\">Structs</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Wormbo/WUtils?section=4\"\
      \ title=\"Edit section: Structs\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>MaterialRegion&#160;</dt>\n<dd>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">struct</span> MaterialRegion <span\
      \ class=\"br0\">{</span></pre></div>\n</div>\n</dd>\n</dl>\n<pre>   <span class=\"\
      kw1\">var</span> <span class=\"kw5\">Material</span> Tex;\n   <span class=\"\
      kw1\">var</span> <span class=\"kw5\">IntBox</span> TexCoords;   <span class=\"\
      co1\">// absolute material coordinates</span>\n   <span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">FloatBox</span> ScreenCoords;  <span class=\"co1\">//\
      \ relative screen coordinates</span>\n   <span class=\"kw1\">var</span> ERenderStyle\
      \ RenderStyle;\n   <span class=\"kw1\">var</span> <span class=\"kw5\">Color</span>\
      \ DrawColor;\n</pre>\n<p><span class=\"br0\">}</span></p>\n<h3><span class=\"\
      mw-headline\" id=\"Methods_2\">Methods</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Wormbo/WUtils?section=5\"\
      \ title=\"Edit section: Methods\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>DrawMaterialRegion&#160;</dt>\n<dd>Draws a\
      \ MaterialRegion to a <a href=\"/Legacy:Canvas\" title=\"Legacy:Canvas\">Canvas</a>.\
      \ The canvas' clipping region (determined by OrgX/Y and ClipX/Y) is used to\
      \ convert the MaterialRegion's screen coordinates.<br />\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> DrawMaterialRegion<span class=\"br0\"\
      >(</span><span class=\"kw8\">Canvas</span> C, MaterialRegion M,</pre></div>\n\
      </div>\n</dd>\n</dl>\n<pre>       <span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">float</span> ScaleX, <span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">float</span> ScaleY, <span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">bool</span> bClipped<span class=\"br0\">)</span>\n</pre>\n<p><span\
      \ class=\"br0\">{</span></p>\n<pre>   <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">byte</span> OldStyle;\n   <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">Color</span> OldColor;\n   <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> X, Y, W, H, CenterX, CenterY;\n</pre>\n<p>&#160;</p>\n\
      <pre>   <span class=\"kw2\">if</span> <span class=\"br0\">(</span> ScaleX <span\
      \ class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>\n\
      \       ScaleX <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span>;\n\
      </pre>\n<p>&#160;</p>\n<pre>   <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> ScaleY <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>\
      \ <span class=\"br0\">)</span>\n       ScaleY <span class=\"sy0\">=</span> ScaleX;\n\
      </pre>\n<p>&#160;</p>\n<pre>   X <span class=\"sy0\">=</span> M.<span class=\"\
      me0\">ScreenCoords</span>.<span class=\"me0\">X1</span> <span class=\"sy0\"\
      >*</span> C.<span class=\"me0\">ClipX</span>;\n   Y <span class=\"sy0\">=</span>\
      \ M.<span class=\"me0\">ScreenCoords</span>.<span class=\"me0\">Y1</span> <span\
      \ class=\"sy0\">*</span> C.<span class=\"me0\">ClipY</span>;\n   W <span class=\"\
      sy0\">=</span> <span class=\"br0\">(</span>M.<span class=\"me0\">ScreenCoords</span>.<span\
      \ class=\"me0\">X2</span> <span class=\"sy0\">-</span> M.<span class=\"me0\"\
      >ScreenCoords</span>.<span class=\"me0\">X1</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> C.<span class=\"me0\">ClipX</span>;\n   H <span\
      \ class=\"sy0\">=</span> <span class=\"br0\">(</span>M.<span class=\"me0\">ScreenCoords</span>.<span\
      \ class=\"me0\">Y2</span> <span class=\"sy0\">-</span> M.<span class=\"me0\"\
      >ScreenCoords</span>.<span class=\"me0\">Y1</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> C.<span class=\"me0\">ClipY</span>;\n   CenterX\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>M.<span class=\"\
      me0\">ScreenCoords</span>.<span class=\"me0\">X1</span> <span class=\"sy0\"\
      >+</span> M.<span class=\"me0\">ScreenCoords</span>.<span class=\"me0\">X2</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span>\
      \ <span class=\"sy0\">*</span> C.<span class=\"me0\">ClipX</span>;\n   CenterY\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>M.<span class=\"\
      me0\">ScreenCoords</span>.<span class=\"me0\">Y1</span> <span class=\"sy0\"\
      >+</span> M.<span class=\"me0\">ScreenCoords</span>.<span class=\"me0\">Y2</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span>\
      \ <span class=\"sy0\">*</span> C.<span class=\"me0\">ClipY</span>;\n</pre>\n\
      <p>&#160;</p>\n<pre>   W <span class=\"sy0\">*=</span> ScaleX;\n   H <span class=\"\
      sy0\">*=</span> ScaleY;\n   X <span class=\"sy0\">=</span> CenterX <span class=\"\
      sy0\">-</span> <span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> W;\n\
      \   Y <span class=\"sy0\">=</span> CenterY <span class=\"sy0\">-</span> <span\
      \ class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> H;\n</pre>\n<p>&#160;</p>\n\
      <pre>   OldStyle <span class=\"sy0\">=</span> C.<span class=\"kw7\">Style</span>;\n\
      \   OldColor <span class=\"sy0\">=</span> C.<span class=\"me0\">DrawColor</span>;\n\
      </pre>\n<p>&#160;</p>\n<pre>   C.<span class=\"kw7\">Style</span> <span class=\"\
      sy0\">=</span> M.<span class=\"me0\">RenderStyle</span>;\n   C.<span class=\"\
      me0\">DrawColor</span> <span class=\"sy0\">=</span> M.<span class=\"me0\">DrawColor</span>;\n\
      \   C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span>X, Y<span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"sy0\">!</span>bClipped <span class=\"br0\">)</span>\n\
      \       C.<span class=\"me0\">DrawTile</span><span class=\"br0\">(</span>M.<span\
      \ class=\"me0\">Tex</span>, W, H, M.<span class=\"me0\">TexCoords</span>.<span\
      \ class=\"me0\">X1</span>, M.<span class=\"me0\">TexCoords</span>.<span class=\"\
      me0\">Y1</span>,\n               M.<span class=\"me0\">TexCoords</span>.<span\
      \ class=\"me0\">X2</span> <span class=\"sy0\">-</span> M.<span class=\"me0\"\
      >TexCoords</span>.<span class=\"me0\">X1</span>, M.<span class=\"me0\">TexCoords</span>.<span\
      \ class=\"me0\">Y2</span> <span class=\"sy0\">-</span> M.<span class=\"me0\"\
      >TexCoords</span>.<span class=\"me0\">Y1</span><span class=\"br0\">)</span>;\n\
      \   <span class=\"kw2\">else</span>\n       C.<span class=\"me0\">DrawTileClipped</span><span\
      \ class=\"br0\">(</span>M.<span class=\"me0\">Tex</span>, W, H, M.<span class=\"\
      me0\">TexCoords</span>.<span class=\"me0\">X1</span>, M.<span class=\"me0\"\
      >TexCoords</span>.<span class=\"me0\">Y1</span>,\n               M.<span class=\"\
      me0\">TexCoords</span>.<span class=\"me0\">X2</span> <span class=\"sy0\">-</span>\
      \ M.<span class=\"me0\">TexCoords</span>.<span class=\"me0\">X1</span>, M.<span\
      \ class=\"me0\">TexCoords</span>.<span class=\"me0\">Y2</span> <span class=\"\
      sy0\">-</span> M.<span class=\"me0\">TexCoords</span>.<span class=\"me0\">Y1</span><span\
      \ class=\"br0\">)</span>;\n</pre>\n<p>&#160;</p>\n<pre>   C.<span class=\"kw7\"\
      >Style</span> <span class=\"sy0\">=</span> OldStyle;\n   C.<span class=\"me0\"\
      >DrawColor</span> <span class=\"sy0\">=</span> OldColor;\n</pre>\n<p><span class=\"\
      br0\">}</span></p>\n<dl>\n<dt>DrawDecimalNumberAt <i>(updated for v105)</i>&#160;</dt>\n\
      <dd>Draws a float value. The coordinates specify the upper left corner of the\
      \ decimal point character, i.e. when you specify the upper right corner of the\
      \ screen the decimal point would not be visible. <i>(added optional int Precision\
      \ and fixed draw position getting changed)</i><br />\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> DrawDecimalNumberAt<span class=\"br0\"\
      >(</span><span class=\"kw8\">Canvas</span> C, <span class=\"kw5\">float</span>\
      \ Value, <span class=\"kw5\">float</span> X, <span class=\"kw5\">float</span>\
      \ Y, <span class=\"kw1\">optional</span> <span class=\"kw5\">bool</span> bClipped,\
      \ <span class=\"kw1\">optional</span> <span class=\"kw5\">int</span> Precision<span\
      \ class=\"br0\">)</span></pre></div>\n</div>\n</dd>\n</dl>\n<p><span class=\"\
      br0\">{</span></p>\n<pre>   <span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> IntPart;\n   <span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> FloatPart;\n   <span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> XL, YL, OldX, OldY;\n   <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">string</span> IntString, FloatString;\n</pre>\n<p>&#160;</p>\n\
      <pre>   OldX <span class=\"sy0\">=</span> C.<span class=\"me0\">CurX</span>;\
      \ OldY <span class=\"sy0\">=</span> C.<span class=\"me0\">CurY</span>;\n</pre>\n\
      <p>&#160;</p>\n<pre>   <span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ Precision <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span\
      \ class=\"br0\">)</span>\n   \tPrecision <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">2</span>; <span class=\"co1\">// default UT2k3 setting</span>\n\
      \   <span class=\"kw2\">else</span>\n   \tPrecision <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Max</span><span class=\"br0\">(</span>Precision, <span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span>;\t<span class=\"co1\">//\
      \ otherwise Canvas.DrawScreenText should be used</span>\n</pre>\n<p>&#160;</p>\n\
      <pre>   <span class=\"kw2\">if</span> <span class=\"br0\">(</span> Value <span\
      \ class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n   \tIntString <span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"-\"</span>;\n   \tValue <span class=\"sy0\">*=</span>\
      \ <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;\n   <span class=\"\
      br0\">}</span>\n   IntPart <span class=\"sy0\">=</span> <span class=\"kw5\"\
      >int</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span>;\n\
      \   FloatPart <span class=\"sy0\">=</span> Value <span class=\"sy0\">-</span>\
      \ IntPart;\n   IntString <span class=\"sy0\">=</span> IntString <span class=\"\
      sy0\">$</span> <span class=\"kw5\">string</span><span class=\"br0\">(</span>IntPart<span\
      \ class=\"br0\">)</span>;\n   IntString <span class=\"sy0\">=</span> <span class=\"\
      kw5\">string</span><span class=\"br0\">(</span><span class=\"kw5\">int</span><span\
      \ class=\"br0\">(</span>IntPart<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n   FloatString <span class=\"sy0\">=</span> <span class=\"kw5\"\
      >string</span><span class=\"br0\">(</span><span class=\"kw5\">int</span><span\
      \ class=\"br0\">(</span>FloatPart <span class=\"sy0\">*</span> <span class=\"\
      nu0\">10</span> <span class=\"sy0\">**</span> Precision<span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw2\">while</span> <span class=\"\
      br0\">(</span><span class=\"kw3\">Len</span><span class=\"br0\">(</span>FloatString<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> Precision<span class=\"\
      br0\">)</span>\n   \tFloatString <span class=\"sy0\">=</span> <span class=\"\
      st0\">\"0\"</span> <span class=\"sy0\">$</span> FloatString;\n</pre>\n<p>&#160;</p>\n\
      <pre>   C.<span class=\"me0\">TextSize</span><span class=\"br0\">(</span>IntString,\
      \ XL, YL<span class=\"br0\">)</span>;\n   C.<span class=\"me0\">SetPos</span><span\
      \ class=\"br0\">(</span>X <span class=\"sy0\">-</span> XL, Y<span class=\"br0\"\
      >)</span>;\n   <span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span\
      \ class=\"sy0\">!</span>bClipped <span class=\"br0\">)</span>\n       C.<span\
      \ class=\"me0\">DrawText</span><span class=\"br0\">(</span>IntString<span class=\"\
      sy0\">$</span><span class=\"st0\">\".\"</span><span class=\"sy0\">$</span>FloatString<span\
      \ class=\"br0\">)</span>;\n   <span class=\"kw2\">else</span>\n       C.<span\
      \ class=\"me0\">DrawTextClipped</span><span class=\"br0\">(</span>IntString<span\
      \ class=\"sy0\">$</span><span class=\"st0\">\".\"</span><span class=\"sy0\"\
      >$</span>FloatString<span class=\"br0\">)</span>;\n</pre>\n<p>&#160;</p>\n<pre>\
      \   C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span>OldX, OldY<span\
      \ class=\"br0\">)</span>;\t<span class=\"co1\">// reset draw position</span>\n\
      </pre>\n<p><span class=\"br0\">}</span></p>\n<dl>\n<dt>FloatBox GetActorBox\
      \ (<a href=\"/Legacy:Canvas\" title=\"Legacy:Canvas\">Canvas</a> C, <a href=\"\
      /Legacy:Actor\" title=\"Legacy:Actor\">Actor</a> A)&#160;</dt>\n<dd>Calculates\
      \ a box around an actor in relative screen coordinates.<br />\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\"\
      >final</span> <span class=\"kw1\">function</span> <span class=\"kw5\">FloatBox</span>\
      \ GetActorBox<span class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C,\
      \ <span class=\"kw9\">Actor</span> A<span class=\"br0\">)</span></pre></div>\n\
      </div>\n</dd>\n</dl>\n<p><span class=\"br0\">{</span> \t<span class=\"kw1\"\
      >local</span> <span class=\"kw5\">float</span> <span class=\"kw3\">Left</span>,\
      \ <span class=\"kw3\">Right</span>; \t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">vector</span> CamLoc, X, Y, Z; \t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">rotator</span> CamRot; \t<span class=\"kw1\">local</span>\
      \ array<span class=\"sy0\">&lt;</span>float<span class=\"sy0\">&gt;</span> Height;\
      \ \t<span class=\"kw1\">local</span> <span class=\"kw5\">FloatBox</span> <span\
      \ class=\"kw5\">box</span>; &#160; \t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> A <span class=\"sy0\">==</span> <span class=\"kw5\">None</span>\
      \ <span class=\"br0\">)</span> \t\t<span class=\"kw2\">return</span> <span class=\"\
      kw5\">box</span>; &#160; \tC.<span class=\"me0\">GetCameraLocation</span><span\
      \ class=\"br0\">(</span>CamLoc, CamRot<span class=\"br0\">)</span>; \t<span\
      \ class=\"kw3\">GetAxes</span><span class=\"br0\">(</span>CamRot, X, Y, Z<span\
      \ class=\"br0\">)</span>; \t<span class=\"kw3\">Right</span> <span class=\"\
      sy0\">=</span> C.<span class=\"me0\">WorldToScreen</span><span class=\"br0\"\
      >(</span>A.<span class=\"kw7\">Location</span> <span class=\"sy0\">+</span>\
      \ Y <span class=\"sy0\">*</span> A.<span class=\"kw7\">CollisionRadius</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">X</span>; \t<span class=\"kw3\"\
      >Left</span> <span class=\"sy0\">=</span> C.<span class=\"me0\">WorldToScreen</span><span\
      \ class=\"br0\">(</span>A.<span class=\"kw7\">Location</span> <span class=\"\
      sy0\">-</span> Y <span class=\"sy0\">*</span> A.<span class=\"kw7\">CollisionRadius</span><span\
      \ class=\"br0\">)</span>.<span class=\"me0\">X</span>; \tX <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">Normal</span><span class=\"br0\">(</span>X <span\
      \ class=\"sy0\">*</span> <span class=\"kw3\">vect</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"\
      nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">*</span> A.<span class=\"kw7\">CollisionRadius</span>; \tZ <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">vect</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"\
      nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> A.<span\
      \ class=\"kw7\">CollisionHeight</span>; \tHeight<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ C.<span class=\"me0\">WorldToScreen</span><span class=\"br0\">(</span>A.<span\
      \ class=\"kw7\">Location</span> <span class=\"sy0\">+</span> X <span class=\"\
      sy0\">+</span> Z<span class=\"br0\">)</span>.<span class=\"me0\">Y</span>; \t\
      Height<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> C.<span class=\"me0\">WorldToScreen</span><span\
      \ class=\"br0\">(</span>A.<span class=\"kw7\">Location</span> <span class=\"\
      sy0\">-</span> X <span class=\"sy0\">+</span> Z<span class=\"br0\">)</span>.<span\
      \ class=\"me0\">Y</span>; \tHeight<span class=\"br0\">[</span><span class=\"\
      nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> C.<span\
      \ class=\"me0\">WorldToScreen</span><span class=\"br0\">(</span>A.<span class=\"\
      kw7\">Location</span> <span class=\"sy0\">+</span> X <span class=\"sy0\">-</span>\
      \ Z<span class=\"br0\">)</span>.<span class=\"me0\">Y</span>; \tHeight<span\
      \ class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> C.<span class=\"me0\">WorldToScreen</span><span\
      \ class=\"br0\">(</span>A.<span class=\"kw7\">Location</span> <span class=\"\
      sy0\">-</span> X <span class=\"sy0\">-</span> Z<span class=\"br0\">)</span>.<span\
      \ class=\"me0\">Y</span>; &#160; \t<span class=\"kw5\">box</span>.<span class=\"\
      me0\">X1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Left</span>\
      \ <span class=\"sy0\">/</span> C.<span class=\"me0\">SizeX</span>; \t<span class=\"\
      kw5\">box</span>.<span class=\"me0\">X2</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Right</span> <span class=\"sy0\">/</span> C.<span class=\"\
      me0\">SizeX</span>; \t<span class=\"kw5\">box</span>.<span class=\"me0\">Y1</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw1\">class</span><span class=\"\
      st0\">'wArray'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\"\
      >MinF</span><span class=\"br0\">(</span>Height<span class=\"br0\">)</span> <span\
      \ class=\"sy0\">/</span> C.<span class=\"me0\">SizeY</span>; \t<span class=\"\
      kw5\">box</span>.<span class=\"me0\">Y2</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'wArray'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MaxF</span><span class=\"\
      br0\">(</span>Height<span class=\"br0\">)</span> <span class=\"sy0\">/</span>\
      \ C.<span class=\"me0\">SizeY</span>; &#160; \t<span class=\"kw2\">return</span>\
      \ <span class=\"kw5\">box</span>;</p>\n<p><span class=\"br0\">}</span></p>\n\
      <dl>\n<dt>SetClipRegion (<a href=\"/Legacy:Canvas\" title=\"Legacy:Canvas\"\
      >Canvas</a> C, FloatBox ClipRegion)&#160;</dt>\n<dd>Sets the canvas' clipping\
      \ region. Can use a FloatBox like it is returned by the GetActorBox method.<br\
      \ />\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> SetClipRegion<span\
      \ class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C, <span class=\"\
      kw5\">FloatBox</span> ClipRegion<span class=\"br0\">)</span></pre></div>\n</div>\n\
      </dd>\n</dl>\n<p><span class=\"br0\">{</span> \tC.<span class=\"me0\">SetOrigin</span><span\
      \ class=\"br0\">(</span>ClipRegion.<span class=\"me0\">X1</span> <span class=\"\
      sy0\">*</span> C.<span class=\"me0\">SizeX</span>, ClipRegion.<span class=\"\
      me0\">Y1</span> <span class=\"sy0\">*</span> C.<span class=\"me0\">SizeY</span><span\
      \ class=\"br0\">)</span>; \tC.<span class=\"me0\">SetClip</span><span class=\"\
      br0\">(</span><span class=\"br0\">(</span>ClipRegion.<span class=\"me0\">X2</span>\
      \ <span class=\"sy0\">-</span> ClipRegion.<span class=\"me0\">X1</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> C.<span class=\"me0\"\
      >SizeX</span>, <span class=\"br0\">(</span>ClipRegion.<span class=\"me0\">Y2</span>\
      \ <span class=\"sy0\">-</span> ClipRegion.<span class=\"me0\">Y1</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> C.<span class=\"me0\"\
      >SizeY</span><span class=\"br0\">)</span>;</p>\n<p><span class=\"br0\">}</span></p>\n\
      <dl>\n<dt>ResetClipRegion (<a href=\"/Legacy:Canvas\" title=\"Legacy:Canvas\"\
      >Canvas</a> C)&#160;</dt>\n<dd>Resets the canvas' clipping region.<br />\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">function</span> ResetClipRegion<span\
      \ class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C<span class=\"br0\"\
      >)</span></pre></div>\n</div>\n</dd>\n</dl>\n<p><span class=\"br0\">{</span>\
      \ \tC.<span class=\"me0\">SetOrigin</span><span class=\"br0\">(</span>C.<span\
      \ class=\"kw1\">Default</span>.<span class=\"me0\">OrgX</span>, C.<span class=\"\
      kw1\">Default</span>.<span class=\"me0\">OrgY</span><span class=\"br0\">)</span>;\
      \ \tC.<span class=\"me0\">SetClip</span><span class=\"br0\">(</span>C.<span\
      \ class=\"kw1\">Default</span>.<span class=\"me0\">ClipX</span>, C.<span class=\"\
      kw1\">Default</span>.<span class=\"me0\">ClipY</span><span class=\"br0\">)</span>;</p>\n\
      <p><span class=\"br0\">}</span></p>\n<dl>\n<dt>DrawBracket (<a href=\"/Legacy:Canvas\"\
      \ title=\"Legacy:Canvas\">Canvas</a> C, float width, float height, float bracket_size)\
      \ <i>(maybe in v105)</i>&#160;</dt>\n<dd>This function is a corrected version\
      \ of the function with the same name in the Canvas class. The bracket drawn\
      \ by the Canvas version will be two pixels wider and higher than specified and\
      \ the bottom right corner misses a small 2x2 square.\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> DrawBracket<span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> C, <span class=\"kw5\">float</span> width, <span\
      \ class=\"kw5\">float</span> height, <span class=\"kw5\">float</span> bracket_size<span\
      \ class=\"br0\">)</span></pre></div>\n</div>\n</dd>\n</dl>\n<p><span class=\"\
      br0\">{</span></p>\n<pre>   <span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> X, Y;\n   X <span class=\"sy0\">=</span> C.<span class=\"\
      me0\">CurX</span>;\n   Y <span class=\"sy0\">=</span> C.<span class=\"me0\"\
      >CurY</span>;\n</pre>\n<p>&#160; \tWidth <span class=\"sy0\">=</span> <span\
      \ class=\"kw3\">max</span><span class=\"br0\">(</span>width,<span class=\"nu0\"\
      >5</span><span class=\"br0\">)</span>; \tHeight <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">max</span><span class=\"br0\">(</span>height,<span class=\"\
      nu0\">5</span><span class=\"br0\">)</span>; &#160; \t<span class=\"co1\">//\
      \ top left</span></p>\n<pre>   C.<span class=\"me0\">DrawLine</span><span class=\"\
      br0\">(</span><span class=\"nu0\">3</span>, bracket_size<span class=\"br0\"\
      >)</span>;\t<span class=\"co1\">// to left</span>\n   C.<span class=\"me0\"\
      >DrawLine</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, bracket_size<span\
      \ class=\"br0\">)</span>;\t<span class=\"co1\">// down</span>\n</pre>\n<p>&#160;</p>\n\
      <pre>   <span class=\"co1\">// top right</span>\n   C.<span class=\"me0\">SetPos</span><span\
      \ class=\"br0\">(</span>X <span class=\"sy0\">+</span> width, Y<span class=\"\
      br0\">)</span>;\n   C.<span class=\"me0\">DrawLine</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">2</span>, bracket_size<span class=\"br0\">)</span>;\t\
      <span class=\"co1\">// to right</span>\n   C.<span class=\"me0\">SetPos</span><span\
      \ class=\"br0\">(</span>X <span class=\"sy0\">+</span> width <span class=\"\
      sy0\">-</span> <span class=\"nu0\">2</span>, Y<span class=\"br0\">)</span>;\n\
      \   C.<span class=\"me0\">DrawLine</span><span class=\"br0\">(</span><span class=\"\
      nu0\">1</span>, bracket_size<span class=\"br0\">)</span>;\t<span class=\"co1\"\
      >// down</span>\n</pre>\n<p>&#160;</p>\n<pre>   <span class=\"co1\">// bottom\
      \ right</span>\n   C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span>X\
      \ <span class=\"sy0\">+</span> width <span class=\"sy0\">-</span> <span class=\"\
      nu0\">2</span>, Y <span class=\"sy0\">+</span> height<span class=\"br0\">)</span>;\n\
      \   C.<span class=\"me0\">DrawLine</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>, bracket_size<span class=\"br0\">)</span>;\t<span class=\"co1\"\
      >// up</span>\n   C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span>X\
      \ <span class=\"sy0\">+</span> width, Y <span class=\"sy0\">+</span> height\
      \ <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\"\
      >)</span>;\n   C.<span class=\"me0\">DrawLine</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">2</span>, bracket_size<span class=\"br0\">)</span>;\t<span class=\"\
      co1\">// to right</span>\n</pre>\n<p>&#160;</p>\n<pre>   <span class=\"co1\"\
      >// bottom left</span>\n   C.<span class=\"me0\">SetPos</span><span class=\"\
      br0\">(</span>X, Y <span class=\"sy0\">+</span> height <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">2</span><span class=\"br0\">)</span>;\n   C.<span class=\"\
      me0\">DrawLine</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,\
      \ bracket_size<span class=\"br0\">)</span>;\t<span class=\"co1\">// to left</span>\n\
      \   C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span>X, Y <span\
      \ class=\"sy0\">+</span> height<span class=\"br0\">)</span>;\n   C.<span class=\"\
      me0\">DrawLine</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span>,\
      \ bracket_size<span class=\"br0\">)</span>;\t<span class=\"co1\">// up</span>\n\
      </pre>\n<p>&#160;</p>\n<pre>   C.<span class=\"me0\">SetPos</span><span class=\"\
      br0\">(</span>X, Y<span class=\"br0\">)</span>;\n</pre>\n<p><span class=\"br0\"\
      >}</span></p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.147 seconds\n\
      Real time usage: 0.195 seconds\nPreprocessor visited node count: 61/1000000\n\
      Preprocessor generated node count: 196/1000000\nPost‐expand include size: 0/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:3709-0!*!0!!en!*!*\
      \ and timestamp 20221118084604 and revision id 9425\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:WUtils"
  - ns: 100
    exists: true
    name: "Legacy:Canvas"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "wString"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Wormbo/WUtils"
    byteoffset: 86
    anchor: "wString"
  - toclevel: 2
    level: "3"
    line: "Methods"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Wormbo/WUtils"
    byteoffset: 99
    anchor: "Methods"
  - toclevel: 1
    level: "2"
    line: "wDraw"
    number: "2"
    index: "3"
    fromtitle: "Legacy:Wormbo/WUtils"
    byteoffset: 785
    anchor: "wDraw"
  - toclevel: 2
    level: "3"
    line: "Structs"
    number: "2.1"
    index: "4"
    fromtitle: "Legacy:Wormbo/WUtils"
    byteoffset: 796
    anchor: "Structs"
  - toclevel: 2
    level: "3"
    line: "Methods"
    number: "2.2"
    index: "5"
    fromtitle: "Legacy:Wormbo/WUtils"
    byteoffset: 1082
    anchor: "Methods_2"
  displaytitle: "Legacy:Wormbo/WUtils"
  iwlinks: []
  wikitext:
    text: "For the full list of classes, methods, etc. go to the [[Legacy:WUtils|wUtils]]\
      \ page.\n\n==wString==\n\n===Methods===\n; FloatToString ''(maybe in v105)''\
      \ : Converts a float to string.<br /><uscript>\nstatic final function string\
      \ FloatToString(float Value, optional int Precision)\n{\n    local int IntPart;\n\
      \    local float FloatPart;\n    local string IntString, FloatString;\n    \n\
      \tPrecision = Max(Precision, 1);\t// otherwise a simple int cast should be used\n\
      \t\n\tif ( Value < 0 ) {\n\t\tIntString = \"-\";\n\t\tValue *= -1;\n\t}\n\t\
      IntPart = int(Value);\n\tFloatPart = Value - IntPart;\n\tIntString = IntString\
      \ $ string(IntPart);\n\tFloatString = string(int(FloatPart * 10 ** Precision));\n\
      \twhile (Len(FloatString) < Precision)\n\t\tFloatString = \"0\" $ FloatString;\n\
      \t\n\treturn IntString$\".\"$FloatString;\n}\n</uscript>\n\n==wDraw==\n\n===Structs===\n\
      ; MaterialRegion : <uscript>\nstruct MaterialRegion {\n    var Material Tex;\n\
      \    var IntBox TexCoords;   // absolute material coordinates\n    var FloatBox\
      \ ScreenCoords;  // relative screen coordinates\n    var ERenderStyle RenderStyle;\n\
      \    var Color DrawColor;\n}\n</uscript>\n\n===Methods===\n; DrawMaterialRegion\
      \ : Draws a MaterialRegion to a [[Legacy:Canvas|Canvas]]. The canvas' clipping\
      \ region (determined by OrgX/Y and ClipX/Y) is used to convert the MaterialRegion's\
      \ screen coordinates.<br /><uscript>\nstatic final function DrawMaterialRegion(Canvas\
      \ C, MaterialRegion M,\n        optional float ScaleX, optional float ScaleY,\
      \ optional bool bClipped)\n{\n    local byte OldStyle;\n    local Color OldColor;\n\
      \    local float X, Y, W, H, CenterX, CenterY;\n   \n    if ( ScaleX == 0 )\n\
      \        ScaleX = 1.0;\n   \n    if ( ScaleY == 0 )\n        ScaleY = ScaleX;\n\
      \   \n    X = M.ScreenCoords.X1 * C.ClipX;\n    Y = M.ScreenCoords.Y1 * C.ClipY;\n\
      \    W = (M.ScreenCoords.X2 - M.ScreenCoords.X1) * C.ClipX;\n    H = (M.ScreenCoords.Y2\
      \ - M.ScreenCoords.Y1) * C.ClipY;\n    CenterX = (M.ScreenCoords.X1 + M.ScreenCoords.X2)\
      \ * 0.5 * C.ClipX;\n    CenterY = (M.ScreenCoords.Y1 + M.ScreenCoords.Y2) *\
      \ 0.5 * C.ClipY;\n       \n    W *= ScaleX;\n    H *= ScaleY;\n    X = CenterX\
      \ - 0.5 * W;\n    Y = CenterY - 0.5 * H;\n   \n    OldStyle = C.Style;\n   \
      \ OldColor = C.DrawColor;\n   \n    C.Style = M.RenderStyle;\n    C.DrawColor\
      \ = M.DrawColor;\n    C.SetPos(X, Y);\n    if ( !bClipped )\n        C.DrawTile(M.Tex,\
      \ W, H, M.TexCoords.X1, M.TexCoords.Y1,\n                M.TexCoords.X2 - M.TexCoords.X1,\
      \ M.TexCoords.Y2 - M.TexCoords.Y1);\n    else\n        C.DrawTileClipped(M.Tex,\
      \ W, H, M.TexCoords.X1, M.TexCoords.Y1,\n                M.TexCoords.X2 - M.TexCoords.X1,\
      \ M.TexCoords.Y2 - M.TexCoords.Y1);\n    \n    C.Style = OldStyle;\n    C.DrawColor\
      \ = OldColor;\n}\n</uscript>\n\n; DrawDecimalNumberAt ''(updated for v105)''\
      \ : Draws a float value. The coordinates specify the upper left corner of the\
      \ decimal point character, i.e. when you specify the upper right corner of the\
      \ screen the decimal point would not be visible. ''(added optional int Precision\
      \ and fixed draw position getting changed)''<br /><uscript>\nstatic final function\
      \ DrawDecimalNumberAt(Canvas C, float Value, float X, float Y, optional bool\
      \ bClipped, optional int Precision)\n{\n    local int IntPart;\n    local float\
      \ FloatPart;\n    local float XL, YL, OldX, OldY;\n    local string IntString,\
      \ FloatString;\n    \n    OldX = C.CurX; OldY = C.CurY;\n    \n    if ( Precision\
      \ == 0 )\n    \tPrecision = 2; // default UT2k3 setting\n    else\n    \tPrecision\
      \ = Max(Precision, 1);\t// otherwise Canvas.DrawScreenText should be used\n\
      \    \n    if ( Value < 0 ) {\n    \tIntString = \"-\";\n    \tValue *= -1;\n\
      \    }\n    IntPart = int(Value);\n    FloatPart = Value - IntPart;\n    IntString\
      \ = IntString $ string(IntPart);\n    IntString = string(int(IntPart));\n  \
      \  FloatString = string(int(FloatPart * 10 ** Precision));\n    while (Len(FloatString)\
      \ < Precision)\n    \tFloatString = \"0\" $ FloatString;\n    \n    C.TextSize(IntString,\
      \ XL, YL);\n    C.SetPos(X - XL, Y);\n    if ( !bClipped )\n        C.DrawText(IntString$\"\
      .\"$FloatString);\n    else\n        C.DrawTextClipped(IntString$\".\"$FloatString);\n\
      \    \n    C.SetPos(OldX, OldY);\t// reset draw position\n}\n</uscript>\n\n\
      ; FloatBox GetActorBox ([[Legacy:Canvas|Canvas]] C, [[Legacy:Actor|Actor]] A)\
      \ : Calculates a box around an actor in relative screen coordinates.<br /><uscript>\n\
      static final function FloatBox GetActorBox(Canvas C, Actor A)\n{\n\tlocal float\
      \ Left, Right;\n\tlocal vector CamLoc, X, Y, Z;\n\tlocal rotator CamRot;\n\t\
      local array<float> Height;\n\tlocal FloatBox box;\n\t\n\tif ( A == None )\n\t\
      \treturn box;\n\t\n\tC.GetCameraLocation(CamLoc, CamRot);\n\tGetAxes(CamRot,\
      \ X, Y, Z);\n\tRight = C.WorldToScreen(A.Location + Y * A.CollisionRadius).X;\n\
      \tLeft = C.WorldToScreen(A.Location - Y * A.CollisionRadius).X;\n\tX = Normal(X\
      \ * vect(1,1,0)) * A.CollisionRadius;\n\tZ = vect(0,0,1) * A.CollisionHeight;\n\
      \tHeight[0] = C.WorldToScreen(A.Location + X + Z).Y;\n\tHeight[1] = C.WorldToScreen(A.Location\
      \ - X + Z).Y;\n\tHeight[2] = C.WorldToScreen(A.Location + X - Z).Y;\n\tHeight[3]\
      \ = C.WorldToScreen(A.Location - X - Z).Y;\n\t\n\tbox.X1 = Left / C.SizeX;\n\
      \tbox.X2 = Right / C.SizeX;\n\tbox.Y1 = class'wArray'.static.MinF(Height) /\
      \ C.SizeY;\n\tbox.Y2 = class'wArray'.static.MaxF(Height) / C.SizeY;\n\t\n\t\
      return box;\n}\n</uscript>\n\n; SetClipRegion ([[Legacy:Canvas|Canvas]] C, FloatBox\
      \ ClipRegion) : Sets the canvas' clipping region. Can use a FloatBox like it\
      \ is returned by the GetActorBox method.<br /><uscript>\nstatic final function\
      \ SetClipRegion(Canvas C, FloatBox ClipRegion)\n{\n\tC.SetOrigin(ClipRegion.X1\
      \ * C.SizeX, ClipRegion.Y1 * C.SizeY);\n\tC.SetClip((ClipRegion.X2 - ClipRegion.X1)\
      \ * C.SizeX, (ClipRegion.Y2 - ClipRegion.Y1) * C.SizeY);\n}\n</uscript>\n\n\
      ; ResetClipRegion ([[Legacy:Canvas|Canvas]] C) : Resets the canvas' clipping\
      \ region.<br /><uscript>\nstatic final function ResetClipRegion(Canvas C)\n\
      {\n\tC.SetOrigin(C.Default.OrgX, C.Default.OrgY);\n\tC.SetClip(C.Default.ClipX,\
      \ C.Default.ClipY);\n}\n</uscript>\n\n; DrawBracket ([[Legacy:Canvas|Canvas]]\
      \ C, float width, float height, float bracket_size) ''(maybe in v105)'' : This\
      \ function is a corrected version of the function with the same name in the\
      \ Canvas class. The bracket drawn by the Canvas version will be two pixels wider\
      \ and higher than specified and the bottom right corner misses a small 2x2 square.<uscript>\n\
      static final function DrawBracket(Canvas C, float width, float height, float\
      \ bracket_size)\n{\n    local float X, Y;\n    X = C.CurX;\n    Y = C.CurY;\n\
      \n\tWidth  = max(width,5);\n\tHeight = max(height,5);\n\t\n\t// top left\n \
      \   C.DrawLine(3, bracket_size);\t// to left\n    C.DrawLine(1, bracket_size);\t\
      // down\n    \n    // top right\n    C.SetPos(X + width, Y);\n    C.DrawLine(2,\
      \ bracket_size);\t// to right\n    C.SetPos(X + width - 2, Y);\n    C.DrawLine(1,\
      \ bracket_size);\t// down\n    \n    // bottom right\n    C.SetPos(X + width\
      \ - 2, Y + height);\n    C.DrawLine(0, bracket_size);\t// up\n    C.SetPos(X\
      \ + width, Y + height - 2);\n    C.DrawLine(2, bracket_size);\t// to right\n\
      \    \n    // bottom left\n    C.SetPos(X, Y + height - 2);\n    C.DrawLine(3,\
      \ bracket_size);\t// to left\n    C.SetPos(X, Y + height);\n    C.DrawLine(\
      \ 0, bracket_size);\t// up\n\n    C.SetPos(X, Y);\n}\n</uscript>"
  properties: []
  revId: 9425
name: "Legacy:Wormbo/WUtils"
revision:
  revid: 9425
  parentid: 9426
  user: "Wormbo"
  timestamp: 1045830047.000000000
  comment: "*"
timestamp: 1668761472.257173000
