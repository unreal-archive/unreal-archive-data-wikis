---
parse:
  title: "Legacy:WUtils"
  text:
    text: "<blockquote class=\"legacyquote\">\n<p><b>Latest version: 105</b></p>\n\
      <p><a rel=\"nofollow\" class=\"external text\" href=\"http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/wUtils-105.zip\"\
      >download the latest version</a></p>\n</blockquote>\n<p>UT2003 has a nice set\
      \ of methods and structures defined in XGame.xUtil, but there are more common\
      \ used methods and don't need to be rewritten every time somebody needs them.\
      \ That's why I've started wUtils to create a package containing another set\
      \ of usefull methods.</p>\n<p>Feel free to contribute more useful methods to\
      \ this package.</p>\n<p>You are completely free to use wUtils and distribute\
      \ it with your mod. You may also use only part of the code of wUtils. You are\
      \ not allowed to distribute a changed version of wUtils under the same name,\
      \ this is to prevent confusion.</p>\n<p><i><b>Note:</b></i> if you use wUtils\
      \ in your mod, please check to this page to check if there's a newer version\
      \ available before you release the mod.</p>\n<p><i><b>Note 2:</b></i> feel free\
      \ to contribute methods/classes/... you think should belong into this package.</p>\n\
      <p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Usage\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Usage</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Classes_of_wUtils\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Classes of wUtils</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#wString\"><span class=\"\
      tocnumber\">2.1</span> <span class=\"toctext\">wString</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-4\"><a href=\"#wMath\"><span class=\"tocnumber\"\
      >2.2</span> <span class=\"toctext\">wMath</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-5\"><a href=\"#wArray\"><span class=\"tocnumber\">2.3</span> <span\
      \ class=\"toctext\">wArray</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"\
      ><a href=\"#wTime_.28v104.29\"><span class=\"tocnumber\">2.4</span> <span class=\"\
      toctext\">wTime <i>(v104)</i></span></a></li>\n<li class=\"toclevel-2 tocsection-7\"\
      ><a href=\"#wDraw_.28v104.29\"><span class=\"tocnumber\">2.5</span> <span class=\"\
      toctext\">wDraw <i>(v104)</i></span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-8\"><a href=\"#Downloads\"><span class=\"tocnumber\">3</span> <span\
      \ class=\"toctext\">Downloads</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-9\"\
      ><a href=\"#CVS_access\"><span class=\"tocnumber\">3.1</span> <span class=\"\
      toctext\">CVS access</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-10\"\
      ><a href=\"#Source_Code\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Source Code</span></a></li>\n<li class=\"toclevel-1 tocsection-11\"\
      ><a href=\"#Discussion\"><span class=\"tocnumber\">5</span> <span class=\"toctext\"\
      >Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Usage\">Usage</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:WUtils?section=1\" title=\"Edit section: Usage\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>To\
      \ use the methods from wUtils place wUtils in your EditPackages list.</p>\n\
      <p>Then call the methods via:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">class</span><span class=\"st0\">'wUtilsClass'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">method</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span></pre></div>\n</div>\n<p>for example:</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\">mystring <span class=\"sy0\">=</span>\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'wString'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">Trim</span><span class=\"\
      br0\">(</span>mystring<span class=\"br0\">)</span>;</pre></div>\n</div>\n<h2><span\
      \ class=\"mw-headline\" id=\"Classes_of_wUtils\">Classes of wUtils</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:WUtils?section=2\" title=\"Edit section: Classes of wUtils\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span\
      \ class=\"mw-headline\" id=\"wString\"><a href=\"/Legacy:WUtils/WString\" title=\"\
      Legacy:WUtils/WString\">wString</a></span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:WUtils?section=3\"\
      \ title=\"Edit section: wString\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>function string Capitalize(coerce string S)\
      \ <i>(v101)</i></dt>\n<dd>will change \"this is a string\" to \"This Is A String\"\
      </dd>\n<dt>function Eat(out string Dest, out string Source, int Num) <i>(v104)</i></dt>\n\
      <dd>Moves NUM lements from Source to Dest</dd>\n<dt>function string FloatToString(float\
      \ Value, optional int Precision) <i>(105)</i></dt>\n<dd>Converts a float to\
      \ a string</dd>\n<dt>function int InStrFrom(coerce string StrText, coerce string\
      \ StrPart, optional int OffsetStart)</dt>\n<dd>like InStr except you can specify\
      \ where to start the search.</dd>\n<dt>function bool IsLower(coerce string S)</dt>\n\
      <dd>check if a string is all lowercase</dd>\n<dt>function bool IsUpper(coerce\
      \ string S)</dt>\n<dd>check if a string is all uppercase</dd>\n<dt>function\
      \ string Lower(coerce string Text)</dt>\n<dd>like Caps but lowers strings</dd>\n\
      <dt>function string LTrim(coerce string S)</dt>\n<dd>trims leading spaces/tabs</dd>\n\
      <dt>function bool MaskedCompare(coerce string target, string mask, optional\
      \ bool casesensitive)</dt>\n<dd>check target using mask, mask can contain the\
      \ following wildcards: * for X chars, or&#160;? for 1 char, check <a href=\"\
      /Legacy:WUtils/WString\" title=\"Legacy:WUtils/WString\">my source</a> if it\
      \ can be optimized. There's a a bug in this function. It's fixed with v104.</dd>\n\
      <dt>function string ReplaceInString(coerce string src, int from, int length,\
      \ coerce string with) <i>(v102)</i>&#160;</dt>\n<dd>replaces part of a string:\
      \ <code>ReplaceInString(\"A stupid string.\", 2, 6, \"good\") == \"A good string.\"\
      </code></dd>\n<dt>function bool ReplaceOption(out string Options, string Key,\
      \ string NewValue, optional bool bAddIfMissing, optional out string OldValue,\
      \ optional string delim)&#160;</dt>\n<dd>Allows you to quickly change a value\
      \ in the Options string used in Login and PostLogin. (<a href=\"/Legacy:Nomad/WUtils\"\
      \ title=\"Legacy:Nomad/WUtils\">Source</a>)</dd>\n<dt>function int Split2(coerce\
      \ string src, string delim, out array&lt;string&gt; parts, optional bool ignoreBlanks,\
      \ optional string quotechar) <i>(v101)</i></dt>\n<dd>fixed version of split.\
      \ Fixed: first char can be a delim, last char can be a space. Added: delim as\
      \ a string. <i>Added</i>: ignoreblanks: \"||\" results in an empty array, and\
      \ quotechar. (v103)</dd>\n<dt>function string StrShift(out string line, string\
      \ delim, optional string quotechar)</dt>\n<dd>this will shift the first element\
      \ of the line (delimited by delim). <i>fixed</i>: delim can be longer that 1\
      \ char (v101) <i>added</i>: optional quote char so you can use: \"one item\"\
      \ \"second item\" (v103)</dd>\n<dt>function string StrSubst(coerce string target,\
      \ optional string r0, optional string r1, ... , optional string r9) <i>(v102)</i></dt>\n\
      <dd>StrSubst will replace the occurances of&#160;%s in target with the value\
      \ of r#, where # is the n'th occurance of&#160;%s</dd>\n<dt>function string\
      \ StrReplace(coerce string target, array&lt;string&gt; replace, array&lt;string&gt;\
      \ with, optional bool bOnlyFirst)</dt>\n<dd>string replace that accepts arrays,\
      \ usefull if you want to implement a bad word filter, optional bOnlyFirst added\
      \ in v101</dd>\n<dt>function string RTrim(coerce string S)</dt>\n<dd>trims trailing\
      \ spaces/tabs</dd>\n<dt>function string Trim(coerce string S)</dt>\n<dd>trims\
      \ leading and trailing spaces/tabs</dd>\n</dl>\n<h3><span class=\"mw-headline\"\
      \ id=\"wMath\"><a href=\"/Legacy:WUtils/WMath\" title=\"Legacy:WUtils/WMath\"\
      >wMath</a></span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:WUtils?section=4\" title=\"Edit section: wMath\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<dl>\n\
      <dt>function int CRC32(coerce string Text, int CrcTable[256]) <i>(v101)</i>&#160;</dt>\n\
      <dd>calculate the CRC32 hash of a string, more info: <a href=\"/Legacy:CRC32\"\
      \ title=\"Legacy:CRC32\">CRC32</a></dd>\n<dt>function CRC32Init(out int CrcTable[256])\
      \ <i>(v101)</i>&#160;</dt>\n<dd>init function to call (once) before you use\
      \ CRC32</dd>\n<dt>function bool IsInt(coerce string Param, optional bool bPositiveOnly)&#160;</dt>\n\
      <dd>checks if param is an integer</dd>\n<dt>function bool IsFloat(coerce string\
      \ Param, optional bool bPositiveOnly)&#160;</dt>\n<dd>checks if param is a float\
      \ (or int)</dd>\n<dt>function int PowerMod(int C, int D, int N) <i>(v102)</i>&#160;</dt>\n\
      <dd>this will calculate <code>x^e mod y</code></dd>\n<dt>function RSAEncode(coerce\
      \ string data, int E, int N, out array&lt;int&gt; data2) <i>(v102)</i>&#160;</dt>\n\
      <dd>encode data using the keys E and N, <a href=\"/Legacy:RSA\" title=\"Legacy:RSA\"\
      >RSA</a></dd>\n<dt>function string RSADecode(array&lt;int&gt; data, int D, int\
      \ N) <i>(v102)</i>&#160;</dt>\n<dd>encode data using the keys D and N, <a href=\"\
      /Legacy:RSA\" title=\"Legacy:RSA\">RSA</a></dd>\n<dt>function int RSAPublicKeygen(int\
      \ p, int q) <i>(v102)</i>&#160;</dt>\n<dd>calculate encode key using primes\
      \ P and Q, <a href=\"/Legacy:RSA\" title=\"Legacy:RSA\">RSA</a></dd>\n<dt>function\
      \ int RSAPrivateKeygen(int E, int p, int q) <i>(v102)</i>&#160;</dt>\n<dd>calculate\
      \ decode key, <a href=\"/Legacy:RSA\" title=\"Legacy:RSA\">RSA</a></dd>\n</dl>\n\
      <h3><span class=\"mw-headline\" id=\"wArray\"><a href=\"/Legacy:WUtils/WArray\"\
      \ title=\"Legacy:WUtils/WArray\">wArray</a></span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:WUtils?section=5\"\
      \ title=\"Edit section: wArray\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>function array&lt;int&gt; AddI(array&lt;int&gt;\
      \ A, array&lt;int&gt; B)</dt>\n<dd>join the two arrays</dd>\n<dt>function array&lt;float&gt;\
      \ AddF(array&lt;float&gt; A, array&lt;float&gt; B) <i>(v104)</i></dt>\n<dd>join\
      \ the two arrays</dd>\n<dt>function array&lt;object&gt; AddO(array&lt;object&gt;\
      \ A, array&lt;object&gt; B)</dt>\n<dd>join the two arrays</dd>\n<dt>function\
      \ array&lt;string&gt; AddS(array&lt;string&gt; A, array&lt;string&gt; B)</dt>\n\
      <dd>join the two arrays</dd>\n<dt>function int BinarySearch(array&lt;string&gt;\
      \ Myarray, string SearchString, optional int Low, optional int High, optional\
      \ bool bIgnoreCase) <i>(v103)</i></dt>\n<dd>searches a sorted array for a matching\
      \ element, returns the index if found or -1</dd>\n<dt>function string GetCommonBegin(array&lt;string&gt;\
      \ slist) <i>(v103)</i></dt>\n<dd>returns the common beginning of elements in\
      \ the array</dd>\n<dt>function string Join(array&lt; string &gt; ar, optional\
      \ string delim, optional bool bIgnoreEmpty)&#160;</dt>\n<dd>join the array elements\
      \ to a string using delimiter 'delim', added the optional bIgnoreEmpty (v101).\
      \ bIgnoreEmpty was fixed in (v104)</dd>\n<dt>function float ShiftF(out array&lt;\
      \ float &gt; ar) <i>(v104)</i></dt>\n<dd>shift the first element of an float\
      \ array</dd>\n<dt>function int ShiftI(out array&lt; int &gt; ar)&#160;</dt>\n\
      <dd>shift the first element of an int array</dd>\n<dt>function object ShiftO(out\
      \ array&lt; object &gt; ar)&#160;</dt>\n<dd>shift the first element of an object\
      \ array</dd>\n<dt>function string ShiftS(out array&lt; string &gt; ar)&#160;</dt>\n\
      <dd>shift the first element of an string array</dd>\n<dt>function array&lt;int&gt;\
      \ RemoveI(array&lt;int&gt; A, array&lt;int&gt; B)</dt>\n<dd>remove elements\
      \ in B from A</dd>\n<dt>function array&lt;float&gt; RemoveF(array&lt;float&gt;\
      \ A, array&lt;float&gt; B) <i>(v104)</i></dt>\n<dd>remove elements in B from\
      \ A</dd>\n<dt>function array&lt;object&gt; RemoveO(array&lt;object&gt; A, array&lt;object&gt;\
      \ B)</dt>\n<dd>remove elements in B from A</dd>\n<dt>function array&lt;string&gt;\
      \ RemoveS(array&lt;string&gt; A, array&lt;string&gt; B)</dt>\n<dd>remove elements\
      \ in B from A</dd>\n<dt>function SortI(out array&lt;int&gt; ar)&#160;</dt>\n\
      <dd>sort an int array</dd>\n<dt>function SortF(out array&lt;float&gt; ar) <i>(v104)</i></dt>\n\
      <dd>sort an float array</dd>\n<dt>function SortS(out array&lt;string&gt; ar,\
      \ optional bool bCaseInsenstive)&#160;</dt>\n<dd>sort a string array</dd>\n\
      <dt>function int MaxI(array&lt;int&gt;) <i>(v101)</i></dt>\n<dd>get the highest\
      \ value of an arra</dd>\n<dt>function int MaxF(array&lt;float&gt;) <i>(v104)</i></dt>\n\
      <dd>get the highest value of an arrayy</dd>\n<dt>function string MaxS(array&lt;string&gt;)\
      \ <i>(v101)</i></dt>\n<dd>get the highest value of an array</dd>\n<dt>function\
      \ int MinI(array&lt;int&gt;) <i>(v101)</i></dt>\n<dd>get the lowest value of\
      \ an array</dd>\n<dt>function int MinF(array&lt;float&gt;) <i>(v104)</i></dt>\n\
      <dd>get the lowest value of an array</dd>\n<dt>function string MinS(array&lt;string&gt;)\
      \ <i>(v101)</i></dt>\n<dd>get the lowest value of an array</dd>\n</dl>\n<h3><span\
      \ class=\"mw-headline\" id=\"wTime_.28v104.29\"><a href=\"/Legacy:WUtils/WTime\"\
      \ title=\"Legacy:WUtils/WTime\">wTime</a> <i>(v104)</i></span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:WUtils?section=6\"\
      \ title=\"Edit section: wTime (v104)\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">struct</span> DateTime\n<span class=\"br0\">{</span>\n  <span class=\"\
      kw1\">var</span> <span class=\"kw5\">int</span> year,month,day,hour,minute,second;\n\
      <span class=\"br0\">}</span>;</pre></div>\n</div>\n<dl>\n<dt>function string\
      \ date(string format, optional int year, optional int mon, optional int day,\
      \ optional int hour, optional int min, optional int sec)</dt>\n<dd>format a\
      \ time to a string</dd>\n<dt>function string date2(string format, DateTime dt)</dt>\n\
      <dd>same as date but uses a DateTime as input</dd>\n<dt>function DateTime duration(int\
      \ seconds)</dt>\n<dd>returns the duration broken down into minutes/ hours/ days/\
      \ months/ years</dd>\n<dt>function bool isLeap(int year)</dt>\n<dd>Returns true\
      \ if it's a leap year</dd>\n<dt>function mktime(int year, int mon, int day,\
      \ int hour, int min, int sec)</dt>\n<dd>create a unix timestamp</dd>\n<dt>function\
      \ int SpanSeconds(DateTime Later, DateTime Earlier)</dt>\n<dd>number of seconds\
      \ between both times</dd>\n<dt>function DateTime Stats(int seconds)</dt>\n<dd>returns\
      \ how many years/months/days/hours/minutes and x number of seconds is</dd>\n\
      </dl>\n<h3><span class=\"mw-headline\" id=\"wDraw_.28v104.29\"><a href=\"/Legacy:WUtils/WDraw\"\
      \ title=\"Legacy:WUtils/WDraw\">wDraw</a> <i>(v104)</i></span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:WUtils?section=7\"\
      \ title=\"Edit section: wDraw (v104)\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>(source at <a href=\"/Legacy:Wormbo/WUtils\" title=\"\
      Legacy:Wormbo/WUtils\">Wormbo/wUtils</a>)</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">struct</span> MaterialRegion <span class=\"br0\">{</span>\n\
      \    <span class=\"kw1\">var</span> <span class=\"kw5\">Material</span> Tex;\n\
      \    <span class=\"kw1\">var</span> <span class=\"kw5\">IntBox</span> TexCoords;\
      \   <span class=\"co1\">// absolute material coordinates</span>\n    <span class=\"\
      kw1\">var</span> <span class=\"kw5\">FloatBox</span> ScreenCoords;  <span class=\"\
      co1\">// relative screen coordinates</span>\n    <span class=\"kw1\">var</span>\
      \ <span class=\"kw9\">Actor</span>.<span class=\"me0\">ERenderStyle</span> RenderStyle;\n\
      \    <span class=\"kw1\">var</span> <span class=\"kw5\">Color</span> DrawColor;\n\
      <span class=\"br0\">}</span>;</pre></div>\n</div>\n<dl>\n<dt>function DrawDecimalNumberAt(Canvas\
      \ C, float Value, float X, float Y, optional bool bClipped, optional int Precision)</dt>\n\
      <dd>Draws a float value. The coordinates specify the upper left corner of the\
      \ decimal point character, i.e. when you specify the upper right corner of the\
      \ screen the decimal point would not be visible. added optional int Precision\
      \ and fixed draw position getting changed <i>(v105)</i></dd>\n<dt>function DrawMaterialRegion(Canvas\
      \ C, MaterialRegion M, optional float ScaleX, optional float ScaleY, optional\
      \ bool bClipped)</dt>\n<dd>Draws a MaterialRegion to a Canvas. The canvas' clipping\
      \ region (determined by OrgX/Y and ClipX/Y) is used to convert the MaterialRegion's\
      \ screen coordinates. If ScaleY is omitted, ScaleX is used for both directions.\
      \ If ScaleX is omitted, a value of 1.0 is used.</dd>\n<dt>function FloatBox\
      \ GetActorBox(Canvas C, Actor A)&#160;</dt>\n<dd>Calculates a box around an\
      \ actor in relative screen coordinates.</dd>\n<dt>function ResetClipRegion(Canvas\
      \ C)&#160;</dt>\n<dd>Resets the canvas' clipping region.</dd>\n<dt>function\
      \ SetClipRegion(Canvas C, FloatBox ClipRegion)&#160;</dt>\n<dd>Sets the canvas'\
      \ clipping region, i.e. OrgX/Y and ClipX/Y. Uses a FloatBox like it is returned\
      \ by the GetActorBox method.</dd>\n<dt>function DrawBracket (Canvas C, float\
      \ width, float height, float bracket_size) <i>(v105)</i></dt>\n<dd>This function\
      \ is a corrected version of the function with the same name in the Canvas class.</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"Downloads\">Downloads</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:WUtils?section=8\" title=\"Edit section: Downloads\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/\"\
      >http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/</a> (last check\
      \ 28 Dec 2015: successful)</p>\n<h3><span class=\"mw-headline\" id=\"CVS_access\"\
      >CVS access</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:WUtils?section=9\" title=\"Edit section: CVS\
      \ access\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>If you want bleeding edge you can pull the latest version from my CVS</p>\n\
      <dl>\n<dt>CVS Web Repository&#160;</dt>\n<dd><a rel=\"nofollow\" class=\"external\
      \ free\" href=\"http://el-muerte.student.utwente.nl/cgi-bin/cvsweb/UT2003/wUtils\"\
      >http://el-muerte.student.utwente.nl/cgi-bin/cvsweb/UT2003/wUtils</a></dd>\n\
      <dt>CVS Root for anonymous access&#160;</dt>\n<dd>:pserver:anonymous@el-muerte.student.utwente.nl:/usr/local/cvsroot/UT2003</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"Source_Code\">Source Code</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:WUtils?section=10\" title=\"Edit section: Source Code\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li><a href=\"/Legacy:WUtils/WArray\" title=\"Legacy:WUtils/WArray\">Legacy:WUtils/WArray</a></li>\n\
      <li><a href=\"/Legacy:WUtils/WDraw\" title=\"Legacy:WUtils/WDraw\">Legacy:WUtils/WDraw</a></li>\n\
      <li><a href=\"/Legacy:WUtils/WMath\" title=\"Legacy:WUtils/WMath\">Legacy:WUtils/WMath</a></li>\n\
      <li><a href=\"/Legacy:WUtils/WString\" title=\"Legacy:WUtils/WString\">Legacy:WUtils/WString</a></li>\n\
      <li><a href=\"/Legacy:WUtils/WTime\" title=\"Legacy:WUtils/WTime\">Legacy:WUtils/WTime</a></li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:WUtils?section=11\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Johnny_o:</b>\
      \ Hey, I tried using wUtils cause it will handle what I need to get done, but\
      \ I can't get it to work. I setup my edit packages and call the functions just\
      \ like described above. Since I don't see anyone else writing anything I assume\
      \ I must be the only person with this problem and I did something wrong. Anyone\
      \ know what it could be?</p>\n<p><b>Wormbo:</b> \"My car doesn't move, what's\
      \ wrong?\"&#160;;) Can you be a little more specific, please?</p>\n<p><b>Johnny_o:</b>\
      \ Sure, no problem. &#160;:) When I compile, I get the error message,</p>\n\
      <p>\"Error: Can't find class 'wString'. I call the function I want to use like\
      \ this:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div\
      \ class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"co1\"\
      >// SomeClassOfMine ------------------------</span>\n \n  size <span class=\"\
      sy0\">=</span> <span class=\"kw1\">class</span><span class=\"st0\">'wString'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">split2</span> <span class=\"\
      br0\">(</span>...<span class=\"br0\">)</span>;\n \n<span class=\"co1\">// UT2003.ini\
      \ -----------------------------</span>\n  ...\n<span class=\"me0\">EditPackages</span><span\
      \ class=\"sy0\">=</span>SkaarjPack_rc\nEditPackages<span class=\"sy0\">=</span>OGGPlayer\n\
      EditPackages<span class=\"sy0\">=</span>wUtils</pre></div>\n</div>\n<p>I thought,\
      \ \"maybe I didn't set it up right.\" I have the wUtils.u file in the UT2003\\\
      System directory. Same error. I tried changing the call to <b>class'wUtils.wString'.static.someFunction()</b>\
      \ and that didn't do anything. I tried recompiling wUtils, and that didn't do\
      \ anything. I still get the same error I listed above. Somebody, please help!\
      \ &#160;:)</p>\n<p><b>Mychaeel:</b> Where is your own package listed in the\
      \ EditPackages list?</p>\n<p><b>Johnny_o:</b> My own package is listed a few\
      \ above it. So, do I have to put wUtils above my own package before I can use\
      \ it?</p>\n<p><b>Mychaeel:</b> The packages listed in the EditPackages list\
      \ are loaded (and compiled) in the order they're listed in. So, in order to\
      \ be able to access classes from the wUtils package, it has to be listed <i>before</i>\
      \ your own package.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.150\
      \ seconds\nReal time usage: 0.307 seconds\nPreprocessor visited node count:\
      \ 148/1000000\nPreprocessor generated node count: 405/1000000\nPost‐expand include\
      \ size: 504/2097152 bytes\nTemplate argument size: 135/2097152 bytes\nHighest\
      \ expansion depth: 3/40\nExpensive parser function count: 0/100\n-->\n\n<!--\
      \ \nTransclusion expansion time report (%,ms,calls,template)\n100.00%   12.805\
      \      1 - -total\n100.00%   12.805      1 - Template:Innerbox\n-->\n\n<!--\
      \ Saved in parser cache with key wiki:pcache:idhash:3748-0!*!0!!en!*!* and timestamp\
      \ 20221118025129 and revision id 46277\n -->\n"
  categories:
  - sortkey: "WUtils"
    name: "Legacy_Custom_Class_(UT2004)"
  links:
  - ns: 100
    exists: true
    name: "Legacy:WUtils/WMath"
  - ns: 100
    exists: true
    name: "Legacy:WUtils/WString"
  - ns: 100
    exists: true
    name: "Legacy:RSA"
  - ns: 100
    exists: true
    name: "Legacy:WUtils/WArray"
  - ns: 100
    exists: true
    name: "Legacy:WUtils/WTime"
  - ns: 100
    exists: true
    name: "Legacy:CRC32"
  - ns: 100
    exists: true
    name: "Legacy:WUtils/WDraw"
  - ns: 100
    exists: true
    name: "Legacy:Nomad/WUtils"
  - ns: 100
    exists: true
    name: "Legacy:Wormbo/WUtils"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/wUtils-105.zip"
  - "http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/"
  - "http://el-muerte.student.utwente.nl/cgi-bin/cvsweb/UT2003/wUtils"
  sections:
  - toclevel: 1
    level: "2"
    line: "Usage"
    number: "1"
    index: "1"
    fromtitle: "Legacy:WUtils"
    byteoffset: 970
    anchor: "Usage"
  - toclevel: 1
    level: "2"
    line: "Classes of wUtils"
    number: "2"
    index: "2"
    fromtitle: "Legacy:WUtils"
    byteoffset: 1223
    anchor: "Classes_of_wUtils"
  - toclevel: 2
    level: "3"
    line: "wString"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:WUtils"
    byteoffset: 1248
    anchor: "wString"
  - toclevel: 2
    level: "3"
    line: "wMath"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:WUtils"
    byteoffset: 4170
    anchor: "wMath"
  - toclevel: 2
    level: "3"
    line: "wArray"
    number: "2.3"
    index: "5"
    fromtitle: "Legacy:WUtils"
    byteoffset: 5289
    anchor: "wArray"
  - toclevel: 2
    level: "3"
    line: "wTime <i>(v104)</i>"
    number: "2.4"
    index: "6"
    fromtitle: "Legacy:WUtils"
    byteoffset: 7703
    anchor: "wTime_.28v104.29"
  - toclevel: 2
    level: "3"
    line: "wDraw <i>(v104)</i>"
    number: "2.5"
    index: "7"
    fromtitle: "Legacy:WUtils"
    byteoffset: 8621
    anchor: "wDraw_.28v104.29"
  - toclevel: 1
    level: "2"
    line: "Downloads"
    number: "3"
    index: "8"
    fromtitle: "Legacy:WUtils"
    byteoffset: 10349
    anchor: "Downloads"
  - toclevel: 2
    level: "3"
    line: "CVS access"
    number: "3.1"
    index: "9"
    fromtitle: "Legacy:WUtils"
    byteoffset: 10464
    anchor: "CVS_access"
  - toclevel: 1
    level: "2"
    line: "Source Code"
    number: "4"
    index: "10"
    fromtitle: "Legacy:WUtils"
    byteoffset: 10766
    anchor: "Source_Code"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "5"
    index: "11"
    fromtitle: "Legacy:WUtils"
    byteoffset: 11021
    anchor: "Discussion"
  displaytitle: "Legacy:WUtils"
  iwlinks: []
  wikitext:
    text: "{{innerbox| '''Latest version: 105'''\n\n [http://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/wUtils-105.zip\
      \ download the latest version]\n\n}}\n\nUT2003 has a nice set of methods and\
      \ structures defined in XGame.xUtil, but there are more common used methods\
      \ and don't need to be rewritten every time somebody needs them. That's why\
      \ I've started wUtils to create a package containing another set of usefull\
      \ methods.\n\nFeel free to contribute more useful methods to this package.\n\
      \nYou are completely free to use wUtils and distribute it with your mod. You\
      \ may also use only part of the code of wUtils. You are not allowed to distribute\
      \ a changed version of wUtils under the same name, this is to prevent confusion.\n\
      \n'''''Note:''''' if you use wUtils in your mod, please check to this page to\
      \ check if there's a newer version available before you release the mod.\n\n\
      '''''Note 2:''''' feel free to contribute methods/classes/... you think should\
      \ belong into this package.\n\n==Usage==\n\nTo use the methods from wUtils place\
      \ wUtils in your EditPackages list.\n\nThen call the methods via:\n\n<uscript>\n\
      class'wUtilsClass'.static.method()\n</uscript>\n\nfor example:\n\n<uscript>\n\
      mystring = class'wString'.static.Trim(mystring);\n</uscript>\n\n== Classes of\
      \ wUtils ==\n\n=== [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WString|wString]] ===\n\
      ;function string Capitalize(coerce string S) ''(v101)'': will change \"this\
      \ is a string\" to \"This Is A String\" \n;function Eat(out string Dest, out\
      \ string Source, int Num) ''(v104)'': Moves NUM lements from Source to Dest\n\
      ;function string FloatToString(float Value, optional int Precision) ''(105)'':\
      \ Converts a float to a string\n;function int InStrFrom(coerce string StrText,\
      \ coerce string StrPart, optional int OffsetStart): like InStr except you can\
      \ specify where to start the search.\n;function bool IsLower(coerce string S):\
      \ check if a string is all lowercase\n;function bool IsUpper(coerce string S):\
      \ check if a string is all uppercase\n;function string Lower(coerce string Text):\
      \ like Caps but lowers strings\n;function string LTrim(coerce string S): trims\
      \ leading spaces/tabs\n;function bool MaskedCompare(coerce string target, string\
      \ mask, optional bool casesensitive): check target using mask, mask can contain\
      \ the following wildcards: * for X chars, or ? for 1 char, check [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WString|my\
      \ source]] if it can be optimized. There's a a bug in this function. It's fixed\
      \ with v104.\n;function string ReplaceInString(coerce string src, int from,\
      \ int length, coerce string with) ''(v102)'' : replaces part of a string: <code>ReplaceInString(\"\
      A stupid string.\", 2, 6, \"good\") == \"A good string.\"</code>\n;function\
      \ bool ReplaceOption(out string Options, string Key, string NewValue, optional\
      \ bool bAddIfMissing, optional out string OldValue, optional string delim) :\
      \ Allows you to quickly change a value in the Options string used in Login and\
      \ PostLogin. ([[Legacy:Nomad/WUtils|Source]]) \n;function int Split2(coerce\
      \ string src, string delim, out array<string> parts, optional bool ignoreBlanks,\
      \ optional string quotechar) ''(v101)'': fixed version of split. Fixed: first\
      \ char can be a delim, last char can be a space. Added: delim as a string. ''Added'':\
      \ ignoreblanks: \"||\" results in an empty array, and quotechar. (v103)\n;function\
      \ string StrShift(out string line, string delim, optional string quotechar):\
      \ this will shift the first element of the line (delimited by delim). ''fixed'':\
      \ delim can be longer that 1 char (v101) ''added'': optional quote char so you\
      \ can use: \"one item\" \"second item\" (v103)\n;function string StrSubst(coerce\
      \ string target, optional string r0, optional string r1, ... , optional string\
      \ r9) ''(v102)'': StrSubst will replace the occurances of %s in target with\
      \ the value of r#, where # is the n'th occurance of %s\n;function string StrReplace(coerce\
      \ string target, array<string> replace, array<string> with, optional bool bOnlyFirst):\
      \ string replace that accepts arrays, usefull if you want to implement a bad\
      \ word filter, optional bOnlyFirst added in v101\n;function string RTrim(coerce\
      \ string S): trims trailing spaces/tabs\n;function string Trim(coerce string\
      \ S): trims leading and trailing spaces/tabs\n\n=== [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WMath|wMath]]\
      \ ===\n;function int CRC32(coerce string Text, int CrcTable[256]) ''(v101)''\
      \ : calculate the CRC32 hash of a string, more info: [[Legacy:CRC32|CRC32]]\n\
      ;function CRC32Init(out int CrcTable[256]) ''(v101)'' : init function to call\
      \ (once) before you use CRC32\n;function bool IsInt(coerce string Param, optional\
      \ bool bPositiveOnly) : checks if param is an integer\n;function bool IsFloat(coerce\
      \ string Param, optional bool bPositiveOnly) : checks if param is a float (or\
      \ int)\n;function int PowerMod(int C, int D, int N) ''(v102)'' : this will calculate\
      \ <code>x^e mod y</code>\n;function RSAEncode(coerce string data, int E, int\
      \ N, out array<int> data2) ''(v102)'' : encode data using the keys E and N,\
      \ [[Legacy:RSA|RSA]]\n;function string RSADecode(array<int> data, int D, int\
      \ N) ''(v102)'' : encode data using the keys D and N, [[Legacy:RSA|RSA]]\n;function\
      \ int RSAPublicKeygen(int p, int q) ''(v102)'' : calculate encode key using\
      \ primes P and Q, [[Legacy:RSA|RSA]]\n;function int RSAPrivateKeygen(int E,\
      \ int p, int q) ''(v102)'' : calculate decode key, [[Legacy:RSA|RSA]]\n\n===\
      \ [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WArray|wArray]] ===\n;function array<int>\
      \ AddI(array<int> A, array<int> B): join the two arrays\n;function array<float>\
      \ AddF(array<float> A, array<float> B) ''(v104)'': join the two arrays\n;function\
      \ array<object> AddO(array<object> A, array<object> B): join the two arrays\n\
      ;function array<string> AddS(array<string> A, array<string> B): join the two\
      \ arrays\n;function int BinarySearch(array<string> Myarray, string SearchString,\
      \ optional int Low, optional int High, optional bool bIgnoreCase) ''(v103)'':\
      \ searches a sorted array for a matching element, returns the index if found\
      \ or -1\n;function string GetCommonBegin(array<string> slist) ''(v103)'': returns\
      \ the common beginning of elements in the array\n;function string Join(array<\
      \ string > ar, optional string delim, optional bool bIgnoreEmpty) : join the\
      \ array elements to a string using delimiter 'delim', added the optional bIgnoreEmpty\
      \ (v101). bIgnoreEmpty was fixed in (v104)\n;function float ShiftF(out array<\
      \ float > ar) ''(v104)'': shift the first element of an float array\n;function\
      \ int ShiftI(out array< int > ar) : shift the first element of an int array\n\
      ;function object ShiftO(out array< object > ar) : shift the first element of\
      \ an object array\n;function string ShiftS(out array< string > ar) : shift the\
      \ first element of an string array\n;function array<int> RemoveI(array<int>\
      \ A, array<int> B): remove elements in B from A\n;function array<float> RemoveF(array<float>\
      \ A, array<float> B) ''(v104)'': remove elements in B from A\n;function array<object>\
      \ RemoveO(array<object> A, array<object> B): remove elements in B from A\n;function\
      \ array<string> RemoveS(array<string> A, array<string> B): remove elements in\
      \ B from A\n;function SortI(out array<int> ar) :  sort an int array\n;function\
      \ SortF(out array<float> ar) ''(v104)'':  sort an float array\n;function SortS(out\
      \ array<string> ar, optional bool bCaseInsenstive) : sort a string array\n;function\
      \ int MaxI(array<int>) ''(v101)'': get the highest value of an arra\n;function\
      \ int MaxF(array<float>) ''(v104)'': get the highest value of an arrayy\n;function\
      \ string MaxS(array<string>) ''(v101)'': get the highest value of an array\n\
      ;function int MinI(array<int>) ''(v101)'': get the lowest value of an array\n\
      ;function int MinF(array<float>) ''(v104)'': get the lowest value of an array\n\
      ;function string MinS(array<string>) ''(v101)'': get the lowest value of an\
      \ array\n\n=== [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WTime|wTime]] ''(v104)''\
      \ ===\n\n<uscript>\nstruct DateTime\n{\n  var int year,month,day,hour,minute,second;\n\
      };\n</uscript>\n;function string date(string format, optional int year, optional\
      \ int mon, optional int day, optional int hour, optional int min, optional int\
      \ sec): format a time to a string\n;function string date2(string format, DateTime\
      \ dt): same as date but uses a DateTime as input\n;function DateTime duration(int\
      \ seconds):returns the duration broken down into minutes/ hours/ days/ months/\
      \ years\n;function bool isLeap(int year): Returns true if it's a leap year\n\
      ;function mktime(int year, int mon, int day, int hour, int min, int sec): create\
      \ a unix timestamp\n;function int SpanSeconds(DateTime Later, DateTime Earlier):\
      \ number of seconds between both times\n;function DateTime Stats(int seconds):returns\
      \ how many years/months/days/hours/minutes and x number of seconds is\n\n===\
      \ [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WDraw|wDraw]] ''(v104)'' ===\n\n(source\
      \ at [[Legacy:Wormbo/WUtils|Wormbo/wUtils]])\n\n<uscript>\nstruct MaterialRegion\
      \ {\n    var Material Tex;\n    var IntBox TexCoords;   // absolute material\
      \ coordinates\n    var FloatBox ScreenCoords;  // relative screen coordinates\n\
      \    var Actor.ERenderStyle RenderStyle;\n    var Color DrawColor;\n};\n</uscript>\n\
      ;function DrawDecimalNumberAt(Canvas C, float Value, float X, float Y, optional\
      \ bool bClipped, optional int Precision): Draws a float value. The coordinates\
      \ specify the upper left corner of the decimal point character, i.e. when you\
      \ specify the upper right corner of the screen the decimal point would not be\
      \ visible. added optional int Precision and fixed draw position getting changed\
      \ ''(v105)''\n;function DrawMaterialRegion(Canvas C, MaterialRegion M, optional\
      \ float ScaleX, optional float ScaleY, optional bool bClipped): Draws a MaterialRegion\
      \ to a Canvas. The canvas' clipping region (determined by OrgX/Y and ClipX/Y)\
      \ is used to convert the MaterialRegion's screen coordinates. If ScaleY is omitted,\
      \ ScaleX is used for both directions. If ScaleX is omitted, a value of 1.0 is\
      \ used.\n;function FloatBox GetActorBox(Canvas C, Actor A) : Calculates a box\
      \ around an actor in relative screen coordinates.\n;function ResetClipRegion(Canvas\
      \ C) : Resets the canvas' clipping region.\n;function SetClipRegion(Canvas C,\
      \ FloatBox ClipRegion) : Sets the canvas' clipping region, i.e. OrgX/Y and ClipX/Y.\
      \ Uses a FloatBox like it is returned by the GetActorBox method.\n;function\
      \ DrawBracket (Canvas C, float width, float height, float bracket_size) ''(v105)'':\
      \ This function is a corrected version of the function with the same name in\
      \ the Canvas class. \n\n== Downloads ==\nhttp://mozilla2.snt.utwente.nl/pub/games/UT2003/Misc/wUtils/\
      \ (last check 28 Dec 2015: successful)\n\n===CVS access===\n\nIf you want bleeding\
      \ edge you can pull the latest version from my CVS\n; CVS Web Repository : http://el-muerte.student.utwente.nl/cgi-bin/cvsweb/UT2003/wUtils\n\
      ; CVS Root for anonymous access : <nowiki>:pserver:anonymous@el-muerte.student.utwente.nl:/usr/local/cvsroot/UT2003</nowiki>\n\
      \n==Source Code==\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WArray]]\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WDraw]]\n\
      * [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WMath]]\n* [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WString]]\n\
      * [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/WTime]]\n\n== Discussion ==\n\n'''Johnny_o:'''\
      \ Hey, I tried using wUtils cause it will handle what I need to get done, but\
      \ I can't get it to work. I setup my edit packages and call the functions just\
      \ like described above.  Since I don't see anyone else writing anything I assume\
      \ I must be the only person with this problem and I did something wrong.  Anyone\
      \ know what it could be?\n\n'''Wormbo:''' \"My car doesn't move, what's wrong?\"\
      \ ;) Can you be a little more specific, please?\n\n'''Johnny_o:''' Sure, no\
      \ problem.  :)  When I compile, I get the error message,\n\n\"Error: Can't find\
      \ class 'wString'.  I call the function I want to use like this:\n\n<uscript>\n\
      // SomeClassOfMine ------------------------\n\n  size = class'wString'.static.split2\
      \ (...);\n\n// UT2003.ini -----------------------------\n  ...\nEditPackages=SkaarjPack_rc\n\
      EditPackages=OGGPlayer\nEditPackages=wUtils\n</uscript>\n\nI thought, \"maybe\
      \ I didn't set it up right.\"  I have the wUtils.u file in the UT2003\\System\
      \ directory.  Same error.  I tried changing the call to '''class'wUtils.wString'.static.someFunction()'''\
      \ and that didn't do anything.  I tried recompiling wUtils, and that didn't\
      \ do anything.  I still get the same error I listed above.  Somebody, please\
      \ help!  :)\n\n'''Mychaeel:''' Where is your own package listed in the EditPackages\
      \ list?\n\n'''Johnny_o:''' My own package is listed a few above it.  So, do\
      \ I have to put wUtils above my own package before I can use it?\n\n'''Mychaeel:'''\
      \ The packages listed in the EditPackages list are loaded (and compiled) in\
      \ the order they're listed in.  So, in order to be able to access classes from\
      \ the wUtils package, it has to be listed ''before'' your own package.\n\n[[Category:Legacy\
      \ Custom Class (UT2004)|{{PAGENAME}}]]"
  properties: []
  revId: 46277
name: "Legacy:WUtils"
revision:
  revid: 46277
  parentid: 9510
  user: "SeriousBarbie"
  timestamp: 1451339579.000000000
  comment: "updated invalid links/added unrealwiki links"
timestamp: 1668760907.981612000
