---
parse:
  title: "Legacy:Animation"
  text:
    text: "<p><i><b>Animation</b></i> is the science and art of creating the illusion\
      \ of motion. From antique kinetiscopes to cutting edge digital effects, this\
      \ is done by exploiting the sensory phenomenon called persistence of vision,\
      \ which causes a series of individual pictures to be perceived as a single,\
      \ continuous image if displayed one after the other at a fast enough rate. By\
      \ changing the content of the pictures, the illusion of smooth motion can be\
      \ created.</p>\n<p>In the Unreal universe, animation is the principal deity\
      \ – nearly every aspect of the game engine and its thousands of \"moving\" parts\
      \ (pun intended) contributes to achieving the ultimate goal of delivering a\
      \ series of constantly changing images to a computer display. When all goes\
      \ well, we willingly suspend our disbelief and enter that universe to play the\
      \ game. If things get glitchy (framerate drop, netplay lag, etc.), the illusion\
      \ can be broken.</p>\n<p>\"Animation\" need not refer only to apparent motion\
      \ – any visually detectable change over time in a series of images (such as\
      \ changes in color or texture) is also animation. That is the heart of the art\
      \ – change over time.</p>\n<p>For Unreal game content developers, \"animation\"\
      \ can be more narrowly defined. There are five types of animation techniques\
      \ directly accessible for content creation: texture animation, mover animation,\
      \ cinematic animation, vertex animation, and skeletal animation.</p>\n<dl>\n\
      <dt>Texture animation</dt>\n<dd>The creation of any change over time in the\
      \ textures applied to the surfaces of objects in Unreal scenes. <a href=\"/Legacy:TexPanner\"\
      \ title=\"Legacy:TexPanner\">TexPanners</a>, <a href=\"/Legacy:TexRotator\"\
      \ title=\"Legacy:TexRotator\">TexRotators</a>, and MaterialSequences are examples.</dd>\n\
      </dl>\n<dl>\n<dt>Mover animation</dt>\n<dd>Uses game engine programming to create\
      \ positional changes over time of 3D objects in the Unreal scene. Mover animation\
      \ is implemented by designating a 3D object in a map as a <a href=\"/Legacy:Mover\"\
      \ title=\"Legacy:Mover\">Mover</a>, and specifying a sequence of positional\
      \ changes (keys) and the time to move between each.</dd>\n</dl>\n<dl>\n<dt>Cinematic\
      \ animation</dt>\n<dd>Related to mover animation, but employs defined motion\
      \ paths for objects, including the depicted viewpoint, if desirable. The <a\
      \ href=\"/Legacy:Matinee\" title=\"Legacy:Matinee\">Matinee</a> tool is used\
      \ to create cinematic animation – <a href=\"/Legacy:InterpolationPoint\" title=\"\
      Legacy:InterpolationPoint\">InterpolationPoints</a> are placed in a map to describe\
      \ the motion path, and the <a href=\"/Legacy:SceneManager\" title=\"Legacy:SceneManager\"\
      >SceneManager</a>'s Affect and/or AffectedActor properties are set to specify\
      \ the object being moved. Actions and SubActions properties further define the\
      \ motion characteristics.</dd>\n</dl>\n<dl>\n<dt>Vertex animation</dt>\n<dd></dd>\n\
      </dl>\n<p>A method of creating motion in a 3D model mesh by directly manipulating\
      \ the individual vertices of the mesh. This was the principal 3d mesh animation\
      \ technique used in Unreal 1, and is still employed selectively in UT2003 for\
      \ such objects as the waving-in-the-wind CTF flags and the bio-rifle goop blobs.\
      \ Vertex animation of characters and some types of weapons is a laborious task,\
      \ and has been largely superceded by the skeletal animation technique.</p>\n\
      <p>Vertex animation requires a modeling/animation program ( e.g., 3DS Max, Maya,\
      \ or MilkShape) and the use of a utility (e.g., <a href=\"/Legacy:ActorX\" title=\"\
      Legacy:ActorX\">ActorX</a>, <a href=\"/Legacy:3ds2unr\" title=\"Legacy:3ds2unr\"\
      >3ds2unr</a>) for exporting the animated meshes to a form that can be imported\
      \ into UEd. Currently vertex animation requires some Unreal Scripting to fully\
      \ implement.</p>\n<p><br /></p>\n<dl>\n<dt>Skeletal animation</dt>\n<dd></dd>\n\
      </dl>\n<p>A technique for animating 3D meshes by using a controlling understructure,\
      \ commonly called a skeleton, that is invisible in the game. The skeleton can\
      \ be constructed to mimic the proportions and range of motion of a human skeleton,\
      \ making it an ideal technique for animating humanoid characters, but it can\
      \ be applied to many other animation needs as well. One of the strongest features\
      \ of skeletal animation is that it can employ inverse kinematics, which greatly\
      \ simplifies the creation of certain types of animated motion.</p>\n<p>Skeletal\
      \ animation requires a modeling/animation program ( e.g., 3DS Max, Maya) that\
      \ supports the technique, and the use of a utility (e.g., <a href=\"/Legacy:ActorX\"\
      \ title=\"Legacy:ActorX\">ActorX</a>, <a href=\"/Legacy:UnEditor.Mll\" title=\"\
      Legacy:UnEditor.Mll\">unEditor.mll</a>) for exporting the skeletal animations\
      \ to a form that can be imported into UEd.</p>\n<p><br />\nBoth gmax and Maya\
      \ PLE, the freeware versions of Max and Maya that Discreet and Alias provide\
      \ for non-commercial use, can be employed to produce 3D mesh animations, but\
      \ their limitations can complicate the process of getting the result into UT2003.</p>\n\
      <p>The choice by a modeler/animator of which animation technique to use for\
      \ a particular task depends on the nature of the motion to be simulated. The\
      \ surface appearance of an object can be animated using the various moving texture\
      \ types. For motion through virtual 3D space, when the form of a moving object\
      \ does not change, mover animation is usually adequate. More complex motion\
      \ paths, and \"camera\" motion, can be accomplished with cinematic animation.\
      \ Motions requiring a 3D object to change its shape in a complex fashion (such\
      \ as the multiple waveforms present in a breeze-blown banner) are best portrayed\
      \ with vertex animation. Skeletal animation is most useful where sections of\
      \ a mesh object move as separate units (such as an arm or leg), and the units\
      \ can be \"attached\" to a skeletal understructure.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Reference\">Reference</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Animation?section=1\"\
      \ title=\"Edit section: Reference\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a rel=\"nofollow\" class=\"external text\"\
      \ href=\"http://www.unrealtournament.com/downloads/\">UnrealTournament.com's</a>\
      \ Download Section. Get the UT Bonus Pack 4, which adds support for Skeletal\
      \ Animation for UT.</li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"\
      http://unreal.epicgames.com/skeletal/utskelanim.htm\">Unreal Tournament Skeletal\
      \ Animation System Notes</a></li>\n<li><a rel=\"nofollow\" class=\"external\
      \ text\" href=\"http://planetunreal.com/epicknights/\">EpicKnights</a> – An\
      \ Unreal Engine animating resource.\n<ul>\n<li>Skeletal animation using <a href=\"\
      /Legacy:ActorX\" title=\"Legacy:ActorX\">ActorX</a></li>\n<li>Applying materials\
      \ in 3DS</li>\n<li>UnrealNST – A useful tool for viewing, mapping, and painting\
      \ vertex models.</li>\n</ul>\n</li>\n</ul>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Animation?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Topics_On_Modeling\" title=\"\
      Legacy:Topics On Modeling\">Topics On Modeling</a></li>\n<li><a href=\"/Legacy:Skinning\"\
      \ title=\"Legacy:Skinning\">Skinning</a></li>\n<li><a href=\"/Legacy:3D_Studio_Max\"\
      \ title=\"Legacy:3D Studio Max\">3D Studio Max</a></li>\n<li><a href=\"/Legacy:Maya\"\
      \ title=\"Legacy:Maya\">Maya</a></li>\n<li><a href=\"/Legacy:MilkShape\" title=\"\
      Legacy:MilkShape\">MilkShape</a></li>\n<li><a href=\"/Legacy:Cryptic_AR\" title=\"\
      Legacy:Cryptic AR\">Cryptic AR</a></li>\n</ul>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.032 seconds\nReal time usage: 0.097 seconds\nPreprocessor\
      \ visited node count: 7/1000000\nPreprocessor generated node count: 12/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:450-0!*!0!!*!*!*\
      \ and timestamp 20221117232224 and revision id 1489\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:TexPanner"
  - ns: 100
    exists: true
    name: "Legacy:3D Studio Max"
  - ns: 100
    exists: true
    name: "Legacy:TexRotator"
  - ns: 100
    exists: true
    name: "Legacy:UnEditor.Mll"
  - ns: 100
    exists: true
    name: "Legacy:3ds2unr"
  - ns: 100
    exists: true
    name: "Legacy:Topics On Modeling"
  - ns: 100
    exists: true
    name: "Legacy:Skinning"
  - ns: 100
    exists: true
    name: "Legacy:ActorX"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:SceneManager"
  - ns: 100
    exists: true
    name: "Legacy:Matinee"
  - ns: 100
    exists: true
    name: "Legacy:InterpolationPoint"
  - ns: 100
    exists: true
    name: "Legacy:Cryptic AR"
  - ns: 100
    exists: true
    name: "Legacy:Maya"
  - ns: 100
    exists: true
    name: "Legacy:MilkShape"
  templates: []
  images: []
  externallinks:
  - "http://planetunreal.com/epicknights/"
  - "http://www.unrealtournament.com/downloads/"
  - "http://unreal.epicgames.com/skeletal/utskelanim.htm"
  sections:
  - toclevel: 1
    level: "2"
    line: "Reference"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Animation"
    byteoffset: 5185
    anchor: "Reference"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Animation"
    byteoffset: 5734
    anchor: "Related_Topics"
  displaytitle: "Legacy:Animation"
  iwlinks: []
  wikitext:
    text: "'''''Animation''''' is the science and art of creating the illusion of\
      \ motion. From antique kinetiscopes to cutting edge digital effects, this is\
      \ done by exploiting the sensory phenomenon called persistence of vision, which\
      \ causes a series of individual pictures to be perceived as a single, continuous\
      \ image if displayed one after the other at a fast enough rate. By changing\
      \ the content of the pictures, the illusion of smooth motion can be created.\n\
      \nIn the Unreal universe, animation is the principal deity &ndash; nearly every\
      \ aspect of the game engine and its thousands of \"moving\" parts (pun intended)\
      \ contributes to achieving the ultimate goal of delivering a series of constantly\
      \ changing images to a computer display. When all goes well, we willingly suspend\
      \ our disbelief and enter that universe to play the game. If things get glitchy\
      \ (framerate drop, netplay lag, etc.), the illusion can be broken.\n\n\"Animation\"\
      \ need not refer only to apparent motion &ndash; any visually detectable change\
      \ over time in a series of images (such as changes in color or texture) is also\
      \ animation. That is the heart of the art &ndash; change over time.\n\nFor Unreal\
      \ game content developers, \"animation\" can be more narrowly defined. There\
      \ are five types of animation techniques directly accessible for content creation:\
      \ texture animation, mover animation, cinematic animation, vertex animation,\
      \ and skeletal animation.\n\n;Texture animation: The creation of any change\
      \ over time in the textures applied to the surfaces of objects in Unreal scenes.\
      \ [[Legacy:TexPanner|TexPanner]]s, [[Legacy:TexRotator|TexRotator]]s, and MaterialSequences\
      \ are examples.\n\n;Mover animation: Uses game engine programming to create\
      \ positional changes over time of 3D objects in the Unreal scene. Mover animation\
      \ is implemented by designating a 3D object in a map as a [[Legacy:Mover|Mover]],\
      \ and specifying a sequence of positional changes (keys) and the time to move\
      \ between each.\n\n;Cinematic animation: Related to mover animation, but employs\
      \ defined motion paths for objects, including the depicted viewpoint, if desirable.\
      \ The [[Legacy:Matinee|Matinee]] tool is used to create cinematic animation\
      \ &ndash; [[Legacy:InterpolationPoint|InterpolationPoint]]s are placed in a\
      \ map to describe the motion path, and the [[Legacy:SceneManager|SceneManager]]'s\
      \ Affect and/or AffectedActor properties are set to specify the object being\
      \ moved. Actions and SubActions properties further define the motion characteristics.\n\
      \n;Vertex animation: \nA method of creating motion in a 3D model mesh by directly\
      \ manipulating the individual vertices of the mesh. This was the principal 3d\
      \ mesh animation technique used in Unreal 1, and is still employed selectively\
      \ in UT2003 for such objects as the waving-in-the-wind CTF flags and the bio-rifle\
      \ goop blobs. Vertex animation of characters and some types of weapons is a\
      \ laborious task, and has been largely superceded by the skeletal animation\
      \ technique.\n\nVertex animation requires a modeling/animation program ( e.g.,\
      \ 3DS Max, Maya, or MilkShape) and the use of a utility (e.g., [[Legacy:ActorX|ActorX]],\
      \ [[Legacy:3ds2unr|3ds2unr]]) for exporting the animated meshes to a form that\
      \ can be imported into UEd. Currently vertex animation requires some Unreal\
      \ Scripting to fully implement.\n\n\n;Skeletal animation: \nA technique for\
      \ animating 3D meshes by using a controlling understructure, commonly called\
      \ a skeleton, that is invisible in the game. The skeleton can be constructed\
      \ to mimic the proportions and range of motion of a human skeleton, making it\
      \ an ideal technique for animating humanoid characters, but it can be applied\
      \ to many other animation needs as well. One of the strongest features of skeletal\
      \ animation is that it can employ inverse kinematics, which greatly simplifies\
      \ the creation of certain types of animated motion.\n\nSkeletal animation requires\
      \ a modeling/animation program ( e.g., 3DS Max, Maya) that supports the technique,\
      \ and the use of a utility (e.g., [[Legacy:ActorX|ActorX]], [[Legacy:UnEditor.Mll|unEditor.mll]])\
      \ for exporting the skeletal animations to a form that can be imported into\
      \ UEd.\n\n\nBoth gmax and Maya PLE, the freeware versions of Max and Maya that\
      \ Discreet and Alias provide for non-commercial use, can be employed to produce\
      \ 3D mesh animations, but their limitations can complicate the process of getting\
      \ the result into UT2003.\n\nThe choice by a modeler/animator of which animation\
      \ technique to use for a particular task depends on the nature of the motion\
      \ to be simulated. The surface appearance of an object can be animated using\
      \ the various moving texture types. For motion through virtual 3D space, when\
      \ the form of a moving object does not change, mover animation is usually adequate.\
      \ More complex motion paths, and \"camera\" motion, can be accomplished with\
      \ cinematic animation. Motions requiring a 3D object to change its shape in\
      \ a complex fashion (such as the multiple waveforms present in a breeze-blown\
      \ banner) are best portrayed with vertex animation. Skeletal animation is most\
      \ useful where sections of a mesh object move as separate units (such as an\
      \ arm or leg), and the units can be \"attached\" to a skeletal understructure.\
      \ \n\n==Reference==\n* [http://www.unrealtournament.com/downloads/ UnrealTournament.com's]\
      \ Download Section. Get the UT Bonus Pack 4, which adds support for Skeletal\
      \ Animation for UT.\n* [http://unreal.epicgames.com/skeletal/utskelanim.htm\
      \ Unreal Tournament Skeletal Animation System Notes]\n* [http://planetunreal.com/epicknights/\
      \ EpicKnights] &ndash; An Unreal Engine animating resource.\n** Skeletal animation\
      \ using [[Legacy:ActorX|ActorX]]\n** Applying materials in 3DS\n** UnrealNST\
      \ &ndash; A useful tool for viewing, mapping, and painting vertex models.\n\n\
      ==Related Topics==\n* [[Legacy:Topics On Modeling|Topics On Modeling]]\n* [[Legacy:Skinning|Skinning]]\n\
      * [[Legacy:3D Studio Max|3D Studio Max]]\n* [[Legacy:Maya|Maya]]\n* [[Legacy:MilkShape|MilkShape]]\n\
      * [[Legacy:Cryptic AR|Cryptic AR]]"
  properties: []
  revId: 1489
name: "Legacy:Animation"
revision:
  revid: 1489
  parentid: 1490
  user: "Adsl-68-127-116-19.dsl.frsn02.pacbell.net"
  timestamp: 1205429713.000000000
  comment: "*"
timestamp: 1668755523.395211000
