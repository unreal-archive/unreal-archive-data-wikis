---
parse:
  title: "Legacy:Replication Examples/Replication Test"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Under_Construction\">Under Construction</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Replication_Examples/Replication_Test?section=1\" title=\"\
      Edit section: Under Construction\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>errmm yeah righto... still working on this. I'll have\
      \ quite a few examples up here shortly.</p>\n<p><br /></p>\n<hr />\n<p><br /></p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">// ========================================================================</span>\n\
      \ \n<span class=\"co1\">//</span>\n<span class=\"co1\">// Coded by JonAzz</span>\n\
      \ \n<span class=\"co1\">// ========================================================================</span>\n\
      \ \n<span class=\"kw1\">class</span> ReplicationTestD <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Actor</span>\n\t<span class=\"kw1\">Placeable</span>;\n\
      \ \n<span class=\"kw1\">var</span> <span class=\"kw5\">int</span> intA;\n \n\
      <span class=\"co1\">// replication Block</span>\n<span class=\"kw1\">replication</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"co1\">// Sends these values from\
      \ the server to the clients</span>\n    <span class=\"kw1\">reliable</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"kw7\"\
      >Role</span> <span class=\"sy0\">==</span> <span class=\"kw7\">ROLE_Authority</span><span\
      \ class=\"br0\">)</span>\n        ClientFunction, intA;\n \n<span class=\"br0\"\
      >}</span>\n \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">event</span>\
      \ <span class=\"kw4\">PostNetReceive</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span> IntA <span class=\"sy0\">==</span> <span\
      \ class=\"nu0\">1</span> <span class=\"br0\">)</span>\n    <span class=\"br0\"\
      >{</span>\n        ClientFunctionB<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">function</span> ServerParseFunction<span class=\"br0\"\
      >(</span><span class=\"kw5\">int</span> A<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n    <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>A <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"\
      br0\">)</span>\n    <span class=\"br0\">{</span>\n        ClientFunction<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>; <span class=\"co1\">//\
      \ Other server required changes</span>\n<span class=\"co1\">//        A = 0;</span>\n\
      \ \n    <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Role</span> <span class=\"sy0\">==</span> <span class=\"kw7\">Role_Authority</span><span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"kw3\">log</span><span class=\"br0\"\
      >(</span><span class=\"st0\">\"A The server has done something\"</span><span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw2\">else</span> <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span><span class=\"kw7\">Role</span> <span\
      \ class=\"sy0\">&lt;</span> <span class=\"kw7\">Role_Authority</span><span class=\"\
      br0\">)</span>\n\t\t<span class=\"kw3\">log</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"A The client has done something\"</span><span class=\"br0\"\
      >)</span>;\n \n    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ ClientFunction<span class=\"br0\">(</span><span class=\"br0\">)</span>   <span\
      \ class=\"co1\">// THIS DOES NOT WORK!!</span>\n<span class=\"br0\">{</span>\n\
      <span class=\"co1\">//    if(Level.NetMode == NM_DedicatedServer)</span>\n<span\
      \ class=\"co1\">//        return;</span>\n \n    <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Role</span> <span class=\"sy0\"\
      >==</span> <span class=\"kw7\">Role_Authority</span><span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"B The server has done something\"</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Role</span> <span class=\"sy0\">&lt;</span>\
      \ <span class=\"kw7\">Role_Authority</span><span class=\"br0\">)</span>\n\t\t\
      <span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"B The client has done something\"</span><span class=\"br0\">)</span>;\n \n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> ClientFunctionB<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>    <span class=\"co1\">// THIS WORKS!</span>\n<span\
      \ class=\"br0\">{</span>\n<span class=\"co1\">//    if(Level.NetMode == NM_DedicatedServer)</span>\n\
      <span class=\"co1\">//        return;</span>\n \n    <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Role</span> <span class=\"sy0\"\
      >==</span> <span class=\"kw7\">Role_Authority</span><span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"C The server has done something\"</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"kw7\">Role</span> <span class=\"sy0\">&lt;</span>\
      \ <span class=\"kw7\">Role_Authority</span><span class=\"br0\">)</span>\n\t\t\
      <span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"C The client has done something\"</span><span class=\"br0\">)</span>;\n \n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> <span class=\"\
      kw4\">Trigger</span><span class=\"br0\">(</span><span class=\"kw9\">Actor</span>\
      \ Other, <span class=\"kw9\">Pawn</span> EventInstigator<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    ServerParseFunction<span class=\"\
      br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span>;\n\
      \    intA <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>;\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n    bEdShouldSnap<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">true</span>\n\t<span class=\"kw7\">DrawType</span><span class=\"\
      sy0\">=</span><span class=\"kw7\">DT_StaticMesh</span>\n\t<span class=\"kw5\"\
      >StaticMesh</span><span class=\"sy0\">=</span><span class=\"kw5\">StaticMesh</span><span\
      \ class=\"st0\">'AS_Decos.ExplodingBarrel'</span>\n\t<span class=\"kw7\">DrawScale</span><span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1</span>\n \n\tbStaticLighting<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">True</span>\n\tbCollideActors<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">True</span>\n\tbBlockActors<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">True</span>\n\tbBlockKarma<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">True</span>\n\t<span class=\"kw7\"\
      >CollisionHeight</span><span class=\"sy0\">=+</span><span class=\"nu0\">000001.000000</span>\n\
      \t<span class=\"kw7\">CollisionRadius</span><span class=\"sy0\">=+</span><span\
      \ class=\"nu0\">000001.000000</span>\n \n\t<span class=\"kw7\">Physics</span><span\
      \ class=\"sy0\">=</span><span class=\"kw7\">PHYS_None</span>\n \n\tbAlwaysRelevant<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>\n<span class=\"co1\"\
      >//\tbNoDelete=false</span>\n\tbStasis<span class=\"sy0\">=</span><span class=\"\
      kw6\">True</span>\n\tbStatic<span class=\"sy0\">=</span><span class=\"kw6\"\
      >False</span>\n\tbSkipActorPropertyReplication<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">false</span>\n\t<span class=\"kw7\">RemoteRole</span><span class=\"\
      sy0\">=</span><span class=\"kw7\">ROLE_SimulatedProxy</span>\n\tbReplicateMovement<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>\n\tNetPriority<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">3.0</span>\n\tNetUpdateFrequency<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">10</span>\n\tbNetNotify<span class=\"\
      sy0\">=</span><span class=\"kw6\">true</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p><b>Server Log:</b></p>\n<dl>\n<dd>ScriptLog: B The server has done\
      \ something</dd>\n<dd>ScriptLog: A The server has done something</dd>\n</dl>\n\
      <p><b>Client log:</b></p>\n<dl>\n<dd>ScriptLog: C The client has done something</dd>\n\
      </dl>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.049 seconds\nReal time\
      \ usage: 0.050 seconds\nPreprocessor visited node count: 6/1000000\nPreprocessor\
      \ generated node count: 30/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:2684-0!*!*!*!*!*!* and timestamp\
      \ 20221120202911 and revision id 6393\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Under Construction"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Replication_Examples/Replication_Test"
    byteoffset: 0
    anchor: "Under_Construction"
  displaytitle: "Legacy:Replication Examples/Replication Test"
  iwlinks: []
  wikitext:
    text: "==Under Construction==\n\nerrmm yeah righto... still working on this. \
      \ I'll have quite a few examples up here shortly.\n\n<br />\n\n----\n\n<br>\n\
      \n<uscript>// ========================================================================\n\
      \n//\n// Coded by JonAzz\n\n// ========================================================================\n\
      \nclass ReplicationTestD extends Actor\n\tPlaceable;\n\nvar int intA;\n\n//\
      \ replication Block\nreplication\n{\n\t// Sends these values from the server\
      \ to the clients\n    reliable if(Role == ROLE_Authority)\n        ClientFunction,\
      \ intA;\n\n}\n\nsimulated event PostNetReceive()\n{\n    if ( IntA == 1 )\n\
      \    {\n        ClientFunctionB();\n    }\n}\n\nfunction ServerParseFunction(int\
      \ A)\n{\n    if(A == 1)\n    {\n        ClientFunction(); // Other server required\
      \ changes\n//        A = 0;\n\n    if(Role == Role_Authority)\n\t\tlog(\"A The\
      \ server has done something\");\n\telse if(Role < Role_Authority)\n\t\tlog(\"\
      A The client has done something\");\n\n    }\n}\n\nsimulated function ClientFunction()\
      \   // THIS DOES NOT WORK!!\n{\n//    if(Level.NetMode == NM_DedicatedServer)\n\
      //        return;\n\n    if(Role == Role_Authority)\n\t\tlog(\"B The server\
      \ has done something\");\n\telse if(Role < Role_Authority)\n\t\tlog(\"B The\
      \ client has done something\");\n\n}\n\nsimulated function ClientFunctionB()\
      \    // THIS WORKS!\n{\n//    if(Level.NetMode == NM_DedicatedServer)\n//  \
      \      return;\n\n    if(Role == Role_Authority)\n\t\tlog(\"C The server has\
      \ done something\");\n\telse if(Role < Role_Authority)\n\t\tlog(\"C The client\
      \ has done something\");\n\n}\n\nfunction Trigger(Actor Other, Pawn EventInstigator)\n\
      {\n    ServerParseFunction( 1 );\n    intA = 1;\n}\n\ndefaultproperties\n{\n\
      \    bEdShouldSnap=true\n\tDrawType=DT_StaticMesh\n\tStaticMesh=StaticMesh'AS_Decos.ExplodingBarrel'\n\
      \tDrawScale=1\n\n\tbStaticLighting=True\n\tbCollideActors=True\n\tbBlockActors=True\n\
      \tbBlockKarma=True\n\tCollisionHeight=+000001.000000\n\tCollisionRadius=+000001.000000\n\
      \n\tPhysics=PHYS_None\n\n\tbAlwaysRelevant=true\n//\tbNoDelete=false\n\tbStasis=True\n\
      \tbStatic=False\n\tbSkipActorPropertyReplication=false\n\tRemoteRole=ROLE_SimulatedProxy\n\
      \tbReplicateMovement=false\n\tNetPriority=3.0\n\tNetUpdateFrequency=10\n\tbNetNotify=true\n\
      }</uscript>\n\n'''Server Log:'''\n\n:ScriptLog: B The server has done something\n\
      :ScriptLog: A The server has done something\n\n'''Client log:'''\n\n:ScriptLog:\
      \ C The client has done something"
  properties: []
  revId: 6393
name: "Legacy:Replication Examples/Replication Test"
revision:
  revid: 6393
  parentid: 6394
  user: "JonAzz"
  timestamp: 1125476129.000000000
  comment: "*"
timestamp: 1668975891.488778000
