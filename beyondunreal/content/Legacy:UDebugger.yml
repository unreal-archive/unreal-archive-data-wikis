---
parse:
  title: "Legacy:UDebugger"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Before_you_start\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Before you start</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#To_start_a_normal_debugging_session\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">To start a normal\
      \ debugging session</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a\
      \ href=\"#To_start_a_UDebugger_server_session\"><span class=\"tocnumber\">3</span>\
      \ <span class=\"toctext\">To start a UDebugger server session</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Bugs_and_Quirks\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Bugs and Quirks</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Before_you_start\"\
      >Before you start</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UDebugger?section=1\" title=\"Edit section:\
      \ Before you start\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ol>\n<li>Make sure you have the debug packages installed (See <a href=\"/Legacy:UnrealScript_Source\"\
      \ title=\"Legacy:UnrealScript Source\">UnrealScript Source</a>).</li>\n<li>Make\
      \ sure you have the latest version of the debugger from Epic. In UT2004 Udebugger\
      \ comes with the game.</li>\n<li>Make sure you build your own packages using\
      \ the -debug option before starting the debugger</li>\n</ol>\n<h2><span class=\"\
      mw-headline\" id=\"To_start_a_normal_debugging_session\">To start a normal debugging\
      \ session</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UDebugger?section=2\" title=\"Edit section:\
      \ To start a normal debugging session\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ol>\n<li>Optionally set StartupFullScreen=false in the\
      \ [WinDrv.WindowsClient] section of the UT2003.ini or UT2004.ini file. (Alternatively\
      \ you can hit ALT-ENTER to toggle fullscreen anyway).</li>\n<li>Start UDebugger.exe</li>\n\
      <li>Set breakpoints, watches, etc. you'd like to debug during your session.</li>\n\
      <li>If debugging 'Access None' errors, make sure to select \"Break On Access\
      \ None\" in the debugger options menu.</li>\n<li>To close the debugger, exit\
      \ the game normally.</li>\n</ol>\n<h2><span class=\"mw-headline\" id=\"To_start_a_UDebugger_server_session\"\
      >To start a UDebugger server session</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UDebugger?section=3\"\
      \ title=\"Edit section: To start a UDebugger server session\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<ol>\n<li>From the\
      \ command line, start UDebugger using the following command line: UDebugger\
      \ MapName?Game=GameType -server</li>\n<li>Set breakpoints, watches, etc. you'd\
      \ like for your mod</li>\n<li>Start up a client UT2003 by double clicking the\
      \ UT2003.exe file, and join your own dedicated server. Depending on where you\
      \ set your breakpoints, you may need to play the game a little before you hit\
      \ a breakpoint, but you get the idea.</li>\n<li>To close UDebugger.exe and its\
      \ associated instance of UT2003.exe (the dedicated server that you started),\
      \ I've found the only reliable way is to issue an admin quit command either\
      \ from console logged in as admin, or from webadmin. Closing it any other way\
      \ causes udebugger to hang (i.e. closing udebugger itself, task manager, etc.).\
      \ However, if you issue an admin quit to the dedicated server, it will close\
      \ and bring udebugger with it.</li>\n</ol>\n<h2><span class=\"mw-headline\"\
      \ id=\"Bugs_and_Quirks\">Bugs and Quirks</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UDebugger?section=4\"\
      \ title=\"Edit section: Bugs and Quirks\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li>UDebugger does not log to the main log file,\
      \ but to the UDebugger.log instead. Be aware of this when checking your log\
      \ after a debugging session.</li>\n</ul>\n<ul>\n<li>Haven't been able to get\
      \ watches to work for UT2003.</li>\n</ul>\n<ul>\n<li>You can manually add breakpoints\
      \ without having the UDebugger open by editing the UDebugger.ini file, in the\
      \ [DEBUGGER.BREAKPOINTS] section. The format of this section is as follows:</li>\n\
      </ul>\n<pre>       Breakpoint0line=50\n       Breakpoint0Class=ENGINE.ACTOR\n\
      \       Breakpoint1line=100\n</pre>\n<pre>       Breakpoint1Class=ENGINE.GAMEINFO\n\
      </pre>\n<pre>       etc.\n</pre>\n<p><br />\nUDebugger does not correctly handle\
      \ invalid breakpoints. This means if you quit without removing breakpoints then\
      \ recompile the code where the breakpoints were set, udebugger crashes with\
      \ many Access Violation errors. On clearing these errors, breakpoints will not\
      \ work properly in udebugger. To prevent this, remove lines from the [UDEBUGGER.BREAKPOINTS]\
      \ section of udebugger.ini that pertain to changed code.</p>\n<p><br /></p>\n\
      <ul>\n<li>Setting a breakpoint by right-clicking often sets the breakpoint much\
      \ earlier in the code. More accurate control is possible by setting breakpoints\
      \ by left-clicking in the empty column where UDebugger places the red dots for\
      \ breakpoints.</li>\n</ul>\n<ul>\n<li>You can't see the interal values of structs\
      \ or arrays, so you need to change your code to write the member value to a\
      \ simple variable.</li>\n</ul>\n<p><br />\nUDebugger will list the values of\
      \ simple local variables, but will not display the values of expressions, array\
      \ members, struct members, nor the return values of functions. When debugging,\
      \ get in the habit of separating your steps more and using local variables more.\
      \ For example, instead of a compact piece of code like this:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">struct</span> WeaponItem \n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw1\">var</span> class<span class=\"sy0\">&lt;</span>Weapon<span\
      \ class=\"sy0\">&gt;</span> Weapon<span class=\"re0\">Class</span>&lt; SEMI\
      \ &gt;\n\t<span class=\"kw1\">var</span> <span class=\"kw5\">string</span> WeaponName;\n\
      \t<span class=\"kw1\">var</span> class<span class=\"sy0\">&lt;</span>UTWeaponPickup<span\
      \ class=\"sy0\">&gt;</span> Pickup<span class=\"re0\">Class</span>&lt; SEMI\
      \ &gt;\n\t<span class=\"kw1\">var</span> class<span class=\"sy0\">&lt;</span>Ammunition<span\
      \ class=\"sy0\">&gt;</span> Ammo<span class=\"re0\">Class</span>&lt; SEMI &gt;\n\
      \t<span class=\"kw1\">var</span> class<span class=\"sy0\">&lt;</span>Pickup<span\
      \ class=\"sy0\">&gt;</span> AmmoPickup<span class=\"re0\">Class</span>&lt; SEMI\
      \ &gt;\n\t<span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bEnabled;\n\
      <span class=\"br0\">}</span>;\n \n<span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>WeaponItem<span class=\"sy0\">&gt;</span> Weapons;\n\
      \ \n<span class=\"kw1\">function</span> FillWeapons<span class=\"br0\">(</span>array<span\
      \ class=\"sy0\">&lt;</span>class<span class=\"sy0\">&lt;</span>Weapon<span class=\"\
      sy0\">&gt;</span> <span class=\"sy0\">&gt;</span> WeaponClass<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i, j;\n \n\t<span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0</span>;i<span class=\"sy0\">&lt;</span>WeaponClass.<span class=\"me0\">Length</span>;i<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t<span class=\"br0\"\
      >{</span>\n\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>WeaponClass<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span>\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'BallLauncher'</span><span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\tCannotBeDisabled<span\
      \ class=\"br0\">[</span>CannotBeDisabled.<span class=\"me0\">Length</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> WeaponClass<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>;\n\t\t\t<span class=\"kw2\">return</span>;\n\
      \t\t<span class=\"br0\">}</span>\n\t\t<span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu0\">0</span>;j<span\
      \ class=\"sy0\">&lt;</span>Weapons.<span class=\"me0\">Length</span>;j<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t\t<span class=\"br0\"\
      >{</span>\n\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>Weapons<span\
      \ class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me0\">WeaponClass</span>\
      \ <span class=\"sy0\">==</span> WeaponClass<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span><span class=\"br0\">)</span>\n\t\t\t<span class=\"kw2\"\
      >return</span>;\n\t\t<span class=\"br0\">}</span>\n\t\tAddWeaponClass<span class=\"\
      br0\">(</span>WeaponClass<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span\
      \ class=\"br0\">)</span>;\n\t<span class=\"br0\">}</span>\n\t<span class=\"\
      kw1\">default</span>.<span class=\"me0\">Weapons</span>.<span class=\"me0\"\
      >Length</span> <span class=\"sy0\">=</span> Weapons.<span class=\"me0\">Length</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>You might need to expand\
      \ it out a little:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> FillWeapons<span class=\"br0\">(</span>array<span class=\"\
      sy0\">&lt;</span>class<span class=\"sy0\">&lt;</span>Weapon<span class=\"sy0\"\
      >&gt;</span> <span class=\"sy0\">&gt;</span> WeaponClass<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i, j, WeaponClassArrayLength, WeaponsArrayLength;\n\
      \t<span class=\"kw1\">local</span> class<span class=\"sy0\">&lt;</span>Weapon<span\
      \ class=\"sy0\">&gt;</span> WC, TempWC;\n \n\tWeaponClassArrayLength <span class=\"\
      sy0\">=</span> WeaponClass.<span class=\"me0\">Length</span>;\n\tWeaponsArrayLength\
      \ <span class=\"sy0\">=</span> Weapons.<span class=\"me0\">Length</span>;\n\
      \ \n\t<span class=\"kw2\">for</span> <span class=\"br0\">(</span>i<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>;i<span class=\"sy0\">&lt;</span>WeaponClassArrayLength;i<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t<span class=\"br0\"\
      >{</span>\n\t\tTempWC <span class=\"sy0\">=</span> WeaponClass<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>;\n\t\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>TempWC <span class=\"sy0\">==</span> <span class=\"\
      kw1\">class</span><span class=\"st0\">'BallLauncher'</span><span class=\"br0\"\
      >)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\tCannotBeDisabled<span class=\"\
      br0\">[</span>CannotBeDisabled.<span class=\"me0\">Length</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> TempWC;\n\t\t\t<span class=\"kw2\"\
      >return</span>;\n\t\t<span class=\"br0\">}</span>\n\t\t<span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0</span>;j<span class=\"sy0\">&lt;</span>WeaponsArrayLength;j<span class=\"\
      sy0\">++</span><span class=\"br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n\
      \t\t\tWC <span class=\"sy0\">=</span> Weapons<span class=\"br0\">[</span>j<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Weapon</span><span class=\"re0\"\
      >Class</span>&lt; SEMI &gt;\n\t\t\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>WC <span class=\"sy0\">==</span> TempWC<span class=\"br0\">)</span>\n\
      \t\t\t<span class=\"kw2\">return</span>;\n\t\t<span class=\"br0\">}</span>\n\
      \t\tAddWeaponClass<span class=\"br0\">(</span>WeaponClass<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span>;\n\t<span\
      \ class=\"br0\">}</span>\n\t<span class=\"kw1\">default</span>.<span class=\"\
      me0\">Weapons</span>.<span class=\"me0\">Length</span> <span class=\"sy0\">=</span>\
      \ Weapons.<span class=\"me0\">Length</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p><br /></p>\n<hr />\n<p><b>Mychaeel:</b> Is it <i>necessary</i> to\
      \ run the game on a local dedicated server or is it possible to run botmatches\
      \ too with the debugger? (Especially launching the server from within UT2003\
      \ strikes me as cumbersome.)</p>\n<p><b>Evolution:</b> Not at all. I simply\
      \ do it this way because of the nature of the mods that I have been debugging.\
      \ Most of the stuff I'm working with is related to admin / webadmin / advanced\
      \ admin, and really isn't necessary to have a client instance at all, so a dedicated\
      \ server is the best way so that I can focus on the debugger's screen.</p>\n\
      <p>Unfortunately, although the debugger is supposed to work as a loader for\
      \ ut2003.exe, (which would mean you could pass the debugger any parameters you\
      \ could pass the ut2003.exe) I haven't noticed any command line arguments have\
      \ any effect.</p>\n<p><b>Jon K:</b> I've had some problems with udebugger that\
      \ have limited its usefulness. Actually, they've made it useless. I was wondering\
      \ if anyone had similar problems and found a way around them.</p>\n<p>The first\
      \ is that with patch 2225, the debugger hangs just as it's trying to launch\
      \ the UT2003 splash screen video. I've tried it with numerous options from WOTgreal,\
      \ with no luck.</p>\n<p>I had better results with only patches 2136 or 2166\
      \ installed. It would run, but usually (though not always) when I would set\
      \ a breakpoint or try to break into a running game, I would get a GPF with a\
      \ stack trace that generally ended in a call to \"UObject::GetFullName\" from\
      \ \"UObject:: ProcessEvent\" (for example \"General protection fault! History:\
      \ UObject::GetFullName &lt;- UObject:: ProcessEvent &lt;- (xPlayer DM-Antalus.xPlayer,\
      \ Function XGame.xPlayer.PlayerTick) &lt;- APlayerController::Tick &lt;- TickAllActors\
      \ &lt;- ULevel::Tick &lt;- (NetMode=0) &lt;- TickLevel &lt;- UGameEngine::Tick\
      \ &lt;- UpdateWorld &lt;- MainLoop\").</p>\n<p>I really like debuggers, and\
      \ am a bit dismayed at my lack of ability to use this one. I've followed all\
      \ the instructions mentioned about about upgrading the debugger and putting\
      \ in source and debug .u files. Any ideas?</p>\n<p><b>Vishvananda:</b> I have\
      \ the same hanging problem as Jon K with 2225. Has anyone gotten this to work?</p>\n\
      <p><b>Harmeister:</b> I could not get it to work with 2225. I got it to run\
      \ sucessfully with 2136's UDebugger.exe and 2166's debug .u files. However I\
      \ finally got WOTgreal up and running to be the controller of the debugger session\
      \ with a new dinterface.dll. How to get the debugger working with WOTgreal,\
      \ and the pain I had to go through (beyond the basic stuff described here) just\
      \ to get the dumb thing up and running is documented at <a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://www.wotgreal.com\">http://www.wotgreal.com</a>\
      \ . There's a link near the top called \"WOTgreal and the UDebugger.\"</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.072 seconds\nReal time usage:\
      \ 0.093 seconds\nPreprocessor visited node count: 21/1000000\nPreprocessor generated\
      \ node count: 68/1000000\nPost‐expand include size: 9/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:3396-0!*!0!!en!*!* and timestamp 20221118020929 and revision\
      \ id 8759\n -->\n"
  categories:
  - sortkey: "UDebugger"
    name: "Legacy_Application"
  links:
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Source"
  templates: []
  images: []
  externallinks:
  - "http://www.wotgreal.com"
  sections:
  - toclevel: 1
    level: "2"
    line: "Before you start"
    number: "1"
    index: "1"
    fromtitle: "Legacy:UDebugger"
    byteoffset: 0
    anchor: "Before_you_start"
  - toclevel: 1
    level: "2"
    line: "To start a normal debugging session"
    number: "2"
    index: "2"
    fromtitle: "Legacy:UDebugger"
    byteoffset: 333
    anchor: "To_start_a_normal_debugging_session"
  - toclevel: 1
    level: "2"
    line: "To start a UDebugger server session"
    number: "3"
    index: "3"
    fromtitle: "Legacy:UDebugger"
    byteoffset: 815
    anchor: "To_start_a_UDebugger_server_session"
  - toclevel: 1
    level: "2"
    line: "Bugs and Quirks"
    number: "4"
    index: "4"
    fromtitle: "Legacy:UDebugger"
    byteoffset: 1708
    anchor: "Bugs_and_Quirks"
  displaytitle: "Legacy:UDebugger"
  iwlinks: []
  wikitext:
    text: "==Before you start==\n\n# Make sure you have the debug packages installed\
      \ (See [[Legacy:UnrealScript Source|UnrealScript Source]]).\n# Make sure you\
      \ have the latest version of the debugger from Epic.  In UT2004 Udebugger comes\
      \ with the game.\n# Make sure you build your own packages using the -debug option\
      \ before starting the debugger\n\n==To start a normal debugging session ==\n\
      # Optionally set StartupFullScreen=false in the [WinDrv.WindowsClient] section\
      \ of the UT2003.ini or UT2004.ini file.  (Alternatively you can hit ALT-ENTER\
      \ to toggle fullscreen anyway).\n# Start UDebugger.exe\n# Set breakpoints, watches,\
      \ etc. you'd like to debug during your session.\n# If debugging 'Access None'\
      \ errors, make sure to select \"Break On Access None\" in the debugger options\
      \ menu.\n# To close the debugger, exit the game normally.\n\n==To start a UDebugger\
      \ server session ==\n# From the command line, start UDebugger using the following\
      \ command line: UDebugger MapName?Game=GameType -server\n# Set breakpoints,\
      \ watches, etc. you'd like for your mod\n# Start up a client UT2003 by double\
      \ clicking the UT2003.exe file, and join your own dedicated server. Depending\
      \ on where you set your breakpoints, you may need to play the game a little\
      \ before you hit a breakpoint, but you get the idea.\n# To close UDebugger.exe\
      \ and its associated instance of UT2003.exe (the dedicated server that you started),\
      \ I've found the only reliable way is to issue an admin quit command either\
      \ from console logged in as admin, or from webadmin. Closing it any other way\
      \ causes udebugger to hang (i.e. closing udebugger itself, task manager, etc.).\
      \ However, if you issue an admin quit to the dedicated server, it will close\
      \ and bring udebugger with it. \n\n==Bugs and Quirks ==\n\n* UDebugger does\
      \ not log to the main log file, but to the UDebugger.log instead.  Be aware\
      \ of this when checking your log after a debugging session.\n\n* Haven't been\
      \ able to get watches to work for UT2003.\n\n* You can manually add breakpoints\
      \ without having the UDebugger open by editing the UDebugger.ini file, in the\
      \ [DEBUGGER.BREAKPOINTS] section.  The format of this section is as follows:\n\
      \        Breakpoint0line=50\n        Breakpoint0Class=ENGINE.ACTOR\n       \
      \ Breakpoint1line=100\n\n        Breakpoint1Class=ENGINE.GAMEINFO\n\n      \
      \  etc.\n\n* \n\n\nUDebugger does not correctly handle invalid breakpoints.\
      \  This means if you quit without removing breakpoints then recompile the code\
      \ where the breakpoints were set, udebugger crashes with many Access Violation\
      \ errors.  On clearing these errors, breakpoints will not work properly in udebugger.\
      \  To prevent this, remove lines from the [UDEBUGGER.BREAKPOINTS] section of\
      \ udebugger.ini that pertain to changed code.\n\n\n\n* Setting a breakpoint\
      \ by right-clicking often sets the breakpoint much earlier in the code.  More\
      \ accurate control is possible by setting breakpoints by left-clicking in the\
      \ empty column where UDebugger places the red dots for breakpoints.\n\n* You\
      \ can't see the interal values of structs or arrays, so you need to change your\
      \ code to write the member value to a simple variable.\n\n* \n  \n\nUDebugger\
      \ will list the values of simple local variables, but will not display the values\
      \ of expressions, array members, struct members, nor the return values of functions.\
      \  When debugging, get in the habit of separating your steps more and using\
      \ local variables more. For example, instead of a compact piece of code like\
      \ this:\n\n<uscript>\nstruct WeaponItem \n{\n\tvar class<Weapon> WeaponClass;\n\
      \tvar string WeaponName;\n\tvar class<UTWeaponPickup> PickupClass;\n\tvar class<Ammunition>\
      \ AmmoClass;\n\tvar class<Pickup> AmmoPickupClass;\n\tvar bool bEnabled;\n};\n\
      \nvar array<WeaponItem> Weapons;\n\nfunction FillWeapons(array<class<Weapon>\
      \ > WeaponClass)\n{\n\tlocal int i, j;\n\n\tfor (i=0;i<WeaponClass.Length;i++)\n\
      \t{\n\t\tif (WeaponClass[i] == class'BallLauncher')\n\t\t{\n\t\t\tCannotBeDisabled[CannotBeDisabled.Length]\
      \ = WeaponClass[i];\n\t\t\treturn;\n\t\t}\n\t\tfor (j=0;j<Weapons.Length;j++)\n\
      \t\t{\n\t\t\tif (Weapons[j].WeaponClass == WeaponClass[i])\n\t\t\treturn;\n\t\
      \t}\n\t\tAddWeaponClass(WeaponClass[i]);\n\t}\n\tdefault.Weapons.Length = Weapons.Length;\n\
      }\n</uscript>\n\nYou might need to expand it out a little:\n\n<uscript>\nfunction\
      \ FillWeapons(array<class<Weapon> > WeaponClass)\n{\n\tlocal int i, j, WeaponClassArrayLength,\
      \ WeaponsArrayLength;\n\tlocal class<Weapon> WC, TempWC;\n\n\tWeaponClassArrayLength\
      \ = WeaponClass.Length;\n\tWeaponsArrayLength = Weapons.Length;\n\n\tfor (i=0;i<WeaponClassArrayLength;i++)\n\
      \t{\n\t\tTempWC = WeaponClass[i];\n\t\tif (TempWC == class'BallLauncher')\n\t\
      \t{\n\t\t\tCannotBeDisabled[CannotBeDisabled.Length] = TempWC;\n\t\t\treturn;\n\
      \t\t}\n\t\tfor (j=0;j<WeaponsArrayLength;j++)\n\t\t{\n\t\t\tWC = Weapons[j].WeaponClass;\n\
      \t\t\tif (WC == TempWC)\n\t\t\treturn;\n\t\t}\n\t\tAddWeaponClass(WeaponClass[i]);\n\
      \t}\n\tdefault.Weapons.Length = Weapons.Length;\n}\n</uscript>\n\n\n\n----\n\
      \n'''Mychaeel:''' Is it ''necessary'' to run the game on a local dedicated server\
      \ or is it possible to run botmatches too with the debugger?  (Especially launching\
      \ the server from within UT2003 strikes me as cumbersome.)\n\n'''Evolution:'''\
      \ Not at all.  I simply do it this way because of the nature of the mods that\
      \ I have been debugging.  Most of the stuff I'm working with is related to admin\
      \ / webadmin / advanced admin, and really isn't necessary to have a client instance\
      \ at all, so a dedicated server is the best way so that I can focus on the debugger's\
      \ screen.\n\nUnfortunately, although the debugger is supposed to work as a loader\
      \ for ut2003.exe, (which would mean you could pass the debugger any parameters\
      \ you could pass the ut2003.exe) I haven't noticed any command line arguments\
      \ have any effect.\n\n'''Jon K:''' I've had some problems with udebugger that\
      \ have limited its usefulness. Actually, they've made it useless. I was wondering\
      \ if anyone had similar problems and found a way around them.\n\nThe first is\
      \ that with patch 2225, the debugger hangs just as it's trying to launch the\
      \ UT2003 splash screen video. I've tried it with numerous options from WOTgreal,\
      \ with no luck.\n\nI had better results with only patches 2136 or 2166 installed.\
      \ It would run, but usually (though not always) when I would set a breakpoint\
      \ or try to break into a running game, I would get a GPF with a stack trace\
      \ that generally ended in a call to \"UObject::GetFullName\" from \"UObject::\
      \ ProcessEvent\" (for example \"General protection fault! History: UObject::GetFullName\
      \ <- UObject:: ProcessEvent <- (xPlayer DM-Antalus.xPlayer, Function XGame.xPlayer.PlayerTick)\
      \ <- APlayerController::Tick <- TickAllActors <- ULevel::Tick <- (NetMode=0)\
      \ <- TickLevel <- UGameEngine::Tick <- UpdateWorld <- MainLoop\").\n\nI really\
      \ like debuggers, and am a bit dismayed at my lack of ability to use this one.\
      \ I've followed all the instructions mentioned about about upgrading the debugger\
      \ and putting in source and debug .u files. Any ideas?\n\n'''Vishvananda:'''\
      \ I have the same hanging problem as Jon K with 2225.  Has anyone gotten this\
      \ to work?\n\n'''Harmeister:''' I could not get it to work with 2225.  I got\
      \ it to run sucessfully with 2136's UDebugger.exe and 2166's debug .u files.\
      \  However I finally got WOTgreal up and running to be the controller of the\
      \ debugger session with a new dinterface.dll.  How to get the debugger working\
      \ with WOTgreal, and the pain I had to go through (beyond the basic stuff described\
      \ here) just to get the dumb thing up and running is documented at http://www.wotgreal.com\
      \ .  There's a link near the top called \"WOTgreal and the UDebugger.\"\n\n\
      [[Category:Legacy Application|{{PAGENAME}}]]"
  properties: []
  revId: 8759
name: "Legacy:UDebugger"
revision:
  revid: 8759
  parentid: 8761
  user: "Sweavo"
  timestamp: 1123407736.000000000
  comment: "*"
timestamp: 1668766351.829542000
