---
parse:
  title: "Legacy:Replication/Discussing"
  text:
    text: "<p><b>Wormbo:</b> Alright, this is about how to structure the replication\
      \ pages in a way that actually takes confusion away instead of adding to it.\
      \ Here's a first idea.</p>\n<p>Basically we need:</p>\n<dl>\n<dt>a main topic\
      \ page&#160;</dt>\n<dd>This should only serve as a short introduction and for\
      \ structuring the whole complex of replication tutorials. It should <i>not</i>\
      \ contain anything specific, i.e. no talk about actual replication techniques,\
      \ like it does now.</dd>\n<dt>an introduction&#160;</dt>\n<dd>What is replication?\
      \ Why do we need it? How is it done in the Unreal Engine? Not that the last\
      \ question should only be answered in a general way here. Still no actual examples\
      \ on this page!</dd>\n<dt>the basics&#160;</dt>\n<dd>I think it's a good idea\
      \ to tell people about NetMode, Role and RemoteRole for a start. Talking about\
      \ relevance and actor replication would probably fit as well. Maybe a simple\
      \ server-client example (e.g. a mutator that can spawn things) should be used\
      \ to explain this.</dd>\n<dt>variable replication&#160;</dt>\n<dd>After the\
      \ coder knows how to get actors to remote clients he's ready to try replicating\
      \ variables. An example based on the basic actor spawning mutator could be used\
      \ here.</dd>\n</dl>\n<p>From here on it gets a little complicated. Maybe something\
      \ like this would work out:</p>\n<dl>\n<dt>using simulated functions&#160;</dt>\n\
      <dd>Based on the knowledge about Roles this page could explain the details about\
      \ using simulated engine events to call own code clientsidely. It should point\
      \ out the traps of non-simulated functions in a calling chain (superclass versions\
      \ of functions, etc.) and make absolutely sure people <i>don't</i> think of\
      \ simulated functions as multicast function replication!</dd>\n<dt>replicated\
      \ functions&#160;</dt>\n<dd>This is where coders seem to have the most problems\
      \ with. This should be explained in great detail and with simple examples.</dd>\n\
      </dl>\n<p>Maybe it's also a good idea to create a complex example mod that is\
      \ used throughout the whole replication section.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Current_Replication_Structure\">Current Replication Structure</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Replication/Discussing?section=1\" title=\"Edit section:\
      \ Current Replication Structure\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Introduction_To_Replication\"\
      \ title=\"Legacy:Introduction To Replication\">Introduction to Replication</a></li>\n\
      <li><a href=\"/Legacy:Replication\" title=\"Legacy:Replication\">Replication</a></li>\n\
      <li><a href=\"/Legacy:Replication_Block\" title=\"Legacy:Replication Block\"\
      >Replication Block</a></li>\n<li><a href=\"/Legacy:Role\" title=\"Legacy:Role\"\
      >Role</a> and RemoteRole, and <a href=\"/Legacy:NetMode\" title=\"Legacy:NetMode\"\
      >NetMode</a>.</li>\n<li><a href=\"/Legacy:Netcode_Idioms\" title=\"Legacy:Netcode\
      \ Idioms\">Netcode Idioms</a></li>\n<li><a href=\"/Legacy:Simulated_Function\"\
      \ title=\"Legacy:Simulated Function\">Simulated Function</a></li>\n<li><a href=\"\
      /Legacy:Replicated_Function\" title=\"Legacy:Replicated Function\">Replicated\
      \ Function</a></li>\n<li><a href=\"/Legacy:Actor/Replication\" title=\"Legacy:Actor/Replication\"\
      >Actor/Replication</a></li>\n<li><a href=\"/Legacy:KActor_Replication\" title=\"\
      Legacy:KActor Replication\">KActor Replication</a></li>\n<li><a href=\"/edit/Legacy:Vehicles/Replication?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Vehicles/Replication (page does not exist)\"\
      >Vehicles/Replication</a></li>\n<li><a href=\"/Legacy:Animation_Replication\"\
      \ title=\"Legacy:Animation Replication\">Animation Replication</a></li>\n<li><a\
      \ href=\"/Legacy:Another_Look_At_Replication\" title=\"Legacy:Another Look At\
      \ Replication\">Another Look At Replication</a></li>\n<li><a href=\"/Legacy:Replication_Examples\"\
      \ title=\"Legacy:Replication Examples\">Replication examples</a>\n<ul>\n<li><a\
      \ href=\"/Legacy:Replication_Examples/Battle_City\" title=\"Legacy:Replication\
      \ Examples/Battle City\">Replication Examples/Battle City</a></li>\n<li><a href=\"\
      /Legacy:Replication_Examples/Giant_Spider_Execution\" title=\"Legacy:Replication\
      \ Examples/Giant Spider Execution\">Replication Examples/Giant Spider Execution</a></li>\n\
      <li><a href=\"/Legacy:PlayerReplicationInfo\" title=\"Legacy:PlayerReplicationInfo\"\
      >PlayerReplicationInfo</a> &amp; <a href=\"/Legacy:GameReplicationInfo\" title=\"\
      Legacy:GameReplicationInfo\">GameReplicationInfo</a></li>\n</ul>\n</li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Replication/Discussing?section=2\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>SuperApe:</b> Added Current Replication Structure.\
      \ Yay, Wormbo!&#160;:) I can't wait to see this come together in a cohesive\
      \ way. It really needs to be organized better. When I get more information from\
      \ one BUF Forum post than I can get in five wiki pages, something's wrong:</p>\n\
      <blockquote class=\"legacyquote\">\n<p>{{{1}}}</p>\n</blockquote>\n<p><b>Fyfe:</b>\
      \ Wormbo's layout of the topic looks good. I would add (either as a seperate\
      \ page, or to the intro) a description of how the networking works in the unreal\
      \ engine, something along the lines of the first 2 sections of <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://unreal.epicgames.com/Network.htm\">Unreal\
      \ Network Architecture</a>. Replication is a solution to a problem, I think\
      \ it would be a good idea to out line what the problem is that Replication solves.\
      \ It doesn't need to be technical, just enough so the reader has a clue what\
      \ replication is trying to do.</p>\n<p>To expand on Wormbo's layout:</p>\n<ul>\n\
      <li><a href=\"/Legacy:Replication\" title=\"Legacy:Replication\">Replication</a>\
      \ – This contains the basic concept of network play and a breif intro to replication\n\
      <ul>\n<li>Key Concepts\n<ul>\n<li>Replication vs Simulation</li>\n<li><a href=\"\
      /Legacy:Relevance\" title=\"Legacy:Relevance\">Relevance</a></li>\n<li>Priority</li>\n\
      <li><a href=\"/Legacy:NetMode\" title=\"Legacy:NetMode\">NetMode</a></li>\n\
      <li><a href=\"/Legacy:Role\" title=\"Legacy:Role\">Role</a> &amp; RemoteRole</li>\n\
      <li>Reliability</li>\n</ul>\n</li>\n<li>Types of Replication (<a href=\"/Legacy:Replication/Message_Types\"\
      \ title=\"Legacy:Replication/Message Types\">Replication/Message_Types</a>)\n\
      <ul>\n<li>Actor Replication</li>\n<li>Variable Replication</li>\n<li>Functioin\
      \ Replication – Just a summary here this needs it's own section</li>\n</ul>\n\
      </li>\n<li>Replication Block</li>\n<li>Function Replication\n<ul>\n<li><a href=\"\
      /Legacy:Simulated_Function\" title=\"Legacy:Simulated Function\">Simulated Function</a></li>\n\
      <li><a href=\"/Legacy:Replicated_Function\" title=\"Legacy:Replicated Function\"\
      >Replicated Function</a></li>\n</ul>\n</li>\n<li><a href=\"/Legacy:KActor_Replication\"\
      \ title=\"Legacy:KActor Replication\">Karma</a>/<a href=\"/Legacy:Animation_Replication\"\
      \ title=\"Legacy:Animation Replication\">Animation</a> Replication – Not sure\
      \ if this is needed, but there are pages on the topics.</li>\n<li><a href=\"\
      /edit/Legacy:Player_Prediction?redlink=1\" class=\"new\" title=\"Legacy:Player\
      \ Prediction (page does not exist)\">Player Prediction</a> – An advanced topic,\
      \ more for those who want to know how it works on a lower level.</li>\n<li>FAQ\
      \ – If the above is do right this shouldn't be needed, but the world is great\
      \ at inventing better idiots&#160;:p</li>\n</ul>\n</li>\n</ul>\n\n<!-- \nNewPP\
      \ limit report\nCPU time usage: 0.043 seconds\nReal time usage: 0.093 seconds\n\
      Preprocessor visited node count: 17/1000000\nPreprocessor generated node count:\
      \ 75/1000000\nPost‐expand include size: 132/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 3/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    8.460      1 - -total\n100.00%    8.460      1 - Template:Innerbox\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2655-0!*!0!!*!*!*\
      \ and timestamp 20221118102941 and revision id 6323\n -->\n"
  categories:
  - sortkey: "Replication/Discussing"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Replication"
  - ns: 100
    exists: true
    name: "Legacy:Introduction To Replication"
  - ns: 100
    exists: true
    name: "Legacy:Replicated Function"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples"
  - ns: 100
    exists: true
    name: "Legacy:PlayerReplicationInfo"
  - ns: 100
    exists: true
    name: "Legacy:Netcode Idioms"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples/Battle City"
  - ns: 100
    exists: true
    name: "Legacy:Role"
  - ns: 100
    exists: false
    name: "Legacy:Player Prediction"
  - ns: 100
    exists: true
    name: "Legacy:Simulated Function"
  - ns: 100
    exists: true
    name: "Legacy:Replication Block"
  - ns: 100
    exists: true
    name: "Legacy:Actor/Replication"
  - ns: 100
    exists: false
    name: "Legacy:Vehicles/Replication"
  - ns: 100
    exists: true
    name: "Legacy:Relevance"
  - ns: 100
    exists: true
    name: "Legacy:GameReplicationInfo"
  - ns: 100
    exists: true
    name: "Legacy:Replication/Message Types"
  - ns: 100
    exists: true
    name: "Legacy:Replication Examples/Giant Spider Execution"
  - ns: 100
    exists: true
    name: "Legacy:NetMode"
  - ns: 100
    exists: true
    name: "Legacy:KActor Replication"
  - ns: 100
    exists: true
    name: "Legacy:Animation Replication"
  - ns: 100
    exists: true
    name: "Legacy:Another Look At Replication"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://unreal.epicgames.com/Network.htm"
  sections:
  - toclevel: 1
    level: "2"
    line: "Current Replication Structure"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Replication/Discussing"
    byteoffset: 1868
    anchor: "Current_Replication_Structure"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Replication/Discussing"
    byteoffset: 2905
    anchor: "Discussion"
  displaytitle: "Legacy:Replication/Discussing"
  iwlinks: []
  wikitext:
    text: "'''Wormbo:''' Alright, this is about how to structure the replication pages\
      \ in a way that actually takes confusion away instead of adding to it. Here's\
      \ a first idea.\n\nBasically we need:\n; a main topic page : This should only\
      \ serve as a short introduction and for structuring the whole complex of replication\
      \ tutorials. It should ''not'' contain anything specific, i.e. no talk about\
      \ actual replication techniques, like it does now.\n; an introduction : What\
      \ is replication? Why do we need it? How is it done in the Unreal Engine? Not\
      \ that the last question should only be answered in a general way here. Still\
      \ no actual examples on this page!\n; the basics : I think it's a good idea\
      \ to tell people about NetMode, Role and RemoteRole for a start. Talking about\
      \ relevance and actor replication would probably fit as well. Maybe a simple\
      \ server-client example (e.g. a mutator that can spawn things) should be used\
      \ to explain this.\n; variable replication : After the coder knows how to get\
      \ actors to remote clients he's ready to try replicating variables. An example\
      \ based on the basic actor spawning mutator could be used here.\n\nFrom here\
      \ on it gets a little complicated. Maybe something like this would work out:\n\
      ; using simulated functions : Based on the knowledge about Roles this page could\
      \ explain the details about using simulated engine events to call own code clientsidely.\
      \ It should point out the traps of non-simulated functions in a calling chain\
      \ (superclass versions of functions, etc.) and make absolutely sure people ''don't''\
      \ think of simulated functions as multicast function replication!\n; replicated\
      \ functions : This is where coders seem to have the most problems with. This\
      \ should be explained in great detail and with simple examples.\n\nMaybe it's\
      \ also a good idea to create a complex example mod that is used throughout the\
      \ whole replication section.\n\n==Current Replication Structure==\n* [[Legacy:Introduction\
      \ To Replication|Introduction to Replication]]\n* [[Legacy:Replication|Replication]]\n\
      * [[Legacy:Replication Block|Replication Block]]\n* [[Legacy:Role|Role]] and\
      \ RemoteRole, and [[Legacy:NetMode|NetMode]].\n* [[Legacy:Netcode Idioms|Netcode\
      \ Idioms]]\n* [[Legacy:Simulated Function|Simulated Function]]\n* [[Legacy:Replicated\
      \ Function|Replicated Function]]\n* [[Legacy:Actor/Replication|Actor/Replication]]\n\
      * [[Legacy:KActor Replication|KActor Replication]]\n* [[Legacy:Vehicles/Replication|Vehicles/Replication]]\n\
      * [[Legacy:Animation Replication|Animation Replication]]\n* [[Legacy:Another\
      \ Look At Replication|Another Look At Replication]]\n* [[Legacy:Replication\
      \ Examples|Replication examples]]\n** [[Legacy:Replication Examples/Battle City|Replication\
      \ Examples/Battle City]]\n** [[Legacy:Replication Examples/Giant Spider Execution|Replication\
      \ Examples/Giant Spider Execution]]\n** [[Legacy:PlayerReplicationInfo|PlayerReplicationInfo]]\
      \ & [[Legacy:GameReplicationInfo|GameReplicationInfo]]\n\n==Discussion==\n\n\
      '''SuperApe:''' Added Current Replication Structure.  Yay, Wormbo! :) I can't\
      \ wait to see this come together in a cohesive way.  It really needs to be organized\
      \ better.  When I get more information from one BUF Forum post than I can get\
      \ in five wiki pages, something's wrong:\n\n{{innerbox|''Wormbo regarding weapons\
      \ replication:''\n\nThe wiki mentions that function broadcasting is not possible.\
      \ Also, the Weapon actor is only available on the server and the owning client\
      \ becasue it's invisible to other players. You'd have to replicate via the attachment.\n\
      \nTo force nearly instant replication, you can use the same trick Epic uses\
      \ in a lot of places: \"NetUpdateTime = Level.TimeSeconds - 1\"\n\nTo ensure\
      \ a group of values reaches the client at the same time, you can group them\
      \ into a struct. You can detect the arrival of a replicated value with the PostNetReceive()\
      \ event.\n\n}}\n\n'''Fyfe:''' Wormbo's layout of the topic looks good. I would\
      \ add (either as a seperate page, or to the intro) a description of how the\
      \ networking works in the unreal engine, something along the lines of the first\
      \ 2 sections of [http://unreal.epicgames.com/Network.htm Unreal Network Architecture].\
      \ Replication is a solution to a problem, I think it would be a good idea to\
      \ out line what the problem is that Replication solves. It doesn't need to be\
      \ technical, just enough so the reader has a clue what replication is trying\
      \ to do. \n\nTo expand on Wormbo's layout:\n* [[Legacy:Replication|Replication]]\
      \ &ndash; This contains the basic concept of network play and a breif intro\
      \ to replication\n** Key Concepts\n*** Replication vs Simulation\n*** [[Legacy:Relevance|Relevance]]\n\
      *** Priority\n*** [[Legacy:NetMode|NetMode]]\n*** [[Legacy:Role|Role]] & RemoteRole\n\
      *** Reliability\n** Types of Replication ([[Legacy:Replication/Message_Types|Replication/Message_Types]])\n\
      *** Actor Replication\n*** Variable Replication\n*** Functioin Replication &ndash;\
      \ Just a summary here this needs it's own section\n** Replication Block\n**\
      \ Function Replication\n*** [[Legacy:Simulated Function|Simulated Function]]\n\
      *** [[Legacy:Replicated Function|Replicated Function]]\n** [[Legacy:KActor Replication|Karma]]/[[Legacy:Animation\
      \ Replication|Animation]] Replication  &ndash; Not sure if this is needed, but\
      \ there are pages on the topics.\n** [[Legacy:Player Prediction|Player Prediction]]\
      \ &ndash; An advanced topic, more for those who want to know how it works on\
      \ a lower level.\n** FAQ &ndash; If the above is do right this shouldn't be\
      \ needed, but the world is great at inventing better idiots :p\n\n[[Category:Legacy\
      \ To Do|{{PAGENAME}}]]"
  properties: []
  revId: 6323
name: "Legacy:Replication/Discussing"
revision:
  revid: 6323
  parentid: 6325
  user: "Fyfe"
  timestamp: 1164581683.000000000
  comment: "*"
timestamp: 1668772514.574478000
