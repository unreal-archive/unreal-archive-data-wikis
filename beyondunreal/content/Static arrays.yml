---
parse:
  title: "Static arrays"
  text:
    text: "<p>A <b>static array</b> is a composite data type in <a href=\"/UnrealScript\"\
      \ title=\"UnrealScript\">UnrealScript</a> that groups multiple values of the\
      \ same type. Static arrays, as opposed to <a href=\"/Dynamic_arrays\" title=\"\
      Dynamic arrays\">dynamic arrays</a>, have a fixed length that is specified as\
      \ a constant value at compile time.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Declaration\">Declaration</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Static_arrays?section=1\" title=\"\
      Edit section: Declaration\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Class properties, struct members, function parameters and local variables\
      \ can be declared as static arrays by simply appending the array length in square\
      \ brackets after the variable name:</p>\n<pre><b>var</b> <i>type varname</i><b>[</b><i>length</i><b>];</b>\n\
      </pre>\n<p>The type can be any other UnrealScript <a href=\"/Type\" title=\"\
      Type\" class=\"mw-redirect\">type</a>, with the exception of type <i>bool</i>\
      \ and dynamic array types. Note that the compiler will not complain about dynamic\
      \ array types and just silently use the dynamic array's base type instead!</p>\n\
      <p>Because the array length is specified as part of the variable name, it is\
      \ possible to mix static arrays and non-array variables in a single declaration.\
      \ The length can be any integer constant, including the <a href=\"/ArrayCount\"\
      \ title=\"ArrayCount\" class=\"mw-redirect\">ArrayCount</a> pseudo function.</p>\n\
      <p>This kind of declaration also has an important implication: It is not possible\
      \ to use static arrays as the return type of a function. You can get around\
      \ that by using an <i>out</i> parameter instead.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Usage\">Usage</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Static_arrays?section=2\" title=\"Edit section: Usage\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>To\
      \ access an element of a static array, simply specify the name of the static\
      \ array variable and append the element's index in square brackets:</p>\n<pre><i>varname</i><b>[</b><i>index</i><b>]</b>\n\
      </pre>\n<p>Valid index values are positive integer values smaller than the array's\
      \ length, i.e. 0 to ArrayCount(<i>varname</i>)-1. Array elements referenced\
      \ this way are <a href=\"http://en.wikipedia.org/wiki/lvalue\" class=\"extiw\"\
      \ title=\"wp:lvalue\">lvalues</a>, i.e. they can be used on the left side of\
      \ an assignment or as <i>out</i> parameter in a function call.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"ArrayCount\">ArrayCount</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Static_arrays?section=3\"\
      \ title=\"Edit section: ArrayCount\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The <b>ArrayCount</b> pseudo-function can be used\
      \ to get the length of a static array. Note that it is actually evaluated at\
      \ compile time and replaced by an integer value in the <a href=\"/edit/UnrealScript_bytecode?redlink=1\"\
      \ class=\"new\" title=\"UnrealScript bytecode (page does not exist)\">UnrealScript\
      \ bytecode</a>. As such it can be used even with a complex argument and is guaranteed\
      \ to never throw any runtime warnings. Also, because it's not really a function\
      \ call, ArrayCount can be used as the value of <a href=\"/Constants\" title=\"\
      Constants\">constants</a> and as the length value of other static array declarations.</p>\n\
      <pre><b>ArrayCount(</b><i>staticarrayreference</i><b>)</b>\n</pre>\n<p>The static\
      \ array reference could be as simple as the name of a static array variable\
      \ in the same class or function or a more complex expression, such as <code>class'TeamAI'.default.<a\
      \ href=\"/UE2:TeamAI_(UT2004)#OrderList\" title=\"UE2:TeamAI (UT2004)\">OrderList</a></code>.</p>\n\
      <table class=\"navbox nowraplinks\" style=\"\">\n<tr class=\"navbox-header\"\
      >\n<th colspan=\"2\" class=\"navbox-header\" style=\"\">\n<div style=\"position:relative;\
      \ width:100%; white-space:nowrap;\">\n<div class=\"noprint plainlinks\" style=\"\
      background-color:transparent; padding:0; font-weight:normal; font-size:xx-small;\
      \ white-space:nowrap; position:absolute;left:0.5em;\"><a href=\"/Template:Navbox_unrealscript\"\
      \ title=\"Template:Navbox unrealscript\"><span title=\"View this template\"\
      >v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\" title=\"\
      Template talk:Navbox unrealscript\"><span title=\"Discussion about this template\"\
      >d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external text\" href=\"\
      https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"><span title=\"\
      You can edit this template. Please use the preview button before saving.\">e</span></a></div>\n\
      <a href=\"/UnrealScript_reference\" title=\"UnrealScript reference\">UnrealScript\
      \ reference</a></div>\n</th>\n</tr>\n<tr class=\"navbox-body odd\">\n<th class=\"\
      navbox-group\" style=\"\">Declarations</th>\n<td class=\"navbox-body\" style=\"\
      \"><a href=\"/Preprocessor\" title=\"Preprocessor\">Preprocessor</a>&#160;•\
      \ <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;• <a href=\"/Interfaces\"\
      \ title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"/Cpptext\" title=\"Cpptext\"\
      >Cpptext</a>&#160;• <a href=\"/Constants\" title=\"Constants\">Constants</a>&#160;•\
      \ <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"\
      Structs\">Structs</a>&#160;• <a href=\"/Variables\" title=\"Variables\">Variables</a>&#160;(<a\
      \ href=\"/Metadata\" title=\"Metadata\">Metadata</a>)&#160;• <a href=\"/Replication_block\"\
      \ title=\"Replication block\">Replication block</a>&#160;• <a href=\"/Operators\"\
      \ title=\"Operators\">Operators</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\"\
      >Delegates</a>&#160;• <a href=\"/Functions\" title=\"Functions\">Functions</a>&#160;•\
      \ <a href=\"/States\" title=\"States\">States</a>&#160;• <a href=\"/Defaultproperties\"\
      \ title=\"Defaultproperties\">Defaultproperties</a>&#160;(<a href=\"/Subobjects\"\
      \ title=\"Subobjects\">Subobjects</a>)</td>\n</tr>\n<tr class=\"navbox-body\
      \ even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Types\" title=\"\
      Types\">Types</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Bool\"\
      \ title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;• <a href=\"/Byte\" title=\"\
      Byte\" class=\"mw-redirect\">byte</a>&#160;• <a href=\"/Float\" title=\"Float\"\
      \ class=\"mw-redirect\">float</a>&#160;• <a href=\"/Int\" title=\"Int\" class=\"\
      mw-redirect\">int</a>&#160;• <a href=\"/Name\" title=\"Name\" class=\"mw-redirect\"\
      >name</a>&#160;• <a href=\"/String\" title=\"String\">string</a>&#160;• <a href=\"\
      /Types#Reference_types\" title=\"Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\"\
      \ title=\"Class limiter\" class=\"mw-redirect\">Class</a>&#160;• <a href=\"\
      /Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\"\
      >Structs</a>&#160;(<a href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a\
      \ href=\"/Rotator\" title=\"Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"\
      Quat\" class=\"mw-redirect\">Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\"\
      >Color</a>)&#160;• <strong class=\"selflink\">Static arrays</strong>&#160;•\
      \ <a href=\"/Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic arrays</a>&#160;•\
      \ <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"\
      /Typecasting\" title=\"Typecasting\">Typecasting</a></td>\n</tr>\n<tr class=\"\
      navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Literals\"\
      \ title=\"Literals\">Literals</a></th>\n<td class=\"navbox-body\" style=\"\"\
      ><a href=\"/Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;•\
      \ <a href=\"/Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a\
      \ href=\"/Literals#Integer_numbers\" title=\"Literals\">Integer</a>&#160;• <a\
      \ href=\"/Literals#Names\" title=\"Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\"\
      \ title=\"Literals\">Objects</a> (<a href=\"/None\" title=\"None\" class=\"\
      mw-redirect\">None</a>&#160;⋅ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\"\
      >Self</a>)&#160;• <a href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;•\
      \ <a href=\"/Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"\
      /Literals#Strings\" title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"\
      navbox-body even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\"\
      \ title=\"Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"\
      ><a href=\"/GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"\
      /If_statement\" title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\"\
      \ title=\"Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\"\
      \ title=\"Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"\
      Stop statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch\
      \ statement\">Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\"\
      >While</a>&#160;• <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"\
      Continue statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.089 seconds\nReal time usage: 0.111 seconds\nPreprocessor\
      \ visited node count: 173/1000000\nPreprocessor generated node count: 877/1000000\n\
      Post‐expand include size: 10634/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \   35.758      1 - -total\n100.00%   35.758      1 - Template:Navbox_unrealscript\n\
      \ 67.75%   24.227      1 - Template:Navbox\n  9.61%    3.438      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:23930-0!*!0!!*!*!*\
      \ and timestamp 20221117233116 and revision id 45465\n -->\n"
  categories:
  - sortkey: "Static arrays"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: false
    name: "UnrealScript bytecode"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "ArrayCount"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "None"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Type"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 104
    exists: true
    name: "UE2:TeamAI (UT2004)"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Flow control"
  templates:
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Declaration"
    number: "1"
    index: "1"
    fromtitle: "Static_arrays"
    byteoffset: 237
    anchor: "Declaration"
  - toclevel: 1
    level: "2"
    line: "Usage"
    number: "2"
    index: "2"
    fromtitle: "Static_arrays"
    byteoffset: 1171
    anchor: "Usage"
  - toclevel: 1
    level: "2"
    line: "ArrayCount"
    number: "3"
    index: "3"
    fromtitle: "Static_arrays"
    byteoffset: 1641
    anchor: "ArrayCount"
  displaytitle: "Static arrays"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/lvalue"
    name: "wp:lvalue"
  wikitext:
    text: "A '''static array''' is a composite data type in [[UnrealScript]] that\
      \ groups multiple values of the same type. Static arrays, as opposed to [[dynamic\
      \ arrays]], have a fixed length that is specified as a constant value at compile\
      \ time.\n\n==Declaration==\nClass properties, struct members, function parameters\
      \ and local variables can be declared as static arrays by simply appending the\
      \ array length in square brackets after the variable name:\n '''var''' ''type\
      \ varname'''''['''''length'''''];'''\nThe type can be any other UnrealScript\
      \ [[type]], with the exception of type ''bool'' and dynamic array types. Note\
      \ that the compiler will not complain about dynamic array types and just silently\
      \ use the dynamic array's base type instead!\n\nBecause the array length is\
      \ specified as part of the variable name, it is possible to mix static arrays\
      \ and non-array variables in a single declaration. The length can be any integer\
      \ constant, including the [[ArrayCount]] pseudo function.\n\nThis kind of declaration\
      \ also has an important implication: It is not possible to use static arrays\
      \ as the return type of a function. You can get around that by using an ''out''\
      \ parameter instead.\n\n==Usage==\nTo access an element of a static array, simply\
      \ specify the name of the static array variable and append the element's index\
      \ in square brackets:\n ''varname'''''['''''index''''']'''\nValid index values\
      \ are positive integer values smaller than the array's length, i.e. 0 to ArrayCount(''varname'')-1.\
      \ Array elements referenced this way are [[wp:lvalue|lvalue]]s, i.e. they can\
      \ be used on the left side of an assignment or as ''out'' parameter in a function\
      \ call.\n\n==ArrayCount==\nThe '''ArrayCount''' pseudo-function can be used\
      \ to get the length of a static array. Note that it is actually evaluated at\
      \ compile time and replaced by an integer value in the [[UnrealScript bytecode]].\
      \ As such it can be used even with a complex argument and is guaranteed to never\
      \ throw any runtime warnings. Also, because it's not really a function call,\
      \ ArrayCount can be used as the value of [[constants]] and as the length value\
      \ of other static array declarations.\n '''ArrayCount('''''staticarrayreference''''')'''\n\
      The static array reference could be as simple as the name of a static array\
      \ variable in the same class or function or a more complex expression, such\
      \ as <code>class'TeamAI'.default.[[UE2:TeamAI (UT2004)#OrderList|OrderList]]</code>.\n\
      \n{{navbox unrealscript}}"
  properties: []
  revId: 45465
name: "Static arrays"
revision:
  revid: 45465
  parentid: 45464
  user: "69.127.24.223"
  timestamp: 1378493084.000000000
  comment: "/* Usage */ >.<"
timestamp: 1668754608.521543000
