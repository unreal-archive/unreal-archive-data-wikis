---
parse:
  title: "Legacy:Anozireth/IonTrigger"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Download_IonTrigger_Package\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Download IonTrigger\
      \ Package</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"\
      #Description\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Description</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#How_to_use\"><span class=\"\
      tocnumber\">3</span> <span class=\"toctext\">How to use</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-4\"><a href=\"#Source_Code\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Source Code</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-5\"><a href=\"#Discussion\"><span class=\"tocnumber\"\
      >5</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n</div>\n\
      <p></p>\n<h2><span class=\"mw-headline\" id=\"Download_IonTrigger_Package\"\
      >Download IonTrigger Package</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Anozireth/IonTrigger?section=1\"\
      \ title=\"Edit section: Download IonTrigger Package\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p><a rel=\"nofollow\" class=\"\
      external free\" href=\"http://www.geocities.com/Anozireth/IonTrigger.html\"\
      >http://www.geocities.com/Anozireth/IonTrigger.html</a></p>\n<h2><span class=\"\
      mw-headline\" id=\"Description\">Description</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Anozireth/IonTrigger?section=2\"\
      \ title=\"Edit section: Description\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This package provides a pair of classes that allow\
      \ the mapper to place a volume that will trigger the firing of an <a href=\"\
      /Legacy:IonCannon\" title=\"Legacy:IonCannon\">IonCannon</a>. It allows the\
      \ mapper to specify either a fixed targer or the triggering player as the target.\
      \ It also allows the mapper to set the minimum time between firings and the\
      \ maximum number of firings.</p>\n<h2><span class=\"mw-headline\" id=\"How_to_use\"\
      >How to use</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Anozireth/IonTrigger?section=3\" title=\"Edit\
      \ section: How to use\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Simply place an <tt>IonTriggerVolume</tt> in the map where you want it, and\
      \ an <a href=\"/Legacy:IonCannon\" title=\"Legacy:IonCannon\">IonCannon</a>\
      \ that can see intended area of the target. Then configure the following settings:</p>\n\
      <dl>\n<dt>bTargetPlayer&#160;</dt>\n<dd>If set to true, it will attempt to target\
      \ the player which triggered it. If set to false it will target the IonTarget</dd>\n\
      <dt>IonTarget&#160;</dt>\n<dd>Optional&#160;: An Actor of the IonTriggerTarget\
      \ class at the point to be targeted. Note that there are no configuration options\
      \ for the IonTriggerTarget.</dd>\n<dt>maxFires&#160;</dt>\n<dd>The maximum number\
      \ of times this volume can trigger a firing. 0 = infinite</dd>\n<dt>resetTime&#160;</dt>\n\
      <dd>The minimum time between firings. Note that each individual cannon takes\
      \ about 3 seconds to reload, so a value of less than 3 is not recommended, and\
      \ may cause the cannon to not refire properly if a player is still staning in\
      \ the volume when the timer resets.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"Source_Code\">Source Code</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Anozireth/IonTrigger?section=4\"\
      \ title=\"Edit section: Source Code\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co1\">//-----------------------------------------------------------</span>\n\
      <span class=\"co1\">//  IonTriggerVolume - A volume that can be used to trigger\
      \ an IonCannon.</span>\n<span class=\"co1\">//  By Tom Nicholson, aka Anozireth</span>\n\
      <span class=\"co1\">//  anozireth@yahoo.com</span>\n<span class=\"co1\">//-----------------------------------------------------------</span>\n\
      <span class=\"kw1\">class</span> IonTriggerVolume <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Volume</span>;\n \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> IonTriggerTarget IonTarget;\
      \   <span class=\"co1\">// designated target</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">bool</span>\
      \ bTargetPlayer;            <span class=\"co1\">// Targets triggering actor\
      \ if true, otherwise targets IonTarget</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \ resetTime;                <span class=\"co1\">// Time between fires.  This\
      \ should be &gt; 0</span>\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">int</span> maxFires;\
      \                   <span class=\"co1\">// Maximum number of times this volume\
      \ can trigger a firing.  0 = infinite</span>\n \n<span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">bool</span> bWaitingToFire;            <span class=\"\
      co1\">// can we fire right now?</span>\n<span class=\"kw1\">var</span> <span\
      \ class=\"kw5\">int</span> firingCount;                <span class=\"co1\">//\
      \ How many times we've triggered a firing</span>\n \n<span class=\"kw1\">event</span>\
      \ <span class=\"kw4\">touch</span><span class=\"br0\">(</span><span class=\"\
      kw9\">Actor</span> Other<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"co1\">// Don't fire if not enough time has elapsed since the\
      \ last firing</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>bWaitingToFire<span class=\"br0\">)</span>\n\t   <span class=\"kw2\"\
      >return</span>;\n \n    <span class=\"co1\">// Don't fire if we're over the\
      \ max number of firings</span>\n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span> <span class=\"br0\">(</span>maxFires<span class=\"sy0\">&gt;</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ <span class=\"br0\">(</span>firingCount <span class=\"sy0\">&gt;=</span> maxFires<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n       <span class=\"\
      kw2\">return</span>;\n \n    <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"kw9\">Pawn</span><span class=\"br0\">(</span>Other<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \ <span class=\"br0\">)</span>\n       \t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> <span class=\"kw9\">Pawn</span><span class=\"br0\"\
      >(</span>Other<span class=\"br0\">)</span>.<span class=\"me0\">IsPlayerPawn</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n\
      \            FireCannon<span class=\"br0\">(</span><span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;       <span class=\"co1\">// if the touch was by a player, then FIRE!</span>\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> IonCannon\
      \ CheckMark<span class=\"br0\">(</span><span class=\"kw9\">Pawn</span> TargetPawn,\
      \ <span class=\"kw5\">vector</span> MarkLocation, <span class=\"kw5\">bool</span>\
      \ bFire<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw1\">local</span> IonCannon I;\n \n    <span class=\"co1\">// iterate through\
      \ all cannons in the map until we can find one that can hit our target</span>\n\
      \t<span class=\"kw2\">foreach</span> <span class=\"kw2\">DynamicActors</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'IonCannon'</span>, I<span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\
      \t    <span class=\"co1\">// Found a cannon, try to fire it and check if it\
      \ succeeded.</span>\n\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>\
      \ I.<span class=\"me0\">CheckMark</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Instigator</span>,MarkLocation,bFire<span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n            firingCount<span\
      \ class=\"sy0\">++</span>;   <span class=\"co1\">// Keep track of how many times\
      \ we've triggered a firing</span>\n\t\t\t<span class=\"kw2\">return</span> I;\n\
      \t\t<span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n    <span\
      \ class=\"co1\">// didn't find a cannon that could hit the target</span>\n\t\
      <span class=\"kw2\">return</span> <span class=\"kw5\">None</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">function</span> FireCannon<span class=\"\
      br0\">(</span><span class=\"kw9\">Pawn</span> TargetPawn<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">vector</span> vecTarget;     <span class=\"co1\">// Location\
      \ aimed at by cannon</span>\n<span class=\"kw1\">local</span> <span class=\"\
      kw5\">vector</span> vecNorm;       <span class=\"co1\">// not really used, just\
      \ required by trace</span>\n<span class=\"kw1\">local</span> <span class=\"\
      kw5\">string</span> s;\n \n    <span class=\"co1\">// Trace straight down from\
      \ the target.</span>\n    <span class=\"co1\">// Cannons don't seem to like\
      \ shooting at points that aren't on the ground.</span>\n    <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>bTargetPlayer <span class=\"sy0\">||</span>\
      \ <span class=\"br0\">(</span>IonTarget <span class=\"sy0\">==</span> <span\
      \ class=\"kw5\">none</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \  <span class=\"co1\">// Target the triggering player</span>\n       <span\
      \ class=\"kw4\">Trace</span><span class=\"br0\">(</span>vecTarget,vecNorm,TargetPawn.<span\
      \ class=\"kw7\">Location</span><span class=\"sy0\">+</span><span class=\"kw3\"\
      >Vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"\
      nu0\">0</span>,<span class=\"sy0\">-</span><span class=\"nu0\">10000</span><span\
      \ class=\"br0\">)</span>, TargetPawn.<span class=\"kw7\">Location</span>, <span\
      \ class=\"kw6\">false</span><span class=\"br0\">)</span>;\n    <span class=\"\
      kw2\">else</span>    <span class=\"co1\">// Target the map specified target</span>\n\
      \       <span class=\"kw4\">Trace</span><span class=\"br0\">(</span>vecTarget,vecNorm,IonTarget.<span\
      \ class=\"kw7\">Location</span><span class=\"sy0\">+</span><span class=\"kw3\"\
      >Vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"\
      nu0\">0</span>,<span class=\"sy0\">-</span><span class=\"nu0\">10000</span><span\
      \ class=\"br0\">)</span>, IonTarget.<span class=\"kw7\">Location</span>, <span\
      \ class=\"kw6\">false</span><span class=\"br0\">)</span>;\n \n    <span class=\"\
      co1\">// Try to actually find a cannon and fire it</span>\n    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>CheckMark<span class=\"br0\">(</span>TargetPawn,vecTarget,<span\
      \ class=\"kw6\">true</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n   \
      \ <span class=\"br0\">{</span>  <span class=\"co1\">// didn't fire for some\
      \ reason, log error</span>\n       s <span class=\"sy0\">=</span> <span class=\"\
      kw5\">string</span><span class=\"br0\">(</span><span class=\"kw5\">name</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"st0\">\"\
      \ Couldn't find a valid cannon to fire on Target at: \"</span> <span class=\"\
      sy0\">$</span> <span class=\"kw5\">string</span><span class=\"br0\">(</span>vecTarget<span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw3\">Log</span><span class=\"\
      br0\">(</span>s<span class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>  <span\
      \ class=\"co1\">// successfully fired, so reset timer</span>\n       bWaitingToFire<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>;\n       <span class=\"\
      kw4\">SetTimer</span><span class=\"br0\">(</span>resetTime,<span class=\"kw6\"\
      >false</span><span class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span>\n \n<span class=\"co1\">// Checks if any pawns\
      \ are touching the volume when it is re-activated</span>\n<span class=\"kw1\"\
      >function</span> CheckIfTouching<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw9\">actor</span> A;\n \n    <span class=\"co1\">// Don't fire\
      \ if we're over the max number of firings</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span> <span class=\"br0\">(</span>maxFires<span class=\"\
      sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>firingCount <span\
      \ class=\"sy0\">&gt;=</span> maxFires<span class=\"br0\">)</span><span class=\"\
      br0\">)</span>\n       <span class=\"kw2\">return</span>;\n \n\t<span class=\"\
      kw2\">foreach</span> <span class=\"kw2\">TouchingActors</span><span class=\"\
      br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\">'Actor'</span>,\
      \ A<span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n        <span\
      \ class=\"kw3\">Log</span><span class=\"br0\">(</span><span class=\"st0\">\"\
      Found a touching actor\"</span><span class=\"br0\">)</span>;\n        <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span>A<span class=\"br0\">)</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span> <span class=\"br0\">)</span>\n        <span\
      \ class=\"br0\">{</span>\n            <span class=\"kw3\">Log</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"Found a touching Pawn\"</span><span class=\"\
      br0\">)</span>;\n           \t<span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span> <span class=\"kw9\">Pawn</span><span class=\"br0\">(</span>A<span\
      \ class=\"br0\">)</span>.<span class=\"me0\">IsPlayerPawn</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>\n  \
      \         \t<span class=\"br0\">{</span>\n                 <span class=\"kw3\"\
      >Log</span><span class=\"br0\">(</span><span class=\"st0\">\"Found a touching\
      \ PlayerPawn, firing...\"</span><span class=\"br0\">)</span>;\n            \
      \     FireCannon<span class=\"br0\">(</span><span class=\"kw9\">Pawn</span><span\
      \ class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"br0\">)</span>;\
      \       <span class=\"co1\">// we found a player touching the volume, so FIRE!</span>\n\
      \           \t     <span class=\"kw2\">return</span>;\n           \t<span class=\"\
      br0\">}</span>\n        <span class=\"br0\">}</span>\n    <span class=\"br0\"\
      >}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"co1\">// Re-Activates\
      \ cannon after time delay</span>\n<span class=\"kw1\">function</span> <span\
      \ class=\"kw4\">Timer</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\tbWaitingToFire<span class=\"sy0\"\
      >=</span><span class=\"kw6\">false</span>;\n\tCheckIfTouching<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n\
      \   maxFires<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\n   resetTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">30</span>\n   bTargetPlayer<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">true</span>\n   bWaitingToFire<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">false</span>\n   bStatic<span class=\"\
      sy0\">=</span><span class=\"kw6\">false</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The <tt>IonTriggerTarget</tt> class is nothing but placeable subclass\
      \ of <tt>Actor -&gt; Info</tt> and there's not really any code for it.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Anozireth/IonTrigger?section=5\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Anozireth:</b> This is my first real contribution\
      \ here, so I hope you guys like it! I'm up way past my bedtime tonight so I'll\
      \ have to polish this off tomorrow evening&#160;:-)</p>\n<p><b>EntropicLqd:</b>\
      \ Nice. About the only change I would make to the code would be to move the\
      \ checks for invalid parameters into either the PreBeingPlay() or PostBeingPlay()\
      \ function. You might also want an option for an infinite amount of fires. Pretty\
      \ cool though - good job well done&#160;:).</p>\n<p><b>Jimbo:</b> Indeed! I've\
      \ been after a script like this for some time. Thanks for your help! (check\
      \ your email, Tom)</p>\n<p><b>Anozireth:</b> EntropicLqd - I forgot to mention\
      \ it in the description (at first, I added it now) but it was already in the\
      \ code, 0 = infinite firings&#160;:-) I'll see if I can rework it to get those\
      \ checks into one of those two functions you mentioned. Jimbo, I'll write you\
      \ back on that email later today, for now I gotta get to work here. Thanks for\
      \ the positive feed back guys, I'm glad you liked it!</p>\n<p><b>Anozireth:</b>\
      \ I just noticed a small bug that would allow the volume to exceed its <tt>maxFires</tt>\
      \ if a player was standing in it when the <tt>CheckIfTouching</tt> function\
      \ was called. I've updated the code here and the download with the new package.</p>\n\
      <p>~~ You could simplify this by using a <a href=\"/Legacy:LookTarget\" title=\"\
      Legacy:LookTarget\">LookTarget</a> instead of the custom target class.</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.055 seconds\nReal time usage:\
      \ 0.057 seconds\nPreprocessor visited node count: 28/1000000\nPreprocessor generated\
      \ node count: 52/1000000\nPost‐expand include size: 20/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:458-0!*!0!!en!*!* and timestamp 20221118193004 and revision\
      \ id 1505\n -->\n"
  categories:
  - sortkey: "Anozireth/IonTrigger"
    name: "Legacy_Custom_Class_(UT2004)"
  links:
  - ns: 100
    exists: true
    name: "Legacy:LookTarget"
  - ns: 100
    exists: true
    name: "Legacy:IonCannon"
  templates: []
  images: []
  externallinks:
  - "http://www.geocities.com/Anozireth/IonTrigger.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "Download IonTrigger Package"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Anozireth/IonTrigger"
    byteoffset: 0
    anchor: "Download_IonTrigger_Package"
  - toclevel: 1
    level: "2"
    line: "Description"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Anozireth/IonTrigger"
    byteoffset: 85
    anchor: "Description"
  - toclevel: 1
    level: "2"
    line: "How to use"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Anozireth/IonTrigger"
    byteoffset: 447
    anchor: "How_to_use"
  - toclevel: 1
    level: "2"
    line: "Source Code"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Anozireth/IonTrigger"
    byteoffset: 1323
    anchor: "Source_Code"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Anozireth/IonTrigger"
    byteoffset: 5188
    anchor: "Discussion"
  displaytitle: "Legacy:Anozireth/IonTrigger"
  iwlinks: []
  wikitext:
    text: "==Download IonTrigger Package==\n\nhttp://www.geocities.com/Anozireth/IonTrigger.html\n\
      \n==Description==\n\nThis package provides a pair of classes that allow the\
      \ mapper to place a volume that will trigger the firing of an [[Legacy:IonCannon|IonCannon]].\
      \  It allows the mapper to specify either a fixed targer or the triggering player\
      \ as the target.  It also allows the mapper to set the minimum time between\
      \ firings and the maximum number of firings.\n\n==How to use==\n\nSimply place\
      \ an <tt>IonTriggerVolume</tt> in the map where you want it, and an [[Legacy:IonCannon|IonCannon]]\
      \ that can see intended area of the target.  Then configure the following settings:\n\
      \n; bTargetPlayer : If set to true, it will attempt to target the player which\
      \ triggered it.  If set to false it will target the IonTarget\n; IonTarget :\
      \ Optional : An Actor of the IonTriggerTarget class at the point to be targeted.\
      \  Note that there are no configuration options for the IonTriggerTarget.\n\
      ; maxFires : The maximum number of times this volume can trigger a firing. \
      \ 0 = infinite\n; resetTime : The minimum time between firings.  Note that each\
      \ individual cannon takes about 3 seconds to reload, so a value of less than\
      \ 3 is not recommended, and may cause the cannon to not refire properly if a\
      \ player is still staning in the volume when the timer resets.\n\n==Source Code==\n\
      \n<uscript>\n//-----------------------------------------------------------\n\
      //  IonTriggerVolume - A volume that can be used to trigger an IonCannon.\n\
      //  By Tom Nicholson, aka Anozireth\n//  anozireth@yahoo.com\n//-----------------------------------------------------------\n\
      class IonTriggerVolume extends Volume;\n\nvar() IonTriggerTarget IonTarget;\
      \   // designated target\nvar() bool bTargetPlayer;            // Targets triggering\
      \ actor if true, otherwise targets IonTarget\nvar() float resetTime;       \
      \         // Time between fires.  This should be > 0\nvar() int maxFires;  \
      \                 // Maximum number of times this volume can trigger a firing.\
      \  0 = infinite\n\nvar bool bWaitingToFire;            // can we fire right\
      \ now?\nvar int firingCount;                // How many times we've triggered\
      \ a firing\n\nevent touch(Actor Other)\n{\n\t// Don't fire if not enough time\
      \ has elapsed since the last firing\n    if (bWaitingToFire)\n\t   return;\n\
      \n    // Don't fire if we're over the max number of firings\n    if ( (maxFires>0)\
      \ && (firingCount >= maxFires))\n       return;\n\n    if ( Pawn(Other) != none\
      \ )\n       \tif ( Pawn(Other).IsPlayerPawn() )\n            FireCannon(Pawn(Other));\
      \       // if the touch was by a player, then FIRE!\n}\n\nfunction IonCannon\
      \ CheckMark(Pawn TargetPawn, vector MarkLocation, bool bFire)\n{\n\tlocal IonCannon\
      \ I;\n\n    // iterate through all cannons in the map until we can find one\
      \ that can hit our target\n\tforeach DynamicActors(class'IonCannon', I)\n\t\
      {\n\t    // Found a cannon, try to fire it and check if it succeeded.\n\t\t\
      if ( I.CheckMark(Instigator,MarkLocation,bFire) )\n\t\t{\n            firingCount++;\
      \   // Keep track of how many times we've triggered a firing\n\t\t\treturn I;\n\
      \t\t}\n\t}\n    // didn't find a cannon that could hit the target\n\treturn\
      \ None;\n}\n\nfunction FireCannon(Pawn TargetPawn)\n{\nlocal vector vecTarget;\
      \     // Location aimed at by cannon\nlocal vector vecNorm;       // not really\
      \ used, just required by trace\nlocal string s;\n\n    // Trace straight down\
      \ from the target.\n    // Cannons don't seem to like shooting at points that\
      \ aren't on the ground.\n    if (bTargetPlayer || (IonTarget == none))  // Target\
      \ the triggering player\n       Trace(vecTarget,vecNorm,TargetPawn.Location+Vect(0,0,-10000),\
      \ TargetPawn.Location, false);\n    else    // Target the map specified target\n\
      \       Trace(vecTarget,vecNorm,IonTarget.Location+Vect(0,0,-10000), IonTarget.Location,\
      \ false);\n\n    // Try to actually find a cannon and fire it\n    if (CheckMark(TargetPawn,vecTarget,true)\
      \ == none)\n    {  // didn't fire for some reason, log error\n       s = string(name)\
      \ $ \" Couldn't find a valid cannon to fire on Target at: \" $ string(vecTarget);\n\
      \       Log(s);\n    }\n    else\n    {  // successfully fired, so reset timer\n\
      \       bWaitingToFire=true;\n       SetTimer(resetTime,false);\n    }\n}\n\n\
      // Checks if any pawns are touching the volume when it is re-activated\nfunction\
      \ CheckIfTouching()\n{\n\tlocal actor A;\n\n    // Don't fire if we're over\
      \ the max number of firings\n    if ( (maxFires>0) && (firingCount >= maxFires))\n\
      \       return;\n\n\tforeach TouchingActors(class'Actor', A)\n\t{\n        Log(\"\
      Found a touching actor\");\n        if ( Pawn(A) != none )\n        {\n    \
      \        Log(\"Found a touching Pawn\");\n           \tif ( Pawn(A).IsPlayerPawn()\
      \ )\n           \t{\n                 Log(\"Found a touching PlayerPawn, firing...\"\
      );\n                 FireCannon(Pawn(A));       // we found a player touching\
      \ the volume, so FIRE!\n           \t     return;\n           \t}\n        }\n\
      \    }\n}\n\n// Re-Activates cannon after time delay\nfunction Timer()\n{\n\t\
      bWaitingToFire=false;\n\tCheckIfTouching();\n}\n\n\ndefaultproperties\n{\n \
      \  maxFires=0\n   resetTime=30\n   bTargetPlayer=true\n   bWaitingToFire=false\n\
      \   bStatic=false\n}\n</uscript>\n\nThe <tt>IonTriggerTarget</tt> class is nothing\
      \ but placeable subclass of <tt>Actor -> Info</tt> and there's not really any\
      \ code for it.\n\n==Discussion==\n\n'''Anozireth:''' This is my first real contribution\
      \ here, so I hope you guys like it!  I'm up way past my bedtime tonight so I'll\
      \ have to polish this off tomorrow evening :-)\n\n'''EntropicLqd:''' Nice. \
      \ About the only change I would make to the code would be to move the checks\
      \ for invalid parameters into either the PreBeingPlay() or PostBeingPlay() function.\
      \  You might also want an option for an infinite amount of fires.  Pretty cool\
      \ though - good job well done :).\n\n'''Jimbo:''' Indeed! I've been after a\
      \ script like this for some time. Thanks for your help! (check your email, Tom)\n\
      \n'''Anozireth:''' EntropicLqd - I forgot to mention it in the description (at\
      \ first, I added it now) but it was already in the code, 0 = infinite firings\
      \ :-) I'll see if I can rework it to get those checks into one of those two\
      \ functions you mentioned. Jimbo, I'll write you back on that email later today,\
      \ for now I gotta get to work here.  Thanks for the positive feed back guys,\
      \ I'm glad you liked it!  \n\n'''Anozireth:''' I just noticed a small bug that\
      \ would allow the volume to exceed its <tt>maxFires</tt> if a player was standing\
      \ in it when the <tt>CheckIfTouching</tt> function was called.  I've updated\
      \ the code here and the download with the new package.\n\n~~ You could simplify\
      \ this by using a [[Legacy:LookTarget|LookTarget]] instead of the custom target\
      \ class. \n\n[[Category:Legacy Custom Class (UT2004)|{{PAGENAME}}]]"
  properties: []
  revId: 1505
name: "Legacy:Anozireth/IonTrigger"
revision:
  revid: 1505
  parentid: 1506
  user: "Dyn-62-56-58-176.dslaccess.co.uk"
  timestamp: 1195341992.000000000
  comment: "*"
timestamp: 1668799584.368339000
