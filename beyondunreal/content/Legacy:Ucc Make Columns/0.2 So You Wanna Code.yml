---
parse:
  title: "Legacy:Ucc Make Columns/0.2 So You Wanna Code"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#ucc_make_.280.2.29\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">ucc make (0.2)</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#So_You_Wanna_Code.3F\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">So You Wanna Code?</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Learn_Your_Virtues\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Learn Your Virtues</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#GuestBook\"><span class=\"\
      tocnumber\">3.1</span> <span class=\"toctext\">GuestBook</span></a></li>\n</ul>\n\
      </li>\n</ul>\n</div>\n<p></p>\n<h3><span class=\"mw-headline\" id=\"ucc_make_.280.2.29\"\
      >ucc make (0.2)</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code?section=1\"\
      \ title=\"Edit section: ucc make (0.2)\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>part of the <a href=\"/Legacy:Ucc_make_columns\" title=\"\
      Legacy:Ucc make columns\" class=\"mw-redirect\">ucc_make_columns</a> series...</p>\n\
      <h2><span class=\"mw-headline\" id=\"So_You_Wanna_Code.3F\">So You Wanna Code?</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code?section=2\" title=\"\
      Edit section: So You Wanna Code?\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Really? Why? I mean, that's actually a couple of questions,\
      \ but maybe just a \"Are you sure?\" would suffice as a beginning. It's not\
      \ the rock star lifestyle the hollywood movies make it seem, trust me. Only\
      \ a couple of coders really look like Hugh Jackson and they went into consulting\
      \ a long time ago.</p>\n<p>If you think you want to code, you should be able\
      \ to answer yes to at least 4 of the following questions:</p>\n<ol>\n<li>Do\
      \ you find yourself making comparisons between the TV show CSI and debugging?</li>\n\
      <li>Do you spend more time thinking about how to solve a problem than actually\
      \ solving it?</li>\n<li>When you tell someone \"that will take me ten minutes\"\
      , does that refer to the ten minutes you actually take to physically do it,\
      \ and not the three hours you spent researching it?</li>\n<li>Can you name more\
      \ than three Smurfs? (more relevant than you think)</li>\n<li>Do you think Young\
      \ Sherlock Holmes was at least as cool as Young Indiana Jones?</li>\n<li>Did\
      \ you do poorly in a foreign language class because 'the syntax wasn't logical'?</li>\n\
      <li>Related: Do you think Yoda talks pretty normal?</li>\n<li>Related: Do you\
      \ know what <a href=\"http://en.wikipedia.org/wiki/Hungarian_notation\" class=\"\
      extiw\" title=\"wikipedia:Hungarian notation\">Wikipedia:Hungarian notation</a>\
      \ is?</li>\n<li>When asked who the *real* captain of Star Trek was, do you secretly\
      \ think 'Spock'?</li>\n<li>You know who <a href=\"http://en.wikipedia.org/wiki/Stephen_Hawking\"\
      \ class=\"extiw\" title=\"wikipedia:Stephen Hawking\">Wikipedia:Stephen Hawking</a>\
      \ is?</li>\n<li>Are people asking you to fix their computer?</li>\n<li>Are manuals\
      \ for sissies?</li>\n<li>Does it take you half the time to find things on the\
      \ internet than other people you know?</li>\n<li>Related: Do you use google\
      \ as a verb?</li>\n</ol>\n<p>If you couldn't answer more than 3 of those, it's\
      \ quite likely the rest of this isn't going to interest you.</p>\n<p>If you\
      \ did, then here is a crash course on a few things you should know before getting\
      \ dirty with your first programming or scripting language.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Learn_Your_Virtues\">Learn Your Virtues</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code?section=3\"\
      \ title=\"Edit section: Learn Your Virtues\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Perl was the first language I ever really tried to\
      \ learn. BASIC didn't count, I was just copying from books. Even my gaming handle\
      \ is from this wonderful language. Naturally, Larry Wall (Father of PERL) has\
      \ a place in my heart. So I quote from °Programming Perl, 2nd ed., by Larry\
      \ Wall, Tom Christiansen, and Randal L. Schwartz.</p>\n<blockquote class=\"\
      legacyquote\">\n<p>{{{1}}}</p>\n</blockquote>\n<p>And I am lazy, impatient,\
      \ proud person.</p>\n<p>In those three qualities, though, you have the foundation\
      \ of being the person to write good, if not great code. Born from laziness and\
      \ impatience comes effiency and economy. You get into the practice of trying\
      \ to learn how to write something in three lines, not five - because then your\
      \ overall program might be only three hundred lines, not five hundred. Hubris\
      \ is the virtue of programmers who want other people to use their code. For\
      \ some, it extends even past that - it makes you write actual code people will\
      \ be willing to look at. Anybody who thinks that coders are, by average, disorderly,\
      \ unkempt, raggedly people has never listened in on a hour-long debate about\
      \ indentation. (Bean:Amen)</p>\n<p>It's the impossible triangle. You will write\
      \ it fast. You will write it smart. You will write it better than the next guy.\
      \ It's not likely to turn out that way, but it's a neat goal anyway.</p>\n<p>If\
      \ all of this is still sounding like your thing, then you should gather yourself\
      \ around with the basics of programming. When a lot of people start out, they\
      \ generally buy a lot of books. Books are good reference material. They're good\
      \ to go to when there is something you know exists, but can't quite remember\
      \ what it is.</p>\n<p>The problem with programming, though, is that it's almost\
      \ purely logical. It's my personal theory that this is why most of the coders\
      \ I know self-taught, learning by struggling through tutorials and examples\
      \ rather than straight from books. Books can provide the primer, the foundation,\
      \ the answers to early questions, but it's difficult to understand the logic\
      \ unless you interact with it, poke it, make it fail a couple of times.</p>\n\
      <p>Learning from mistakes is part of learning to code. Thinking in reverse if\
      \ often the way around a problem - it isn't what isn't working, but what is.\
      \ Sometimes, it's not what you can prove, but what you can't disprove. The best\
      \ way to find out if that pillar is a support for the whole is, well, to remove\
      \ the pillar. Many subjects are based on memorization, but memorizing something\
      \ would never ask you to take out the pillar to see if the house would fall\
      \ down.</p>\n<p>So if you grok Yoda, are lazy and proud, and have no problems\
      \ with taking out a pillar to test the solidity of a foundation, wait till next\
      \ week when we ask:</p>\n<p>You wanna mod?</p>\n<p>Other <a href=\"/Legacy:Ucc_make_columns\"\
      \ title=\"Legacy:Ucc make columns\" class=\"mw-redirect\">ucc_make_columns</a></p>\n\
      <p><i>please reserve edits to minor changes and comments – RegularX</i></p>\n\
      <h3><span class=\"mw-headline\" id=\"GuestBook\">GuestBook</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code?section=8\"\
      \ title=\"Edit section: GuestBook\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.036 seconds\n\
      Real time usage: 0.037 seconds\nPreprocessor visited node count: 31/1000000\n\
      Preprocessor generated node count: 91/1000000\nPost‐expand include size: 110/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 3/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    5.455      1 - -total\n100.00%\
      \    5.455      1 - Template:Innerbox\n-->\n\n<!-- Saved in parser cache with\
      \ key wiki:pcache:idhash:3497-0!*!0!!en!*!* and timestamp 20221122021450 and\
      \ revision id 8972\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Ucc make columns"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "ucc make (0.2)"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code"
    byteoffset: 0
    anchor: "ucc_make_.280.2.29"
  - toclevel: 1
    level: "2"
    line: "So You Wanna Code?"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code"
    byteoffset: 90
    anchor: "So_You_Wanna_Code.3F"
  - toclevel: 1
    level: "2"
    line: "Learn Your Virtues"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code"
    byteoffset: 1824
    anchor: "Learn_Your_Virtues"
  - toclevel: 2
    level: "3"
    line: "GuestBook"
    number: "3.1"
    index: "8"
    fromtitle: "Legacy:Ucc_Make_Columns/0.2_So_You_Wanna_Code"
    byteoffset: 5587
    anchor: "GuestBook"
  displaytitle: "Legacy:Ucc Make Columns/0.2 So You Wanna Code"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Stephen_Hawking"
    name: "wikipedia:Stephen Hawking"
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Hungarian_notation"
    name: "wikipedia:Hungarian notation"
  wikitext:
    text: "===ucc make (0.2)===\n\npart of the [[Legacy:Ucc_make_columns|ucc_make_columns]]\
      \ series...\n\n==So You Wanna Code?==\n\nReally? Why? I mean, that's actually\
      \ a couple of questions, but maybe just a \"Are you sure?\" would suffice as\
      \ a beginning. It's not the rock star lifestyle the hollywood movies make it\
      \ seem, trust me. Only a couple of coders really look like Hugh Jackson and\
      \ they went into consulting a long time ago.\n\nIf you think you want to code,\
      \ you should be able to answer yes to at least 4 of the following questions:\n\
      \n# Do you find yourself making comparisons between the TV show CSI and debugging?\n\
      # Do you spend more time thinking about how to solve a problem than actually\
      \ solving it?\n# When you tell someone \"that will take me ten minutes\", does\
      \ that refer to the ten minutes you actually take to physically do it, and not\
      \ the three hours you spent researching it?\n# Can you name more than three\
      \ Smurfs? (more relevant than you think)\n# Do you think Young Sherlock Holmes\
      \ was at least as cool as Young Indiana Jones?\n# Did you do poorly in a foreign\
      \ language class because 'the syntax wasn't logical'?\n# Related: Do you think\
      \ Yoda talks pretty normal?\n# Related: Do you know what [[Wikipedia:Hungarian\
      \ notation]] is?\n# When asked who the *real* captain of Star Trek was, do you\
      \ secretly think 'Spock'?\n# You know who [[Wikipedia:Stephen Hawking]] is?\n\
      # Are people asking you to fix their computer?\n# Are manuals for sissies?\n\
      # Does it take you half the time to find things on the internet than other people\
      \ you know?\n# Related: Do you use google as a verb? \n\nIf you couldn't answer\
      \ more than 3 of those, it's quite likely the rest of this isn't going to interest\
      \ you.\n\nIf you did, then here is a crash course on a few things you should\
      \ know before getting dirty with your first programming or scripting language.\n\
      \n==Learn Your Virtues==\n\nPerl was the first language I ever really tried\
      \ to learn. BASIC didn't count, I was just copying from books. Even my gaming\
      \ handle is from this wonderful language. Naturally, Larry Wall (Father of PERL)\
      \ has a place in my heart. So I quote from °Programming Perl, 2nd ed., by Larry\
      \ Wall, Tom Christiansen, and Randal L. Schwartz.\n\n{{innerbox|\n==The Three\
      \ Great Virtues of a Programmer==\n\n===Laziness===\n\nThe quality that makes\
      \ you go to great effort to reduce overall energy expenditure. It makes you\
      \ write labor-saving programs that other people will find useful, and document\
      \ what you wrote so you don't have to answer so many questions about it. Hence,\
      \ the first great virtue of a programmer. Also, hence this book. [\"This book\"\
      \ = Programming Perl. -GGC-]\n\n===Impatience===\n\nThe anger you feel when\
      \ the computer is being lazy. This makes you write programs that don’t just\
      \ react to your needs, but actually anticipate them. Or at least that pretend\
      \ to. Hence, the second great virtue of a programmer.\n\n===Hubris===\n\nExcessive\
      \ pride, the sort of thing Zeus zaps you for. Also the quality that makes you\
      \ write (and maintain) programs that other people won’t want to say bad things\
      \ about. Hence, the third great virtue of a programmer.\n\n(see also [[Wiki:LazinessImpatienceHubris]])\n\
      \n\n}}\n\nAnd I am lazy, impatient, proud person.\n\nIn those three qualities,\
      \ though, you have the foundation of being the person to write good, if not\
      \ great code. Born from laziness and impatience comes effiency and economy.\
      \ You get into the practice of trying to learn how to write something in three\
      \ lines, not five - because then your overall program might be only three hundred\
      \ lines, not five hundred. Hubris is the virtue of programmers who want other\
      \ people to use their code. For some, it extends even past that - it makes you\
      \ write actual code people will be willing to look at. Anybody who thinks that\
      \ coders are, by average, disorderly, unkempt, raggedly people has never listened\
      \ in on a hour-long debate about indentation. (Bean:Amen)\n\nIt's the impossible\
      \ triangle. You will write it fast. You will write it smart. You will write\
      \ it better than the next guy. It's not likely to turn out that way, but it's\
      \ a neat goal anyway.\n\nIf all of this is still sounding like your thing, then\
      \ you should gather yourself around with the basics of programming. When a lot\
      \ of people start out, they generally buy a lot of books. Books are good reference\
      \ material. They're good to go to when there is something you know exists, but\
      \ can't quite remember what it is.\n\nThe problem with programming, though,\
      \ is that it's almost purely logical. It's my personal theory that this is why\
      \ most of the coders I know self-taught, learning by struggling through tutorials\
      \ and examples rather than straight from books. Books can provide the primer,\
      \ the foundation, the answers to early questions, but it's difficult to understand\
      \ the logic unless you interact with it, poke it, make it fail a couple of times.\n\
      \nLearning from mistakes is part of learning to code. Thinking in reverse if\
      \ often the way around a problem - it isn't what isn't working, but what is.\
      \ Sometimes, it's not what you can prove, but what you can't disprove. The best\
      \ way to find out if that pillar is a support for the whole is, well, to remove\
      \ the pillar. Many subjects are based on memorization, but memorizing something\
      \ would never ask you to take out the pillar to see if the house would fall\
      \ down.\n\nSo if you grok Yoda, are lazy and proud, and have no problems with\
      \ taking out a pillar to test the solidity of a foundation, wait till next week\
      \ when we ask:\n\nYou wanna mod?\n\nOther [[Legacy:Ucc_make_columns|ucc_make_columns]]\n\
      \n''please reserve edits to minor changes and comments &ndash; RegularX''\n\n\
      ===GuestBook==="
  properties: []
  revId: 8972
name: "Legacy:Ucc Make Columns/0.2 So You Wanna Code"
revision:
  revid: 8972
  parentid: 8974
  user: "GRAF1K"
  timestamp: 1066878007.000000000
  comment: "*"
timestamp: 1669083291.118300000
