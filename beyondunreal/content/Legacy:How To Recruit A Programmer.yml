---
parse:
  title: "Legacy:How To Recruit A Programmer"
  text:
    text: "<blockquote class=\"legacyquote\">\n<p><i>The original article was posted\
      \ by James Walkoski in a <a rel=\"nofollow\" class=\"external text\" href=\"\
      http://www.ataricommunity.com/forums/showthread.php?threadid=266017\">forum\
      \ thread</a> in Atari's UT2003 coding forum.</i></p>\n</blockquote>\n<p>The\
      \ absolute first thing that enters into a coder's head when they see a recruiting\
      \ post is: \"Why should I work for this guy?\" It is not \"Wow, that is a cool\
      \ idea\" or \"I wish there was a game like that I could play.\" Rather, \"Wow,\
      \ that sounds like a lot of work.\"</p>\n<p>Before someone who knows what they\
      \ are doing is going to sign up you need to provide them with some very important\
      \ information:</p>\n<ol>\n<li>How much influence will they have on the product\
      \ based on what they want to work on, and what are the technology limitations?\
      \ We can do anything on computers nowadays. The question is always whether or\
      \ not it is a good idea.</li>\n<li>What skills do you have aside from \"designer\"\
      ? Anyone can have game ideas. If your only task for a project is to design it\
      \ you had better have a design doc (five pages or less) written and available\
      \ and we'd better not have to email you for it. (Like someone said above, inherently\
      \ lazy and anyone who thinks they have an original idea worth protecting is\
      \ so delusioned that we won't give them the time of day.)<br />\nAlso, all sorts\
      \ of other information need to be documented as well. Weapon sheets and descriptions,\
      \ game and front end flowcharts, etc. Otherwise the programmers will be waiting\
      \ on you for stuff and the last thing you want to do with their valuable time\
      \ is squander it.</li>\n<li>What, exactly, have you done already? If you have\
      \ nothing or just some concept sketches don't bullshit us. We will know. In\
      \ fact, before you go searching for programmers it would be a good idea to have\
      \ placeholder packages made with temporary art that is named correctly. I could\
      \ go on for a few pages about how important that stuff is to us. <b>As far as\
      \ your programmers will be concerned placeholder art is more important than\
      \ the final art.</b></li>\n</ol>\n<p>I know that may sound odd or confusing\
      \ but just trust me on it.</p>\n<h2><span class=\"mw-headline\" id=\"Examples\"\
      >Examples</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:How_To_Recruit_A_Programmer?section=1\" title=\"\
      Edit section: Examples\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Ok, enough of the vague concepts of what to do here are some specific examples\
      \ to help you out:</p>\n<ol>\n<li>Spell and grammar check your post. These kind\
      \ of errors are easy to catch, but immediately discount you.</li>\n<li><a rel=\"\
      nofollow\" class=\"external text\" href=\"http://www.soma-studios.com\">Soma\
      \ Studios</a> have a good example of what will interest a programmer. All of\
      \ their information is cleanly laid out and freely available. Their design doc\
      \ is also very well written and concise: <a rel=\"nofollow\" class=\"external\
      \ free\" href=\"http://www.soma-studios.com/mark/mark_documents/cd_revolve.pdf\"\
      >http://www.soma-studios.com/mark/mark_documents/cd_revolve.pdf</a> (notice\
      \ that the gameplay and features are at the start of the doc and the story is\
      \ at the end)</li>\n<li>Flowcharts. They show organization and thought and will\
      \ increase the workrate of your programmers. Here's an example of a frontend\
      \ flowchart:</li>\n</ol>\n<div class=\"center\">\n<div class=\"floatnone\"><a\
      \ href=\"/File:Legacy_recruitment-programmer-flowchart.png\" class=\"image\"\
      ><img alt=\"Legacy recruitment-programmer-flowchart.png\" src=\"/w/images/Legacy_recruitment-programmer-flowchart.png\"\
      \ width=\"620\" height=\"435\" /></a></div>\n</div>\n<p><br /></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:How_To_Recruit_A_Programmer?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Mychaeel/Mod_Startups\" title=\"\
      Legacy:Mychaeel/Mod Startups\">Mychaeel/Mod Startups</a> – Things you should\
      \ think about <i>before</i> making a recruitment post.</li>\n<li><a href=\"\
      /Legacy:Programmer_Typology\" title=\"Legacy:Programmer Typology\">Programmer\
      \ Typology</a> – There are two different types of programmer. Take your pick.</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Comments\">Comments</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:How_To_Recruit_A_Programmer?section=3\" title=\"Edit section:\
      \ Comments\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>EntropicLqd:</b> Heh – not a bad idea for a page. My very summarised thoughts\
      \ on the topic are:</p>\n<ul>\n<li>The design doc needs to be as specific as\
      \ possible. I wouldn't put a limit on its length. It does need to be as specific\
      \ as possible. I don't care how much stuff I have to read as long as I can get\
      \ a good feel for the <i>scope</i> of what I'm being asked to build. This in\
      \ turn allows me to make a good judgement on whether I can commit to that amount\
      \ of effort or not.</li>\n<li>In terms of front-end design, a bullet-pointed\
      \ list of well described options is normally sufficient rather than the flow\
      \ chart above. If the front end has been split into pages already then a page\
      \ schematic with a bulleted point description of the options on each of the\
      \ pages is sufficient.</li>\n</ul>\n<p><b>Mychaeel:</b> As I personally find\
      \ making the software design to be the most interesting and fun part of development,\
      \ I prefer if somebody has a clear idea of what he/she wants to do and how to\
      \ get there, but doesn't attempt to dictate my every step with an overly specific\
      \ design document.</p>\n<p><b>Chazums:</b> Details, i like details. how far?\
      \ how long? how high? Its more irritating to have to go and re-do do code because\
      \ people weren't sure and say \"you decide\" amd then come back with a \"not\
      \ like that tho..\"</p>\n<p><b>Mychaeel:</b> Bad luck on the designer's part\
      \ then. Not specifying something means they have to live with whatever the coder\
      \ came up with. One more reason I prefer taking part in creating a design document\
      \ simply because it's all too easy to end up with ambiguities or subtle intra-design\
      \ contradictions if the design is made by somebody who is not <i>very</i> closely\
      \ acquainted with the code creation process.</p>\n<p><b>Chazums:</b> Indeed,\
      \ although i think getting art guys to make any kind of solid descision is an\
      \ art in itself&#160;:D</p>\n<p><b>Dante:</b> I remember when some members in\
      \ the mod I'm working for went nuts as we planned to move on to UT2003. I was\
      \ the only coder back then - and they \"suprised\" me with their ideas. Yes,\
      \ it's actually cool to have aircrafts with transport capabilities - and yes,\
      \ it's also nice to have bots to fly them around... But wait - <i>who is going\
      \ to code all those things</i> again&#160;? - ARGH! And, I don't want to hear\
      \ that \"it's easy to code\" stuff from people who can only do copy&amp;paste\
      \ coding, or less, anymore.</p>\n<p><b>Foxpaw:</b> I think it's good to have\
      \ as specific a design document as possible. I do all of my own programming\
      \ but I still make a design document for myself, and when I do I like to include\
      \ everything possible, up to how exactly things will work. It doesn't include\
      \ the actual syntax, but it will include all of the classes I expect to use\
      \ and all of their variables that may be accessed by other classes.. I find\
      \ this helps a lot to avoid running into a situation where you need to access\
      \ a value in a class that you didn't think of and isn't easily procured.</p>\n\
      <p><b>Haral:</b> As far as design documents go, I think the option I like the\
      \ most so far is to make one out of a forum. Make a post regarding every specific\
      \ area of the design and be very, very detailed. Think always of what the people\
      \ implementing it will need to know. Don't worry about being too limiting, because\
      \ you just put in one disclaimer: It's a forum. If you have a thought, reply.\
      \ What you want is a complete design so that even if everything isn't the best,\
      \ there's still something there. You don't have to rely on anyone thinking things\
      \ up later. Then, as things go on, people can easily put in \"this sucks, we\
      \ should change it.\" Just edit the original post as solid decisions get made.\
      \ Don't expect your design to stay the same either, as unless it's exceedingly\
      \ simple, it'll cripple the lasting value of your mod.</p>\n<p><b>MikeY:</b>\
      \ Hi lads, just wondering what prog you made the flow diag. in? I want to make\
      \ one of these, I find it hard in photoshop, but thats probably to do with the\
      \ fact i suck at it&#160;:) Thx.</p>\n<p><b>Csimbi:</b> Looks like a Visio drawing\
      \ to me.</p>\n<p><b>MythOpus:</b> You could do it in word too&#160;:)</p>\n\
      <p><b>MikeY:</b> Cheers, i installed visio, but i can't seem to get the connectors\
      \ curved on the corners and i cant split the connecter, anyone can help?</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.085 seconds\nReal time usage:\
      \ 0.239 seconds\nPreprocessor visited node count: 22/1000000\nPreprocessor generated\
      \ node count: 71/1000000\nPost‐expand include size: 442/2097152 bytes\nTemplate\
      \ argument size: 173/2097152 bytes\nHighest expansion depth: 3/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%   15.701      1 - -total\n100.00%   15.701\
      \      1 - Template:Innerbox\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1416-0!*!0!!*!5!*\
      \ and timestamp 20221118154543 and revision id 40317\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Programmer Typology"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel/Mod Startups"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images:
  - "Legacy_recruitment-programmer-flowchart.png"
  externallinks:
  - "http://www.ataricommunity.com/forums/showthread.php?threadid=266017"
  - "http://www.soma-studios.com"
  - "http://www.soma-studios.com/mark/mark_documents/cd_revolve.pdf"
  sections:
  - toclevel: 1
    level: "2"
    line: "Examples"
    number: "1"
    index: "1"
    fromtitle: "Legacy:How_To_Recruit_A_Programmer"
    byteoffset: 2015
    anchor: "Examples"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:How_To_Recruit_A_Programmer"
    byteoffset: 2827
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "3"
    index: "3"
    fromtitle: "Legacy:How_To_Recruit_A_Programmer"
    byteoffset: 3104
    anchor: "Comments"
  displaytitle: "Legacy:How To Recruit A Programmer"
  iwlinks: []
  wikitext:
    text: "{{innerbox|1=''The original article was posted by James Walkoski in a [http://www.ataricommunity.com/forums/showthread.php?threadid=266017\
      \ forum thread] in Atari's UT2003 coding forum.''}}\n\nThe absolute first thing\
      \ that enters into a coder's head when they see a recruiting post is: \"Why\
      \ should I work for this guy?\" It is not \"Wow, that is a cool idea\" or \"\
      I wish there was a game like that I could play.\" Rather, \"Wow, that sounds\
      \ like a lot of work.\"\n\nBefore someone who knows what they are doing is going\
      \ to sign up you need to provide them with some very important information:\n\
      \n# How much influence will they have on the product based on what they want\
      \ to work on, and what are the technology limitations? We can do anything on\
      \ computers nowadays. The question is always whether or not it is a good idea.\n\
      # What skills do you have aside from \"designer\"? Anyone can have game ideas.\
      \ If your only task for a project is to design it you had better have a design\
      \ doc (five pages or less) written and available and we'd better not have to\
      \ email you for it. (Like someone said above, inherently lazy and anyone who\
      \ thinks they have an original idea worth protecting is so delusioned that we\
      \ won't give them the time of day.)<br>Also, all sorts of other information\
      \ need to be documented as well. Weapon sheets and descriptions, game and front\
      \ end flowcharts, etc. Otherwise the programmers will be waiting on you for\
      \ stuff and the last thing you want to do with their valuable time is squander\
      \ it.\n# What, exactly, have you done already?  If you have nothing or just\
      \ some concept sketches don't bullshit us. We will know. In fact, before you\
      \ go searching for programmers it would be a good idea to have placeholder packages\
      \ made with temporary art that is named correctly. I could go on for a few pages\
      \ about how important that stuff is to us. '''As far as your programmers will\
      \ be concerned placeholder art is more important than the final art.'''\n\n\
      I know that may sound odd or confusing but just trust me on it.\n\n==Examples\
      \ ==\n\nOk, enough of the vague concepts of what to do here are some specific\
      \ examples to help you out:\n# Spell and grammar check your post. These kind\
      \ of errors are easy to catch, but immediately discount you.\n# [http://www.soma-studios.com\
      \ Soma Studios] have a good example of what will interest a programmer. All\
      \ of their information is cleanly laid out and freely available.  Their design\
      \ doc is also very well written and concise: http://www.soma-studios.com/mark/mark_documents/cd_revolve.pdf\
      \ (notice that the gameplay and features are at the start of the doc and the\
      \ story is at the end)\n# Flowcharts. They show organization and thought and\
      \ will increase the workrate of your programmers. Here's an example of a frontend\
      \ flowchart:\n\n[[Image:Legacy_recruitment-programmer-flowchart.png|center|]]\n\
      \n\n\n==Related Topics==\n\n* [[Legacy:Mychaeel/Mod Startups|Mychaeel/Mod Startups]]\
      \ &ndash; Things you should think about ''before'' making a recruitment post.\n\
      * [[Legacy:Programmer Typology|Programmer Typology]] &ndash; There are two different\
      \ types of programmer.  Take your pick.\n\n==Comments==\n\n'''EntropicLqd:'''\
      \ Heh &ndash; not a bad idea for a page.  My very summarised thoughts on the\
      \ topic are:\n* The design doc needs to be as specific as possible.  I wouldn't\
      \ put a limit on its length.  It does need to be as specific as possible.  I\
      \ don't care how much stuff I have to read as long as I can get a good feel\
      \ for the ''scope'' of what I'm being asked to build.  This in turn allows me\
      \ to make a good judgement on whether I can commit to that amount of effort\
      \ or not.\n* In terms of front-end design, a bullet-pointed list of well described\
      \ options is normally sufficient rather than the flow chart above.  If the front\
      \ end has been split into pages already then a page schematic with a bulleted\
      \ point description of the options on each of the pages is sufficient.\n\n'''Mychaeel:'''\
      \ As I personally find making the software design to be the most interesting\
      \ and fun part of development, I prefer if somebody has a clear idea of what\
      \ he/she wants to do and how to get there, but doesn't attempt to dictate my\
      \ every step with an overly specific design document.\n\n'''Chazums:''' Details,\
      \ i like details. how far? how long? how high? Its more irritating to have to\
      \ go and re-do do code because people weren't sure and say \"you decide\" amd\
      \ then come back with a \"not like that tho..\"\n\n'''Mychaeel:''' Bad luck\
      \ on the designer's part then.  Not specifying something means they have to\
      \ live with whatever the coder came up with.  One more reason I prefer taking\
      \ part in creating a design document simply because it's all too easy to end\
      \ up with ambiguities or subtle intra-design contradictions if the design is\
      \ made by somebody who is not ''very'' closely acquainted with the code creation\
      \ process.\n\n'''Chazums:''' Indeed, although i think getting art guys to make\
      \ any kind of solid descision is an art in itself :D\n\n'''Dante:''' I remember\
      \ when some members in the mod I'm working for went nuts as we planned to move\
      \ on to UT2003. I was the only coder back then - and they \"suprised\" me with\
      \ their ideas. Yes, it's actually cool to have aircrafts with transport capabilities\
      \ - and yes, it's also nice to have bots to fly them around... But wait - ''who\
      \ is going to code all those things'' again ? - ARGH! And, I don't want to hear\
      \ that \"it's easy to code\" stuff from people who can only do copy&paste coding,\
      \ or less, anymore.\n\n'''Foxpaw:''' I think it's good to have as specific a\
      \ design document as possible. I do all of my own programming but I still make\
      \ a design document for myself, and when I do I like to include everything possible,\
      \ up to how exactly things will work. It doesn't include the actual syntax,\
      \ but it will include all of the classes I expect to use and all of their variables\
      \ that may be accessed by other classes.. I find this helps a lot to avoid running\
      \ into a situation where you need to access a value in a class that you didn't\
      \ think of and isn't easily procured.\n\n'''Haral:''' As far as design documents\
      \ go, I think the option I like the most so far is to make one out of a forum.\
      \  Make a post regarding every specific area of the design and be very, very\
      \ detailed.  Think always of what the people implementing it will need to know.\
      \  Don't worry about being too limiting, because you just put in one disclaimer:\
      \  It's a forum.  If you have a thought, reply.  What you want is a complete\
      \ design so that even if everything isn't the best, there's still something\
      \ there.  You don't have to rely on anyone thinking things up later.  Then,\
      \ as things go on, people can easily put in \"this sucks, we should change it.\"\
      \  Just edit the original post as solid decisions get made.  Don't expect your\
      \ design to stay the same either, as unless it's exceedingly simple, it'll cripple\
      \ the lasting value of your mod.\n\n'''MikeY:''' Hi lads, just wondering what\
      \ prog you made the flow diag. in? I want to make one of these, I find  it \
      \ hard in photoshop, but thats probably to do with the fact i suck at it :)\
      \ Thx. \n\n'''Csimbi:''' Looks like a Visio drawing to me.\n\n'''MythOpus:'''\
      \ You could do it in word too :)\n\n'''MikeY:''' Cheers, i installed visio,\
      \ but i can't seem to get the connectors curved on the corners and i cant split\
      \ the connecter, anyone can help?"
  properties: []
  revId: 40317
name: "Legacy:How To Recruit A Programmer"
revision:
  revid: 40317
  parentid: 3583
  user: "Wormbo"
  timestamp: 1260144386.000000000
  comment: "formatting fixes"
timestamp: 1668786267.465348000
