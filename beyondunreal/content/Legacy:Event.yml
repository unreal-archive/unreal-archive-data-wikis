---
parse:
  title: "Legacy:Event"
  text:
    text: "<p>An <b>Event</b> is a key <a href=\"/Legacy:Engine_Concept\" title=\"\
      Legacy:Engine Concept\">Engine Concept</a> in Unreal. (For details on the 'event'\
      \ keyword in <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\"\
      >UnrealScript</a> see <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function\
      \ Syntax\">Function Syntax</a>.)</p>\n<p>An \"Event\" is a type of message sent\
      \ during the game by one <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\">Actor</a>\
      \ to other actors. Every event has a name, chosen by the mapper or coder. Certain\
      \ conditions will make an Actor \"call\" an event; and some Actors are \"listening\"\
      \ for a particular event name to be called, and when it does they will react\
      \ in some way.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Properties\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Properties</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"\
      #Triggering_an_Event\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Triggering an Event</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#Chain_of_.22Events.22\"><span class=\"tocnumber\">2.1</span> <span\
      \ class=\"toctext\">Chain of \"Events\"</span></a>\n<ul>\n<li class=\"toclevel-3\
      \ tocsection-4\"><a href=\"#The_Trigger\"><span class=\"tocnumber\">2.1.1</span>\
      \ <span class=\"toctext\">The Trigger</span></a></li>\n<li class=\"toclevel-3\
      \ tocsection-5\"><a href=\"#The_Target\"><span class=\"tocnumber\">2.1.2</span>\
      \ <span class=\"toctext\">The Target</span></a></li>\n<li class=\"toclevel-3\
      \ tocsection-6\"><a href=\"#Dispatchers\"><span class=\"tocnumber\">2.1.3</span>\
      \ <span class=\"toctext\">Dispatchers</span></a></li>\n</ul>\n</li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#Continuous_Events\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Continuous Events</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-8\"><a href=\"#Technical\"><span class=\"\
      tocnumber\">3.1</span> <span class=\"toctext\">Technical</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-9\"><a href=\"#Actors_that_call_an_event_when_touched\"\
      ><span class=\"tocnumber\">3.2</span> <span class=\"toctext\">Actors that call\
      \ an event when touched</span></a></li>\n<li class=\"toclevel-2 tocsection-10\"\
      ><a href=\"#Actors_that_process_events\"><span class=\"tocnumber\">3.3</span>\
      \ <span class=\"toctext\">Actors that process events</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-11\"><a href=\"#Actors_that_listen_for_an_event\"><span\
      \ class=\"tocnumber\">3.4</span> <span class=\"toctext\">Actors that listen\
      \ for an event</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-12\"\
      ><a href=\"#Troubleshooting\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Troubleshooting</span></a></li>\n<li class=\"toclevel-1 tocsection-13\"\
      ><a href=\"#Related_Topics\"><span class=\"tocnumber\">5</span> <span class=\"\
      toctext\">Related Topics</span></a></li>\n<li class=\"toclevel-1 tocsection-14\"\
      ><a href=\"#Discussion\"><span class=\"tocnumber\">6</span> <span class=\"toctext\"\
      >Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Properties\">Properties</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=1\" title=\"\
      Edit section: Properties\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Every actor has two properties under the Events heading:</p>\n<dl>\n<dt>Event</dt>\n\
      <dd>The name of the Event that this actor can call</dd>\n<dt>Tag</dt>\n<dd>The\
      \ name of the Event that will make this actor react – in other words, the name\
      \ of the event that it listens for</dd>\n</dl>\n<p>You can think of this like\
      \ a paging system in a hotel lobby: a groom walks through calling out the event\
      \ name. Any Actor that is set to listen to this event name will respond.</p>\n\
      <p>In the UnrealScript code, this actually works with an <a href=\"/Legacy:Iterator\"\
      \ title=\"Legacy:Iterator\">iterator</a> that looks at every actor in the game.\
      \ Any actors whose Tag matches the event being called have their Trigger function\
      \ executed:</p>\n<dl>\n<dd><b>function Trigger( actor Other, pawn EventInstigator\
      \ )</b></dd>\n</dl>\n<p>This system effectively ties two or more actors together.\
      \ UnrealEd helps you keep track of this by drawing a red line between actors\
      \ with matching Tag and Event properties. You can also list actors by the value\
      \ of their Tag or Event in the <a href=\"/Legacy:Actor_Search\" title=\"Legacy:Actor\
      \ Search\">Actor Search</a> window.</p>\n<p>The properties themselves can be\
      \ set to any string. The important thing is the matching, though it helps to\
      \ use words relevant to the map, eg \"MainDoor\" or \"Explosion\".</p>\n<p>Some\
      \ actors expand on this behaviour, and can call or listen for several events:\
      \ more on this below.</p>\n<h2><span class=\"mw-headline\" id=\"Triggering_an_Event\"\
      >Triggering an Event</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Event?section=2\" title=\"Edit section: Triggering\
      \ an Event\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Starting an Event is called \"triggering\", \"calling\", \"initiating\" or\
      \ \"firing\" it – every mapper or coder has their way of visualizing the process.\
      \ When an actor actually calls an event depends on how its class script and\
      \ its properties. The simplest example is the <a href=\"/Legacy:Trigger\" title=\"\
      Legacy:Trigger\">Trigger</a> actor. This calls its Event whenever a player passes\
      \ through its <a href=\"/Legacy:Collision_Cylinder\" title=\"Legacy:Collision\
      \ Cylinder\">Collision Cylinder</a>.</p>\n<p>All actors whose Tag matches the\
      \ Trigger's Event will receive the message – we say that they have been <i>triggered</i>.\
      \ What these actors then do depends, again, on their own class script and their\
      \ own properties. Some actors will do nothing, some can react, and some can\
      \ trigger other actors in turn.</p>\n<p>It's possible to create complex chains\
      \ of events like this: see <a href=\"/Legacy:Trigger_Systems\" title=\"Legacy:Trigger\
      \ Systems\">Trigger Systems</a> for examples.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Chain_of_.22Events.22\">Chain of \"Events\"</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=3\"\
      \ title=\"Edit section: Chain of &quot;Events&quot;\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p>This is what happens when\
      \ Actors are triggered:</p>\n<h4><span class=\"mw-headline\" id=\"The_Trigger\"\
      >The Trigger</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Event?section=4\" title=\"Edit section: The\
      \ Trigger\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>Player Bob walks into the Trigger's radius:</p>\n<ul>\n<li>Touch( actor Other\
      \ )\n<ul>\n<li>IsRelevant( Other ) checks the actor can actually do stuff</li>\n\
      </ul>\n</li>\n</ul>\n<p>The Trigger runs a ForEach <a href=\"/Legacy:Iterator\"\
      \ title=\"Legacy:Iterator\">iterator</a>, to find matching actors.</p>\n<ul>\n\
      <li>A.Trigger( Other, Other.Instigator )</li>\n</ul>\n<p>where:</p>\n<ul>\n\
      <li>Other is the actor Bob that touched the Trigger.</li>\n<li>Other.Instigator\
      \ is another script chase for another day.</li>\n</ul>\n<h4><span class=\"mw-headline\"\
      \ id=\"The_Target\">The Target</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=5\" title=\"\
      Edit section: The Target\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>function Trigger( actor Other, pawn EventInstigator )</p>\n<p>So...</p>\n\
      <ul>\n<li>Other is the same Other as in Trigger – Bob</li>\n<li>EventInstigator\
      \ is Other.Instigator from before</li>\n</ul>\n<h4><span class=\"mw-headline\"\
      \ id=\"Dispatchers\">Dispatchers</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=6\"\
      \ title=\"Edit section: Dispatchers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>These break the chain:</p>\n<dl>\n<dd>Target.Trigger(\
      \ Self, Instigator )</dd>\n</dl>\n<p>in other words, they pass on themselves\
      \ as the Other for the triggered actor, not the thing that touched the Trigger\
      \ that then triggered the dispatcher. This causes problems with, for example\
      \ the BumpButton state in <a href=\"/Legacy:Mover\" title=\"Legacy:Mover\">movers</a>.\
      \ See <a href=\"/Legacy:Dispatcher\" title=\"Legacy:Dispatcher\">Dispatcher</a>\
      \ for a fix.</p>\n<h2><span class=\"mw-headline\" id=\"Continuous_Events\">Continuous\
      \ Events</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Event?section=7\" title=\"Edit section: Continuous\
      \ Events\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>So far, an Event is a discrete occurence. The player walks into the Trigger,\
      \ something happens. But Events are technically continuous: they don't end until\
      \ the player walks out of the Trigger radius.</p>\n<p>For most setups, the length\
      \ of the event is irrelevant. For example, most doors are set to start opening\
      \ when Triggered, wait when fully open, then close: once Triggered there's no\
      \ way to affect them. From this point of view, an Event is instantaneous.</p>\n\
      <p>However, some actors will respond to being UnTriggered. A door whose InitialState\
      \ is \"TriggerControl\" will start opening when triggered, but will start closing\
      \ as soon as the player steps out of the Trigger's radius. A good example of\
      \ this behavious is the door to the Redeemer in UT's DM-Stalwart-XL.</p>\n<p>Just\
      \ remembered... Triggers can also be set to repeatedly send the trigger message...\
      \ sort of repeating discrete events.... the plot thickens!</p>\n<h3><span class=\"\
      mw-headline\" id=\"Technical\">Technical</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=8\"\
      \ title=\"Edit section: Technical\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Functions to cover:</p>\n<dl>\n<dt>Trigger()&#160;</dt>\n\
      <dd></dd>\n<dt>UnTrigger()&#160;</dt>\n<dd></dd>\n<dt>Touch()&#160;</dt>\n<dd></dd>\n\
      <dt>UnTouch()&#160;</dt>\n<dd></dd>\n</dl>\n<p>In terms of mapping, an event\
      \ is a combination of certain circumstances which occurs during the game and\
      \ especially a string which represents the event for Unreal. This could be player\
      \ touching a <a href=\"/Legacy:Trigger\" title=\"Legacy:Trigger\">Trigger</a>\
      \ or an opening door.</p>\n<p>Mention built-in events too.</p>\n<h3><span class=\"\
      mw-headline\" id=\"Actors_that_call_an_event_when_touched\">Actors that call\
      \ an event when touched</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=9\" title=\"\
      Edit section: Actors that call an event when touched\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<ul>\n<li><a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a>: This is the main actor for calling an\
      \ event. It can be set to react when a player, pawn or indeed any class walks\
      \ into its <a href=\"/Legacy:Collision_Cylinder\" title=\"Legacy:Collision Cylinder\"\
      >collision cylinder</a> or when it suffers a certain amount of damage from being\
      \ shot.</li>\n</ul>\n<h3><span class=\"mw-headline\" id=\"Actors_that_process_events\"\
      >Actors that process events</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=10\" title=\"\
      Edit section: Actors that process events\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>These actors are not affected by players passing through\
      \ their collision cylinder.</p>\n<ul>\n<li><a href=\"/Legacy:Dispatcher\" title=\"\
      Legacy:Dispatcher\">Dispatcher</a>&#160;: this calls a list of events, with\
      \ an optional delay between each call.</li>\n<li><a href=\"/Legacy:RoundRobin\"\
      \ title=\"Legacy:RoundRobin\">RoundRobin</a>&#160;: each time this is triggered\
      \ it calls the next event in a list</li>\n</ul>\n<p>(note this isn't a complete\
      \ list, just some of the important ones)</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Actors_that_listen_for_an_event\">Actors that listen for an event</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Event?section=11\" title=\"Edit section: Actors that listen\
      \ for an event\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ul>\n<li>The Trigger actor itself can be set to wake up or go to sleep when\
      \ triggered by something else.</li>\n</ul>\n<p>(note this isn't a complete list,\
      \ just some of the important ones)</p>\n<h2><span class=\"mw-headline\" id=\"\
      Troubleshooting\">Troubleshooting</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=12\"\
      \ title=\"Edit section: Troubleshooting\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Even simple chains of events can be hard to get right.\
      \ Only actors that set events and tags in the \"Event\" section are linked with\
      \ red lines in the editor, so actors such as Dispatcher are somewhat harder\
      \ to troubleshoot.</p>\n<p>Suggestions:</p>\n<ul>\n<li>Use the CAUSEEVENT console\
      \ command (in <a href=\"/Legacy:PlayerPawn\" title=\"Legacy:PlayerPawn\">PlayerPawn</a>;\
      \ you must be a server admin). It calls Trigger on all actors with the tag given\
      \ as a parameter.</li>\n<li>Test the chain of command: give the first Trigger\
      \ that players walk into a message, and test it in game. You should see the\
      \ message.</li>\n<li>If an actor that is being trigerred is capable of sending\
      \ a player-visible message (eg SpecialEvent), set it up so you can see in game\
      \ whether it has been triggered.</li>\n<li>If triggered movers or pawns don't\
      \ work, create a SpecialEvent that listens for the same event &amp; set it to\
      \ broadcast.</li>\n</ul>\n<p><br /></p>\n<h2><span class=\"mw-headline\" id=\"\
      Related_Topics\">Related Topics</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Event?section=13\" title=\"\
      Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Tag\" title=\"Legacy:Tag\"\
      >Tag</a></li>\n<li>A <a href=\"/Category:Legacy_Basic_Procedure\" title=\"Category:Legacy\
      \ Basic Procedure\">Category:Legacy Basic Procedure</a> on this: <a href=\"\
      /Legacy:Match_These_Tags\" title=\"Legacy:Match These Tags\">Match These Tags</a></li>\n\
      <li><a href=\"/Legacy:Actor_Overview\" title=\"Legacy:Actor Overview\">Actor\
      \ Overview</a> – How to add actors, set properties etc.</li>\n<li><a href=\"\
      /Legacy:Dynamics\" title=\"Legacy:Dynamics\">Dynamics</a> – Main topic page\
      \ for triggers &amp; sounds\n<ul>\n<li><a href=\"/Legacy:Trigger_Systems\" title=\"\
      Legacy:Trigger Systems\">Trigger Systems</a></li>\n<li><a href=\"/Legacy:Types_Of_Trigger\"\
      \ title=\"Legacy:Types Of Trigger\">Types of Trigger</a> – Summary of trigger\
      \ types</li>\n</ul>\n</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Event?section=14\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Unknown:</b>\
      \ How does Trigger deal with a situation when more than 1 player walks into\
      \ the radius? Which player makes UnTrigger occur by leaving?</p>\n<p><b>Birelli:</b>\
      \ Think of it as every player inside the radius is \"holding open the event\"\
      , the event in this case starts when any player enters the Trigger radius and\
      \ is UnTriggered when there are no players left inside the radius of the trigger.</p>\n\
      <p><b>SuperApe:</b> Edited. Refactored some.</p>\n<hr />\n<p><a href=\"/Category:Legacy_Troubleshooting\"\
      \ title=\"Category:Legacy Troubleshooting\">Category:Legacy Troubleshooting</a></p>\n\
      <p><a href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy To Do\">Category:Legacy\
      \ To Do</a> – Answer questions, fill in. Related with <a href=\"/Legacy:Tag\"\
      \ title=\"Legacy:Tag\">Tag</a>.</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.038 seconds\nReal time usage: 0.039 seconds\nPreprocessor visited node count:\
      \ 57/1000000\nPreprocessor generated node count: 76/1000000\nPost‐expand include\
      \ size: 10/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1099-0!*!0!!en!*!*\
      \ and timestamp 20221118014559 and revision id 44527\n -->\n"
  categories:
  - sortkey: "Event"
    name: "Legacy_To_Do"
  - sortkey: "Event"
    name: "Legacy_Troubleshooting"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Collision Cylinder"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:RoundRobin"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:Types Of Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Tag"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  - ns: 100
    exists: true
    name: "Legacy:Iterator"
  - ns: 100
    exists: true
    name: "Legacy:Dispatcher"
  - ns: 100
    exists: true
    name: "Legacy:Actor Search"
  - ns: 100
    exists: true
    name: "Legacy:Trigger Systems"
  - ns: 100
    exists: true
    name: "Legacy:PlayerPawn"
  - ns: 14
    exists: true
    name: "Category:Legacy Basic Procedure"
  - ns: 100
    exists: true
    name: "Legacy:Engine Concept"
  - ns: 100
    exists: true
    name: "Legacy:Function Syntax"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Dynamics"
  - ns: 100
    exists: true
    name: "Legacy:Actor Overview"
  - ns: 14
    exists: true
    name: "Category:Legacy Troubleshooting"
  - ns: 100
    exists: true
    name: "Legacy:Match These Tags"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Properties"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Event"
    byteoffset: 534
    anchor: "Properties"
  - toclevel: 1
    level: "2"
    line: "Triggering an Event"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Event"
    byteoffset: 1802
    anchor: "Triggering_an_Event"
  - toclevel: 2
    level: "3"
    line: "Chain of \"Events\""
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:Event"
    byteoffset: 2670
    anchor: "Chain_of_.22Events.22"
  - toclevel: 3
    level: "4"
    line: "The Trigger"
    number: "2.1.1"
    index: "4"
    fromtitle: "Legacy:Event"
    byteoffset: 2744
    anchor: "The_Trigger"
  - toclevel: 3
    level: "4"
    line: "The Target"
    number: "2.1.2"
    index: "5"
    fromtitle: "Legacy:Event"
    byteoffset: 3136
    anchor: "The_Target"
  - toclevel: 3
    level: "4"
    line: "Dispatchers"
    number: "2.1.3"
    index: "6"
    fromtitle: "Legacy:Event"
    byteoffset: 3320
    anchor: "Dispatchers"
  - toclevel: 1
    level: "2"
    line: "Continuous Events"
    number: "3"
    index: "7"
    fromtitle: "Legacy:Event"
    byteoffset: 3692
    anchor: "Continuous_Events"
  - toclevel: 2
    level: "3"
    line: "Technical"
    number: "3.1"
    index: "8"
    fromtitle: "Legacy:Event"
    byteoffset: 4618
    anchor: "Technical"
  - toclevel: 2
    level: "3"
    line: "Actors that call an event when touched"
    number: "3.2"
    index: "9"
    fromtitle: "Legacy:Event"
    byteoffset: 4987
    anchor: "Actors_that_call_an_event_when_touched"
  - toclevel: 2
    level: "3"
    line: "Actors that process events"
    number: "3.3"
    index: "10"
    fromtitle: "Legacy:Event"
    byteoffset: 5299
    anchor: "Actors_that_process_events"
  - toclevel: 2
    level: "3"
    line: "Actors that listen for an event"
    number: "3.4"
    index: "11"
    fromtitle: "Legacy:Event"
    byteoffset: 5694
    anchor: "Actors_that_listen_for_an_event"
  - toclevel: 1
    level: "2"
    line: "Troubleshooting"
    number: "4"
    index: "12"
    fromtitle: "Legacy:Event"
    byteoffset: 5900
    anchor: "Troubleshooting"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "5"
    index: "13"
    fromtitle: "Legacy:Event"
    byteoffset: 6757
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "6"
    index: "14"
    fromtitle: "Legacy:Event"
    byteoffset: 7188
    anchor: "Discussion"
  displaytitle: "Legacy:Event"
  iwlinks: []
  wikitext:
    text: "An '''Event''' is a key [[Legacy:Engine Concept|Engine Concept]] in Unreal.\
      \ (For details on the 'event' keyword in [[Legacy:UnrealScript|UnrealScript]]\
      \ see [[Legacy:Function Syntax|Function Syntax]].)\n\nAn \"Event\" is a type\
      \ of message sent during the game by one [[Legacy:Actor|Actor]] to other actors.\
      \ Every event has a name, chosen by the mapper or coder. Certain conditions\
      \ will make an Actor \"call\"  an event; and some Actors are \"listening\" for\
      \ a particular event name to be called, and when it does they will react in\
      \ some way.\n\n==Properties==\n\nEvery actor has two properties under the Events\
      \ heading: \n; Event: The name of the Event that this actor can call\n; Tag:\
      \ The name of the Event that will make this actor react &ndash; in other words,\
      \ the name of the event that it listens for\n\nYou can think of this like a\
      \ paging system in a hotel lobby: a groom walks through calling out the event\
      \ name. Any Actor that is set to listen to this event name will respond.\n\n\
      In the UnrealScript code, this actually works with an [[Legacy:Iterator|iterator]]\
      \ that looks at every actor in the game. Any actors whose Tag matches the event\
      \ being called have their Trigger function executed:\n: '''function Trigger(\
      \ actor Other, pawn EventInstigator )'''\n\nThis system effectively ties two\
      \ or more actors together. UnrealEd helps you keep track of this by drawing\
      \ a red line between actors with matching Tag and Event properties. You can\
      \ also list actors by the value of their Tag or Event in the [[Legacy:Actor\
      \ Search|Actor Search]] window.\n\nThe properties themselves can be set to any\
      \ string. The important thing is the matching, though it helps to use words\
      \ relevant to the map, eg \"MainDoor\" or \"Explosion\".\n\nSome actors expand\
      \ on this behaviour, and can call or listen for several events: more on this\
      \ below.\n\n==Triggering an Event==\n\nStarting an Event is called \"triggering\"\
      , \"calling\", \"initiating\" or \"firing\" it &ndash; every mapper or coder\
      \ has their way of visualizing the process. When an actor actually calls an\
      \ event depends on how its class script and its properties. The simplest example\
      \ is the [[Legacy:Trigger|Trigger]] actor. This calls its Event whenever a player\
      \ passes through its [[Legacy:Collision Cylinder|Collision Cylinder]].\n\nAll\
      \ actors whose Tag matches the Trigger's Event will receive the message &ndash;\
      \ we say that they have been ''triggered''. What these actors then do depends,\
      \ again, on their own class script and their own properties. Some actors will\
      \ do nothing, some can react, and some can trigger other actors in turn.\n\n\
      It's possible to create complex chains of events like this: see [[Legacy:Trigger\
      \ Systems|Trigger Systems]] for examples.\n\n===Chain of \"Events\"===\n\nThis\
      \ is what happens when Actors are triggered:\n\n====The Trigger====\n\nPlayer\
      \ Bob walks into the Trigger's radius:\n* Touch( actor Other )\n** IsRelevant(\
      \ Other ) checks the actor can actually do stuff\n\nThe Trigger runs a ForEach\
      \ [[Legacy:Iterator|iterator]], to find matching actors.\n* A.Trigger( Other,\
      \ Other.Instigator )\n\nwhere:\n* Other is the actor Bob that touched the Trigger.\n\
      * Other.Instigator is another script chase for another day.\n\n====The Target====\n\
      \nfunction Trigger( actor Other, pawn EventInstigator )\n\nSo...\n* Other is\
      \ the same Other as in Trigger &ndash; Bob\n* EventInstigator is Other.Instigator\
      \ from before\n\n====Dispatchers====\n\nThese break the chain:\n: Target.Trigger(\
      \ Self, Instigator )\n\nin other words, they pass on themselves as the Other\
      \ for the triggered actor, not the thing that touched the Trigger that then\
      \ triggered the dispatcher. This causes problems with, for example the BumpButton\
      \ state in [[Legacy:Mover|mover]]s. See [[Legacy:Dispatcher|Dispatcher]] for\
      \ a fix.\n\n==Continuous Events ==\n\nSo far, an Event is a discrete occurence.\
      \ The player walks into the Trigger, something happens. But Events are technically\
      \ continuous: they don't end until the player walks out of the Trigger radius.\n\
      \nFor most setups, the length of the event is irrelevant. For example, most\
      \ doors are set to start opening when Triggered, wait when fully open, then\
      \ close: once Triggered there's no way to affect them. From this point of view,\
      \ an Event is instantaneous.\n\nHowever, some actors will respond to being UnTriggered.\
      \ A door whose InitialState is \"TriggerControl\" will start opening when triggered,\
      \ but will start closing as soon as the player steps out of the Trigger's radius.\
      \ A good example of this behavious is the door to the Redeemer in UT's DM-Stalwart-XL.\n\
      \nJust remembered... Triggers can also be set to repeatedly send the trigger\
      \ message... sort of repeating discrete events.... the plot thickens!\n\n===Technical===\n\
      \nFunctions to cover:\n; Trigger() :\n; UnTrigger() :\n; Touch() :\n; UnTouch()\
      \ :\n\nIn terms of mapping, an event is a combination of certain circumstances\
      \ which occurs during the game and especially a string which represents the\
      \ event for Unreal. This could be player touching a [[Legacy:Trigger|Trigger]]\
      \ or an opening door. \n\nMention built-in events too.\n\n===Actors that call\
      \ an event when touched ===\n* [[Legacy:Trigger|Trigger]]: This is the main\
      \ actor for calling an event. It can be set to react when a player, pawn or\
      \ indeed any class walks into its [[Legacy:Collision Cylinder|collision cylinder]]\
      \ or when it suffers a certain amount of damage from being shot.\n\n===Actors\
      \ that process events ===\n\nThese actors are not affected by players passing\
      \ through their collision cylinder.\n* [[Legacy:Dispatcher|Dispatcher]] : this\
      \ calls a list of events, with an optional delay between each call. \n* [[Legacy:RoundRobin|RoundRobin]]\
      \ : each time this is triggered it calls the next event in a list\n\n(note this\
      \ isn't a complete list, just some of the important ones)\n\n===Actors that\
      \ listen for an event ===\n* The Trigger actor itself can be set to wake up\
      \ or go to sleep when triggered by something else.\n\n(note this isn't a complete\
      \ list, just some of the important ones)\n\n==Troubleshooting ==\n\nEven simple\
      \ chains of events can be hard to get right. Only actors that set events and\
      \ tags in the \"Event\" section are linked with red lines in the editor, so\
      \ actors such as Dispatcher are somewhat harder to troubleshoot.\n\nSuggestions:\n\
      * Use the CAUSEEVENT console command (in [[Legacy:PlayerPawn|PlayerPawn]]; you\
      \ must be a server admin).  It calls Trigger on all actors with the tag given\
      \ as a parameter.\n* Test the chain of command: give the first Trigger that\
      \ players walk into a message, and test it in game. You should see the message.\
      \ \n* If an actor that is being trigerred is capable of sending a player-visible\
      \ message (eg SpecialEvent), set it up so you can see in game whether it has\
      \ been triggered.\n* If triggered movers or pawns don't work, create a SpecialEvent\
      \ that listens for the same event & set it to broadcast. \n \n\n==Related Topics\
      \ ==\n* [[Legacy:Tag|Tag]]\n* A [[:Category:Legacy Basic Procedure]] on this:\
      \ [[Legacy:Match These Tags|Match These Tags]]\n* [[Legacy:Actor Overview|Actor\
      \ Overview]] &ndash; How to add actors, set properties etc.\n* [[Legacy:Dynamics|Dynamics]]\
      \ &ndash; Main topic page for triggers & sounds\n** [[Legacy:Trigger Systems|Trigger\
      \ Systems]]\n** [[Legacy:Types Of Trigger|Types of Trigger]] &ndash; Summary\
      \ of trigger types\n\n==Discussion==\n\n'''Unknown:''' How does Trigger deal\
      \ with a situation when more than 1 player walks into the radius? Which player\
      \ makes UnTrigger occur by leaving?\n\n'''Birelli:''' Think of it as every player\
      \ inside the radius is \"holding open the event\", the event in this case starts\
      \ when any player enters the Trigger radius and is UnTriggered when there are\
      \ no players left inside the radius of the trigger.\n\n'''SuperApe:''' Edited.\
      \  Refactored some.\n\n----\n\n[[:Category:Legacy Troubleshooting]]\n\n[[:Category:Legacy\
      \ To Do]] &ndash; Answer questions, fill in.  Related with [[Legacy:Tag|Tag]].\n\
      [[Category:Legacy Troubleshooting|{{PAGENAME}}]]\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 44527
name: "Legacy:Event"
revision:
  revid: 44527
  parentid: 2903
  user: "Krylose"
  timestamp: 1311351579.000000000
  comment: "Minor spelling correction."
timestamp: 1668761391.460983000
