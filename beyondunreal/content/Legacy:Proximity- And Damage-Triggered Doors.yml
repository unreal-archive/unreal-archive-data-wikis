---
parse:
  title: "Legacy:Proximity- And Damage-Triggered Doors"
  text:
    text: "<p>This tutorial will show you a way to create doors that can open when\
      \ shot or when a player approaches it. The door will close after some time if\
      \ no player is near it anymore.</p>\n<p>Using this type of door might help a\
      \ lot when porting Quake maps. It might add a new tactical twist to your map\
      \ since players now can't rely on the opponent being near a door when it opens.\
      \ On the other hand, closing doors will not be as harmful for a fire fight anymore\
      \ because the players can simply shoot it to instantly reopen it, even if the\
      \ door hasn't finished closing yet.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\"\
      >\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1\
      \ tocsection-1\"><a href=\"#Prerequisites\"><span class=\"tocnumber\">1</span>\
      \ <span class=\"toctext\">Prerequisites</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-2\"><a href=\"#Door_Movers\"><span class=\"tocnumber\">2</span>\
      \ <span class=\"toctext\">Door Movers</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-3\"><a href=\"#Door_Controls\"><span class=\"tocnumber\">3</span>\
      \ <span class=\"toctext\">Door Controls</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-4\"><a href=\"#Open.2C_Wait.2C_Close\"><span class=\"tocnumber\"\
      >3.1</span> <span class=\"toctext\">Open, Wait, Close</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-5\"><a href=\"#Don.27t_hurt_me.21\"><span class=\"tocnumber\"\
      >3.2</span> <span class=\"toctext\">Don't hurt me!</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-6\"><a href=\"#Open_up_wide.21\"><span class=\"tocnumber\"\
      >3.3</span> <span class=\"toctext\">Open up wide!</span></a></li>\n</ul>\n</li>\n\
      <li class=\"toclevel-1 tocsection-7\"><a href=\"#Related_Topics\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-8\"><a href=\"#Comments\"><span class=\"tocnumber\"\
      >5</span> <span class=\"toctext\">Comments</span></a></li>\n</ul>\n</div>\n\
      <p></p>\n<h2><span class=\"mw-headline\" id=\"Prerequisites\">Prerequisites</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=1\" title=\"\
      Edit section: Prerequisites\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>In this tutorial we will be creating a multi-part\
      \ door. When any of the door parts is hit, the whole door should open, i.e.\
      \ all parts should start moving at the same time. Unfortunalety, regular movers\
      \ don't provide the neccessary functionality, so we need to use the custom <a\
      \ href=\"/Legacy:DamageTriggerMover\" title=\"Legacy:DamageTriggerMover\">DamageTriggerMover</a>.\
      \ Single-part doors with similar functionality are probably possible with a\
      \ regular <a href=\"/Legacy:Mover\" title=\"Legacy:Mover\">Mover</a> as well,\
      \ but will require a different trigger setup then.</p>\n<p>Our door mechanism\
      \ will consist of:</p>\n<ul>\n<li>two <a href=\"/Legacy:DamageTriggerMover\"\
      \ title=\"Legacy:DamageTriggerMover\">DamageTriggerMovers</a> as the door parts\
      \ (You can add more movers to your door, if you like. This trigger/mover system\
      \ can be extended quite easily.)</li>\n<li>one <a href=\"/Legacy:Trigger\" title=\"\
      Legacy:Trigger\">Trigger</a> to detect player proximity</li>\n<li>one <a href=\"\
      /Legacy:TriggeredCondition\" title=\"Legacy:TriggeredCondition\">TriggeredCondition</a>\
      \ to store the Trigger's state for...</li>\n<li>one <a href=\"/Legacy:ScriptedTrigger\"\
      \ title=\"Legacy:ScriptedTrigger\">ScriptedTrigger</a> (1) that closes the door\
      \ after some time when no player is nearby</li>\n<li>another <a href=\"/Legacy:ScriptedTrigger\"\
      \ title=\"Legacy:ScriptedTrigger\">ScriptedTrigger</a> (2) that opens the door\
      \ when a player touches the Trigger</li>\n</ul>\n<h2><span class=\"mw-headline\"\
      \ id=\"Door_Movers\">Door Movers</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=2\"\
      \ title=\"Edit section: Door Movers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Place your DamageTriggerMovers like you would place\
      \ any regular mover. Set their Object -&gt; InitialState to <i>TriggerToggle</i>,\
      \ match their ReturnGroup -&gt; ReturnGroup names and give them the same MoverEvents\
      \ -&gt; DamageEvent names. It's probably also a good idea to set their Mover\
      \ -&gt; MoverEncroachType to <i>ME_CrushWhenEncroach</i> or <i>ME_IgnoreWhenEncroach</i>,\
      \ so they don't get out of sync when something blocks one of them.</p>\n<p>Now\
      \ you need to decide, which of your movers will be the leader of your door's\
      \ <i>ReturnGroup</i>. This \"leading mover\" will receive the events for opening\
      \ or closing the door. Set its Events -&gt; <a href=\"/Legacy:Tag\" title=\"\
      Legacy:Tag\">Tag</a> to the <a href=\"/Legacy:Event\" title=\"Legacy:Event\"\
      >event</a> you want to control the door with. That event will be fired by the\
      \ ScriptedTriggers and should be unique for each door. You also need to specify\
      \ an event name in MoverEvents -&gt; OpenedEvent, that will be used by ScriptedTrigger\
      \ (1) to find out, when to start checking whether the door should close again.</p>\n\
      <p>Example of mover properties so far:</p>\n<table class=\"wikitable\">\n<tr>\n\
      <td style=\"text-align: center\"><b><i>Property</i></b></td>\n<td style=\"text-align:\
      \ center\"><b><i>Leading Mover</i></b></td>\n<td style=\"text-align: center\"\
      ><b><i>Other Door Parts</i></b></td>\n</tr>\n<tr>\n<td><b>Events -&gt; Tag</b></td>\n\
      <td>MyDoor</td>\n<td>→</td>\n</tr>\n<tr>\n<td><b>Mover -&gt; MoverEncroachType</b></td>\n\
      <td>ME_CrushWhenEncroach</td>\n<td>ME_CrushWhenEncroach</td>\n<td>You could\
      \ also use <i>ME_IgnoreWhenEncraoch</i> here.</td>\n</tr>\n<tr>\n<td><b>MoverEvents\
      \ -&gt; DamageEvent</b></td>\n<td>MyDoorHit</td>\n<td>MyDoorHit</td>\n</tr>\n\
      <tr>\n<td><b>MoverEvents -&gt; OpenedEvent</b></td>\n<td>MyDoorOpened</td>\n\
      <td>→</td>\n</tr>\n<tr>\n<td><b>Object -&gt; InitialState</b></td>\n<td>TriggerToggle</td>\n\
      <td>TriggerToggle</td>\n</tr>\n<tr>\n<td><b>ReturnGroup -&gt; bIsLeader</b></td>\n\
      <td>True</td>\n<td>False</td>\n</tr>\n<tr>\n<td><b>ReturnGroup -&gt; ReturnGroup</b></td>\n\
      <td>MyDoor</td>\n<td>MyDoor</td>\n<td>This is not associated with Tags/Events\
      \ in any way, it's just convenient to use the same name as the leader's Tag.</td>\n\
      </tr>\n</table>\n<p>After setting up the movers as described above, you can\
      \ <a href=\"/Legacy:Playtest\" title=\"Legacy:Playtest\">playtest</a> your map\
      \ and the movers will do exactly... <i>nothing</i>.</p>\n<p>If your movers activate\
      \ when you run into them or shoot them, something is wrong! Make sure they are\
      \ really <a href=\"/Legacy:DamageTriggerMover\" title=\"Legacy:DamageTriggerMover\"\
      >DamageTriggerMovers</a> and that their initial state really is TriggerToggle.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Door_Controls\">Door Controls</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=3\" title=\"\
      Edit section: Door Controls\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Let's add some functionality to the door. The basic\
      \ door control will be handled by a <a href=\"/Legacy:ScriptedTrigger\" title=\"\
      Legacy:ScriptedTrigger\">ScriptedTrigger</a> that opens the door when triggered\
      \ and closes it again after some time. Player proximity is detected by a Trigger.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Open.2C_Wait.2C_Close\">Open, Wait, Close</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=4\" title=\"\
      Edit section: Open, Wait, Close\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><a href=\"/Legacy:Add_An_Actor\" title=\"Legacy:Add\
      \ An Actor\">Add an Actor</a> &gt;&gt; Keypoint &gt;&gt; AIScript &gt;&gt; ScriptedSequence\
      \ &gt;&gt; ScriptedTrigger. It will control the door movers with a script that\
      \ works like this:</p>\n<pre><i>door is closed or closing</i>\n<b>Wait for event</b>\
      \ <i>MyDoorHit</i>\n<b>Trigger event</b> <i>MyDoor</i> (to open the door)\n\
      <b>Wait for event</b> <i>MyDoorOpened</i>\n<i>door is open</i>\n<b>Wait</b>\
      \ <i>2 seconds</i>\n<b>If</b> <i>player is near door</i> (starts a new subsection)\n\
      \  <b>Go to</b> \"<i>door is open</i>\" (to wait a little longer)\n<b>End subsection</b>\n\
      <b>Trigger event</b> <i>MyDoor</i> (to close the door)\n<b>Go to</b> \"<i>door\
      \ is closed or closing</i>\"\n</pre>\n<p>The lines starting with <b>bold</b>\
      \ words in the above algorithm can be translated directly into <a href=\"/Legacy:ScriptedAction\"\
      \ title=\"Legacy:ScriptedAction\">ScriptedActions</a> for <a href=\"/Legacy:ScriptedTrigger\"\
      \ title=\"Legacy:ScriptedTrigger\">ScriptedTrigger</a> (1):</p>\n<table>\n<tr>\n\
      <td></td>\n<td style=\"text-align: center\"><b><i>Action</i></b></td>\n<td style=\"\
      text-align: center\"><b><i>Parameter Name</i></b></td>\n<td style=\"text-align:\
      \ center\"><b><i>Parameter Value</i></b></td>\n<td style=\"text-align: center\"\
      ><b><i>Comment</i></b></td>\n</tr>\n<tr>\n<td>0</td>\n<td><a href=\"/Legacy:ACTION_WaitForEvent\"\
      \ title=\"Legacy:ACTION WaitForEvent\">ACTION_WaitForEvent</a></td>\n<td style=\"\
      text-align: center\">ExternalEvent</td>\n<td style=\"text-align: center\">MyDoorHit</td>\n\
      <td>waits for the door to be hit</td>\n</tr>\n<tr>\n<td>1</td>\n<td><a href=\"\
      /edit/Legacy:ACTION_TriggerEvent?redlink=1\" class=\"new\" title=\"Legacy:ACTION\
      \ TriggerEvent (page does not exist)\">ACTION_TriggerEvent</a></td>\n<td style=\"\
      text-align: center\">Event</td>\n<td style=\"text-align: center\">MyDoor</td>\n\
      <td>opens the door</td>\n</tr>\n<tr>\n<td>2</td>\n<td><a href=\"/Legacy:ACTION_WaitForEvent\"\
      \ title=\"Legacy:ACTION WaitForEvent\">ACTION_WaitForEvent</a></td>\n<td style=\"\
      text-align: center\">ExternalEvent</td>\n<td style=\"text-align: center\">MyDoorOpened</td>\n\
      <td>waits for the door to finish opening</td>\n</tr>\n<tr>\n<td>3</td>\n<td><a\
      \ href=\"/edit/Legacy:ACTION_WaitForTimer?redlink=1\" class=\"new\" title=\"\
      Legacy:ACTION WaitForTimer (page does not exist)\">ACTION_WaitForTimer</a></td>\n\
      <td style=\"text-align: center\">PauseTime</td>\n<td style=\"text-align: center\"\
      >2</td>\n<td>wait 2 seconds</td>\n</tr>\n<tr>\n<td>4</td>\n<td><a href=\"/Legacy:ACTION_IfCondition\"\
      \ title=\"Legacy:ACTION IfCondition\">ACTION_IfCondition</a></td>\n<td style=\"\
      text-align: center\">TriggeredConditionTag</td>\n<td style=\"text-align: center\"\
      >MyDoorProximity</td>\n<td>check, if player is near the door (see next section\
      \ of this tutorial)</td>\n</tr>\n<tr>\n<td>5</td>\n<td><a href=\"/Legacy:ACTION_GotoAction\"\
      \ title=\"Legacy:ACTION GotoAction\">ACTION_GotoAction</a></td>\n<td style=\"\
      text-align: center\">ActionNumber</td>\n<td style=\"text-align: center\">3</td>\n\
      <td>go to action 3 (\"wait 2 seconds\")</td>\n</tr>\n<tr>\n<td>6</td>\n<td><a\
      \ href=\"/edit/Legacy:ACTION_EndSection?redlink=1\" class=\"new\" title=\"Legacy:ACTION\
      \ EndSection (page does not exist)\">ACTION_EndSection</a></td>\n<td style=\"\
      text-align: center\">→</td>\n<td style=\"text-align: center\">→</td>\n<td>end\
      \ of the IfCondition section</td>\n</tr>\n<tr>\n<td>7</td>\n<td><a href=\"/edit/Legacy:ACTION_TriggerEvent?redlink=1\"\
      \ class=\"new\" title=\"Legacy:ACTION TriggerEvent (page does not exist)\">ACTION_TriggerEvent</a></td>\n\
      <td style=\"text-align: center\">Event</td>\n<td style=\"text-align: center\"\
      >MyDoor</td>\n<td>close the door</td>\n</tr>\n<tr>\n<td>8</td>\n<td><a href=\"\
      /Legacy:ACTION_GotoAction\" title=\"Legacy:ACTION GotoAction\">ACTION_GotoAction</a></td>\n\
      <td style=\"text-align: center\">ActionNumber</td>\n<td style=\"text-align:\
      \ center\">0</td>\n<td>go to action 0 (\"wait for the door to be hit\")</td>\n\
      </tr>\n</table>\n<p>You can playtest the map again and the doors should already\
      \ open when you shoot them, even though the If Condition in the script will\
      \ probably throw an error because we haven't placed the specified <a href=\"\
      /Legacy:TriggeredCondition\" title=\"Legacy:TriggeredCondition\">TriggeredCondition</a>\
      \ yet. The door doesn't yet react to player proximity, so you can get crushed\
      \ it you stand between the movers when they close.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Don.27t_hurt_me.21\">Don't hurt me!</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=5\"\
      \ title=\"Edit section: Don't hurt me!\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>To tell the door that a player is still nearby, we\
      \ <a href=\"/Legacy:Add_An_Actor\" title=\"Legacy:Add An Actor\">add an actor</a>\
      \ &gt;&gt; Triggers &gt;&gt; Trigger to the doorway and adjust its collision\
      \ size. If a cylinder doesn't really fit the area you need, <a href=\"/Legacy:Add_A_Volume\"\
      \ title=\"Legacy:Add A Volume\">add a volume</a> with the desired shape and\
      \ match its Volume -&gt; AssociatedActorTag with the Trigger's Events -&gt;\
      \ Tag. Specify the Trigger's Events -&gt; Event (in our example \"MyDoorProximity\"\
      ) and check that its Object -&gt; InitialState is <i>NormalTrigger</i>.</p>\n\
      <p><a href=\"/Legacy:Add_An_Actor\" title=\"Legacy:Add An Actor\">Add an actor</a>\
      \ &gt;&gt; Triggers &gt;&gt; TriggeredCondition and set its Events -&gt; Tag\
      \ to the same as the Trigger's event (in our case \"MyDoorProximity\", again).\
      \ Match its Events -&gt; Tag with the Trigger's Events -&gt; Event and set its\
      \ TriggeredCondition -&gt; bTriggerControlled to True and the other properties\
      \ in that group to false.</p>\n<p>Summary of properties:</p>\n<table class=\"\
      wikitable\">\n<tr>\n<td style=\"text-align: center\"><b><i>Property</i></b></td>\n\
      <td style=\"text-align: center\"><b><i>TriggeredCondition</i></b></td>\n<td\
      \ style=\"text-align: center\"><b><i>Trigger</i></b></td>\n</tr>\n<tr>\n<td>Events\
      \ -&gt; Event</td>\n<td style=\"text-align: center\">→</td>\n<td style=\"text-align:\
      \ center\">MyDoorProximity</td>\n</tr>\n<tr>\n<td>Events -&gt; Tag</td>\n<td\
      \ style=\"text-align: center\">MyDoorProximity</td>\n<td style=\"text-align:\
      \ center\">MyDoorProximityVolume<br />\n<i>(only when using a volume as described\
      \ above)</i></td>\n</tr>\n<tr>\n<td>Object -&gt; InitialState</td>\n<td style=\"\
      text-align: center\">→</td>\n<td style=\"text-align: center\">NormalTrigger</td>\n\
      </tr>\n<tr>\n<td>TriggeredCondition -&gt; bEnabled</td>\n<td style=\"text-align:\
      \ center\">False</td>\n</tr>\n<tr>\n<td>TriggeredCondition -&gt; bToggled</td>\n\
      <td style=\"text-align: center\">False</td>\n</tr>\n<tr>\n<td>TriggeredCondition\
      \ -&gt; bTriggerControlled</td>\n<td style=\"text-align: center\">True</td>\n\
      </tr>\n</table>\n<p>After adding these two actors your damage-triggered door\
      \ should already stay open when a player is nearby, but it still only opens\
      \ when you shoot it.</p>\n<h3><span class=\"mw-headline\" id=\"Open_up_wide.21\"\
      >Open up wide!</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=6\"\
      \ title=\"Edit section: Open up wide!\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Our door is only missing a single feature: It doesn't\
      \ open automatically when a player walks up close to it. We already have a Trigger\
      \ that fires an event when a player touches it, so let's just use it to open\
      \ the door.</p>\n<p>Add another ScriptedTrigger and set it up to translate the\
      \ player proximity event into the door hit event, which already opens the door\
      \ properly:</p>\n<table>\n<tr>\n<td></td>\n<td style=\"text-align: center\"\
      ><b><i>Action</i></b></td>\n<td style=\"text-align: center\"><b><i>Parameter\
      \ Name</i></b></td>\n<td style=\"text-align: center\"><b><i>Parameter Value</i></b></td>\n\
      <td style=\"text-align: center\"><b><i>Comment</i></b></td>\n</tr>\n<tr>\n<td>0</td>\n\
      <td><a href=\"/Legacy:ACTION_WaitForEvent\" title=\"Legacy:ACTION WaitForEvent\"\
      >ACTION_WaitForEvent</a></td>\n<td style=\"text-align: center\">ExternalEvent</td>\n\
      <td style=\"text-align: center\">MyDoorProximity</td>\n<td>waits for a player\
      \ to touch the trigger</td>\n</tr>\n<tr>\n<td>1</td>\n<td><a href=\"/edit/Legacy:ACTION_WaitForTimer?redlink=1\"\
      \ class=\"new\" title=\"Legacy:ACTION WaitForTimer (page does not exist)\">ACTION_WaitForTimer</a></td>\n\
      <td style=\"text-align: center\">PauseTime</td>\n<td style=\"text-align: center\"\
      >0.01</td>\n<td>In my tests the script managed to crash the game with an Infinite\
      \ Recursion message – this prevented it from happening.</td>\n</tr>\n<tr>\n\
      <td>2</td>\n<td><a href=\"/edit/Legacy:ACTION_TriggerEvent?redlink=1\" class=\"\
      new\" title=\"Legacy:ACTION TriggerEvent (page does not exist)\">ACTION_TriggerEvent</a></td>\n\
      <td style=\"text-align: center\">Event</td>\n<td style=\"text-align: center\"\
      >MyDoorHit</td>\n<td>triggers the other ScriptedTrigger, which opens the door</td>\n\
      </tr>\n<tr>\n<td>3</td>\n<td><a href=\"/Legacy:ACTION_GotoAction\" title=\"\
      Legacy:ACTION GotoAction\">ACTION_GotoAction</a></td>\n<td style=\"text-align:\
      \ center\">ActionNumber</td>\n<td style=\"text-align: center\">0</td>\n<td>go\
      \ to action 0 (\"wait for player touch\")</td>\n</tr>\n</table>\n<p>That's all!\
      \ Your door should now open when it gets hit or when a player approaches it\
      \ and will only close again if the player is no longer nearby.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=7\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Mover_Topics\" title=\"Legacy:Mover\
      \ Topics\">Mover Topics</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"\
      Comments\">Comments</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Proximity-_And_Damage-Triggered_Doors?section=8\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>FreshMeat:</b> Would you kindly put some notes\
      \ in here for those of us who only want to proximity trigger double doors? Trying\
      \ to sort out the damage stuff from the proximity stuff has me confused.</p>\n\
      <p><b>Wormbo:</b> Only proximity triggering can be done with regular movers\
      \ and a much simpler setup. I think a good example of proximity-triggered movers\
      \ is the UT2004 map <a rel=\"nofollow\" class=\"external text\" href=\"http://angelmapper.com/inforeconstruct.htm\"\
      >DM-Reconstruct</a> by AngelMapper, which uses it in a very unique way.</p>\n\
      <p><b>Tarquin:</b> Indeed. IIRC, you just stick a <a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a> to detect player presence, and change\
      \ a few settings of the mover.</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.072 seconds\nReal time usage: 0.203 seconds\nPreprocessor visited node count:\
      \ 34/1000000\nPreprocessor generated node count: 54/1000000\nPost‐expand include\
      \ size: 74/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2538-0!*!0!!en!*!*\
      \ and timestamp 20221118020424 and revision id 6070\n -->\n"
  categories:
  - sortkey: "Proximity- And Damage-Triggered Doors"
    name: "Legacy_Mapping"
  - sortkey: "Proximity- And Damage-Triggered Doors"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:ACTION IfCondition"
  - ns: 100
    exists: true
    name: "Legacy:ACTION GotoAction"
  - ns: 100
    exists: false
    name: "Legacy:ACTION WaitForTimer"
  - ns: 100
    exists: true
    name: "Legacy:Tag"
  - ns: 100
    exists: true
    name: "Legacy:Mover Topics"
  - ns: 100
    exists: true
    name: "Legacy:ACTION WaitForEvent"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedAction"
  - ns: 100
    exists: true
    name: "Legacy:Playtest"
  - ns: 100
    exists: true
    name: "Legacy:Event"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedTrigger"
  - ns: 100
    exists: false
    name: "Legacy:ACTION EndSection"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Add An Actor"
  - ns: 100
    exists: true
    name: "Legacy:Add A Volume"
  - ns: 100
    exists: true
    name: "Legacy:DamageTriggerMover"
  - ns: 100
    exists: false
    name: "Legacy:ACTION TriggerEvent"
  - ns: 100
    exists: true
    name: "Legacy:TriggeredCondition"
  templates: []
  images: []
  externallinks:
  - "http://angelmapper.com/inforeconstruct.htm"
  sections:
  - toclevel: 1
    level: "2"
    line: "Prerequisites"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 558
    anchor: "Prerequisites"
  - toclevel: 1
    level: "2"
    line: "Door Movers"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 1663
    anchor: "Door_Movers"
  - toclevel: 1
    level: "2"
    line: "Door Controls"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 3839
    anchor: "Door_Controls"
  - toclevel: 2
    level: "3"
    line: "Open, Wait, Close"
    number: "3.1"
    index: "4"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 4103
    anchor: "Open.2C_Wait.2C_Close"
  - toclevel: 2
    level: "3"
    line: "Don't hurt me!"
    number: "3.2"
    index: "5"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 7023
    anchor: "Don.27t_hurt_me.21"
  - toclevel: 2
    level: "3"
    line: "Open up wide!"
    number: "3.3"
    index: "6"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 8821
    anchor: "Open_up_wide.21"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "4"
    index: "7"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 10370
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "5"
    index: "8"
    fromtitle: "Legacy:Proximity-_And_Damage-Triggered_Doors"
    byteoffset: 10429
    anchor: "Comments"
  displaytitle: "Legacy:Proximity- And Damage-Triggered Doors"
  iwlinks: []
  wikitext:
    text: "This tutorial will show you a way to create doors that can open when shot\
      \ or when a player approaches it. The door will close after some time if no\
      \ player is near it anymore.\n\nUsing this type of door might help a lot when\
      \ porting Quake maps. It might add a new tactical twist to your map since players\
      \ now can't rely on the opponent being near a door when it opens. On the other\
      \ hand, closing doors will not be as harmful for a fire fight anymore because\
      \ the players can simply shoot it to instantly reopen it, even if the door hasn't\
      \ finished closing yet.\n\n==Prerequisites==\n\nIn this tutorial we will be\
      \ creating a multi-part door. When any of the door parts is hit, the whole door\
      \ should open, i.e. all parts should start moving at the same time. Unfortunalety,\
      \ regular movers don't provide the neccessary functionality, so we need to use\
      \ the custom [[Legacy:DamageTriggerMover|DamageTriggerMover]]. Single-part doors\
      \ with similar functionality are probably possible with a regular [[Legacy:Mover|Mover]]\
      \ as well, but will require a different trigger setup then.\n\nOur door mechanism\
      \ will consist of:\n* two [[Legacy:DamageTriggerMover|DamageTriggerMover]]s\
      \ as the door parts (You can add more movers to your door, if you like. This\
      \ trigger/mover system can be extended quite easily.)\n* one [[Legacy:Trigger|Trigger]]\
      \ to detect player proximity\n* one [[Legacy:TriggeredCondition|TriggeredCondition]]\
      \ to store the Trigger's state for...\n* one [[Legacy:ScriptedTrigger|ScriptedTrigger]]\
      \ (1) that closes the door after some time when no player is nearby\n* another\
      \ [[Legacy:ScriptedTrigger|ScriptedTrigger]] (2) that opens the door when a\
      \ player touches the Trigger\n\n==Door Movers==\n\nPlace your DamageTriggerMovers\
      \ like you would place any regular mover. Set their Object -> InitialState to\
      \ ''TriggerToggle'', match their ReturnGroup -> ReturnGroup names and give them\
      \ the same MoverEvents -> DamageEvent names. It's probably also a good idea\
      \ to set their Mover -> MoverEncroachType to ''ME_CrushWhenEncroach'' or ''ME_IgnoreWhenEncroach'',\
      \ so they don't get out of sync when something blocks one of them.\n\nNow you\
      \ need to decide, which of your movers will be the leader of your door's ''ReturnGroup''.\
      \ This \"leading mover\" will receive the events for opening or closing the\
      \ door. Set its Events -> [[Legacy:Tag|Tag]] to the [[Legacy:Event|event]] you\
      \ want to control the door with. That event will be fired by the ScriptedTriggers\
      \ and should be unique for each door. You also need to specify an event name\
      \ in MoverEvents -> OpenedEvent, that will be used by ScriptedTrigger (1) to\
      \ find out, when to start checking whether the door should close again.\n\n\
      Example of mover properties so far:\n\n{| class=\"wikitable\"\n\n|-\n| style=\"\
      text-align: center\" |'''''Property\n| style=\"text-align: center\" |'''''Leading\
      \ Mover\n| style=\"text-align: center\" |'''''Other Door Parts  \n|-\n|'''Events\
      \ -> Tag\n|MyDoor\n|&rarr;                  \n|-\n|'''Mover -> MoverEncroachType\n\
      |ME_CrushWhenEncroach\n|ME_CrushWhenEncroach\n|You could also use ''ME_IgnoreWhenEncraoch''\
      \ here.\n|-\n|'''MoverEvents -> DamageEvent\n|MyDoorHit\n|MyDoorHit        \
      \    \n|-\n|'''MoverEvents -> OpenedEvent\n|MyDoorOpened\n|&rarr;          \
      \        \n|-\n|'''Object -> InitialState\n|TriggerToggle\n|TriggerToggle  \
      \      \n|-\n|'''ReturnGroup -> bIsLeader\n|True\n|False                \n|-\n\
      |'''ReturnGroup -> ReturnGroup\n|MyDoor\n|MyDoor\n|This is not associated with\
      \ Tags/Events in any way, it's just convenient to use the same name as the leader's\
      \ Tag.\n|}\n\nAfter setting up the movers as described above, you can [[Legacy:Playtest|playtest]]\
      \ your map and the movers will do exactly... ''nothing''.\n\nIf your movers\
      \ activate when you run into them or shoot them, something is wrong! Make sure\
      \ they are really [[Legacy:DamageTriggerMover|DamageTriggerMover]]s and that\
      \ their initial state really is TriggerToggle.\n\n==Door Controls==\n\nLet's\
      \ add some functionality to the door. The basic door control will be handled\
      \ by a [[Legacy:ScriptedTrigger|ScriptedTrigger]] that opens the door when triggered\
      \ and closes it again after some time. Player proximity is detected by a Trigger.\n\
      \n===Open, Wait, Close===\n\n[[Legacy:Add An Actor|Add an Actor]] >> Keypoint\
      \ >> AIScript >> ScriptedSequence >> ScriptedTrigger. It will control the door\
      \ movers with a script that works like this:\n ''door is closed or closing''\n\
      \ '''Wait for event''' ''MyDoorHit''\n '''Trigger event''' ''MyDoor'' (to open\
      \ the door)\n '''Wait for event''' ''MyDoorOpened''\n ''door is open''\n '''Wait'''\
      \ ''2 seconds''\n '''If''' ''player is near door'' (starts a new subsection)\n\
      \   '''Go to''' \"''door is open''\" (to wait a little longer)\n '''End subsection'''\n\
      \ '''Trigger event''' ''MyDoor'' (to close the door)\n '''Go to''' \"''door\
      \ is closed or closing''\"\n\nThe lines starting with '''bold''' words in the\
      \ above algorithm can be translated directly into [[Legacy:ScriptedAction|ScriptedAction]]s\
      \ for [[Legacy:ScriptedTrigger|ScriptedTrigger]] (1):\n\n{|\n\n|-\n|\n| style=\"\
      text-align: center\" |'''''Action\n| style=\"text-align: center\" |'''''Parameter\
      \ Name\n| style=\"text-align: center\" |'''''Parameter Value\n| style=\"text-align:\
      \ center\" |'''''Comment \n|-\n|0\n|[[Legacy:ACTION_WaitForEvent|ACTION_WaitForEvent]]\n\
      | style=\"text-align: center\" |ExternalEvent\n| style=\"text-align: center\"\
      \ |MyDoorHit\n|waits for the door to be hit\n|-\n|1\n|[[Legacy:ACTION_TriggerEvent|ACTION_TriggerEvent]]\n\
      | style=\"text-align: center\" |Event\n| style=\"text-align: center\" |MyDoor\n\
      |opens the door\n|-\n|2\n|[[Legacy:ACTION_WaitForEvent|ACTION_WaitForEvent]]\n\
      | style=\"text-align: center\" |ExternalEvent\n| style=\"text-align: center\"\
      \ |MyDoorOpened\n|waits for the door to finish opening\n|-\n|3\n|[[Legacy:ACTION_WaitForTimer|ACTION_WaitForTimer]]\n\
      | style=\"text-align: center\" |PauseTime\n| style=\"text-align: center\" |2\n\
      |wait 2 seconds\n|-\n|4\n|[[Legacy:ACTION_IfCondition|ACTION_IfCondition]]\n\
      | style=\"text-align: center\" |TriggeredConditionTag\n| style=\"text-align:\
      \ center\" |MyDoorProximity\n|check, if player is near the door (see next section\
      \ of this tutorial)\n|-\n|5\n|[[Legacy:ACTION_GotoAction|ACTION_GotoAction]]\n\
      | style=\"text-align: center\" |ActionNumber\n| style=\"text-align: center\"\
      \ |3\n|go to action 3 (\"wait 2 seconds\")\n|-\n|6\n|[[Legacy:ACTION_EndSection|ACTION_EndSection]]\n\
      | style=\"text-align: center\" |&rarr;\n| style=\"text-align: center\" |&rarr;\n\
      |end of the IfCondition section\n|-\n|7\n|[[Legacy:ACTION_TriggerEvent|ACTION_TriggerEvent]]\n\
      | style=\"text-align: center\" |Event\n| style=\"text-align: center\" |MyDoor\n\
      |close the door\n|-\n|8\n|[[Legacy:ACTION_GotoAction|ACTION_GotoAction]]\n|\
      \ style=\"text-align: center\" |ActionNumber\n| style=\"text-align: center\"\
      \ |0\n|go to action 0 (\"wait for the door to be hit\")\n|}\n\nYou can playtest\
      \ the map again and the doors should already open when you shoot them, even\
      \ though the If Condition in the script will probably throw an error because\
      \ we haven't placed the specified [[Legacy:TriggeredCondition|TriggeredCondition]]\
      \ yet. The door doesn't yet react to player proximity, so you can get crushed\
      \ it you stand between the movers when they close.\n\n===Don't hurt me!===\n\
      \nTo tell the door that a player is still nearby, we [[Legacy:Add An Actor|add\
      \ an actor]] >> Triggers >> Trigger to the doorway and adjust its collision\
      \ size. If a cylinder doesn't really fit the area you need, [[Legacy:Add A Volume|add\
      \ a volume]] with the desired shape and match its Volume -> AssociatedActorTag\
      \ with the Trigger's Events -> Tag. Specify the Trigger's Events -> Event (in\
      \ our example \"MyDoorProximity\") and check that its Object -> InitialState\
      \ is ''NormalTrigger''.\n\n[[Legacy:Add An Actor|Add an actor]] >> Triggers\
      \ >> TriggeredCondition and set its Events -> Tag to the same as the Trigger's\
      \ event (in our case \"MyDoorProximity\", again). Match its Events -> Tag with\
      \ the Trigger's Events -> Event and set its TriggeredCondition -> bTriggerControlled\
      \ to True and the other properties in that group to false.\n\nSummary of properties:\n\
      \n{| class=\"wikitable\"\n\n|-\n| style=\"text-align: center\" |'''''Property\n\
      | style=\"text-align: center\" |'''''TriggeredCondition\n| style=\"text-align:\
      \ center\" |'''''Trigger \n|-\n|Events -> Event\n| style=\"text-align: center\"\
      \ |&rarr;\n| style=\"text-align: center\" |MyDoorProximity\n|-\n|Events -> Tag\n\
      | style=\"text-align: center\" |MyDoorProximity\n| style=\"text-align: center\"\
      \ |MyDoorProximityVolume<br />''(only when using a volume as described above)''\n\
      |-\n|Object -> InitialState\n| style=\"text-align: center\" |&rarr;\n| style=\"\
      text-align: center\" |NormalTrigger\n|-\n|TriggeredCondition -> bEnabled\n|\
      \ style=\"text-align: center\" |False\n|-\n|TriggeredCondition -> bToggled\n\
      | style=\"text-align: center\" |False\n|-\n|TriggeredCondition -> bTriggerControlled\n\
      | style=\"text-align: center\" |True\n|}\n\nAfter adding these two actors your\
      \ damage-triggered door should already stay open when a player is nearby, but\
      \ it still only opens when you shoot it.\n\n===Open up wide!===\n\nOur door\
      \ is only missing a single feature: It doesn't open automatically when a player\
      \ walks up close to it. We already have a Trigger that fires an event when a\
      \ player touches it, so let's just use it to open the door.\n\nAdd another ScriptedTrigger\
      \ and set it up to translate the player proximity event into the door hit event,\
      \ which already opens the door properly:\n\n{|\n\n|-\n|\n| style=\"text-align:\
      \ center\" |'''''Action\n| style=\"text-align: center\" |'''''Parameter Name\n\
      | style=\"text-align: center\" |'''''Parameter Value\n| style=\"text-align:\
      \ center\" |'''''Comment \n|-\n|0\n|[[Legacy:ACTION_WaitForEvent|ACTION_WaitForEvent]]\n\
      | style=\"text-align: center\" |ExternalEvent\n| style=\"text-align: center\"\
      \ |MyDoorProximity\n|waits for a player to touch the trigger\n|-\n|1\n|[[Legacy:ACTION_WaitForTimer|ACTION_WaitForTimer]]\n\
      | style=\"text-align: center\" |PauseTime\n| style=\"text-align: center\" |0.01\n\
      |In my tests the script managed to crash the game with an Infinite Recursion\
      \ message &ndash; this prevented it from happening.\n|-\n|2\n|[[Legacy:ACTION_TriggerEvent|ACTION_TriggerEvent]]\n\
      | style=\"text-align: center\" |Event\n| style=\"text-align: center\" |MyDoorHit\n\
      |triggers the other ScriptedTrigger, which opens the door\n|-\n|3\n|[[Legacy:ACTION_GotoAction|ACTION_GotoAction]]\n\
      | style=\"text-align: center\" |ActionNumber\n| style=\"text-align: center\"\
      \ |0\n|go to action 0 (\"wait for player touch\")\n|}\n\nThat's all! Your door\
      \ should now open when it gets hit or when a player approaches it and will only\
      \ close again if the player is no longer nearby.\n\n==Related Topics==\n* [[Legacy:Mover\
      \ Topics|Mover Topics]]\n\n==Comments==\n\n'''FreshMeat:''' Would you kindly\
      \ put some notes in here for those of us who only want to proximity trigger\
      \ double doors? Trying to sort out the damage stuff from the proximity stuff\
      \ has me confused.\n\n'''Wormbo:''' Only proximity triggering can be done with\
      \ regular movers and a much simpler setup. I think a good example of proximity-triggered\
      \ movers is the UT2004 map [http://angelmapper.com/inforeconstruct.htm DM-Reconstruct]\
      \ by AngelMapper, which uses it in a very unique way.\n\n'''Tarquin:''' Indeed.\
      \ IIRC, you just stick a [[Legacy:Trigger|Trigger]] to detect player presence,\
      \ and change a few settings of the mover.\n\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 6070
name: "Legacy:Proximity- And Damage-Triggered Doors"
revision:
  revid: 6070
  parentid: 6071
  user: "AC9F9B49.ipt.aol.com"
  timestamp: 1156589626.000000000
  comment: "*"
timestamp: 1668766589.923239000
