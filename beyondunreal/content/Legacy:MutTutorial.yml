---
parse:
  title: "Legacy:MutTutorial"
  text:
    text: "<p>This Unreal Tournament 2004 Tutorial will take you through the basic\
      \ process of creating a mutator that allows you to alter a players health and\
      \ the number of multi-jumps they can perform.</p>\n<p>You can download the code\
      \ from <a rel=\"nofollow\" class=\"external autonumber\" href=\"http://www.home.earthlink.net/~doodlethe1/MutNeedBetterName.zip\"\
      >[1]</a>, but it might not be as up to date as the code on this page. For the\
      \ original page check out <a href=\"/Legacy:MutTutorial_Code\" title=\"Legacy:MutTutorial\
      \ Code\">MutTutorial code</a>.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n\
      <div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1\
      \ tocsection-1\"><a href=\"#Before_You_Start\"><span class=\"tocnumber\">1</span>\
      \ <span class=\"toctext\">Before You Start</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-2\"><a href=\"#Writing_the_Mutator\"><span class=\"tocnumber\"\
      >2</span> <span class=\"toctext\">Writing the Mutator</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-3\"><a href=\"#Compiling_and_Using_the_Mutator\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Compiling and Using the\
      \ Mutator</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"\
      #Adding_a_Configuration_Window\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Adding a Configuration Window</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-5\"><a href=\"#Useful_Pages\"><span class=\"tocnumber\">5</span>\
      \ <span class=\"toctext\">Useful Pages</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-6\"><a href=\"#Conclusion\"><span class=\"tocnumber\">6</span>\
      \ <span class=\"toctext\">Conclusion</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-7\"><a href=\"#Discussion\"><span class=\"tocnumber\">7</span>\
      \ <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n\
      <h2><span class=\"mw-headline\" id=\"Before_You_Start\">Before You Start</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:MutTutorial?section=1\" title=\"Edit section: Before You\
      \ Start\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>As with the <a href=\"/Legacy:UnrealScript_Hello_World\" title=\"Legacy:UnrealScript\
      \ Hello World\">UnrealScript Hello World</a> tutorial we need to create a directory\
      \ to hold our mutator code. The name of the directory determines the name of\
      \ the package into which your code will be compiled. To that end you need to\
      \ <a href=\"/Legacy:Set_Up_Package_Folders\" title=\"Legacy:Set Up Package Folders\"\
      >Set Up Package Folders</a>:</p>\n<ol>\n<li>Create a directory <code>MutNeedBetterName</code>\
      \ within your UT2004 directory</li>\n<li>Create a directory <code>Classes</code>\
      \ within the <code>MutNeedBetterName</code> you just created.</li>\n</ol>\n\
      <p>You should have the following folder tree:</p>\n<div style=\"font-family:\
      \ monospace; white-space: preserve; line-height: 1em;\">UT2004<br /></div>\n\
      <div style=\"font-family: monospace; white-space: preserve; line-height: 1em;\"\
      >__TREETAG_2__MutNeedBetterName<br /></div>\n<div style=\"font-family: monospace;\
      \ white-space: preserve; line-height: 1em;\">__TREETAG_0____TREETAG_2__Classes<br\
      \ /></div>\n<p>The <b>Mut</b> prefix is used as a convention within UT2004 to\
      \ indicate all packages and classes that relate to mutators. It is not mandatory\
      \ to do this and we could have called our package (and therefore the directory)\
      \ <code>NeedBetterName</code>. It is recommended that you use the conventional\
      \ Mut prefix though for organisations sake.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Writing_the_Mutator\">Writing the Mutator</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MutTutorial?section=2\"\
      \ title=\"Edit section: Writing the Mutator\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Now to actually write some code that can be compiled.</p>\n\
      <p>Within your <code>/UT2004/MutNeedBetterName/Classes</code> directory create\
      \ a file called <code>MutNeedBetterName.uc</code>. All Unreal Script class files\
      \ have an extension of <b>.uc</b>. They <b>must</b> also be named after the\
      \ class file they are contained within.</p>\n<p>Add the following code to the\
      \ file. The code is described after each logical block.</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">class</span> MutNeedBetterName <span\
      \ class=\"kw1\">extends</span> <span class=\"kw9\">Mutator</span>;</pre></div>\n\
      </div>\n<p>This is the class declaration. We are essentially telling the game\
      \ that this is a new class called <code>MutNeedBetterName</code> and that it\
      \ is a type of (it extends, or subclasses) <a href=\"/Legacy:Mutator\" title=\"\
      Legacy:Mutator\">Mutator</a>. And finally, like all good things in life, the\
      \ class declaration is terminated with a semi-colon. You can see <a href=\"\
      /Legacy:Class_Syntax\" title=\"Legacy:Class Syntax\">Class Syntax</a> for more\
      \ information.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">var</span> <span class=\"kw5\">int</span> MultiJumpCount, MultiJumpBoost,\
      \ StartingHealth, MaximumHealth, SuperDuberMaximumHealth; <span class=\"co1\"\
      >// The number of multi-jumps allowed</span>\n<span class=\"co1\">//The boost\
      \ the player gets from a multi-jump and the player's starting health</span></pre></div>\n\
      </div>\n<p>The section above defines three variables (all integers - see <a\
      \ href=\"/Legacy:Variable_Type\" title=\"Legacy:Variable Type\">Variable Types</a>)\
      \ that are all properties of the class being defined.</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> ModifyPlayer<span\
      \ class=\"br0\">(</span><span class=\"kw9\">Pawn</span> Other<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw9\">xPawn</span> x; <span class=\"co1\">//x is a variable</span>\n\
      \  x <span class=\"sy0\">=</span> <span class=\"kw9\">xPawn</span><span class=\"\
      br0\">(</span>Other<span class=\"br0\">)</span>; \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>x <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span><span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n\
      \    x.<span class=\"me0\">MaxMultiJump</span> <span class=\"sy0\">=</span>\
      \ MultiJumpCount;\n    x.<span class=\"me0\">MultiJumpBoost</span> <span class=\"\
      sy0\">=</span> MultiJumpBoost;\n    x.<span class=\"me0\">Health</span> <span\
      \ class=\"sy0\">=</span> StartingHealth;\n    x.<span class=\"me0\">HealthMax</span>\
      \ <span class=\"sy0\">=</span> MaximumHealth;\n    x.<span class=\"me0\">SuperHealthMax</span>\
      \ <span class=\"sy0\">=</span> SuperDuberMaximumHealth;\n  <span class=\"br0\"\
      >}</span>\n  <span class=\"co1\">// YOU FORGOT TO CALL THE SUPERCLASS! THIS\
      \ BREAKS THE MUTATOR CHAIN</span>\n \n  <span class=\"co1\">// Tested this code\
      \ with the Superclass below and it was not recognized (UT2K4)</span>\n  <span\
      \ class=\"co1\">// Super.ModifyPlayer( Pawn Other );</span>\n \n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>The first line declares the function\
      \ (see <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function Syntax\"\
      >Function Syntax</a>). This is the function that actually updates the player's\
      \ attributes. Because our class is a type of Mutator the <code>ModifyPlayer()</code>\
      \ function will be called automatically for every player in the game as they\
      \ spawn.</p>\n<p>The next two lines of code (ignoring the braces) do the following.</p>\n\
      <ul>\n<li>Declare a local (only visible within the function) variable of type\
      \ xPawn (<a href=\"/Legacy:XPawn\" title=\"Legacy:XPawn\">xPawn</a> is a type\
      \ of <a href=\"/Legacy:Pawn\" title=\"Legacy:Pawn\">Pawn</a>, and can be found\
      \ in the xGame package).</li>\n<li>Assign a value to our local variable after\
      \ <a href=\"/Legacy:Typecasting\" title=\"Legacy:Typecasting\">Typecasting</a>\
      \ the value passed in the <code>Other</code> function parameter. Note that if\
      \ <code>Other</code> is not a type of (or subclass) xPawn our local variable\
      \ will contain <code>None</code>.</li>\n</ul>\n<p>The <code>if</code> statement\
      \ checks to see if the local variable has a value by comparing it to the \"\
      empty value\" <code>None</code> using the not equal to (<code>!=</code>) operator.\
      \ See <a href=\"/Legacy:Operators\" title=\"Legacy:Operators\">Operators</a>\
      \ for more information. Remember - if the object referenced by <code>Other</code>\
      \ is not an xPawn our local variable will be equal to (<code>----</code>) None.</p>\n\
      <p>The block of code within the <code>if</code> statement adjusts the player's\
      \ jump and health properties using the values from our mutator's configurable\
      \ properties.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n  MultiJumpCount<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">10</span>\n  MultiJumpBoost<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">50</span>\n  StartingHealth<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">250</span>\n  MaximumHealth<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">250</span>\n  SuperDuberMaximumHealth<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">500</span>\n  GroupName<span class=\"\
      sy0\">=</span><span class=\"st0\">\"MutNeedBetterName\"</span>\n  FriendlyName<span\
      \ class=\"sy0\">=</span><span class=\"st0\">\"What ever you want the Mutator\
      \ to be called\"</span> <span class=\"co1\">//This is the name of the Mutator\
      \ that will display in game</span>\n  Description<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"Changes your initial health and Multi-Jumping ability\"</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>This block of code allows\
      \ you to specify default values for all of your class properties. If a class\
      \ property is declared as configurable then the value within the mutator's ini\
      \ file will be used if available instead of the value specified here. The <a\
      \ href=\"/Legacy:Default_Properties\" title=\"Legacy:Default Properties\">Default\
      \ Properties</a> page contains much more information about how default values\
      \ should be specified.</p>\n<h2><span class=\"mw-headline\" id=\"Compiling_and_Using_the_Mutator\"\
      >Compiling and Using the Mutator</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MutTutorial?section=3\"\
      \ title=\"Edit section: Compiling and Using the Mutator\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>Next add this code to the\
      \ file UT2004.ini: \"EditPackages=MutNeedBetterName\"</p>\n<p>Move the folder\
      \ MutNeedBetterName into C:\\UT2004 (or where ever you installed UT2004)</p>\n\
      <p>Move the file MutNeedBetterName.int into UT2004\\system</p>\n<p>Open Command\
      \ line (a quick way to do this is to open \"run\" and type cmd)</p>\n<p>type\
      \ in \"C:\\UT2004\\System\\ucc make\" press enter and wait.</p>\n<p>Ucc will\
      \ go through all the folders and if you edited your UT2004[or 3 i think].ini\
      \ right it should go through your folder.</p>\n<p>Hopefully it will say success,\
      \ there were no errors. If it does run Unreal Tourney and you will see under\
      \ mutators Mutation Tutorial.</p>\n<h2><span class=\"mw-headline\" id=\"Adding_a_Configuration_Window\"\
      >Adding a Configuration Window</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MutTutorial?section=4\"\
      \ title=\"Edit section: Adding a Configuration Window\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>If you want to allow your\
      \ mutator's configurable parameters to be changed from the standard UT2004 mutator\
      \ config window then please see the <a href=\"/Legacy:Mutator_Config_GUI_(UT2004)\"\
      \ title=\"Legacy:Mutator Config GUI (UT2004)\">Mutator Config GUI (UT2004)</a>\
      \ reference.</p>\n<h2><span class=\"mw-headline\" id=\"Useful_Pages\">Useful\
      \ Pages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:MutTutorial?section=5\" title=\"Edit section:\
      \ Useful Pages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Compiler_Errors\" title=\"Legacy:Compiler Errors\"\
      >Compiler Errors</a></li>\n</ul>\n<hr />\n<h2><span class=\"mw-headline\" id=\"\
      Conclusion\">Conclusion</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MutTutorial?section=6\"\
      \ title=\"Edit section: Conclusion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>You should now have code that looks like this (without\
      \ the comments): <a href=\"/Legacy:MutTutorial_Code\" title=\"Legacy:MutTutorial\
      \ Code\">MutTutorial Code</a></p>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:MutTutorial?section=7\" title=\"Edit section:\
      \ Discussion\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>See <a href=\"/Legacy_talk:MutTutorial\" title=\"Legacy talk:MutTutorial\"\
      >Legacy talk:MutTutorial</a>.</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.105 seconds\nReal time usage: 0.219 seconds\nPreprocessor visited node count:\
      \ 66/1000000\nPreprocessor generated node count: 136/1000000\nPost‐expand include\
      \ size: 45/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2176-0!*!0!!en!*!*\
      \ and timestamp 20221118014751 and revision id 34502\n -->\n"
  categories:
  - sortkey: "MutTutorial"
    name: "Legacy_Tutorial"
  - sortkey: "MutTutorial"
    name: "Legacy_Refactor_Me"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mutator Config GUI (UT2004)"
  - ns: 100
    exists: true
    name: "Legacy:Typecasting"
  - ns: 100
    exists: true
    name: "Legacy:Mutator"
  - ns: 101
    exists: true
    name: "Legacy talk:MutTutorial"
  - ns: 100
    exists: true
    name: "Legacy:Class Syntax"
  - ns: 100
    exists: true
    name: "Legacy:Set Up Package Folders"
  - ns: 100
    exists: true
    name: "Legacy:Pawn"
  - ns: 100
    exists: true
    name: "Legacy:Operators"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Hello World"
  - ns: 100
    exists: true
    name: "Legacy:Compiler Errors"
  - ns: 100
    exists: true
    name: "Legacy:Default Properties"
  - ns: 100
    exists: true
    name: "Legacy:Variable Type"
  - ns: 100
    exists: true
    name: "Legacy:Function Syntax"
  - ns: 100
    exists: true
    name: "Legacy:MutTutorial Code"
  - ns: 100
    exists: true
    name: "Legacy:XPawn"
  templates: []
  images: []
  externallinks:
  - "http://www.home.earthlink.net/~doodlethe1/MutNeedBetterName.zip"
  sections:
  - toclevel: 1
    level: "2"
    line: "Before You Start"
    number: "1"
    index: "1"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 427
    anchor: "Before_You_Start"
  - toclevel: 1
    level: "2"
    line: "Writing the Mutator"
    number: "2"
    index: "2"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 1387
    anchor: "Writing_the_Mutator"
  - toclevel: 1
    level: "2"
    line: "Compiling and Using the Mutator"
    number: "3"
    index: "3"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 5304
    anchor: "Compiling_and_Using_the_Mutator"
  - toclevel: 1
    level: "2"
    line: "Adding a Configuration Window"
    number: "4"
    index: "4"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 5954
    anchor: "Adding_a_Configuration_Window"
  - toclevel: 1
    level: "2"
    line: "Useful Pages"
    number: "5"
    index: "5"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 6209
    anchor: "Useful_Pages"
  - toclevel: 1
    level: "2"
    line: "Conclusion"
    number: "6"
    index: "6"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 6278
    anchor: "Conclusion"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "7"
    index: "7"
    fromtitle: "Legacy:MutTutorial"
    byteoffset: 6410
    anchor: "Discussion"
  displaytitle: "Legacy:MutTutorial"
  iwlinks: []
  wikitext:
    text: "This Unreal Tournament 2004 Tutorial will take you through the basic process\
      \ of creating a mutator that allows you to alter a players health and the number\
      \ of multi-jumps they can perform.\n\nYou can download the code from [http://www.home.earthlink.net/~doodlethe1/MutNeedBetterName.zip],\
      \ but it might not be as up to date as the code on this page. For the original\
      \ page check out [[Legacy:MutTutorial Code|MutTutorial code]].\n\n==Before You\
      \ Start==\n\nAs with the [[Legacy:UnrealScript Hello World|UnrealScript Hello\
      \ World]] tutorial we need to create a directory to hold our mutator code. \
      \ The name of the directory determines the name of the package into which your\
      \ code will be compiled.  To that end you need to [[Legacy:Set Up Package Folders|Set\
      \ Up Package Folders]]:\n\n# Create a directory <CODE>MutNeedBetterName</CODE>\
      \ within your UT2004 directory\n# Create a directory <CODE>Classes</CODE> within\
      \ the <CODE>MutNeedBetterName</CODE> you just created.\n\nYou should have the\
      \ following folder tree:\n\n+ UT2004 \n\n++ MutNeedBetterName\n\n+++ Classes\n\
      \nThe '''Mut''' prefix is used as a convention within UT2004 to indicate all\
      \ packages and classes that relate to mutators.  It is not mandatory to do this\
      \ and we could have called our package (and therefore the directory) <CODE>NeedBetterName</CODE>.\
      \  It is recommended that you use the conventional Mut prefix though for organisations\
      \ sake.\n\n==Writing the Mutator==\n\nNow to actually write some code that can\
      \ be compiled.\n\nWithin your <CODE>/UT2004/MutNeedBetterName/Classes</CODE>\
      \ directory create a file called <CODE>MutNeedBetterName.uc</CODE>.  All Unreal\
      \ Script class files have an extension of '''.uc'''.  They '''must''' also be\
      \ named after the class file they are contained within.\n\nAdd the following\
      \ code to the file.  The code is described after each logical block.\n\n<uscript>\n\
      class MutNeedBetterName extends Mutator;\n</uscript>\n\nThis is the class declaration.\
      \  We are essentially telling the game that this is a new class called <CODE>MutNeedBetterName</CODE>\
      \ and that it is a type of (it extends, or subclasses) [[Legacy:Mutator|Mutator]].\
      \ And finally, like all good things in life, the class declaration is terminated\
      \ with a semi-colon.  You can see [[Legacy:Class Syntax|Class Syntax]] for more\
      \ information.\n\n<uscript>\nvar int MultiJumpCount, MultiJumpBoost, StartingHealth,\
      \ MaximumHealth, SuperDuberMaximumHealth; // The number of multi-jumps allowed\n\
      //The boost the player gets from a multi-jump and the player's starting health\n\
      </uscript>\n\nThe section above defines three variables (all integers - see\
      \ [[Legacy:Variable Type|Variable Type]]s) that are all properties of the class\
      \ being defined.\n\n<uscript>\nfunction ModifyPlayer(Pawn Other)\n{\n  local\
      \ xPawn x; //x is a variable\n  x = xPawn(Other); \n  if (x != None)\n  {\n\
      \    x.MaxMultiJump = MultiJumpCount;\n    x.MultiJumpBoost = MultiJumpBoost;\n\
      \    x.Health = StartingHealth;\n    x.HealthMax = MaximumHealth;\n    x.SuperHealthMax\
      \ = SuperDuberMaximumHealth;\n  }\n  // YOU FORGOT TO CALL THE SUPERCLASS! THIS\
      \ BREAKS THE MUTATOR CHAIN\n\n  // Tested this code with the Superclass below\
      \ and it was not recognized (UT2K4)\n  // Super.ModifyPlayer( Pawn Other );\n\
      \n}\n</uscript>\n\nThe first line declares the function (see [[Legacy:Function\
      \ Syntax|Function Syntax]]).  This is the function that actually updates the\
      \ player's attributes.  Because our class is a type of Mutator the <CODE>ModifyPlayer()</CODE>\
      \ function will be called automatically for every player in the game as they\
      \ spawn.\n\nThe next two lines of code (ignoring the braces) do the following.\n\
      * Declare a local (only visible within the function) variable of type xPawn\
      \ ([[Legacy:XPawn|xPawn]] is a type of [[Legacy:Pawn|Pawn]], and can be found\
      \ in the xGame package).\n* Assign a value to our local variable after [[Legacy:Typecasting|Typecasting]]\
      \ the value passed in the <CODE>Other</CODE> function parameter.  Note that\
      \ if <CODE>Other</CODE> is not a type of (or subclass) xPawn our local variable\
      \ will contain <CODE>None</CODE>.\n\nThe <CODE>if</CODE> statement checks to\
      \ see if the local variable has a value by comparing it to the \"empty value\"\
      \ <CODE>None</CODE> using the not equal to (<CODE>!=</CODE>) operator.  See\
      \ [[Legacy:Operators|Operators]] for more information.  Remember - if the object\
      \ referenced by <CODE>Other</CODE> is not an xPawn our local variable will be\
      \ equal to (<CODE>----</CODE>) None.\n\nThe block of code within the <CODE>if</CODE>\
      \ statement adjusts the player's jump and health properties using the values\
      \ from our mutator's configurable properties.\n\n<uscript>\ndefaultproperties\n\
      {\n  MultiJumpCount=10\n  MultiJumpBoost=50\n  StartingHealth=250\n  MaximumHealth=250\n\
      \  SuperDuberMaximumHealth=500\n  GroupName=\"MutNeedBetterName\"\n  FriendlyName=\"\
      What ever you want the Mutator to be called\" //This is the name of the Mutator\
      \ that will display in game\n  Description=\"Changes your initial health and\
      \ Multi-Jumping ability\"\n}\n</uscript>\n\nThis block of code allows you to\
      \ specify default values for all of your class properties.  If a class property\
      \ is declared as configurable then the value within the mutator's ini file will\
      \ be used if available instead of the value specified here.  The [[Legacy:Default\
      \ Properties|Default Properties]] page contains much more information about\
      \ how default values should be specified.\n\n==Compiling and Using the Mutator==\n\
      \nNext add this code to the file UT2004.ini: \"EditPackages=MutNeedBetterName\"\
      \n\nMove the folder MutNeedBetterName into C:\\UT2004 (or where ever you installed\
      \ UT2004)\n\nMove the file MutNeedBetterName.int into UT2004\\system\n\nOpen\
      \ Command line (a quick way to do this is to open \"run\" and type cmd)\n\n\
      type in \"C:\\UT2004\\System\\ucc make\" press enter and wait.\n\nUcc will go\
      \ through all the folders and if you edited your UT2004[or 3 i think].ini right\
      \ it should go through your folder.\n\nHopefully it will say success, there\
      \ were no errors. If it does run Unreal Tourney and you will see under mutators\
      \ Mutation Tutorial.\n\n==Adding a Configuration Window==\n\nIf you want to\
      \ allow your mutator's configurable parameters to be changed from the standard\
      \ UT2004 mutator config window then please see the [[Legacy:Mutator Config GUI\
      \ (UT2004)|Mutator Config GUI (UT2004)]] reference.\n\n==Useful Pages==\n* [[Legacy:Compiler\
      \ Errors|Compiler Errors]]\n\n----\n\n==Conclusion==\n\nYou should now have\
      \ code that looks like this (without the comments): [[Legacy:MutTutorial Code|MutTutorial\
      \ Code]]\n\n==Discussion==\nSee [[{{TALKPAGENAME}}]].\n\n[[Category:Legacy Refactor\
      \ Me|{{PAGENAME}}]]\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 34502
name: "Legacy:MutTutorial"
revision:
  revid: 34502
  parentid: 32312
  user: "70.24.14.46"
  timestamp: 1245304234.000000000
  comment: "/* Writing the Mutator */"
timestamp: 1668764342.400714000
