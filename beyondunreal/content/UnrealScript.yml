---
parse:
  title: "UnrealScript"
  text:
    text: "<dl>\n<dd><i>See <a href=\"/UnrealScript_overview\" title=\"UnrealScript\
      \ overview\">UnrealScript overview</a> for all Unreal Wiki topics about learning\
      \ and using UnrealScript.</i></dd>\n</dl>\n<p><a href=\"http://en.wikipedia.org/wiki/UnrealScript\"\
      \ class=\"extiw\" title=\"wp:UnrealScript\">UnrealScript</a> is the <a href=\"\
      /Unreal_Engine\" title=\"Unreal Engine\" class=\"mw-redirect\">Unreal Engine</a>'s\
      \ <a href=\"http://en.wikipedia.org/wiki/scripting_language\" class=\"extiw\"\
      \ title=\"wp:scripting language\">scripting language</a>. It is a <a href=\"\
      http://en.wikipedia.org/wiki/Type_system#Static_typing\" class=\"extiw\" title=\"\
      wp:Type system\">staticly</a>/<a href=\"http://en.wikipedia.org/wiki/strongly-typed\"\
      \ class=\"extiw\" title=\"wp:strongly-typed\">strongly-typed</a>, <a href=\"\
      http://en.wikipedia.org/wiki/object-oriented\" class=\"extiw\" title=\"wp:object-oriented\"\
      >object-oriented</a> and <a href=\"http://en.wikipedia.org/wiki/Event-driven_programming\"\
      \ class=\"extiw\" title=\"wp:Event-driven programming\">event-driven</a> programming\
      \ language very similar to <a href=\"http://en.wikipedia.org/wiki/Java_(programming_language)\"\
      \ class=\"extiw\" title=\"wp:Java (programming language)\">Java</a> and <a href=\"\
      http://en.wikipedia.org/wiki/C%2B%2B\" class=\"extiw\" title=\"wp:C++\">C++</a>,\
      \ with some influences from <a href=\"http://en.wikipedia.org/wiki/Visual_Basic\"\
      \ class=\"extiw\" title=\"wp:Visual Basic\">Visual Basic</a>. If you want to\
      \ learn UnrealScript, you should make yourself familiar with the fundamental\
      \ concepts of object-oriented programming. It definitely helps already to know\
      \ another programming language, preferably one that is strongly-typed and object-oriented\
      \ as well.</p>\n<h2><span class=\"mw-headline\" id=\"Anatomy_of_an_UnrealScript_source_file\"\
      >Anatomy of an UnrealScript source file</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/UnrealScript?section=1\"\
      \ title=\"Edit section: Anatomy of an UnrealScript source file\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>A typical UnrealScript\
      \ source file might look similar to the following example from <a href=\"/Unreal_Tournament_2004\"\
      \ title=\"Unreal Tournament 2004\">UT2004</a>:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <ol>\n<li class=\"li1\">\n<pre class=\"de1\"><span class=\"kw1\">class</span>\
      \ DMRosterBeatTeam <span class=\"kw1\">extends</span> xDMRoster;</pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li1\">\n<pre\
      \ class=\"de1\"><span class=\"coMULTI\">/*</span></pre></li>\n<li class=\"li1\"\
      >\n<pre class=\"de1\"><span class=\"coMULTI\"> * Roster for deathmatch levels.</span></pre></li>\n\
      <li class=\"li2\">\n<pre class=\"de2\"><span class=\"coMULTI\"> * Each level\
      \ has its own roster.  </span></pre></li>\n<li class=\"li1\">\n<pre class=\"\
      de1\"><span class=\"coMULTI\"> * This special roster subclass is used to populate\
      \ an enemy team with the</span></pre></li>\n<li class=\"li1\">\n<pre class=\"\
      de1\"><span class=\"coMULTI\"> * player's selected teammates.</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"><span class=\"coMULTI\"> */</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li2\">\n<pre\
      \ class=\"de2\"><span class=\"co1\">// called immediately after spawning the\
      \ roster class</span></pre></li>\n<li class=\"li1\">\n<pre class=\"de1\"><span\
      \ class=\"kw1\">function</span> Initialize<span class=\"br0\">(</span><span\
      \ class=\"kw5\">int</span> TeamBots<span class=\"br0\">)</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"><span class=\"br0\">{</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\t<span class=\"kw1\">local</span> GameProfile\
      \ GP;</pre></li>\n<li class=\"li1\">\n<pre class=\"de1\">\t<span class=\"kw1\"\
      >local</span> <span class=\"kw5\">int</span> i, j;</pre></li>\n<li class=\"\
      li2\">\n<pre class=\"de2\"> </pre></li>\n<li class=\"li1\">\n<pre class=\"de1\"\
      >\tGP <span class=\"sy0\">=</span> <span class=\"kw7\">Level</span>.<span class=\"\
      kw7\">Game</span>.<span class=\"me0\">CurrentGameProfile</span>;</pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span> GP <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >none</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\t\t<span class=\"kw3\">Log</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"DMRosterBeatTeam::Initialized()\
      \ failed.  GameProfile == none.\"</span><span class=\"br0\">)</span>;</pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\t\t<span class=\"kw2\">return</span>;</pre></li>\n\
      <li class=\"li2\">\n<pre class=\"de2\">\t<span class=\"br0\">}</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li1\">\n<pre\
      \ class=\"de1\">\t<span class=\"co1\">// create roster entries for single player's\
      \ teammates</span></pre></li>\n<li class=\"li1\">\n<pre class=\"de1\">\t<span\
      \ class=\"kw2\">for</span> <span class=\"br0\">(</span> i<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>GP.<span\
      \ class=\"me0\">PlayerTeam</span>.<span class=\"me0\">Length</span>; i<span\
      \ class=\"sy0\">++</span> <span class=\"br0\">)</span></pre></li>\n<li class=\"\
      li1\">\n<pre class=\"de1\">\t<span class=\"br0\">{</span></pre></li>\n<li class=\"\
      li2\">\n<pre class=\"de2\">\t\tj <span class=\"sy0\">=</span> Roster.<span class=\"\
      me0\">Length</span>;</pre></li>\n<li class=\"li1\">\n<pre class=\"de1\">\t\t\
      Roster.<span class=\"me0\">Length</span> <span class=\"sy0\">=</span> Roster.<span\
      \ class=\"me0\">Length</span> <span class=\"sy0\">+</span> <span class=\"nu0\"\
      >1</span>;</pre></li>\n<li class=\"li1\">\n<pre class=\"de1\">\t\tRoster<span\
      \ class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'xRosterEntry'</span>.<span\
      \ class=\"kw1\">Static</span>.<span class=\"me0\">CreateRosterEntryCharacter</span><span\
      \ class=\"br0\">(</span>GP.<span class=\"me0\">PlayerTeam</span><span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span>;</pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\t<span class=\"br0\">}</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li2\">\n<pre\
      \ class=\"de2\">\t<span class=\"co1\">// remaining team-specific info, might\
      \ be used in menus at some point</span></pre></li>\n<li class=\"li1\">\n<pre\
      \ class=\"de1\">\tTeamName <span class=\"sy0\">=</span> GP.<span class=\"me0\"\
      >TeamName</span>;</pre></li>\n<li class=\"li1\">\n<pre class=\"de1\">\tTeamSymbolName\
      \ <span class=\"sy0\">=</span> GP.<span class=\"me0\">TeamSymbolName</span>;</pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li1\">\n<pre\
      \ class=\"de1\">\t<span class=\"kw6\">super</span>.<span class=\"me0\">Initialize</span><span\
      \ class=\"br0\">(</span>TeamBots<span class=\"br0\">)</span>;</pre></li>\n<li\
      \ class=\"li2\">\n<pre class=\"de2\"><span class=\"br0\">}</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\"> </pre></li>\n<li class=\"li1\">\n<pre\
      \ class=\"de1\"><span class=\"kw1\">defaultproperties</span></pre></li>\n<li\
      \ class=\"li1\">\n<pre class=\"de1\"><span class=\"br0\">{</span></pre></li>\n\
      <li class=\"li1\">\n<pre class=\"de1\">\tTeamName<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"Death Match\"</span></pre></li>\n<li class=\"li2\">\n<pre\
      \ class=\"de2\">\tTeamSymbolName<span class=\"sy0\">=</span><span class=\"st0\"\
      >\"TeamSymbols_UT2003.Sym01\"</span></pre></li>\n<li class=\"li1\">\n<pre class=\"\
      de1\"><span class=\"br0\">}</span></pre></li>\n</ol>\n</div>\n</div>\n<p>As\
      \ you can see, UnrealScript is a <a href=\"http://en.wikipedia.org/wiki/curly_brace_programming_language\"\
      \ class=\"extiw\" title=\"wp:curly brace programming language\">curly brace\
      \ programming language</a>: blocks of code are enclosed in curly braces. Each\
      \ code statement is either followed by a block or terminated by a semicolon.</p>\n\
      <ul>\n<li>Line 1 contains the mandatory <a href=\"/Class_declaration\" title=\"\
      Class declaration\" class=\"mw-redirect\">class declaration</a>. This file contains\
      \ a class with the name <a href=\"/UE2:DMRosterBeatTeam_(UT2004)\" title=\"\
      UE2:DMRosterBeatTeam (UT2004)\">DMRosterBeatTeam</a>. The <a href=\"/Extends_clause\"\
      \ title=\"Extends clause\">extends clause</a> specifies that this class <a href=\"\
      http://en.wikipedia.org/wiki/Inheritance_(computer_science)\" class=\"extiw\"\
      \ title=\"wp:Inheritance (computer science)\">inherits</a> attributes, methods\
      \ and other class members from a class with the name <a href=\"/UE2:XDMRoster_(UT2004)\"\
      \ title=\"UE2:XDMRoster (UT2004)\">xDMRoster</a>, which is said to be the \"\
      super class\" or \"parent class\" of DMRosterBeatTeam.</li>\n<li>Lines 3 to\
      \ 8 are an example for a <a href=\"/Comments#Block_comments\" title=\"Comments\"\
      >block comment</a>. The important parts here are the characters <code>/*</code>\
      \ on line 3 and <code>*/</code> on line 8. Everything between them is ignored\
      \ by the UnrealScript compiler.</li>\n<li>Line 10 contains another type of comment,\
      \ an end-of-line comment or just <a href=\"/Comments#Line_comments\" title=\"\
      Comments\">line comment</a>. Outside of block comments this type of comment\
      \ starts with the characters <code>//</code> and continues to the end of the\
      \ same line. As with block comments, everything on the line following the double\
      \ slashes is ignored by the compiler.</li>\n<li>Line 11 contains a <a href=\"\
      /Function_declarations\" title=\"Function declarations\" class=\"mw-redirect\"\
      >declaration</a> for an <a href=\"/edit/Instance_function?redlink=1\" class=\"\
      new\" title=\"Instance function (page does not exist)\">instance function</a>.\
      \ The function's name is specified to be \"Initialize\" and the function has\
      \ one parameter of type <a href=\"/Types#int\" title=\"Types\">int</a> called\
      \ \"TeamBots\". The block of code on lines 12 to 35 is the function's \"body\"\
      . Some functions do not have a body. The declaration of those functions is terminated\
      \ by a semicolon instead.</li>\n<li>The line 13 declares a local variable of\
      \ <a href=\"/Types#Object\" title=\"Types\">type</a> <a href=\"/UE2:GameProfile_(UT2004)\"\
      \ title=\"UE2:GameProfile (UT2004)\">GameProfile</a>, a class defined elsewhere,\
      \ and gives it the name \"GP\". The variable is initially empty.</li>\n<li>Line\
      \ 16 assigns a value to the local variable \"GP\" so it no longer is empty.\
      \ To determine the value, the function accesses the variable \"Level\". This\
      \ variable is not declared here, but in a parent class of DMRosterBeatTeam.\
      \ The object referenced by \"Level\" has a variable of its own, called \"Game\"\
      , whose contained object in turn has a variable called \"CurrentGameProfile\"\
      . The content of that variable is assigned to our local \"GP\" variable.</li>\n\
      <li>On line 17 there's an <a href=\"/If_statement\" title=\"If statement\">If\
      \ statement</a> with a block of code that ends on line 20. That block of code\
      \ is only executed if the expression in the parentheses following the keyword\
      \ <i>If</i> returns the value <i>True</i>. The <i>If</i> condition checks, whether\
      \ the content of the local \"GP\" variable equals the special value <i>None</i>,\
      \ which simply means \"empty\".</li>\n<li>Lines 18 and 19 are only executed\
      \ if the condition (here: \"GP is empty\") is true. So, if GP is empty, first\
      \ the function with the name \"Log\" is called to write a message to the log\
      \ file, then the <a href=\"/Return_statement\" title=\"Return statement\">Return\
      \ statement</a> exits the function. In this case the code after the <i>If</i>\
      \ block will not be executed. In other cases the <i>If</i> block might not contain\
      \ a <i>Return</i> and code execution would continue after the <i>If</i> block.</li>\n\
      <li>On line 23 there's a typical <a href=\"/For_loop\" title=\"For loop\">For\
      \ loop</a> that iterates over a <a href=\"/Dynamic_array\" title=\"Dynamic array\"\
      \ class=\"mw-redirect\">dynamic array</a>. The code on lines 25 to 27 is executed\
      \ for each element of the \"PlayerTeam\" array in the object stored in the local\
      \ \"GP\" variable. Notice how the <i>If</i> statement on line 17 ensured that\
      \ \"GP\" actually contains an object.</li>\n<li>Line 34 calls another version\
      \ of the \"Initialize\" function, that was declared in a parent class of DMRosterBeatTeam,\
      \ passing on the TeamBots parameter. This call tells us, that the \"Initialize\"\
      \ function of the DMRosterBeatTeam class actually <a href=\"http://en.wikipedia.org/wiki/Method_overriding_(programming)\"\
      \ class=\"extiw\" title=\"wp:Method overriding (programming)\">overrides</a>\
      \ a function with the same name in its parent class xDMRoster or another parent\
      \ class further up the class hierarchy.</li>\n<li>Lines 37 to 41 are the <a\
      \ href=\"/Defaultproperties\" title=\"Defaultproperties\">defaultproperties</a>\
      \ block. This block defines default values for class variables. Both \"TeamName\"\
      \ and \"TeamSymbolName\" are inherited from a parent class.</li>\n</ul>\n<table\
      \ class=\"navbox nowraplinks\" style=\"\">\n<tr class=\"navbox-header\">\n<th\
      \ colspan=\"2\" class=\"navbox-header\" style=\"\">\n<div style=\"position:relative;\
      \ width:100%; white-space:nowrap;\">\n<div class=\"noprint plainlinks\" style=\"\
      background-color:transparent; padding:0; font-weight:normal; font-size:xx-small;\
      \ white-space:nowrap; position:absolute;left:0.5em;\"><a href=\"/Template:Navbox_unrealscript\"\
      \ title=\"Template:Navbox unrealscript\"><span title=\"View this template\"\
      >v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\" title=\"\
      Template talk:Navbox unrealscript\"><span title=\"Discussion about this template\"\
      >d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external text\" href=\"\
      https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"><span title=\"\
      You can edit this template. Please use the preview button before saving.\">e</span></a></div>\n\
      <a href=\"/UnrealScript_reference\" title=\"UnrealScript reference\">UnrealScript\
      \ reference</a></div>\n</th>\n</tr>\n<tr class=\"navbox-body odd\">\n<th class=\"\
      navbox-group\" style=\"\">Declarations</th>\n<td class=\"navbox-body\" style=\"\
      \"><a href=\"/Preprocessor\" title=\"Preprocessor\">Preprocessor</a>&#160;•\
      \ <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;• <a href=\"/Interfaces\"\
      \ title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"/Cpptext\" title=\"Cpptext\"\
      >Cpptext</a>&#160;• <a href=\"/Constants\" title=\"Constants\">Constants</a>&#160;•\
      \ <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"\
      Structs\">Structs</a>&#160;• <a href=\"/Variables\" title=\"Variables\">Variables</a>&#160;(<a\
      \ href=\"/Metadata\" title=\"Metadata\">Metadata</a>)&#160;• <a href=\"/Replication_block\"\
      \ title=\"Replication block\">Replication block</a>&#160;• <a href=\"/Operators\"\
      \ title=\"Operators\">Operators</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\"\
      >Delegates</a>&#160;• <a href=\"/Functions\" title=\"Functions\">Functions</a>&#160;•\
      \ <a href=\"/States\" title=\"States\">States</a>&#160;• <a href=\"/Defaultproperties\"\
      \ title=\"Defaultproperties\">Defaultproperties</a>&#160;(<a href=\"/Subobjects\"\
      \ title=\"Subobjects\">Subobjects</a>)</td>\n</tr>\n<tr class=\"navbox-body\
      \ even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Types\" title=\"\
      Types\">Types</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Bool\"\
      \ title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;• <a href=\"/Byte\" title=\"\
      Byte\" class=\"mw-redirect\">byte</a>&#160;• <a href=\"/Float\" title=\"Float\"\
      \ class=\"mw-redirect\">float</a>&#160;• <a href=\"/Int\" title=\"Int\" class=\"\
      mw-redirect\">int</a>&#160;• <a href=\"/Name\" title=\"Name\" class=\"mw-redirect\"\
      >name</a>&#160;• <a href=\"/String\" title=\"String\">string</a>&#160;• <a href=\"\
      /Types#Reference_types\" title=\"Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\"\
      \ title=\"Class limiter\" class=\"mw-redirect\">Class</a>&#160;• <a href=\"\
      /Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\"\
      >Structs</a>&#160;(<a href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a\
      \ href=\"/Rotator\" title=\"Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"\
      Quat\" class=\"mw-redirect\">Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\"\
      >Color</a>)&#160;• <a href=\"/Static_arrays\" title=\"Static arrays\">Static\
      \ arrays</a>&#160;• <a href=\"/Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic\
      \ arrays</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;•\
      \ <a href=\"/Typecasting\" title=\"Typecasting\">Typecasting</a></td>\n</tr>\n\
      <tr class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"\
      /Literals\" title=\"Literals\">Literals</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;•\
      \ <a href=\"/Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a\
      \ href=\"/Literals#Integer_numbers\" title=\"Literals\">Integer</a>&#160;• <a\
      \ href=\"/Literals#Names\" title=\"Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\"\
      \ title=\"Literals\">Objects</a> (<a href=\"/None\" title=\"None\" class=\"\
      mw-redirect\">None</a>&#160;⋅ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\"\
      >Self</a>)&#160;• <a href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;•\
      \ <a href=\"/Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"\
      /Literals#Strings\" title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"\
      navbox-body even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\"\
      \ title=\"Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"\
      ><a href=\"/GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"\
      /If_statement\" title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\"\
      \ title=\"Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\"\
      \ title=\"Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"\
      Stop statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch\
      \ statement\">Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\"\
      >While</a>&#160;• <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"\
      Continue statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><strong class=\"selflink\">UnrealScript</strong></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.147 seconds\nReal time usage: 0.496 seconds\nPreprocessor\
      \ visited node count: 168/1000000\nPreprocessor generated node count: 889/1000000\n\
      Post‐expand include size: 10632/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \  100.016      1 - -total\n100.00%  100.016      1 - Template:Navbox_unrealscript\n\
      \ 77.82%   77.829      1 - Template:Navbox\n 17.90%   17.898      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:4827-0!*!0!*!*!*!*\
      \ and timestamp 20221118062602 and revision id 43557\n -->\n"
  categories:
  - sortkey: " UnrealScript"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "States"
  - ns: 104
    exists: true
    name: "UE2:XDMRoster (UT2004)"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: false
    name: "Instance function"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Extends clause"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Unreal Engine"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 104
    exists: true
    name: "UE2:GameProfile (UT2004)"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 104
    exists: true
    name: "UE2:DMRosterBeatTeam (UT2004)"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Class declaration"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Unreal Tournament 2004"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "UnrealScript overview"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Dynamic array"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Function declarations"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "Types"
  templates:
  - ns: 10
    exists: true
    name: "Template:Navbox"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Anatomy of an UnrealScript source file"
    number: "1"
    index: "1"
    fromtitle: "UnrealScript"
    byteoffset: 806
    anchor: "Anatomy_of_an_UnrealScript_source_file"
  displaytitle: "UnrealScript"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Java_(programming_language)"
    name: "wp:Java (programming language)"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/strongly-typed"
    name: "wp:strongly-typed"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/C%2B%2B"
    name: "wp:C++"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Type_system"
    name: "wp:Type system"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Method_overriding_(programming)"
    name: "wp:Method overriding (programming)"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Event-driven_programming"
    name: "wp:Event-driven programming"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Inheritance_(computer_science)"
    name: "wp:Inheritance (computer science)"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/UnrealScript"
    name: "wp:UnrealScript"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/curly_brace_programming_language"
    name: "wp:curly brace programming language"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/scripting_language"
    name: "wp:scripting language"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Visual_Basic"
    name: "wp:Visual Basic"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/object-oriented"
    name: "wp:object-oriented"
  wikitext:
    text: ":''See [[UnrealScript overview]] for all Unreal Wiki topics about learning\
      \ and using UnrealScript.''\n\n[[wp:UnrealScript|UnrealScript]] is the [[Unreal\
      \ Engine]]'s [[wp:scripting language|scripting language]]. It is a [[wp:Type\
      \ system#Static typing|staticly]]/[[wp:strongly-typed|strongly-typed]], [[wp:object-oriented|object-oriented]]\
      \ and [[wp:Event-driven programming|event-driven]] programming language very\
      \ similar to [[wp:Java (programming language)|Java]] and [[wp:C++|C++]], with\
      \ some influences from [[wp:Visual Basic|Visual Basic]]. If you want to learn\
      \ UnrealScript, you should make yourself familiar with the fundamental concepts\
      \ of object-oriented programming. It definitely helps already to know another\
      \ programming language, preferably one that is strongly-typed and object-oriented\
      \ as well.\n\n==Anatomy of an UnrealScript source file==\nA typical UnrealScript\
      \ source file might look similar to the following example from [[Unreal Tournament\
      \ 2004|UT2004]]:\n<uscript line>\nclass DMRosterBeatTeam extends xDMRoster;\n\
      \n/*\n * Roster for deathmatch levels.\n * Each level has its own roster.  \n\
      \ * This special roster subclass is used to populate an enemy team with the\n\
      \ * player's selected teammates.\n */\n\n// called immediately after spawning\
      \ the roster class\nfunction Initialize(int TeamBots)\n{\n\tlocal GameProfile\
      \ GP;\n\tlocal int i, j;\n\n\tGP = Level.Game.CurrentGameProfile;\n\tif ( GP\
      \ == none ) {\n\t\tLog(\"DMRosterBeatTeam::Initialized() failed.  GameProfile\
      \ == none.\");\n\t\treturn;\n\t}\n\n\t// create roster entries for single player's\
      \ teammates\n\tfor ( i=0; i<GP.PlayerTeam.Length; i++ )\n\t{\n\t\tj = Roster.Length;\n\
      \t\tRoster.Length = Roster.Length + 1;\n\t\tRoster[j] = class'xRosterEntry'.Static.CreateRosterEntryCharacter(GP.PlayerTeam[i]);\n\
      \t}\n\n\t// remaining team-specific info, might be used in menus at some point\n\
      \tTeamName = GP.TeamName;\n\tTeamSymbolName = GP.TeamSymbolName;\n\n\tsuper.Initialize(TeamBots);\n\
      }\n\t\ndefaultproperties\n{\n\tTeamName=\"Death Match\"\n\tTeamSymbolName=\"\
      TeamSymbols_UT2003.Sym01\"\n}\n</uscript>\nAs you can see, UnrealScript is a\
      \ [[wp:curly brace programming language|curly brace programming language]]:\
      \ blocks of code are enclosed in curly braces. Each code statement is either\
      \ followed by a block or terminated by a semicolon.\n\n* Line 1 contains the\
      \ mandatory [[class declaration]]. This file contains a class with the name\
      \ [[UE2:DMRosterBeatTeam (UT2004)|DMRosterBeatTeam]]. The [[extends clause]]\
      \ specifies that this class [[wp:Inheritance (computer science)|inherits]] attributes,\
      \ methods and other class members from a class with the name [[UE2:xDMRoster\
      \ (UT2004)|xDMRoster]], which is said to be the \"super class\" or \"parent\
      \ class\" of DMRosterBeatTeam.\n* Lines 3 to 8 are an example for a [[Comments#Block\
      \ comments|block comment]]. The important parts here are the characters <code>/*</code>\
      \ on line 3 and <code>*/</code> on line 8. Everything between them is ignored\
      \ by the UnrealScript compiler.\n* Line 10 contains another type of comment,\
      \ an end-of-line comment or just [[Comments#Line comments|line comment]]. Outside\
      \ of block comments this type of comment starts with the characters <code>//</code>\
      \ and continues to the end of the same line. As with block comments, everything\
      \ on the line following the double slashes is ignored by the compiler.\n* Line\
      \ 11 contains a [[Function declarations|declaration]] for an [[instance function]].\
      \ The function's name is specified to be \"Initialize\" and the function has\
      \ one parameter of type [[types#int|int]] called \"TeamBots\". The block of\
      \ code on lines 12 to 35 is the function's \"body\". Some functions do not have\
      \ a body. The declaration of those functions is terminated by a semicolon instead.\n\
      * The line 13 declares a local variable of [[Types#Object|type]] [[UE2:GameProfile\
      \ (UT2004)|GameProfile]], a class defined elsewhere, and gives it the name \"\
      GP\". The variable is initially empty.\n* Line 16 assigns a value to the local\
      \ variable \"GP\" so it no longer is empty. To determine the value, the function\
      \ accesses the variable \"Level\". This variable is not declared here, but in\
      \ a parent class of DMRosterBeatTeam. The object referenced by \"Level\" has\
      \ a variable of its own, called \"Game\", whose contained object in turn has\
      \ a variable called \"CurrentGameProfile\". The content of that variable is\
      \ assigned to our local \"GP\" variable.\n* On line 17 there's an [[If statement]]\
      \ with a block of code that ends on line 20. That block of code is only executed\
      \ if the expression in the parentheses following the keyword ''If'' returns\
      \ the value ''True''. The ''If'' condition checks, whether the content of the\
      \ local \"GP\" variable equals the special value ''None'', which simply means\
      \ \"empty\".\n* Lines 18 and 19 are only executed if the condition (here: \"\
      GP is empty\") is true. So, if GP is empty, first the function with the name\
      \ \"Log\" is called to write a message to the log file, then the [[Return statement]]\
      \ exits the function. In this case the code after the ''If'' block will not\
      \ be executed. In other cases the ''If'' block might not contain a ''Return''\
      \ and code execution would continue after the ''If'' block.\n* On line 23 there's\
      \ a typical [[For loop]] that iterates over a [[dynamic array]]. The code on\
      \ lines 25 to 27 is executed for each element of the \"PlayerTeam\" array in\
      \ the object stored in the local \"GP\" variable. Notice how the ''If'' statement\
      \ on line 17 ensured that \"GP\" actually contains an object.\n* Line 34 calls\
      \ another version of the \"Initialize\" function, that was declared in a parent\
      \ class of DMRosterBeatTeam, passing on the TeamBots parameter. This call tells\
      \ us, that the \"Initialize\" function of the DMRosterBeatTeam class actually\
      \ [[wp:Method overriding (programming)|overrides]] a function with the same\
      \ name in its parent class xDMRoster or another parent class further up the\
      \ class hierarchy.\n* Lines 37 to 41 are the [[defaultproperties]] block. This\
      \ block defines default values for class variables. Both \"TeamName\" and \"\
      TeamSymbolName\" are inherited from a parent class.\n\n{{navbox unrealscript}}"
  properties: []
  revId: 43557
name: "UnrealScript"
revision:
  revid: 43557
  parentid: 43376
  user: "Eliot"
  timestamp: 1277853086.000000000
  comment: "start with a wp link"
timestamp: 1668752763.748121000
