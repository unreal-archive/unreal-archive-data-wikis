---
parse:
  title: "Unreal Wiki:Layout guidelines"
  text:
    text: "<p>This page will help you find pages that have been developed enough to\
      \ warrant them being used as examples for further new pages in the same general\
      \ category they are in. For example, you would look at <a href=\"/edit/Add_an_Actor?redlink=1\"\
      \ class=\"new\" title=\"Add an Actor (page does not exist)\">Add an Actor</a>\
      \ to see the general layout for a <a href=\"/Unreal_Wiki:Basic_procedures\"\
      \ title=\"Unreal Wiki:Basic procedures\">basic procedure</a> page.</p>\n<p></p>\n\
      <div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n\
      <ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Game_pages\"><span class=\"\
      tocnumber\">1</span> <span class=\"toctext\">Game pages</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-2\"><a href=\"#Tutorial_pages\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Tutorial pages</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Basic_procedure_pages\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Basic procedure pages</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#UnrealScript_API_pages\"><span\
      \ class=\"tocnumber\">4</span> <span class=\"toctext\">UnrealScript API pages</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Game_pages\">Game\
      \ pages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Unreal_Wiki:Layout_guidelines?section=1\" title=\"\
      Edit section: Game pages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Example game pages: <a href=\"/Unreal_Tournament\" title=\"Unreal Tournament\"\
      >Unreal Tournament</a>, <a href=\"/Unreal_Tournament_2004\" title=\"Unreal Tournament\
      \ 2004\">Unreal Tournament 2004</a>, <a href=\"/Unreal_Tournament_3\" title=\"\
      Unreal Tournament 3\">Unreal Tournament 3</a></p>\n<p>Game pages have a very\
      \ simple layout and flow that we would like to keep consistent. If you need\
      \ to add additional subsections, place them under a heading that makes the most\
      \ sense. If you want to add a new section to an already created game page, please\
      \ post in the Discussion page about it.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Tutorial_pages\">Tutorial pages</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Unreal_Wiki:Layout_guidelines?section=2\"\
      \ title=\"Edit section: Tutorial pages\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Example tutorial pages: <i>TODO</i></p>\n<p>Tutorial\
      \ pages do not have to follow any specific guidelines as far as page creation\
      \ goes. They can include images or not, they can be formatted in any way that\
      \ makes sense. A tutorial page that is part of a series of tutorials should\
      \ include links to the next and previous tutorial in the series and, if applicable,\
      \ to the overview page of that tutorial series. All pages of a tutorial series\
      \ should have a similar format to one another. For example in a tutorial series\
      \ about creating a Warfare map, the part that covers setting up the power nodes\
      \ should not look drastically different from the part covering special objectives.</p>\n\
      <p>Commonly required basic steps, like bringing up the properties window to\
      \ change actor properties, should not be explained on the tutorial page itself.\
      \ Instead, there is a dedicated set of mini tutorials for these steps, called\
      \ \"<a href=\"/Unreal_Wiki:Basic_procedures\" title=\"Unreal Wiki:Basic procedures\"\
      >basic procedures</a>\". Tutorial authors are encouraged to identify basic procedures\
      \ in their tutorials and factor them out into dedicated basic procedure pages.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Basic_procedure_pages\">Basic procedure\
      \ pages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Unreal_Wiki:Layout_guidelines?section=3\" title=\"\
      Edit section: Basic procedure pages\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<dl>\n<dd><i>Main article:</i> <a href=\"/Unreal_Wiki:Basic_procedures\"\
      \ title=\"Unreal Wiki:Basic procedures\">Project:Basic procedures</a></dd>\n\
      </dl>\n<p>Example basic procedure pages: <a href=\"/edit/Add_an_Actor?redlink=1\"\
      \ class=\"new\" title=\"Add an Actor (page does not exist)\">Add an Actor</a>,\
      \ <a href=\"/edit/Create_a_subclass?redlink=1\" class=\"new\" title=\"Create\
      \ a subclass (page does not exist)\">Create a subclass</a></p>\n<p>Basic procedure\
      \ pages all have a similar layout. If there are several different ways to do\
      \ things, the page should contain a main section header for each of them. Also,\
      \ if procedures differ significantly between games, each game should get its\
      \ own section.</p>\n<h2><span class=\"mw-headline\" id=\"UnrealScript_API_pages\"\
      >UnrealScript API pages</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Unreal_Wiki:Layout_guidelines?section=4\"\
      \ title=\"Edit section: UnrealScript API pages\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Example class pages: <a href=\"/UE1:Actor_(UT)\" title=\"\
      UE1:Actor (UT)\">UE1:Actor (UT)</a>, <a href=\"/UE2:Projectile_(UT2004)\" title=\"\
      UE2:Projectile (UT2004)\">UE2:Projectile (UT2004)</a>, <a href=\"/UE3:Light_(UT3)\"\
      \ title=\"UE3:Light (UT3)\">UE3:Light (UT3)</a></p>\n<p>UnrealScript class pages\
      \ have a mostly similar layout. Class members are grouped by the kind of member,\
      \ for example variables, functions and states, with members being sorted alphabetically\
      \ or, in the case of operators, by precedence. If it makes sense, variables\
      \ and functions may be further divided. For example in classes with lots of\
      \ variables that are mainly used in the editor, it makes sense to divide variables\
      \ into their property groups, while in classes that are mainly used by programmers\
      \ it might make more sense to separate localized, configurable or unmodifiable\
      \ variables. Similarly it might make sense to separate functions into static\
      \ functions, native functions, events, and so on.</p>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.025 seconds\nReal time usage: 0.026 seconds\nPreprocessor\
      \ visited node count: 16/1000000\nPreprocessor generated node count: 28/1000000\n\
      Post‐expand include size: 17/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:8-0!*!0!!en!*!*\
      \ and timestamp 20221118053819 and revision id 33113\n -->\n"
  categories:
  - sortkey: "Layout guidelines"
    name: "Policies_and_guidelines"
  links:
  - ns: 4
    exists: true
    name: "Unreal Wiki:Basic procedures"
  - ns: 106
    exists: true
    name: "UE3:Light (UT3)"
  - ns: 0
    exists: true
    name: "Unreal Tournament 2004"
  - ns: 104
    exists: true
    name: "UE2:Projectile (UT2004)"
  - ns: 102
    exists: true
    name: "UE1:Actor (UT)"
  - ns: 0
    exists: false
    name: "Add an Actor"
  - ns: 0
    exists: true
    name: "Unreal Tournament"
  - ns: 0
    exists: false
    name: "Create a subclass"
  - ns: 0
    exists: true
    name: "Unreal Tournament 3"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Game pages"
    number: "1"
    index: "1"
    fromtitle: "Unreal_Wiki:Layout_guidelines"
    byteoffset: 302
    anchor: "Game_pages"
  - toclevel: 1
    level: "2"
    line: "Tutorial pages"
    number: "2"
    index: "2"
    fromtitle: "Unreal_Wiki:Layout_guidelines"
    byteoffset: 707
    anchor: "Tutorial_pages"
  - toclevel: 1
    level: "2"
    line: "Basic procedure pages"
    number: "3"
    index: "3"
    fromtitle: "Unreal_Wiki:Layout_guidelines"
    byteoffset: 1807
    anchor: "Basic_procedure_pages"
  - toclevel: 1
    level: "2"
    line: "UnrealScript API pages"
    number: "4"
    index: "4"
    fromtitle: "Unreal_Wiki:Layout_guidelines"
    byteoffset: 2211
    anchor: "UnrealScript_API_pages"
  displaytitle: "Unreal Wiki:Layout guidelines"
  iwlinks: []
  wikitext:
    text: "This page will help you find pages that have been developed enough to warrant\
      \ them being used as examples for further new pages in the same general category\
      \ they are in. For example, you would look at [[Add an Actor]] to see the general\
      \ layout for a [[Project:Basic procedures|basic procedure]] page.\n\n==Game\
      \ pages==\nExample game pages: [[Unreal Tournament]], [[Unreal Tournament 2004]],\
      \ [[Unreal Tournament 3]]\n\nGame pages have a very simple layout and flow that\
      \ we would like to keep consistent. If you need to add additional subsections,\
      \ place them under a heading that makes the most sense. If you want to add a\
      \ new section to an already created game page, please post in the Discussion\
      \ page about it.\n\n==Tutorial pages==\nExample tutorial pages: ''TODO''\n\n\
      Tutorial pages do not have to follow any specific guidelines as far as page\
      \ creation goes. They can include images or not, they can be formatted in any\
      \ way that makes sense. A tutorial page that is part of a series of tutorials\
      \ should include links to the next and previous tutorial in the series and,\
      \ if applicable, to the overview page of that tutorial series. All pages of\
      \ a tutorial series should have a similar format to one another. For example\
      \ in a tutorial series about creating a Warfare map, the part that covers setting\
      \ up the power nodes should not look drastically different from the part covering\
      \ special objectives.\n\nCommonly required basic steps, like bringing up the\
      \ properties window to change actor properties, should not be explained on the\
      \ tutorial page itself. Instead, there is a dedicated set of mini tutorials\
      \ for these steps, called \"[[Project:Basic procedures|basic procedures]]\"\
      . Tutorial authors are encouraged to identify basic procedures in their tutorials\
      \ and factor them out into dedicated basic procedure pages.\n\n==Basic procedure\
      \ pages==\n:''Main article:'' [[Project:Basic procedures]]\nExample basic procedure\
      \ pages: [[Add an Actor]], [[Create a subclass]]\n\nBasic procedure pages all\
      \ have a similar layout. If there are several different ways to do things, the\
      \ page should contain a main section header for each of them. Also, if procedures\
      \ differ significantly between games, each game should get its own section.\n\
      \n==UnrealScript API pages==\nExample class pages: [[UE1:Actor (UT)]], [[UE2:Projectile\
      \ (UT2004)]], [[UE3:Light (UT3)]]\n\nUnrealScript class pages have a mostly\
      \ similar layout. Class members are grouped by the kind of member, for example\
      \ variables, functions and states, with members being sorted alphabetically\
      \ or, in the case of operators, by precedence. If it makes sense, variables\
      \ and functions may be further divided. For example in classes with lots of\
      \ variables that are mainly used in the editor, it makes sense to divide variables\
      \ into their property groups, while in classes that are mainly used by programmers\
      \ it might make more sense to separate localized, configurable or unmodifiable\
      \ variables. Similarly it might make sense to separate functions into static\
      \ functions, native functions, events, and so on.\n\n[[Category:Policies and\
      \ guidelines|{{PAGENAME}}]]"
  properties: []
  revId: 33113
name: "Unreal Wiki:Layout guidelines"
revision:
  revid: 33113
  parentid: 372
  user: "Wormbo"
  timestamp: 1223636402.000000000
  comment: "/* UnrealScript API pages */ fixed example links"
timestamp: 1668761899.750933000
