---
parse:
  title: "Legacy:Terminology"
  text:
    text: "<p><b>Got a term that isn't described here?</b> Add it to the list (at\
      \ its appropriate place) and leave the explanation out. Somebody else will fill\
      \ it in.</p>\n<p><b>Contributors:</b> Please read the <a href=\"/Legacy:Terminology/Style\"\
      \ title=\"Legacy:Terminology/Style\">Terminology Style Guide</a>. Also please\
      \ don't add random UnrealScript variable names to this page, it's not intended\
      \ for that. (Use the <a href=\"/Legacy:Search\" title=\"Legacy:Search\">Search</a>\
      \ instead, please.)</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"\
      toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"\
      ><a href=\"#A\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">A</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#B\"><span class=\"tocnumber\"\
      >2</span> <span class=\"toctext\">B</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-3\"><a href=\"#C\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">C</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"\
      #D\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">D</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-5\"><a href=\"#E\"><span class=\"tocnumber\"\
      >5</span> <span class=\"toctext\">E</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-6\"><a href=\"#F\"><span class=\"tocnumber\">6</span> <span class=\"\
      toctext\">F</span></a></li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"\
      #G\"><span class=\"tocnumber\">7</span> <span class=\"toctext\">G</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-8\"><a href=\"#H\"><span class=\"tocnumber\"\
      >8</span> <span class=\"toctext\">H</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-9\"><a href=\"#I\"><span class=\"tocnumber\">9</span> <span class=\"\
      toctext\">I</span></a></li>\n<li class=\"toclevel-1 tocsection-10\"><a href=\"\
      #J\"><span class=\"tocnumber\">10</span> <span class=\"toctext\">J</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-11\"><a href=\"#K\"><span class=\"tocnumber\"\
      >11</span> <span class=\"toctext\">K</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-12\"><a href=\"#L\"><span class=\"tocnumber\">12</span> <span class=\"\
      toctext\">L</span></a></li>\n<li class=\"toclevel-1 tocsection-13\"><a href=\"\
      #M\"><span class=\"tocnumber\">13</span> <span class=\"toctext\">M</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-14\"><a href=\"#N\"><span class=\"tocnumber\"\
      >14</span> <span class=\"toctext\">N</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-15\"><a href=\"#O\"><span class=\"tocnumber\">15</span> <span class=\"\
      toctext\">O</span></a></li>\n<li class=\"toclevel-1 tocsection-16\"><a href=\"\
      #P\"><span class=\"tocnumber\">16</span> <span class=\"toctext\">P</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-17\"><a href=\"#Q\"><span class=\"tocnumber\"\
      >17</span> <span class=\"toctext\">Q</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-18\"><a href=\"#R\"><span class=\"tocnumber\">18</span> <span class=\"\
      toctext\">R</span></a></li>\n<li class=\"toclevel-1 tocsection-19\"><a href=\"\
      #S\"><span class=\"tocnumber\">19</span> <span class=\"toctext\">S</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-20\"><a href=\"#T\"><span class=\"tocnumber\"\
      >20</span> <span class=\"toctext\">T</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-21\"><a href=\"#U\"><span class=\"tocnumber\">21</span> <span class=\"\
      toctext\">U</span></a></li>\n<li class=\"toclevel-1 tocsection-22\"><a href=\"\
      #V\"><span class=\"tocnumber\">22</span> <span class=\"toctext\">V</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-23\"><a href=\"#W\"><span class=\"tocnumber\"\
      >23</span> <span class=\"toctext\">W</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-24\"><a href=\"#Z\"><span class=\"tocnumber\">24</span> <span class=\"\
      toctext\">Z</span></a></li>\n<li class=\"toclevel-1 tocsection-25\"><a href=\"\
      #Related_Topics\"><span class=\"tocnumber\">25</span> <span class=\"toctext\"\
      >Related Topics</span></a></li>\n<li class=\"toclevel-1 tocsection-26\"><a href=\"\
      #Discussion\"><span class=\"tocnumber\">26</span> <span class=\"toctext\">Discussion</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"A\">A</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=1\" title=\"Edit section: A\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt>Abstract\
      \ class&#160;</dt>\n<dd>a class which can't be added to a map or spawned in\
      \ game and is thus only useful as a <i>base class</i>. See <a href=\"/Legacy:Class_Syntax\"\
      \ title=\"Legacy:Class Syntax\">Class Syntax</a>.</dd>\n<dt>Accessed None&#160;</dt>\n\
      <dd><a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\">UnrealScript</a>\
      \ warning message, meaning that code attempted to retrieve or alter data via\
      \ an invalid object reference (also see <a href=\"/Legacy:Log_Warnings\" title=\"\
      Legacy:Log Warnings\">Log Warnings</a>)</dd>\n<dt>Active brush&#160;</dt>\n\
      <dd>another name for the <a href=\"/Legacy:Red_Builder_Brush\" title=\"Legacy:Red\
      \ Builder Brush\">red builder brush</a></dd>\n</dl>\n<dl>\n<dt><a href=\"/Legacy:Actor\"\
      \ title=\"Legacy:Actor\">Actor</a>&#160;</dt>\n<dd>object in three-dimensional\
      \ virtual space</dd>\n<dt>Algorithm&#160;</dt>\n<dd>implementation, procedure,\
      \ protocol, or sequence of rules or instructions, (usually for accomplishing\
      \ a maths-oriented task) that specify the order and kind of arithmetic operations\
      \ that are used on specified set of data, though technically, a cooking recipe\
      \ is an example</dd>\n<dt><a href=\"/Legacy:Alpha_Channel\" title=\"Legacy:Alpha\
      \ Channel\">Alpha Channel</a>&#160;</dt>\n<dd>Information contained within an\
      \ image file that can be used to determine the intensity of different material\
      \ properties such as opacity and specularity intensity among other things.</dd>\n\
      <dt>Alpha Map&#160;</dt>\n<dd>An Unreal Tournament Map that is being tested\
      \ by the mapper, and/or a few other, selected people.</dd>\n<dt>Alpha version&#160;</dt>\n\
      <dd>unfinished software version, not yet feature-complete; not ready for public\
      \ release.</dd>\n<dt><a href=\"/Legacy:Animation\" title=\"Legacy:Animation\"\
      >Animation</a>&#160;</dt>\n<dd>Series of pre-generated, articulated graphic\
      \ components that convey character motion or behavior, during a scene display,\
      \ and are called by the animation subsystem in specific game situations</dd>\n\
      <dt>Anti-Aliasing&#160;</dt>\n<dd>System of smoothing out jagged edges on the\
      \ screen. Video card renders at a higher resolution and then tones it down to\
      \ your current set resolution.</dd>\n<dt>Anisotropic Filtering&#160;</dt>\n\
      <dd>System to improve quality of textures rendered at various angles.</dd>\n\
      <dt>Assertions&#160;</dt>\n<dd>Code expression that usually evaluates to true\
      \ or false. Utilized to ensure that components behave properly; typically, checks\
      \ on execution conditions and performance</dd>\n<dt>Array&#160;</dt>\n<dd>Variable\
      \ containing an ordered set of values of the same type, indexed by an integer</dd>\n\
      <dt><a href=\"/Legacy:Artificial_Intelligence\" title=\"Legacy:Artificial Intelligence\"\
      >AI</a>&#160;</dt>\n<dd>Artificial Intelligence; in game development, AI is\
      \ a code subsystem that controls the behavior of agents (or <a href=\"/Legacy:Bot_(UT)\"\
      \ title=\"Legacy:Bot (UT)\">Bot (UT)s</a>, see <a href=\"/Legacy:Bot_Support\"\
      \ title=\"Legacy:Bot Support\">Bot Support</a>), objects, and numerous <a href=\"\
      /Legacy:Actor\" title=\"Legacy:Actor\">actors</a>; the AI is responsible for\
      \ realistic, or, intelligent, behavior of opponents during gameplay</dd>\n<dt>Attribute&#160;</dt>\n\
      <dd>synonymous to <i>Property</i></dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"B\">B</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=2\" title=\"Edit section:\
      \ B\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Base <a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\"\
      >class</a>&#160;</dt>\n<dd>higher level, generalized class; used to define characteristics\
      \ common to all its sub<a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"\
      mw-redirect\">classes</a>. <a href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\"\
      >ScriptedPawn</a> is the base class for Unreal I monsters, for example.</dd>\n\
      <dt>Beta version&#160;</dt>\n<dd>unfinished software version, yet considered\
      \ feature-complete, that's still in testing stage; not yet ready for public\
      \ release</dd>\n<dt><a href=\"/Legacy:Bilinear_Filtering\" title=\"Legacy:Bilinear\
      \ Filtering\">Bilinear Filtering</a>&#160;</dt>\n<dd>see <a href=\"/Legacy:Bilinear_Filtering\"\
      \ title=\"Legacy:Bilinear Filtering\">Bilinear Filtering</a>.</dd>\n<dt>BMP&#160;</dt>\n\
      <dd><a href=\"/Legacy:Bitmap\" title=\"Legacy:Bitmap\">bitmap</a> file format\
      \ (with no or lossless compression)</dd>\n<dt>Boolean&#160;</dt>\n<dd>value\
      \ that is either true or false</dd>\n<dt>Bone&#160;</dt>\n<dd>An object which\
      \ describes the relationship of itself to other \"bones.\" Bones usually have\
      \ vertices attached which move with the bone, thus creating an animation without\
      \ worrying about the placement of each vertex. See <a href=\"/Legacy:Skeletal_Mesh\"\
      \ title=\"Legacy:Skeletal Mesh\">Skeletal Mesh</a></dd>\n<dt><a href=\"/Legacy:Bot\"\
      \ title=\"Legacy:Bot\">Bot</a>&#160;</dt>\n<dd>A computer-controlled player\
      \ character</dd>\n<dt>Botplay&#160;</dt>\n<dd>The gameplay as specifically related\
      \ to <a href=\"/Legacy:Bot_Support\" title=\"Legacy:Bot Support\">Bot Support</a></dd>\n\
      <dt><a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">Brush</a>&#160;</dt>\n\
      <dd>piece of geometry that builds the virtual space</dd>\n<dt><a href=\"/Legacy:BSP\"\
      \ title=\"Legacy:BSP\">BSP</a>&#160;</dt>\n<dd>Binary Space Partition; static\
      \ data structure method used by game programmers to determine correct front-to-back\
      \ polygon visibility, so that scenes are rendered realistically</dd>\n<dt><a\
      \ href=\"/Legacy:BSP_Hole\" title=\"Legacy:BSP Hole\">BSP hole</a>&#160;</dt>\n\
      <dd>building bug, yields unwanted invisible obstacles and players falling into\
      \ geometry and dying</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"C\">C</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=3\" title=\"Edit section: C\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt><a href=\"\
      /Legacy:Canvas\" title=\"Legacy:Canvas\">Canvas</a>&#160;</dt>\n<dd>the class\
      \ in the Unreal engine that is responsible for drawing items directly onto a\
      \ player's display. The most common use of the canvas is in the creation and\
      \ modification of a <a href=\"/Legacy:HUD\" title=\"Legacy:HUD\">HUD</a>.</dd>\n\
      <dt><a href=\"/Legacy:Typecasting\" title=\"Legacy:Typecasting\">Casting</a>&#160;</dt>\n\
      <dd>see <a href=\"/Legacy:Typecasting\" title=\"Legacy:Typecasting\">Typecasting</a></dd>\n\
      <dt><a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\">Class</a>&#160;</dt>\n\
      <dd>type of an object, an object's class defines how an object is implemented;\
      \ derived from or instantiated by an object, from which it inherits clearly\
      \ defined attributes. A class can contain: static data members, objects of another\
      \ class, pointers and references to types and objects of the same or another\
      \ class, declarations of another class, member functions, and friend classes.\
      \ All Classes are listed in the <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\"\
      >Actor</a> browser.</dd>\n<dt>Client&#160;</dt>\n<dd>any linked user (another\
      \ remote computer terminal, or program, or even another <a href=\"/Legacy:Class\"\
      \ title=\"Legacy:Class\" class=\"mw-redirect\">class</a>) of another server,\
      \ or program, or class is said to be a client of that entity.</dd>\n<dt>Compiler&#160;</dt>\n\
      <dd>software that parses a high-level language, and converts source code to\
      \ a binary executable program, that will run on Windows, Unix, or some operating\
      \ system.</dd>\n<dt>Constructor&#160;</dt>\n<dd>method that is automatically\
      \ called when an object is created; responsible for initializing this object;\
      \ see <a href=\"/Legacy:Creating_Actors_And_Objects\" title=\"Legacy:Creating\
      \ Actors And Objects\">Creating Actors And Objects</a>.</dd>\n<dt><a href=\"\
      /Legacy:CSG\" title=\"Legacy:CSG\">CSG</a>&#160;</dt>\n<dd>Constructive Solid\
      \ Geometry, the general idea behind building geometry in UnrealED.</dd>\n</dl>\n\
      <h2><span class=\"mw-headline\" id=\"D\">D</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=4\"\
      \ title=\"Edit section: D\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Declaration&#160;</dt>\n<dd>code statement that doesn't produce executable\
      \ code when compiled, but informs the compiler about new variables and functions\
      \ (and their types, parameters, and so on)</dd>\n<dt>Destructor&#160;</dt>\n\
      <dd>method that is automatically called when an object is destroyed; responsible\
      \ for releasing resources (memory, sockets, other objects) used by this object;\
      \ see <a href=\"/Legacy:Destroying_Objects\" title=\"Legacy:Destroying Objects\"\
      >destroying objects</a></dd>\n<dt>DLL&#160;</dt>\n<dd>Dynamic Link Library,\
      \ file containing native executable code that is bound to another application\
      \ (or <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\">UnrealScript</a>)\
      \ at runtime</dd>\n<dt><a href=\"/Legacy:DXT\" title=\"Legacy:DXT\">DXT</a>&#160;</dt>\n\
      <dd>some sort of <a href=\"/Legacy:Texture_Compression\" title=\"Legacy:Texture\
      \ Compression\">texture compression</a> mojo. See <a href=\"/Legacy:Texture_Format\"\
      \ title=\"Legacy:Texture Format\">texture format</a>.</dd>\n<dt><a href=\"/Legacy:Dynamics\"\
      \ title=\"Legacy:Dynamics\">Dynamics</a>&#160;</dt>\n<dd>Effects in the map\
      \ that the map designer put in to make the map more pleasing to the eyes and\
      \ ears. Examples are <a href=\"/Legacy:Mover\" title=\"Legacy:Mover\">Movers</a>,\
      \ <a href=\"/Legacy:Emitter\" title=\"Legacy:Emitter\">Emitters</a>, and <a\
      \ href=\"/Legacy:Sound\" title=\"Legacy:Sound\">Sounds</a>.</dd>\n</dl>\n<h2><span\
      \ class=\"mw-headline\" id=\"E\">E</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=5\"\
      \ title=\"Edit section: E\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Emitter\" title=\"Legacy:Emitter\">Emitter</a>&#160;</dt>\n\
      <dd>an <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\">Actor</a> responsible\
      \ for creating a particle effect; there are two emitter <a href=\"/Legacy:Class\"\
      \ title=\"Legacy:Class\" class=\"mw-redirect\">classes</a> in <a href=\"/Legacy:UT2003\"\
      \ title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>: <a href=\"/Legacy:Emitter\"\
      \ title=\"Legacy:Emitter\">Emitter</a> and <a href=\"/Legacy:XEmitter\" title=\"\
      Legacy:XEmitter\">xEmitter</a></dd>\n<dt>Engine&#160;</dt>\n<dd>the underlying\
      \ code framework which makes a complex computer program run.</dd>\n<dt>Enumeration&#160;</dt>\n\
      <dd>ordered set of numeric constants whose values are automatically assigned\
      \ during compilation (declared with the <tt>enum</tt> keyword)</dd>\n<dt><a\
      \ href=\"/Legacy:Environment_Mapping\" title=\"Legacy:Environment Mapping\"\
      >Environment mapping</a>&#160;</dt>\n<dd>dynamic UV mapping of a skin on a <a\
      \ href=\"/Legacy:Mesh\" title=\"Legacy:Mesh\">mesh</a>, depending on the viewer's\
      \ relative position, producing a mirror-like effect.</dd>\n<dt><a href=\"/Legacy:Event\"\
      \ title=\"Legacy:Event\">Event</a>&#160;</dt>\n<dd>(1) an <a href=\"/Legacy:Actor\"\
      \ title=\"Legacy:Actor\">actor</a>'s or <a href=\"/Legacy:Trigger\" title=\"\
      Legacy:Trigger\">trigger</a>'s reaction to something, broadcast to <a href=\"\
      /Legacy:Actor\" title=\"Legacy:Actor\">actors</a> with matching <a href=\"/Legacy:Tag\"\
      \ title=\"Legacy:Tag\">tags</a>; (2) <a href=\"/Legacy:UnrealScript\" title=\"\
      Legacy:UnrealScript\">UnrealScript</a> <a href=\"/Legacy:Function_Syntax\" title=\"\
      Legacy:Function Syntax\">function</a> called from native code.</dd>\n</dl>\n\
      <h2><span class=\"mw-headline\" id=\"F\">F</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=6\"\
      \ title=\"Edit section: F\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Face&#160;</dt>\n<dd>see <a href=\"/Legacy:Polygon\" title=\"Legacy:Polygon\"\
      >Polygon</a></dd>\n<dt><a href=\"/Legacy:FinalBlend\" title=\"Legacy:FinalBlend\"\
      >FinalBlend</a>&#160;</dt>\n<dd>a texture <a href=\"/Legacy:Modifier\" title=\"\
      Legacy:Modifier\">Modifier</a></dd>\n<dt>Float&#160;</dt>\n<dd>numerical value\
      \ capable of storing numbers with digits after the decimal point (like 3.142)</dd>\n\
      <dt>Forward kinematics (FK)&#160;</dt>\n<dd>A term used in skeletal animation,\
      \ indicating that motion in a skeletal hierarchy (a set of connected bones)\
      \ is transferred down the hierarchy. Example: rotation applied to a shoulder\
      \ joint results in rotation of the bones below that joint in the skeletal chain&#160;:\
      \ upper arm, forearm, hands, fingers or claws, etc. See also Inverse kinematics\
      \ (IK).</dd>\n<dt><a href=\"/Legacy:FOV\" title=\"Legacy:FOV\">FOV</a>&#160;</dt>\n\
      <dd>Field Of Vision (or: Field Of View)</dd>\n<dt><a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">Function</a>&#160;</dt>\n<dd>piece of code\
      \ with a defined entry point and one or more exit points</dd>\n<dt><a href=\"\
      /Legacy:Function_Syntax\" title=\"Legacy:Function Syntax\">Function</a> call&#160;</dt>\n\
      <dd>request for an object to carry out one of its operations. Code command within\
      \ a program that jumps to a different portion of the code and returns to the\
      \ statement following the call after executing that code (and may return a data\
      \ value to it). The function return can be a value, a reference, or a pointer.</dd>\n\
      <dt><a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function Syntax\">Function</a>\
      \ overriding&#160;</dt>\n<dd>see <i>Overriding</i></dd>\n<dt><a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">Function</a> prototype&#160;</dt>\n<dd>see\
      \ <i>Prototype</i></dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"G\">G</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=7\" title=\"Edit section: G\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt>G16&#160;</dt>\n\
      <dd>16 bit grayscale texture. See <a href=\"/Legacy:Texture_Format\" title=\"\
      Legacy:Texture Format\">texture format</a></dd>\n<dt><a href=\"/Legacy:Gameplay\"\
      \ title=\"Legacy:Gameplay\">Gameplay</a>&#160;</dt>\n<dd>the playability of\
      \ a game or an element of a game or map; it's relative value in terms of play</dd>\n\
      <dt><a href=\"/Legacy:Gametype\" title=\"Legacy:Gametype\">Gametype</a>&#160;</dt>\n\
      <dd>a way to implement a <a href=\"/Legacy:Mod\" title=\"Legacy:Mod\" class=\"\
      mw-redirect\">mod</a>; specifies basic rules for playing the game (e.g. CTF:\
      \ get enemy flag and touch your own with it); can be further modified through\
      \ <a href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\">mutators</a></dd>\n<dt><a\
      \ href=\"/Legacy:Garbage_Collection\" title=\"Legacy:Garbage Collection\">Garbage\
      \ collection</a>&#160;</dt>\n<dd>automatic destruction of unreferenced objects\
      \ (as in Java, Perl or <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\"\
      >UnrealScript</a>)</dd>\n<dt><a href=\"/Legacy:Brush_Rotate\" title=\"Legacy:Brush\
      \ Rotate\">Gimbal lock</a>&#160;</dt>\n<dd>occurs when rotations in successive\
      \ axes make further rotations either impossible or produce undesired results.</dd>\n\
      <dt>Gibs&#160;</dt>\n<dd>Body parts that fly everywhere when you blow somebody\
      \ up.</dd>\n<dt>Gold Version&#160;</dt>\n<dd>Version released to the public\
      \ after the Alpha and Beta versions.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"H\">H</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=8\" title=\"Edit section:\
      \ H\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Hidden variable&#160;</dt>\n<dd>a variable defined in a class but\
      \ not accessible in UnrealEd's <a href=\"/Legacy:Actor_Properties_Window\" title=\"\
      Legacy:Actor Properties Window\">Actor Properties Window</a>. This is done with\
      \ the <a href=\"/Legacy:Variable_Syntax\" title=\"Legacy:Variable Syntax\">variable\
      \ syntax</a> <b>var</b> instead of <b>var()</b>.</dd>\n<dt>Hierarchy&#160;</dt>\n\
      <dd>an ordering of things (such as objects, classes, people) in a tree-like\
      \ structure, where things descend or depend on their superiors. Examples: a\
      \ family tree, the military chain of command. Superseding values affect preceding\
      \ values, but not vice versa.</dd>\n<dt>HOM&#160;</dt>\n<dd><a href=\"/Legacy:Hall_Of_Mirrors\"\
      \ title=\"Legacy:Hall Of Mirrors\">Hall Of Mirrors</a> effect, a rendering bug</dd>\n\
      <dt><a href=\"/Legacy:HUD\" title=\"Legacy:HUD\">HUD</a>&#160;</dt>\n<dd>Heads-Up\
      \ Display, rendered on top of the in-game 3D <a href=\"/Legacy:Viewport\" title=\"\
      Legacy:Viewport\">viewport</a> and displaying in-game data like frags, weapons,\
      \ ammo and scores</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"I\">I</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=9\" title=\"Edit section: I\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt>Implementation&#160;</dt>\n\
      <dd>program code structure that accomplishes some task or sequence of functions\
      \ (see also <i>Interface</i>)</dd>\n<dt>Inheritance&#160;</dt>\n<dd>relationship\
      \ among classes wherein one class shares the structure and/or behavior defined\
      \ in one or more other super<a href=\"/Legacy:Class\" title=\"Legacy:Class\"\
      \ class=\"mw-redirect\">classes</a></dd>\n<dt>Instantiation&#160;</dt>\n<dd><a\
      \ href=\"/Legacy:Creating_Actors_And_Objects\" title=\"Legacy:Creating Actors\
      \ And Objects\">creation</a> of an object from a <a href=\"/Legacy:Class\" title=\"\
      Legacy:Class\" class=\"mw-redirect\">class</a>, each object having a copy of\
      \ its own (non-static) data members</dd>\n<dt>Instigator&#160;</dt>\n<dd>a <a\
      \ href=\"/Legacy:Pawn\" title=\"Legacy:Pawn\">Pawn</a> which is considered responsible\
      \ for the damage done by one actor to another; an <a href=\"/Legacy:Actor\"\
      \ title=\"Legacy:Actor\">Actor</a> class property; often used for the <tt>InstigatedBy</tt>\
      \ or <tt>EventInstigator</tt> parameters of Trigger() and TakeDamage() functions</dd>\n\
      <dt>Integer&#160;</dt>\n<dd>numerical value, a whole number without decimals\
      \ (like 10)</dd>\n<dt>Interface&#160;</dt>\n<dd>user's or client's perception\
      \ of an object; object-oriented data abstraction is to provide a clean and efficient\
      \ interface that allows the user to access the underlying implementation</dd>\n\
      <dt>Inverse kinematics (IK)&#160;</dt>\n<dd>A term used in skeletal animation,\
      \ indicating that motion in a skeletal hierarchy (a set of connected bones)\
      \ is transferred up the hierarchy. Example: Positioning a hand bone at the end\
      \ of a skeletal chain results in joints further up the chain (e.g., forearm\
      \ and upper arm) being relocated as needed. See also Forward kinematics (FK).</dd>\n\
      <dt><a href=\"/Legacy:Iterator\" title=\"Legacy:Iterator\">Iterator</a>&#160;</dt>\n\
      <dd>special function that allows iteration over all or a given subset of all\
      \ <a href=\"/Legacy:Object\" title=\"Legacy:Object\">objects</a>, using a <tt>foreach</tt>\
      \ loop</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"J\">J</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=10\"\
      \ title=\"Edit section: J\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:JumpSpot\" title=\"Legacy:JumpSpot\">JumpSpot</a>&#160;</dt>\n\
      <dd>a <a href=\"/Legacy:NavigationPoint\" title=\"Legacy:NavigationPoint\">NavigationPoint</a>\
      \ actor indicating a good place for bots to jump <i>to</i>, not from. Also indicates\
      \ a good point for translocation, double-jump, impact-jump, etc.</dd>\n</dl>\n\
      <h2><span class=\"mw-headline\" id=\"K\">K</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=11\"\
      \ title=\"Edit section: K\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/edit/Legacy:KillZ?redlink=1\" class=\"new\" title=\"Legacy:KillZ\
      \ (page does not exist)\">KillZ</a>&#160;</dt>\n<dd>a <a href=\"/Legacy:Level_Properties\"\
      \ title=\"Legacy:Level Properties\">Level Properties</a> setting of the lowest\
      \ altitude that a <a href=\"/Legacy:Pawn\" title=\"Legacy:Pawn\">Pawn</a> can\
      \ exist. Lower than this altitude, the Pawn is killed. See also <a href=\"/Legacy:StallZ\"\
      \ title=\"Legacy:StallZ\">StallZ</a>.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"L\">L</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=12\" title=\"Edit section:\
      \ L\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Lighting\" title=\"Legacy:Lighting\">Lighting</a>&#160;</dt>\n\
      <dd>A combination of the lights in the levels, and the light-maps that are overlayed\
      \ onto walls, giving the impression of lights on those walls.</dd>\n<dt><a href=\"\
      /Legacy:Linked_List\" title=\"Legacy:Linked List\">Linked List</a>&#160;</dt>\n\
      <dd>List consisting of objects where each item has a reference (link) to the\
      \ next one.</dd>\n<dt>LOD&#160;</dt>\n<dd>Level Of Detail. Allows high-end machines\
      \ to display fancy detail (eg weather effects) and low-end machines to just\
      \ show the essentials. Also allows details to be skipped at farther distances,\
      \ improving performance. (which allows more details to be shown at closer distances)\
      \ See, for example, <a href=\"/Legacy:Chain_Of_Events_When_Spawning_Actors\"\
      \ title=\"Legacy:Chain Of Events When Spawning Actors\">Chain Of Events When\
      \ Spawning Actors</a>.</dd>\n<dt><a href=\"/edit/Legacy:Log?redlink=1\" class=\"\
      new\" title=\"Legacy:Log (page does not exist)\">Log</a>&#160;</dt>\n<dd>text\
      \ file which the game writes as it executes.</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"M\">M</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=13\"\
      \ title=\"Edit section: M\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Map_Flow\" title=\"Legacy:Map Flow\">Map Flow</a>&#160;</dt>\n\
      <dd>Map layout design that promotes smooth, fast and exciting gameplay</dd>\n\
      <dt>Masked&#160;</dt>\n<dd>color blending type; makes part of a <a href=\"/Legacy:Texture_(UT)\"\
      \ title=\"Legacy:Texture (UT)\">Texture (UT)</a> transparent (see <a href=\"\
      /Legacy:Color_Blending\" title=\"Legacy:Color Blending\">color blending</a>)</dd>\n\
      <dt><a href=\"/Legacy:Material\" title=\"Legacy:Material\">Material</a>&#160;</dt>\n\
      <dd>rectangular image (<a href=\"/Legacy:Bitmap\" title=\"Legacy:Bitmap\">bitmap</a>)\
      \ that can be applied to <a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">brush</a>\
      \ <a href=\"/Legacy:Surface\" title=\"Legacy:Surface\">surfaces</a> and <a href=\"\
      /Legacy:Mesh\" title=\"Legacy:Mesh\">meshes</a> or directly drawn on a <a href=\"\
      /Legacy:Canvas\" title=\"Legacy:Canvas\">canvas</a>; also see <a href=\"/Legacy:Texture\"\
      \ title=\"Legacy:Texture\">texture</a></dd>\n<dt><a href=\"/Legacy:Mesh\" title=\"\
      Legacy:Mesh\">Mesh</a>&#160;</dt>\n<dd>three-dimensional representation of an\
      \ <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\">Actor</a> in virtual space\
      \ (like weapons, pickups, players)</dd>\n<dt>Method&#160;</dt>\n<dd>function\
      \ (piece of code) that deals with objects of a given class; defined by the object's\
      \ class</dd>\n<dt><a href=\"/Legacy:Mod\" title=\"Legacy:Mod\" class=\"mw-redirect\"\
      >Mod</a>&#160;</dt>\n<dd>short for <i>modification</i>; modification of a game\
      \ can add new rules or content and in UnrealEngine games (like Unreal or Unreal\
      \ Tournament) a modification can be implemented as a <a href=\"/Legacy:Mutator\"\
      \ title=\"Legacy:Mutator\">Mutator</a>, a <a href=\"/Legacy:Gametype\" title=\"\
      Legacy:Gametype\">gametype</a>, a total conversion, a player model, a <a href=\"\
      /Legacy:VoicePack\" title=\"Legacy:VoicePack\">VoicePack</a>, an <a href=\"\
      /edit/Legacy:AnnouncerPack?redlink=1\" class=\"new\" title=\"Legacy:AnnouncerPack\
      \ (page does not exist)\">AnnouncerPack</a> and a few other ways</dd>\n<dt>Modulated&#160;</dt>\n\
      <dd>color blending type; mid-gray is transparent, black and white are opaque\
      \ (see <a href=\"/Legacy:Color_Blending\" title=\"Legacy:Color Blending\">color\
      \ blending</a>)</dd>\n<dt><a href=\"/Legacy:Mover\" title=\"Legacy:Mover\">Mover</a>&#160;</dt>\n\
      <dd>movable <a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">Brush</a> (for\
      \ doors, elevators and visual effects)</dd>\n<dt><a href=\"/Legacy:Mutator\"\
      \ title=\"Legacy:Mutator\">Mutator</a>&#160;</dt>\n<dd>a way to implement a\
      \ <a href=\"/Legacy:Mod\" title=\"Legacy:Mod\" class=\"mw-redirect\">mod</a>\
      \ in UnrealEngine games; mutators usually just change a certain aspect of the\
      \ game, but there are also mutators with large scale modifications (e.g. weapon\
      \ mods, competitive mods); mutators are stackable with other mutators to combine\
      \ their modifications</dd>\n<dt><a href=\"/Legacy:MyLevel\" title=\"Legacy:MyLevel\"\
      >MyLevel</a>&#160;</dt>\n<dd>a special name for a package. Using this tells\
      \ UnrealEd to embed a resource in the current map file.</dd>\n</dl>\n<h2><span\
      \ class=\"mw-headline\" id=\"N\">N</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=14\"\
      \ title=\"Edit section: N\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Name&#160;</dt>\n<dd>unique specifier for an object or class (or something\
      \ else) in UnrealScript; unlike strings, can't be modified like a string value\
      \ and may not contain anything except letters, numbers and underscores</dd>\n\
      <dt>Native code&#160;</dt>\n<dd>code that can be interpreted by a computer's\
      \ processor without any intermediate steps. In Unreal, this is C++ code in DLL\
      \ files.</dd>\n<dt><a href=\"/Legacy:Newbie\" title=\"Legacy:Newbie\">Newbie</a>&#160;</dt>\n\
      <dd>a person that's new to and hence unexperienced in something.</dd>\n<dt>N00b&#160;</dt>\n\
      <dd>same as <a href=\"/Legacy:Newbie\" title=\"Legacy:Newbie\">Newbie</a>, but\
      \ is contemptuous (is that a good word for them?) about being that. They are\
      \ sometimes <a rel=\"nofollow\" class=\"external text\" href=\"http://www.m-w.com/cgi-bin/dictionary?poseur\"\
      >poseurs</a>.</dd>\n<dt>Node&#160;</dt>\n<dd>the polys that are seen in Zone/Portal\
      \ view. They correspond to surface polygons split by <a href=\"/Legacy:BSP\"\
      \ title=\"Legacy:BSP\">BSP</a> cuts. See <a href=\"/Legacy:Polygon\" title=\"\
      Legacy:Polygon\">polygon</a> and <a href=\"/Legacy:Node_Count\" title=\"Legacy:Node\
      \ Count\">node count</a>.</dd>\n<dt><a href=\"/Legacy:Node_Count\" title=\"\
      Legacy:Node Count\">Node count</a>&#160;</dt>\n<dd>a measure of how much rendering\
      \ work the engine has to perform to display a view of a map. Also the total\
      \ number of nodes in the name.</dd>\n<dt>Null&#160;</dt>\n<dd>Texture(s) that\
      \ is missing or can not be found. These null textures are given a default texture\
      \ used by the engine (The green bubbly texture).</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"O\">O</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=15\"\
      \ title=\"Edit section: O\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Obfuscation\" title=\"Legacy:Obfuscation\">Obfuscation</a>&#160;</dt>\n\
      <dd>Creating code that works but is difficult to understand or work out what\
      \ it actually does.</dd>\n<dt><a href=\"/Legacy:Object\" title=\"Legacy:Object\"\
      >Object</a>&#160;</dt>\n<dd>abstraction that typically is assigned clearly specified\
      \ characteristics; in other words, a chunk of data with a certain <a href=\"\
      /Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\">class</a> associated\
      \ to it; the <a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\"\
      >class</a> describes the data structure and contains the code that deals with\
      \ objects of that <a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"\
      mw-redirect\">class</a></dd>\n<dt><a href=\"/Legacy:OCD\" title=\"Legacy:OCD\"\
      >OCD</a>&#160;</dt>\n<dd>Object Collision Detection</dd>\n<dt><a href=\"/Legacy:Object_Oriented_Programming_Overview\"\
      \ title=\"Legacy:Object Oriented Programming Overview\">OOP</a>&#160;</dt>\n\
      <dd>Object Oriented Programming</dd>\n<dt>Overloading (a <a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">function</a>)&#160;</dt>\n<dd>redeclaring\
      \ and reimplementing a function with the same name as an existing function,\
      \ but a distinguishable set of parameters (like having two versions of a function,\
      \ one of them working for float parameters, one of them for integer parameters)</dd>\n\
      <dt>Overriding (a <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function\
      \ Syntax\">method</a>)&#160;</dt>\n<dd>redeclaring and reimplementing a method\
      \ in a subclass</dd>\n<dt>Overwriting (a <a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">method</a>)&#160;</dt>\n<dd>see <i>Overriding\
      \ (a method)</i></dd>\n<dt>Owner&#160;</dt>\n<dd>Constant Actor declared in\
      \ the Actor class, specifies who or what owns this object. Use native <b>SetOwner(\
      \ actor NewOwner );</b> to set the owner.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"P\">P</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=16\" title=\"Edit section:\
      \ P\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Package\" title=\"Legacy:Package\">Package</a>&#160;</dt>\n\
      <dd>a file containing resources for <a href=\"/Legacy:Unreal_Engine\" title=\"\
      Legacy:Unreal Engine\">Unreal engine</a> games (like code, decorations, sound,\
      \ music, maps, or all of it)</dd>\n<dt>Pathing or <a href=\"/Legacy:Bot_Pathing\"\
      \ title=\"Legacy:Bot Pathing\">Bot Pathing</a>&#160;</dt>\n<dd>supporting bot\
      \ navigation of a level (see <a href=\"/Legacy:Bot_Support\" title=\"Legacy:Bot\
      \ Support\">Bot Support</a>)</dd>\n<dt><a href=\"/Legacy:Palette\" title=\"\
      Legacy:Palette\">Palette</a>&#160;</dt>\n<dd>look-up table of colors used in\
      \ a <a href=\"/Legacy:Bitmap\" title=\"Legacy:Bitmap\">bitmap</a></dd>\n<dt>Pawn&#160;</dt>\n\
      <dd>The parent class of all creatures and players in Unreal which are capable\
      \ of high-level AI and player controls.</dd>\n<dt>PCX&#160;</dt>\n<dd><a href=\"\
      /Legacy:Bitmap\" title=\"Legacy:Bitmap\">bitmap</a> file format (with no or\
      \ lossless compression)</dd>\n<dt><a href=\"/Legacy:Pivot\" title=\"Legacy:Pivot\"\
      >Pivot</a>&#160;</dt>\n<dd>point about which a brush is rotated or scaled.</dd>\n\
      <dt>Pointer&#160;</dt>\n<dd>variable that \"points to\" an object's memory location;\
      \ in <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\">UnrealScript</a>,\
      \ all object variables are (typed) pointers, but there's also an unspecific\
      \ <i>pointer</i> <a href=\"/Legacy:Variable_Type\" title=\"Legacy:Variable Type\"\
      >variable type</a> that serves as a placeholder for C++ pointers in native code</dd>\n\
      <dt><a href=\"/Legacy:Polycount\" title=\"Legacy:Polycount\">Polycount</a>&#160;</dt>\n\
      <dd>either number of polys currently drawn on screen by the engine, or the total\
      \ number of <i>polygons</i> in the map.</dd>\n<dt><a href=\"/Legacy:Polygon\"\
      \ title=\"Legacy:Polygon\">Polygon</a>&#160;</dt>\n<dd>two-dimensional, flat,\
      \ closed shape in three-dimensional space, like a <a href=\"/Legacy:Brush\"\
      \ title=\"Legacy:Brush\">brush</a> <a href=\"/Legacy:Surface\" title=\"Legacy:Surface\"\
      >surface</a>. Currently Unreal Tournament only supports convex polygons.</dd>\n\
      <dt><a href=\"/Legacy:Prefab_Browser\" title=\"Legacy:Prefab Browser\">Prefab</a>&#160;</dt>\n\
      <dd>A collection of Actors, such as CSG brushes and/or lights that can be copied\
      \ and used over and over again in a map. ( Useful for distributing map parts\
      \ without sacrificing storage space since a .t3d (Unreal Text) file is much\
      \ smaller than a .ut2 file )</dd>\n<dt>Private (method or property)&#160;</dt>\n\
      <dd>not accessible from outside the <a href=\"/Legacy:Class\" title=\"Legacy:Class\"\
      \ class=\"mw-redirect\">class</a> this method or property has been declared\
      \ in (see <i>Public (method or property)</i>)</dd>\n<dt><a href=\"/Legacy:Probe_Function\"\
      \ title=\"Legacy:Probe Function\">Probe function</a>&#160;</dt>\n<dd>A function\
      \ that can be enabled or disabled using the <i>Enable</i> and <i>Disable</i>\
      \ methods. These functions are usually defined as \"events\" and are called\
      \ by native engine code.</dd>\n<dt>Property&#160;</dt>\n<dd>individual item\
      \ of an object's data; defined by the object's <a href=\"/Legacy:Class\" title=\"\
      Legacy:Class\" class=\"mw-redirect\">class</a></dd>\n<dt><a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">Prototype</a>&#160;</dt>\n<dd>number, order\
      \ and types of <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function Syntax\"\
      >function</a> parameters</dd>\n<dt><a href=\"/Legacy:Projector\" title=\"Legacy:Projector\"\
      >Projector</a>&#160;</dt>\n<dd>UT2003's replacement for the deprecated <a href=\"\
      /Legacy:Decal\" title=\"Legacy:Decal\">Decal</a> class. Allows for projected\
      \ shadows (<a href=\"/Legacy:ShadowProjector\" title=\"Legacy:ShadowProjector\"\
      >ShadowProjector</a> class) and other neat stuff.</dd>\n<dt>Public (method or\
      \ property)&#160;</dt>\n<dd>accessible from outside the <a href=\"/Legacy:Class\"\
      \ title=\"Legacy:Class\" class=\"mw-redirect\">class</a> this method or property\
      \ has been declared in (see <i>Private (method or property)</i>)</dd>\n</dl>\n\
      <h2><span class=\"mw-headline\" id=\"Q\">Q</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=17\"\
      \ title=\"Edit section: Q\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Quad&#160;</dt>\n<dd>a single grid element of <a href=\"/Legacy:Terrain\"\
      \ title=\"Legacy:Terrain\">terrain</a>.</dd>\n<dt><a href=\"/Legacy:Quaternion\"\
      \ title=\"Legacy:Quaternion\">Quaternion</a>&#160;</dt>\n<dd>mathematical entity\
      \ similar to a complex number. These can be used to represent 3D rotations in\
      \ a way that eliminates the <a href=\"/Legacy:Brush_Rotate\" title=\"Legacy:Brush\
      \ Rotate\">gimbal lock</a> problem with non-l33t rotational matrices; popular\
      \ with game programmers for this very reason</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"R\">R</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=18\"\
      \ title=\"Edit section: R\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>Ray tracing&#160;</dt>\n<dd>Calculating the lighting in a level by\
      \ tracing exactly where the light goes.</dd>\n<dt>RBB&#160;</dt>\n<dd><a href=\"\
      /Legacy:Red_Builder_Brush\" title=\"Legacy:Red Builder Brush\">red builder brush</a></dd>\n\
      <dt>Rendering&#160;</dt>\n<dd>subsystem that actually produces the visible scene\
      \ that is displayed on the computer terminal for players to yell at; consumes\
      \ the majority of CPU computing capacity</dd>\n<dt><a href=\"/Legacy:Replication\"\
      \ title=\"Legacy:Replication\">Replication</a>&#160;</dt>\n<dd>generic term\
      \ for sending game-relevant data back and forth between a network server and\
      \ its clients</dd>\n<dt>RGB8&#160;</dt>\n<dd><a href=\"/Legacy:Texture_Format\"\
      \ title=\"Legacy:Texture Format\">texture format</a> with three channels (red,\
      \ green, blue) and 8 bits per channel</dd>\n<dt>RGBA8&#160;</dt>\n<dd><a href=\"\
      /Legacy:Texture_Format\" title=\"Legacy:Texture Format\">texture format</a>\
      \ with four channels (red, green, blue, alpha) and 8 bits per channel</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"S\">S</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=19\"\
      \ title=\"Edit section: S\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Shader\" title=\"Legacy:Shader\">Shader</a>&#160;</dt>\n\
      <dd></dd>\n<dt>SHAS&#160;</dt>\n<dd>\"Sudden Heart Attack Syndrome\". Dying\
      \ for no apparent reason. Sudden cratering is usually caused by BSP holes (see\
      \ 'BSP hole').</dd>\n<dt><a href=\"/Legacy:Sheet\" title=\"Legacy:Sheet\">Sheet</a>&#160;</dt>\n\
      <dd>a brush which does not enclose a 3D volume, usually because it's a single\
      \ polygon.</dd>\n<dt>Simulation&#160;</dt>\n<dd>generic term for simulation\
      \ or prediction (not authoritative) of game behaviour on network clients</dd>\n\
      <dt>Skeletal animation&#160;</dt>\n<dd><a href=\"/Legacy:Mesh\" title=\"Legacy:Mesh\"\
      >mesh</a> animation by having vertices attached to interlinked bones; see <i>Animation</i></dd>\n\
      <dt>Skin&#160;</dt>\n<dd>set of textures that are applied to a <a href=\"/Legacy:Mesh\"\
      \ title=\"Legacy:Mesh\">mesh</a> (for instance, a <a href=\"/Legacy:Bot_(UT)\"\
      \ title=\"Legacy:Bot (UT)\">Bot (UT)</a>, a <a href=\"/Legacy:PlayerPawn\" title=\"\
      Legacy:PlayerPawn\">player</a> or a <a href=\"/Legacy:Decoration\" title=\"\
      Legacy:Decoration\">decoration</a>)</dd>\n<dt><a href=\"/Legacy:SkyBox\" title=\"\
      Legacy:SkyBox\">Sky box</a>&#160;</dt>\n<dd>see page</dd>\n<dt><a href=\"/Legacy:Solidity\"\
      \ title=\"Legacy:Solidity\">Solidity</a>&#160;</dt>\n<dd>see page</dd>\n<dt>Source\
      \ (code)&#160;</dt>\n<dd>original high-level computer language code, like C++\
      \ or Java, that is compiled into an executable program</dd>\n<dt>Spawn&#160;</dt>\n\
      <dd><a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\">UnrealScript</a>\
      \ command for <a href=\"/Legacy:Creating_Actors_And_Objects\" title=\"Legacy:Creating\
      \ Actors And Objects\">creating</a> a new <a href=\"/Legacy:Actor\" title=\"\
      Legacy:Actor\">Actor</a></dd>\n<dt><a href=\"/Legacy:Spawndeath\" title=\"Legacy:Spawndeath\"\
      >Spawndeath</a>&#160;</dt>\n<dd>an error condition during map <a href=\"/Legacy:Playtest\"\
      \ title=\"Legacy:Playtest\">Playtesting</a> where the player character repeatedly\
      \ dies, as if automatically suiciding.</dd>\n<dt><a href=\"/Legacy:StallZ\"\
      \ title=\"Legacy:StallZ\">StallZ</a>&#160;</dt>\n<dd>a <a href=\"/Legacy:Level_Properties\"\
      \ title=\"Legacy:Level Properties\">Level Properties</a> setting of the highest\
      \ altitude a flying <a href=\"/Legacy:Vehicle\" title=\"Legacy:Vehicle\">Vehicle</a>\
      \ can fly before it's thrust power is deactivated. See also <a href=\"/edit/Legacy:KillZ?redlink=1\"\
      \ class=\"new\" title=\"Legacy:KillZ (page does not exist)\">KillZ</a>.</dd>\n\
      <dt><a href=\"/Legacy:State\" title=\"Legacy:State\">State</a>&#160;</dt>\n\
      <dd>a concept in UnrealScript that allows actors to execute different code in\
      \ different circumstances. For example, a Bot can be 'Fleeing', 'Attacking',\
      \ etc. See <a href=\"/Legacy:State\" title=\"Legacy:State\">State</a> and also\
      \ <a href=\"/Legacy:InitialState\" title=\"Legacy:InitialState\">InitialState</a></dd>\n\
      <dt>State code&#160;</dt>\n<dd>code that is outside of functions in a <a href=\"\
      /Legacy:State\" title=\"Legacy:State\">state</a> block</dd>\n<dt><a href=\"\
      /Legacy:Static_Mesh\" title=\"Legacy:Static Mesh\">Static Mesh</a>&#160;</dt>\n\
      <dd>see page.</dd>\n<dt>Structure&#160;</dt>\n<dd>ordered arrangement of typed\
      \ data items; similar to a <a href=\"/Legacy:Class\" title=\"Legacy:Class\"\
      \ class=\"mw-redirect\">class</a> in <a href=\"/Legacy:UnrealScript\" title=\"\
      Legacy:UnrealScript\">UnrealScript</a>, but can't be referenced (only copied)\
      \ and doesn't have <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function\
      \ Syntax\">methods</a></dd>\n<dt>String&#160;</dt>\n<dd>value of text; for instance,\
      \ a message somebody typed in</dd>\n<dt>Subclass&#160;</dt>\n<dd><a href=\"\
      /Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\">class</a> derived\
      \ from another <a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"mw-redirect\"\
      >class</a> (its base <a href=\"/Legacy:Class\" title=\"Legacy:Class\" class=\"\
      mw-redirect\">class</a>, or super<a href=\"/Legacy:Class\" title=\"Legacy:Class\"\
      \ class=\"mw-redirect\">class</a>); inherits properties and <a href=\"/Legacy:Function_Syntax\"\
      \ title=\"Legacy:Function Syntax\">methods</a> from the super<a href=\"/Legacy:Class\"\
      \ title=\"Legacy:Class\" class=\"mw-redirect\">class</a> unless they're expressly\
      \ overwritten</dd>\n<dt><a href=\"/Legacy:Surface\" title=\"Legacy:Surface\"\
      >Surface</a>&#160;</dt>\n<dd>see page.</dd>\n<dt>Syntax&#160;</dt>\n<dd>the\
      \ rule of arranging and ordering commands to form a code. <a href=\"/Legacy:UnrealScript\"\
      \ title=\"Legacy:UnrealScript\">UnrealScript</a> grammar, if you will; see <a\
      \ href=\"/Legacy:Class_Syntax\" title=\"Legacy:Class Syntax\">class syntax</a>\
      \ and <a href=\"/Legacy:Function_Syntax\" title=\"Legacy:Function Syntax\">function\
      \ syntax</a></dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"T\">T</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=20\" title=\"Edit section: T\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n<dt>Texel&#160;</dt>\n\
      <dd><a href=\"/Legacy:Texture\" title=\"Legacy:Texture\">Texture</a> pixel (as\
      \ opposed to screen pixel)</dd>\n<dt>Text Parsing&#160;</dt>\n<dd>the act of\
      \ using a routine or function of some sort to change symbols in a string variable\
      \ to reflect the values of certain variables, e.g. replacing \"%k\" in a death\
      \ message with the killer's name; see <a href=\"/Legacy:Message_Placeholder\"\
      \ title=\"Legacy:Message Placeholder\">Message Placeholder</a></dd>\n<dt><a\
      \ href=\"/Legacy:Texture\" title=\"Legacy:Texture\">Texture</a>&#160;</dt>\n\
      <dd>rectangular image (<a href=\"/Legacy:Bitmap\" title=\"Legacy:Bitmap\">bitmap</a>)\
      \ that can be applied to <a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">brush</a>\
      \ <a href=\"/Legacy:Surface\" title=\"Legacy:Surface\">surfaces</a> and <a href=\"\
      /Legacy:Mesh\" title=\"Legacy:Mesh\">meshes</a> or directly drawn on a <a href=\"\
      /Legacy:Canvas\" title=\"Legacy:Canvas\">canvas</a>; special type of <a href=\"\
      /Legacy:Material\" title=\"Legacy:Material\">material</a></dd>\n<dt>Total conversion&#160;</dt>\n\
      <dd>mod attempting to totally change the underlying game into a different game\
      \ by providing all-new content (game types, user interface, weapons, maps, models,\
      \ menus)</dd>\n<dt>Trace&#160;</dt>\n<dd>follows a straight line through the\
      \ world, usually until it hits solid geometry. Usually used to determine where\
      \ bullets hit.</dd>\n<dt>Translucent&#160;</dt>\n<dd>color blending type; black\
      \ is transparent, white is opaque (see <a href=\"/Legacy:Color_Blending\" title=\"\
      Legacy:Color Blending\">color blending</a>)</dd>\n<dt><a href=\"/Legacy:Trigger\"\
      \ title=\"Legacy:Trigger\">Trigger</a>&#160;</dt>\n<dd>An actor in a level which,\
      \ when touched, will activate some effect, or other event.</dd>\n<dt><a href=\"\
      /Legacy:Typecasting\" title=\"Legacy:Typecasting\">Typecasting</a>&#160;</dt>\n\
      <dd>converting one type of variable to another (e.g. Float to Integer)</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"U\">U</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=21\"\
      \ title=\"Edit section: U\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>UC file&#160;</dt>\n<dd>An <a href=\"/Legacy:UnrealScript\" title=\"\
      Legacy:UnrealScript\">UnrealScript</a> source code file (Unreal Class), readable\
      \ in any plain-text editor.</dd>\n<dt>UAX&#160;</dt>\n<dd><a href=\"/Legacy:UT\"\
      \ title=\"Legacy:UT\" class=\"mw-redirect\">UT</a>'s and <a href=\"/Legacy:UT2003\"\
      \ title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>'s <a href=\"/Legacy:Sounds\"\
      \ title=\"Legacy:Sounds\">sounds</a> format.</dd>\n<dt><a href=\"/Legacy:Ucc\"\
      \ title=\"Legacy:Ucc\">Ucc</a>&#160;</dt>\n<dd><a href=\"/Legacy:UnrealScript\"\
      \ title=\"Legacy:UnrealScript\">UnrealScript</a> execution environment, ucc.exe\
      \ in the <a href=\"/Legacy:Engine_Directory_Structure\" title=\"Legacy:Engine\
      \ Directory Structure\">System subdirectory</a></dd>\n<dt><a href=\"/Legacy:UMOD\"\
      \ title=\"Legacy:UMOD\">UMOD</a>&#160;</dt>\n<dd>Unreal Mod installer</dd>\n\
      <dt>UMX&#160;</dt>\n<dd><a href=\"/Legacy:UT\" title=\"Legacy:UT\" class=\"\
      mw-redirect\">UT</a>'s music format.</dd>\n<dt>Unlit&#160;</dt>\n<dd>(<a href=\"\
      /Legacy:Texture_(UT)\" title=\"Legacy:Texture (UT)\">Texture (UT)</a>) rendered\
      \ without any <a href=\"/Legacy:Lighting\" title=\"Legacy:Lighting\">lighting</a>\
      \ applied to it; yields a bright, uniform appearance</dd>\n<dt>USA file&#160;</dt>\n\
      <dd>In Unreal 1, Unreal 2, and OldSkool for UT, a file created to save data\
      \ from a singleplayer game in progress.</dd>\n<dt><a href=\"/Legacy:UT2MOD\"\
      \ title=\"Legacy:UT2MOD\" class=\"mw-redirect\">UT2MOD</a>&#160;</dt>\n<dd><a\
      \ href=\"/Legacy:UT2003\" title=\"Legacy:UT2003\" class=\"mw-redirect\">UT2003</a>'s\
      \ <a href=\"/Legacy:UMOD\" title=\"Legacy:UMOD\">UMOD</a> format</dd>\n<dt><a\
      \ href=\"/Legacy:UU\" title=\"Legacy:UU\" class=\"mw-redirect\">UU</a>&#160;</dt>\n\
      <dd>Unreal units, used to measure and specify lengths within the engine's virtual\
      \ space</dd>\n<dt>UV mapping&#160;</dt>\n<dd>two-dimensional application and\
      \ alignment of a skin on a <a href=\"/Legacy:Mesh\" title=\"Legacy:Mesh\">mesh</a></dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"V\">V</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=22\"\
      \ title=\"Edit section: V\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Variable_Syntax\" title=\"Legacy:Variable Syntax\"\
      >Variable</a>&#160;</dt>\n<dd>memory location with a symbolic name where a program\
      \ can store information for future retrieval</dd>\n<dt>Vertex&#160;</dt>\n<dd>point\
      \ in (normally two- or three-dimensional) space; point where polygon edges meet</dd>\n\
      <dt>Vertex animation&#160;</dt>\n<dd><a href=\"/Legacy:Mesh\" title=\"Legacy:Mesh\"\
      >mesh</a> animation by playing a set of different, fixed vertex arrangements\
      \ (like stop-motion animation in movies); see <a href=\"/Legacy:Animation\"\
      \ title=\"Legacy:Animation\">Animation</a></dd>\n<dt><a href=\"/Legacy:UnrealEd_Viewport\"\
      \ title=\"Legacy:UnrealEd Viewport\">Viewport</a>&#160;</dt>\n<dd>Window in\
      \ UnrealEd which shows one view of the map that is loaded; a class in UnrealScript\
      \ that represents the local player</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"W\">W</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=23\" title=\"Edit section:\
      \ W\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Project_FAQ\" title=\"Legacy:Project FAQ\">Wiki</a>&#160;</dt>\n\
      <dd>collaborative, open project on the web, gathering knowledge on a certain\
      \ topic</dd>\n<dt><a href=\"/Legacy:WarpZoneInfo\" title=\"Legacy:WarpZoneInfo\"\
      >WarpZone</a>&#160;</dt>\n<dd>special kind of <a href=\"/Legacy:Zone\" title=\"\
      Legacy:Zone\">zone</a>. A WarpZone's portal renders what can be seen from the\
      \ destination portal, and also teleports players and objects which enter it\
      \ to the destination portal.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"\
      Z\">Z</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Terminology?section=24\" title=\"Edit section:\
      \ Z\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Z-Axis\" title=\"Legacy:Z-Axis\">Z-axis</a>&#160;</dt>\n\
      <dd>The third axis in a 3D co-ordinate system. In FPS games, this also refers\
      \ to things (architectural detail, enemies, etc) being above or below the player.</dd>\n\
      <dt><a href=\"/Legacy:Zone\" title=\"Legacy:Zone\">Zone</a>&#160;</dt>\n<dd>Portion\
      \ of a map's space that is sectioned off, either to achieve special effects\
      \ (gravity, water, etc.) or for engine optimization</dd>\n<dt><a href=\"/Legacy:Zone_Portal\"\
      \ title=\"Legacy:Zone Portal\">Zone portal</a>&#160;</dt>\n<dd>Type of polygon\
      \ (usually built with a <a href=\"/Legacy:Sheet\" title=\"Legacy:Sheet\">sheet</a>\
      \ <a href=\"/Legacy:Brush\" title=\"Legacy:Brush\">brush</a>) which tells the\
      \ engine where zone boundaries lie.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Terminology?section=25\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Some other pages that may help:</p>\n<ul>\n<li><a\
      \ href=\"/Legacy:File_Format\" title=\"Legacy:File Format\">File Format</a>\
      \ – Summary of all the file formats encountered when working with Unreal</li>\n\
      <li><a href=\"/Legacy:Texture_Format\" title=\"Legacy:Texture Format\">Texture\
      \ Format</a></li>\n<li><a href=\"http://udn.epicgames.com/Two/UnGlossary\" class=\"\
      extiw\" title=\"udn2:UnGlossary\">udn2:UnGlossary</a></li>\n<li>External Link:\
      \ <a rel=\"nofollow\" class=\"external text\" href=\"http://www.icecreamyou.com/KeyTerms.htm\"\
      >IceCreamYou's Key Terms</a> – A very comprehensive list of terminology</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Terminology?section=26\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Sweavo:</b>\
      \ I would have thought UScript's semantics would be better thought of as references\
      \ rather than pointers, since it's not meaningful to increment a reference,\
      \ whereas incrementing a pointer has some meaning, albeit ill-defined...? Also\
      \ since non-native functions are executed in bytecode (aren't they?) then actual\
      \ pointers (in the hardware sense) are not passed around in executing unrealscript\
      \ are they? I imagined array indices.</p>\n<p><b>IceCreamYou:</b> I took the\
      \ liberty of adding a link to my own Key Terms page... I can't guarantee there\
      \ aren't a few errors, but it is a very complete list.</p>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.189 seconds\nReal time usage: 0.524 seconds\nPreprocessor\
      \ visited node count: 104/1000000\nPreprocessor generated node count: 116/1000000\n\
      Post‐expand include size: 11/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3069-0!*!0!!en!*!*\
      \ and timestamp 20221117191020 and revision id 8064\n -->\n"
  categories:
  - sortkey: "Terminology"
    name: "Legacy_FAQ"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Search"
  - ns: 100
    exists: true
    name: "Legacy:SkyBox"
  - ns: 100
    exists: true
    name: "Legacy:FinalBlend"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:Variable Syntax"
  - ns: 100
    exists: true
    name: "Legacy:Lighting"
  - ns: 100
    exists: true
    name: "Legacy:Polycount"
  - ns: 100
    exists: true
    name: "Legacy:Z-Axis"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedPawn"
  - ns: 100
    exists: true
    name: "Legacy:FOV"
  - ns: 100
    exists: true
    name: "Legacy:Replication"
  - ns: 100
    exists: true
    name: "Legacy:Shader"
  - ns: 100
    exists: true
    name: "Legacy:Texture Format"
  - ns: 100
    exists: true
    name: "Legacy:Bitmap"
  - ns: 100
    exists: true
    name: "Legacy:Object"
  - ns: 100
    exists: true
    name: "Legacy:Creating Actors And Objects"
  - ns: 100
    exists: true
    name: "Legacy:Red Builder Brush"
  - ns: 100
    exists: true
    name: "Legacy:Project FAQ"
  - ns: 100
    exists: true
    name: "Legacy:Garbage Collection"
  - ns: 100
    exists: true
    name: "Legacy:Polygon"
  - ns: 100
    exists: true
    name: "Legacy:Destroying Objects"
  - ns: 100
    exists: true
    name: "Legacy:Bot (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:Emitter"
  - ns: 100
    exists: true
    name: "Legacy:Class Syntax"
  - ns: 100
    exists: true
    name: "Legacy:Environment Mapping"
  - ns: 100
    exists: true
    name: "Legacy:Animation"
  - ns: 100
    exists: true
    name: "Legacy:Terminology/Style"
  - ns: 100
    exists: true
    name: "Legacy:UU"
  - ns: 100
    exists: true
    name: "Legacy:Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Projector"
  - ns: 100
    exists: true
    name: "Legacy:Sound"
  - ns: 100
    exists: true
    name: "Legacy:DXT"
  - ns: 100
    exists: true
    name: "Legacy:InitialState"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Iterator"
  - ns: 100
    exists: true
    name: "Legacy:Typecasting"
  - ns: 100
    exists: true
    name: "Legacy:Brush Rotate"
  - ns: 100
    exists: true
    name: "Legacy:UT2003"
  - ns: 100
    exists: true
    name: "Legacy:Hall Of Mirrors"
  - ns: 100
    exists: true
    name: "Legacy:Pivot"
  - ns: 100
    exists: true
    name: "Legacy:Probe Function"
  - ns: 100
    exists: true
    name: "Legacy:BSP"
  - ns: 100
    exists: true
    name: "Legacy:Chain Of Events When Spawning Actors"
  - ns: 100
    exists: true
    name: "Legacy:Zone"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:UT2MOD"
  - ns: 100
    exists: true
    name: "Legacy:Gameplay"
  - ns: 100
    exists: false
    name: "Legacy:AnnouncerPack"
  - ns: 100
    exists: true
    name: "Legacy:Level Properties"
  - ns: 100
    exists: true
    name: "Legacy:Canvas"
  - ns: 100
    exists: true
    name: "Legacy:Node Count"
  - ns: 100
    exists: true
    name: "Legacy:Spawndeath"
  - ns: 100
    exists: true
    name: "Legacy:Dynamics"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  - ns: 100
    exists: true
    name: "Legacy:Prefab Browser"
  - ns: 100
    exists: true
    name: "Legacy:Bot"
  - ns: 100
    exists: true
    name: "Legacy:Sounds"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Viewport"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:Palette"
  - ns: 100
    exists: true
    name: "Legacy:CSG"
  - ns: 100
    exists: true
    name: "Legacy:Modifier"
  - ns: 100
    exists: true
    name: "Legacy:File Format"
  - ns: 100
    exists: true
    name: "Legacy:Map Flow"
  - ns: 100
    exists: true
    name: "Legacy:UT"
  - ns: 100
    exists: true
    name: "Legacy:Material"
  - ns: 100
    exists: true
    name: "Legacy:WarpZoneInfo"
  - ns: 100
    exists: true
    name: "Legacy:Bot Support"
  - ns: 100
    exists: true
    name: "Legacy:Sheet"
  - ns: 100
    exists: true
    name: "Legacy:Obfuscation"
  - ns: 100
    exists: true
    name: "Legacy:UMOD"
  - ns: 100
    exists: true
    name: "Legacy:Variable Type"
  - ns: 100
    exists: true
    name: "Legacy:Message Placeholder"
  - ns: 100
    exists: true
    name: "Legacy:Color Blending"
  - ns: 100
    exists: true
    name: "Legacy:MyLevel"
  - ns: 100
    exists: false
    name: "Legacy:KillZ"
  - ns: 100
    exists: true
    name: "Legacy:Viewport"
  - ns: 100
    exists: true
    name: "Legacy:Skeletal Mesh"
  - ns: 100
    exists: true
    name: "Legacy:State"
  - ns: 100
    exists: true
    name: "Legacy:Newbie"
  - ns: 100
    exists: true
    name: "Legacy:Brush"
  - ns: 100
    exists: true
    name: "Legacy:Alpha Channel"
  - ns: 100
    exists: true
    name: "Legacy:Texture (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Class"
  - ns: 100
    exists: true
    name: "Legacy:Engine Directory Structure"
  - ns: 100
    exists: true
    name: "Legacy:XEmitter"
  - ns: 100
    exists: false
    name: "Legacy:Log"
  - ns: 100
    exists: true
    name: "Legacy:Gametype"
  - ns: 100
    exists: true
    name: "Legacy:Mod"
  - ns: 100
    exists: true
    name: "Legacy:Vehicle"
  - ns: 100
    exists: true
    name: "Legacy:Decal"
  - ns: 100
    exists: true
    name: "Legacy:Event"
  - ns: 100
    exists: true
    name: "Legacy:Log Warnings"
  - ns: 100
    exists: true
    name: "Legacy:Linked List"
  - ns: 100
    exists: true
    name: "Legacy:Static Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Playtest"
  - ns: 100
    exists: true
    name: "Legacy:Texture"
  - ns: 100
    exists: true
    name: "Legacy:JumpSpot"
  - ns: 100
    exists: true
    name: "Legacy:BSP Hole"
  - ns: 100
    exists: true
    name: "Legacy:Package"
  - ns: 100
    exists: true
    name: "Legacy:StallZ"
  - ns: 100
    exists: true
    name: "Legacy:Texture Compression"
  - ns: 100
    exists: true
    name: "Legacy:Surface"
  - ns: 100
    exists: true
    name: "Legacy:NavigationPoint"
  - ns: 100
    exists: true
    name: "Legacy:Actor Properties Window"
  - ns: 100
    exists: true
    name: "Legacy:Solidity"
  - ns: 100
    exists: true
    name: "Legacy:Bilinear Filtering"
  - ns: 100
    exists: true
    name: "Legacy:HUD"
  - ns: 100
    exists: true
    name: "Legacy:Object Oriented Programming Overview"
  - ns: 100
    exists: true
    name: "Legacy:Decoration"
  - ns: 100
    exists: true
    name: "Legacy:OCD"
  - ns: 100
    exists: true
    name: "Legacy:Function Syntax"
  - ns: 100
    exists: true
    name: "Legacy:ShadowProjector"
  - ns: 100
    exists: true
    name: "Legacy:Artificial Intelligence"
  - ns: 100
    exists: true
    name: "Legacy:Quaternion"
  - ns: 100
    exists: true
    name: "Legacy:Pawn"
  - ns: 100
    exists: true
    name: "Legacy:VoicePack"
  - ns: 100
    exists: true
    name: "Legacy:Mutator"
  - ns: 100
    exists: true
    name: "Legacy:Tag"
  - ns: 100
    exists: true
    name: "Legacy:Terrain"
  - ns: 100
    exists: true
    name: "Legacy:Ucc"
  - ns: 100
    exists: true
    name: "Legacy:Zone Portal"
  - ns: 100
    exists: true
    name: "Legacy:PlayerPawn"
  templates: []
  images: []
  externallinks:
  - "http://www.icecreamyou.com/KeyTerms.htm"
  - "http://www.m-w.com/cgi-bin/dictionary?poseur"
  sections:
  - toclevel: 1
    level: "2"
    line: "A"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Terminology"
    byteoffset: 398
    anchor: "A"
  - toclevel: 1
    level: "2"
    line: "B"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Terminology"
    byteoffset: 2826
    anchor: "B"
  - toclevel: 1
    level: "2"
    line: "C"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Terminology"
    byteoffset: 4260
    anchor: "C"
  - toclevel: 1
    level: "2"
    line: "D"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Terminology"
    byteoffset: 5706
    anchor: "D"
  - toclevel: 1
    level: "2"
    line: "E"
    number: "5"
    index: "5"
    fromtitle: "Legacy:Terminology"
    byteoffset: 6648
    anchor: "E"
  - toclevel: 1
    level: "2"
    line: "F"
    number: "6"
    index: "6"
    fromtitle: "Legacy:Terminology"
    byteoffset: 7607
    anchor: "F"
  - toclevel: 1
    level: "2"
    line: "G"
    number: "7"
    index: "7"
    fromtitle: "Legacy:Terminology"
    byteoffset: 8869
    anchor: "G"
  - toclevel: 1
    level: "2"
    line: "H"
    number: "8"
    index: "8"
    fromtitle: "Legacy:Terminology"
    byteoffset: 9777
    anchor: "H"
  - toclevel: 1
    level: "2"
    line: "I"
    number: "9"
    index: "9"
    fromtitle: "Legacy:Terminology"
    byteoffset: 10540
    anchor: "I"
  - toclevel: 1
    level: "2"
    line: "J"
    number: "10"
    index: "10"
    fromtitle: "Legacy:Terminology"
    byteoffset: 12072
    anchor: "J"
  - toclevel: 1
    level: "2"
    line: "K"
    number: "11"
    index: "11"
    fromtitle: "Legacy:Terminology"
    byteoffset: 12303
    anchor: "K"
  - toclevel: 1
    level: "2"
    line: "L"
    number: "12"
    index: "12"
    fromtitle: "Legacy:Terminology"
    byteoffset: 12539
    anchor: "L"
  - toclevel: 1
    level: "2"
    line: "M"
    number: "13"
    index: "13"
    fromtitle: "Legacy:Terminology"
    byteoffset: 13304
    anchor: "M"
  - toclevel: 1
    level: "2"
    line: "N"
    number: "14"
    index: "14"
    fromtitle: "Legacy:Terminology"
    byteoffset: 15152
    anchor: "N"
  - toclevel: 1
    level: "2"
    line: "O"
    number: "15"
    index: "15"
    fromtitle: "Legacy:Terminology"
    byteoffset: 16311
    anchor: "O"
  - toclevel: 1
    level: "2"
    line: "P"
    number: "16"
    index: "16"
    fromtitle: "Legacy:Terminology"
    byteoffset: 17557
    anchor: "P"
  - toclevel: 1
    level: "2"
    line: "Q"
    number: "17"
    index: "17"
    fromtitle: "Legacy:Terminology"
    byteoffset: 20150
    anchor: "Q"
  - toclevel: 1
    level: "2"
    line: "R"
    number: "18"
    index: "18"
    fromtitle: "Legacy:Terminology"
    byteoffset: 20510
    anchor: "R"
  - toclevel: 1
    level: "2"
    line: "S"
    number: "19"
    index: "19"
    fromtitle: "Legacy:Terminology"
    byteoffset: 21217
    anchor: "S"
  - toclevel: 1
    level: "2"
    line: "T"
    number: "20"
    index: "20"
    fromtitle: "Legacy:Terminology"
    byteoffset: 23881
    anchor: "T"
  - toclevel: 1
    level: "2"
    line: "U"
    number: "21"
    index: "21"
    fromtitle: "Legacy:Terminology"
    byteoffset: 25166
    anchor: "U"
  - toclevel: 1
    level: "2"
    line: "V"
    number: "22"
    index: "22"
    fromtitle: "Legacy:Terminology"
    byteoffset: 26184
    anchor: "V"
  - toclevel: 1
    level: "2"
    line: "W"
    number: "23"
    index: "23"
    fromtitle: "Legacy:Terminology"
    byteoffset: 26774
    anchor: "W"
  - toclevel: 1
    level: "2"
    line: "Z"
    number: "24"
    index: "24"
    fromtitle: "Legacy:Terminology"
    byteoffset: 27124
    anchor: "Z"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "25"
    index: "25"
    fromtitle: "Legacy:Terminology"
    byteoffset: 27647
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "26"
    index: "26"
    fromtitle: "Legacy:Terminology"
    byteoffset: 28012
    anchor: "Discussion"
  displaytitle: "Legacy:Terminology"
  iwlinks:
  - prefix: "udn2"
    url: "http://udn.epicgames.com/Two/UnGlossary"
    name: "udn2:UnGlossary"
  wikitext:
    text: "'''Got a term that isn't described here?'''  Add it to the list (at its\
      \ appropriate place) and leave the explanation out.  Somebody else will fill\
      \ it in.\n\n'''Contributors:'''  Please read the [[Legacy:Terminology/Style|Terminology\
      \ Style Guide]]. Also please don't add random UnrealScript variable names to\
      \ this page, it's not intended for that. (Use the [[Legacy:Search|Search]] instead,\
      \ please.)\n\n==A ==\n; Abstract class : a class which can't be added to a map\
      \ or spawned in game and is thus only useful as a ''base class''. See [[Legacy:Class\
      \ Syntax|Class Syntax]].\n; Accessed None : [[Legacy:UnrealScript|UnrealScript]]\
      \ warning message, meaning that code attempted to retrieve or alter data via\
      \ an invalid object reference (also see [[Legacy:Log Warnings|Log Warnings]])\n\
      ; Active brush : another name for the [[Legacy:Red Builder Brush|red builder\
      \ brush]]\n\n; [[Legacy:Actor|Actor]] : object in three-dimensional virtual\
      \ space\n; Algorithm : implementation, procedure, protocol, or sequence of rules\
      \ or instructions, (usually for accomplishing a maths-oriented task) that specify\
      \ the order and kind of arithmetic operations that are used on specified set\
      \ of data, though technically, a cooking recipe is an example\n; [[Legacy:Alpha\
      \ Channel|Alpha Channel]] : Information contained within an image file that\
      \ can be used to determine the intensity of different material properties such\
      \ as opacity and specularity intensity among other things.\n; Alpha Map : An\
      \ Unreal Tournament Map that is being tested by the mapper, and/or a few other,\
      \ selected people.\n; Alpha version : unfinished software version, not yet feature-complete;\
      \ not ready for public release. \n; [[Legacy:Animation|Animation]] : Series\
      \ of pre-generated, articulated graphic components that convey character motion\
      \ or behavior, during a scene display, and are called by the animation subsystem\
      \ in specific game situations\n; Anti-Aliasing : System of smoothing out jagged\
      \ edges on the screen.  Video card renders at a higher resolution and then tones\
      \ it down to your current set resolution.\n; Anisotropic Filtering : System\
      \ to improve quality of textures rendered at various angles.\n; Assertions :\
      \ Code expression that usually evaluates to true or false. Utilized to ensure\
      \ that components behave properly; typically, checks on execution conditions\
      \ and performance\n; Array : Variable containing an ordered set of values of\
      \ the same type, indexed by an integer\n; [[Legacy:Artificial Intelligence|AI]]\
      \ : Artificial Intelligence; in game development, AI is a code subsystem that\
      \ controls the behavior of agents (or [[Legacy:Bot (UT)|Bot (UT)]]s, see [[Legacy:Bot\
      \ Support|Bot Support]]), objects, and numerous [[Legacy:Actor|actors]]; the\
      \ AI is responsible for realistic, or, intelligent, behavior of opponents during\
      \ gameplay\n; Attribute : synonymous to ''Property''\n\n==B ==\n\n; Base [[Legacy:Class|class]]\
      \ : higher level, generalized class; used to define characteristics common to\
      \ all its sub[[Legacy:Class|class]]es. [[Legacy:ScriptedPawn|ScriptedPawn]]\
      \ is the base class for Unreal I monsters, for example.\n; Beta version : unfinished\
      \ software version, yet considered feature-complete, that's still in testing\
      \ stage; not yet ready for public release\n; [[Legacy:Bilinear Filtering|Bilinear\
      \ Filtering]] : see [[Legacy:Bilinear Filtering|Bilinear Filtering]].\n; BMP\
      \ : [[Legacy:Bitmap|bitmap]] file format (with no or lossless compression)\n\
      ; Boolean : value that is either true or false\n; Bone : An object which describes\
      \ the relationship of itself to other \"bones.\" Bones usually have vertices\
      \ attached which move with the bone, thus creating an animation without worrying\
      \ about the placement of each vertex. See [[Legacy:Skeletal Mesh|Skeletal Mesh]]\n\
      ; [[Legacy:Bot|Bot]] : A computer-controlled player character\n; Botplay : The\
      \ gameplay as specifically related to [[Legacy:Bot Support|Bot Support]]\n;\
      \ [[Legacy:Brush|Brush]] : piece of geometry that builds the virtual space\n\
      ; [[Legacy:BSP|BSP]] : Binary Space Partition; static data structure method\
      \ used by game programmers to determine correct front-to-back polygon visibility,\
      \ so that scenes are rendered realistically\n; [[Legacy:BSP Hole|BSP hole]]\
      \ : building bug, yields unwanted invisible obstacles and players falling into\
      \ geometry and dying\n\n==C ==\n\n; [[Legacy:Canvas|Canvas]] : the class in\
      \ the Unreal engine that is responsible for drawing items directly onto a player's\
      \ display.  The most common use of the canvas is in the creation and modification\
      \ of a [[Legacy:HUD|HUD]].\n; [[Legacy:Typecasting|Casting]] : see [[Legacy:Typecasting|Typecasting]]\n\
      ; [[Legacy:Class|Class]] : type of an object, an object's class defines how\
      \ an object is implemented; derived from or instantiated by an object, from\
      \ which it inherits clearly defined attributes. A class can contain: static\
      \ data members, objects of another class, pointers and references to types and\
      \ objects of the same or another class, declarations of another class, member\
      \ functions, and friend classes. All Classes are listed in the [[Legacy:Actor|Actor]]\
      \ browser.\n; Client : any linked user (another remote computer terminal, or\
      \ program, or even another [[Legacy:Class|class]]) of another server, or program,\
      \ or class is said to be a client of that entity.\n; Compiler : software that\
      \ parses a high-level language, and converts source code to a binary executable\
      \ program, that will run on Windows, Unix, or some operating system.\n; Constructor\
      \ : method that is automatically called when an object is created; responsible\
      \ for initializing this object; see [[Legacy:Creating Actors And Objects|Creating\
      \ Actors And Objects]].\n; [[Legacy:CSG|CSG]] : Constructive Solid Geometry,\
      \ the general idea behind building geometry in UnrealED.\n\n==D ==\n\n; Declaration\
      \ : code statement that doesn't produce executable code when compiled, but informs\
      \ the compiler about new variables and functions (and their types, parameters,\
      \ and so on)\n; Destructor : method that is automatically called when an object\
      \ is destroyed; responsible for releasing resources (memory, sockets, other\
      \ objects) used by this object; see [[Legacy:Destroying Objects|destroying objects]]\n\
      ; DLL : Dynamic Link Library, file containing native executable code that is\
      \ bound to another application (or [[Legacy:UnrealScript|UnrealScript]]) at\
      \ runtime\n; [[Legacy:DXT|DXT]] : some sort of [[Legacy:Texture Compression|texture\
      \ compression]] mojo. See [[Legacy:Texture Format|texture format]].\n; [[Legacy:Dynamics|Dynamics]]\
      \ : Effects in the map that the map designer put in to make the map more pleasing\
      \ to the eyes and ears. Examples are [[Legacy:Mover|Mover]]s, [[Legacy:Emitter|Emitter]]s,\
      \ and [[Legacy:Sound|Sound]]s.\n\n==E ==\n\n; [[Legacy:Emitter|Emitter]] : an\
      \ [[Legacy:Actor|Actor]] responsible for creating a particle effect; there are\
      \ two emitter [[Legacy:Class|class]]es in [[Legacy:UT2003|UT2003]]: [[Legacy:Emitter|Emitter]]\
      \ and [[Legacy:XEmitter|xEmitter]]\n; Engine : the underlying code framework\
      \ which makes a complex computer program run.\n; Enumeration : ordered set of\
      \ numeric constants whose values are automatically assigned during compilation\
      \ (declared with the <tt>enum</tt> keyword)\n; [[Legacy:Environment Mapping|Environment\
      \ mapping]] : dynamic UV mapping of a skin on a [[Legacy:Mesh|mesh]], depending\
      \ on the viewer's relative position, producing a mirror-like effect. \n; [[Legacy:Event|Event]]\
      \ : (1) an [[Legacy:Actor|actor]]'s or [[Legacy:Trigger|trigger]]'s reaction\
      \ to something, broadcast to [[Legacy:Actor|actor]]s with matching [[Legacy:Tag|tag]]s;\
      \  (2) [[Legacy:UnrealScript|UnrealScript]] [[Legacy:Function Syntax|function]]\
      \ called from native code.\n\n==F ==\n\n; Face : see [[Legacy:Polygon|Polygon]]\n\
      ; [[Legacy:FinalBlend|FinalBlend]] : a texture [[Legacy:Modifier|Modifier]]\n\
      ; Float : numerical value capable of storing numbers with digits after the decimal\
      \ point (like 3.142)\n; Forward kinematics (FK) : A term used in skeletal animation,\
      \ indicating that motion in a skeletal hierarchy (a set of connected bones)\
      \ is transferred down the hierarchy. Example: rotation applied to a shoulder\
      \ joint results in rotation of the bones below that joint in the skeletal chain\
      \ : upper arm, forearm, hands, fingers or claws, etc. See also Inverse kinematics\
      \ (IK).\n; [[Legacy:FOV|FOV]] : Field Of Vision (or: Field Of View)\n; [[Legacy:Function\
      \ Syntax|Function]] : piece of code with a defined entry point and one or more\
      \ exit points\n; [[Legacy:Function Syntax|Function]] call : request for an object\
      \ to carry out one of its operations. Code command within a program that jumps\
      \ to a different portion of the code and returns to the statement following\
      \ the call after executing that code (and may return a data value to it). The\
      \ function return can be a value, a reference, or a pointer.\n; [[Legacy:Function\
      \ Syntax|Function]] overriding : see ''Overriding''\n; [[Legacy:Function Syntax|Function]]\
      \ prototype : see ''Prototype''\n\n==G ==\n\n; G16 : 16 bit grayscale texture.\
      \ See [[Legacy:Texture Format|texture format]]\n; [[Legacy:Gameplay|Gameplay]]\
      \ : the playability of a game or an element of a game or map; it's relative\
      \ value in terms of play\n; [[Legacy:Gametype|Gametype]] : a way to implement\
      \ a [[Legacy:Mod|mod]]; specifies basic rules for playing the game (e.g. CTF:\
      \ get enemy flag and touch your own with it); can be further modified through\
      \ [[Legacy:Mutator|mutator]]s\n; [[Legacy:Garbage Collection|Garbage collection]]\
      \ : automatic destruction of unreferenced objects (as in Java, Perl or [[Legacy:UnrealScript|UnrealScript]])\n\
      ; [[Legacy:Brush Rotate|Gimbal lock]] : occurs when rotations in successive\
      \ axes make further rotations either impossible or produce undesired results.\n\
      ; Gibs : Body parts that fly everywhere when you blow somebody up.\n; Gold Version\
      \ : Version released to the public after the Alpha and Beta versions.\n\n==H\
      \ ==\n\n; Hidden variable : a variable defined in a class but not accessible\
      \ in UnrealEd's [[Legacy:Actor Properties Window|Actor Properties Window]].\
      \ This is done with the [[Legacy:Variable Syntax|variable syntax]] '''var'''\
      \ instead of '''var()'''.\n; Hierarchy : an ordering of things (such as objects,\
      \ classes, people) in a tree-like structure, where things descend or depend\
      \ on their superiors. Examples: a family tree, the military chain of command.\
      \ Superseding values affect preceding values, but not vice versa.\n; HOM : [[Legacy:Hall\
      \ Of Mirrors|Hall Of Mirrors]] effect, a rendering bug\n; [[Legacy:HUD|HUD]]\
      \ : Heads-Up Display, rendered on top of the in-game 3D [[Legacy:Viewport|viewport]]\
      \ and displaying in-game data like frags, weapons, ammo and scores\n\n==I ==\n\
      \n; Implementation : program code structure that accomplishes some task or sequence\
      \ of functions (see also ''Interface'')\n; Inheritance : relationship among\
      \ classes wherein one class shares the structure and/or behavior defined in\
      \ one or more other super[[Legacy:Class|class]]es\n; Instantiation : [[Legacy:Creating\
      \ Actors And Objects|creation]] of an object from a [[Legacy:Class|class]],\
      \ each object having a copy of its own (non-static) data members\n; Instigator\
      \ : a [[Legacy:Pawn|Pawn]] which is considered responsible for the damage done\
      \ by one actor to another; an [[Legacy:Actor|Actor]] class property; often used\
      \ for the <tt>InstigatedBy</tt> or <tt>EventInstigator</tt> parameters of Trigger()\
      \ and TakeDamage() functions\n; Integer : numerical value, a whole number without\
      \ decimals (like 10)\n; Interface : user's or client's perception of an object;\
      \ object-oriented data abstraction is to provide a clean and efficient interface\
      \ that allows the user to access the underlying implementation\n; Inverse kinematics\
      \ (IK) : A term used in skeletal animation, indicating that motion in a skeletal\
      \ hierarchy (a set of connected bones) is transferred up the hierarchy. Example:\
      \ Positioning a hand bone at the end of a skeletal chain results in joints further\
      \ up the chain (e.g., forearm and upper arm) being relocated as needed. See\
      \ also Forward kinematics (FK).\n; [[Legacy:Iterator|Iterator]] : special function\
      \ that allows iteration over all or a given subset of all [[Legacy:Object|object]]s,\
      \ using a <tt>foreach</tt> loop\n\n==J ==\n\n; [[Legacy:JumpSpot|JumpSpot]]\
      \ : a [[Legacy:NavigationPoint|NavigationPoint]] actor indicating a good place\
      \ for bots to jump ''to'', not from.  Also indicates a good point for translocation,\
      \ double-jump, impact-jump, etc.\n\n==K ==\n\n; [[Legacy:KillZ|KillZ]] : a [[Legacy:Level\
      \ Properties|Level Properties]] setting of the lowest altitude that a [[Legacy:Pawn|Pawn]]\
      \ can exist.  Lower than this altitude, the Pawn is killed.  See also [[Legacy:StallZ|StallZ]].\n\
      \n==L ==\n\n; [[Legacy:Lighting|Lighting]] : A combination of the lights in\
      \ the levels, and the light-maps that are overlayed onto walls, giving the impression\
      \ of lights on those walls.\n; [[Legacy:Linked List|Linked List]] : List consisting\
      \ of objects where each item has a reference (link) to the next one. \n; LOD\
      \ : Level Of Detail. Allows high-end machines to display fancy detail (eg weather\
      \ effects) and low-end machines to just show the essentials. Also allows details\
      \ to be skipped at farther distances, improving performance. (which allows more\
      \ details to be shown at closer distances) See, for example, [[Legacy:Chain\
      \ Of Events When Spawning Actors|Chain Of Events When Spawning Actors]].\n;\
      \ [[Legacy:Log|Log]] : text file which the game writes as it executes.\n\n==M\
      \ ==\n\n; [[Legacy:Map Flow|Map Flow]] : Map layout design that promotes smooth,\
      \ fast and exciting gameplay\n; Masked : color blending type; makes part of\
      \ a [[Legacy:Texture (UT)|Texture (UT)]] transparent (see [[Legacy:Color Blending|color\
      \ blending]])\n; [[Legacy:Material|Material]] : rectangular image ([[Legacy:Bitmap|bitmap]])\
      \ that can be applied to [[Legacy:Brush|brush]] [[Legacy:Surface|surface]]s\
      \ and [[Legacy:Mesh|mesh]]es or directly drawn on a [[Legacy:Canvas|canvas]];\
      \ also see [[Legacy:Texture|texture]]\n; [[Legacy:Mesh|Mesh]] : three-dimensional\
      \ representation of an [[Legacy:Actor|Actor]] in virtual space (like weapons,\
      \ pickups, players)\n; Method : function (piece of code) that deals with objects\
      \ of a given class; defined by the object's class\n; [[Legacy:Mod|Mod]] : short\
      \ for ''modification''; modification of a game can add new rules or content\
      \ and in UnrealEngine games (like Unreal or Unreal Tournament) a modification\
      \ can be implemented as a [[Legacy:Mutator|Mutator]], a [[Legacy:Gametype|gametype]],\
      \ a total conversion, a player model, a [[Legacy:VoicePack|VoicePack]], an [[Legacy:AnnouncerPack|AnnouncerPack]]\
      \ and a few other ways\n; Modulated : color blending type; mid-gray is transparent,\
      \ black and white are opaque (see [[Legacy:Color Blending|color blending]])\n\
      ; [[Legacy:Mover|Mover]] : movable [[Legacy:Brush|Brush]] (for doors, elevators\
      \ and visual effects)\n; [[Legacy:Mutator|Mutator]] : a way to implement a [[Legacy:Mod|mod]]\
      \ in UnrealEngine games; mutators usually just change a certain aspect of the\
      \ game, but there are also mutators with large scale modifications (e.g. weapon\
      \ mods, competitive mods); mutators are stackable with other mutators to combine\
      \ their modifications\n; [[Legacy:MyLevel|MyLevel]] : a special name for a package.\
      \ Using this tells UnrealEd to embed a resource in the current map file.\n\n\
      ==N ==\n\n; Name : unique specifier for an object or class (or something else)\
      \ in UnrealScript; unlike strings, can't be modified like a string value and\
      \ may not contain anything except letters, numbers and underscores\n; Native\
      \ code : code that can be interpreted by a computer's processor without any\
      \ intermediate steps. In Unreal, this is C++ code in DLL files.\n; [[Legacy:Newbie|Newbie]]\
      \ : a person that's new to and hence unexperienced in something.\n; N00b : same\
      \ as [[Legacy:Newbie|Newbie]], but is contemptuous (is that a good word for\
      \ them?) about being that. They are sometimes [http://www.m-w.com/cgi-bin/dictionary?poseur\
      \ poseurs].\n; Node : the polys that are seen in Zone/Portal view. They correspond\
      \ to surface polygons split by [[Legacy:BSP|BSP]] cuts. See [[Legacy:Polygon|polygon]]\
      \ and [[Legacy:Node Count|node count]].\n; [[Legacy:Node Count|Node count]]\
      \ : a measure of how much rendering work the engine has to perform to display\
      \ a view of a map. Also the total number of nodes in the name. \n; Null : Texture(s)\
      \ that is missing or can not be found. These null textures are given a default\
      \ texture used by the engine (The green bubbly texture).\n\n==O ==\n\n; [[Legacy:Obfuscation|Obfuscation]]\
      \ : Creating code that works but is difficult to understand or work out what\
      \ it actually does.\n; [[Legacy:Object|Object]] : abstraction that typically\
      \ is assigned clearly specified characteristics; in other words, a chunk of\
      \ data with a certain [[Legacy:Class|class]] associated to it; the [[Legacy:Class|class]]\
      \ describes the data structure and contains the code that deals with objects\
      \ of that [[Legacy:Class|class]]\n; [[Legacy:OCD|OCD]] : Object Collision Detection\n\
      ; [[Legacy:Object Oriented Programming Overview|OOP]] : Object Oriented Programming\n\
      ; Overloading (a [[Legacy:Function Syntax|function]]) : redeclaring and reimplementing\
      \ a function with the same name as an existing function, but a distinguishable\
      \ set of parameters (like having two versions of a function, one of them working\
      \ for float parameters, one of them for integer parameters)\n; Overriding (a\
      \ [[Legacy:Function Syntax|method]]) : redeclaring and reimplementing a method\
      \ in a subclass\n; Overwriting (a [[Legacy:Function Syntax|method]]) : see ''Overriding\
      \ (a method)''\n; Owner : Constant Actor declared in the Actor class, specifies\
      \ who or what owns this object. Use native '''SetOwner( actor NewOwner );'''\
      \ to set the owner.\n\n==P ==\n\n; [[Legacy:Package|Package]] : a file containing\
      \ resources for [[Legacy:Unreal Engine|Unreal engine]] games (like code, decorations,\
      \ sound, music, maps, or all of it)\n; Pathing or [[Legacy:Bot Pathing|Bot Pathing]]\
      \ : supporting bot navigation of a level (see [[Legacy:Bot Support|Bot Support]])\n\
      ; [[Legacy:Palette|Palette]] : look-up table of colors used in a [[Legacy:Bitmap|bitmap]]\n\
      ; Pawn : The parent class of all creatures and players in Unreal which are capable\
      \ of high-level AI and player controls.\n; PCX : [[Legacy:Bitmap|bitmap]] file\
      \ format (with no or lossless compression)\n; [[Legacy:Pivot|Pivot]] : point\
      \ about which a brush is rotated or scaled.\n; Pointer : variable that \"points\
      \ to\" an object's memory location; in [[Legacy:UnrealScript|UnrealScript]],\
      \ all object variables are (typed) pointers, but there's also an unspecific\
      \ ''pointer'' [[Legacy:Variable Type|variable type]] that serves as a placeholder\
      \ for C++ pointers in native code\n; [[Legacy:Polycount|Polycount]] : either\
      \ number of polys currently drawn on screen by the engine, or the total number\
      \ of ''polygons'' in the map.\n; [[Legacy:Polygon|Polygon]] : two-dimensional,\
      \ flat, closed shape in three-dimensional space, like a [[Legacy:Brush|brush]]\
      \ [[Legacy:Surface|surface]].  Currently Unreal Tournament only supports convex\
      \ polygons.\n; [[Legacy:Prefab_Browser|Prefab]] : A collection of Actors, such\
      \ as CSG brushes and/or lights that can be copied and used over and over again\
      \ in a map. ( Useful for distributing map parts without sacrificing storage\
      \ space since a .t3d (Unreal Text) file is much smaller than a .ut2 file )\n\
      ; Private (method or property) : not accessible from outside the [[Legacy:Class|class]]\
      \ this method or property has been declared in  (see ''Public (method or property)'')\n\
      ; [[Legacy:Probe Function|Probe function]] : A function that can be enabled\
      \ or disabled using the ''Enable'' and ''Disable'' methods.  These functions\
      \ are usually defined as \"events\" and are called by native engine code.\n\
      ; Property : individual item of an object's data; defined by the object's [[Legacy:Class|class]]\n\
      ; [[Legacy:Function Syntax|Prototype]] : number, order and types of [[Legacy:Function\
      \ Syntax|function]] parameters\n; [[Legacy:Projector|Projector]] : UT2003's\
      \ replacement for the deprecated [[Legacy:Decal|Decal]] class.  Allows for projected\
      \ shadows ([[Legacy:ShadowProjector|ShadowProjector]] class) and other neat\
      \ stuff.\n; Public (method or property) : accessible from outside the [[Legacy:Class|class]]\
      \ this method or property has been declared in (see ''Private (method or property)'')\n\
      \n==Q ==\n; Quad : a single grid element of [[Legacy:Terrain|terrain]]. \n;\
      \ [[Legacy:Quaternion|Quaternion]] : mathematical entity similar to a complex\
      \ number. These can be used to represent 3D rotations in a way that eliminates\
      \ the [[Legacy:Brush Rotate|gimbal lock]] problem with non-l33t rotational matrices;\
      \ popular with game programmers for this very reason\n\n==R ==\n\n; Ray tracing\
      \ : Calculating the lighting in a level by tracing exactly where the light goes.\n\
      ; RBB : [[Legacy:Red Builder Brush|red builder brush]]\n; Rendering : subsystem\
      \ that actually produces the visible scene that is displayed on the computer\
      \ terminal for players to yell at; consumes the majority of CPU computing capacity\n\
      ; [[Legacy:Replication|Replication]] : generic term for sending game-relevant\
      \ data back and forth between a network server and its clients\n; RGB8 : [[Legacy:Texture\
      \ Format|texture format]] with three channels (red, green, blue) and 8 bits\
      \ per channel\n; RGBA8 : [[Legacy:Texture Format|texture format]] with four\
      \ channels (red, green, blue, alpha) and 8 bits per channel\n\n==S ==\n\n; [[Legacy:Shader|Shader]]\
      \ : \n; SHAS : \"Sudden Heart Attack Syndrome\". Dying for no apparent reason.\
      \ Sudden cratering is usually caused by BSP holes (see 'BSP hole').\n; [[Legacy:Sheet|Sheet]]\
      \ : a brush which does not enclose a 3D volume, usually because it's a single\
      \ polygon.\n; Simulation : generic term for simulation or prediction (not authoritative)\
      \ of game behaviour on network clients\n; Skeletal animation : [[Legacy:Mesh|mesh]]\
      \ animation by having vertices attached to interlinked bones; see ''Animation''\n\
      ; Skin : set of textures that are applied to a [[Legacy:Mesh|mesh]] (for instance,\
      \ a [[Legacy:Bot (UT)|Bot (UT)]], a [[Legacy:PlayerPawn|player]] or a [[Legacy:Decoration|decoration]])\n\
      ; [[Legacy:SkyBox|Sky box]] : see page\n; [[Legacy:Solidity|Solidity]] : see\
      \ page\n; Source (code) : original high-level computer language code, like C++\
      \ or Java, that is compiled into an executable program\n; Spawn : [[Legacy:UnrealScript|UnrealScript]]\
      \ command for [[Legacy:Creating Actors And Objects|creating]] a new [[Legacy:Actor|Actor]]\n\
      ; [[Legacy:Spawndeath|Spawndeath]] : an error condition during map [[Legacy:Playtest|Playtest]]ing\
      \ where the player character repeatedly dies, as if automatically suiciding.\n\
      ; [[Legacy:StallZ|StallZ]] : a [[Legacy:Level Properties|Level Properties]]\
      \ setting of the highest altitude a flying [[Legacy:Vehicle|Vehicle]] can fly\
      \ before it's thrust power is deactivated.  See also [[Legacy:KillZ|KillZ]].\n\
      ; [[Legacy:State|State]] : a concept in UnrealScript that allows actors to execute\
      \ different code in different circumstances. For example, a Bot can be 'Fleeing',\
      \ 'Attacking', etc. See [[Legacy:State|State]] and also [[Legacy:InitialState|InitialState]]\n\
      ; State code : code that is outside of functions in a [[Legacy:State|state]]\
      \ block\n; [[Legacy:Static Mesh|Static Mesh]] : see page.\n; Structure : ordered\
      \ arrangement of typed data items; similar to a [[Legacy:Class|class]] in [[Legacy:UnrealScript|UnrealScript]],\
      \ but can't be referenced (only copied) and doesn't have [[Legacy:Function Syntax|method]]s\n\
      ; String : value of text; for instance, a message somebody typed in\n; Subclass\
      \ : [[Legacy:Class|class]] derived from another [[Legacy:Class|class]] (its\
      \ base [[Legacy:Class|class]], or super[[Legacy:Class|class]]); inherits properties\
      \ and [[Legacy:Function Syntax|method]]s from the super[[Legacy:Class|class]]\
      \ unless they're expressly overwritten\n; [[Legacy:Surface|Surface]] : see page.\n\
      ; Syntax : the rule of arranging and ordering commands to form a code. [[Legacy:UnrealScript|UnrealScript]]\
      \ grammar, if you will; see [[Legacy:Class Syntax|class syntax]] and [[Legacy:Function\
      \ Syntax|function syntax]]\n\n==T ==\n\n; Texel : [[Legacy:Texture|Texture]]\
      \ pixel (as opposed to screen pixel)\n; Text Parsing : the act of using a routine\
      \ or function of some sort to change symbols in a string variable to reflect\
      \ the values of certain variables, e.g. replacing \"%k\" in a death message\
      \ with the killer's name; see [[Legacy:Message Placeholder|Message Placeholder]]\n\
      ; [[Legacy:Texture|Texture]] : rectangular image ([[Legacy:Bitmap|bitmap]])\
      \ that can be applied to [[Legacy:Brush|brush]] [[Legacy:Surface|surface]]s\
      \ and [[Legacy:Mesh|mesh]]es or directly drawn on a [[Legacy:Canvas|canvas]];\
      \ special type of [[Legacy:Material|material]]\n; Total conversion : mod attempting\
      \ to totally change the underlying game into a different game by providing all-new\
      \ content (game types, user interface, weapons, maps, models, menus)\n; Trace\
      \ : follows a straight line through the world, usually until it hits solid geometry.\
      \ Usually used to determine where bullets hit.\n; Translucent : color blending\
      \ type; black is transparent, white is opaque (see [[Legacy:Color Blending|color\
      \ blending]])\n; [[Legacy:Trigger|Trigger]] : An actor in a level which, when\
      \ touched, will activate some effect, or other event.\n; [[Legacy:Typecasting|Typecasting]]\
      \ : converting one type of variable to another (e.g. Float to Integer)\n\n==U\
      \ ==\n\n; UC file : An [[Legacy:UnrealScript|UnrealScript]] source code file\
      \ (Unreal Class), readable in any plain-text editor.\n; UAX : [[Legacy:UT|UT]]'s\
      \ and [[Legacy:UT2003|UT2003]]'s [[Legacy:Sounds|sounds]] format.\n; [[Legacy:Ucc|Ucc]]\
      \ : [[Legacy:UnrealScript|UnrealScript]] execution environment, ucc.exe in the\
      \ [[Legacy:Engine Directory Structure|System subdirectory]]\n; [[Legacy:UMOD|UMOD]]\
      \ : Unreal Mod installer\n; UMX : [[Legacy:UT|UT]]'s music format.\n; Unlit\
      \ : ([[Legacy:Texture (UT)|Texture (UT)]]) rendered without any [[Legacy:Lighting|lighting]]\
      \ applied to it; yields a bright, uniform appearance\n; USA file : In Unreal\
      \ 1, Unreal 2, and OldSkool for UT, a file created to save data from a singleplayer\
      \ game in progress.\n; [[Legacy:UT2MOD|UT2MOD]] : [[Legacy:UT2003|UT2003]]'s\
      \ [[Legacy:UMOD|UMOD]] format\n; [[Legacy:UU|UU]] : Unreal units, used to measure\
      \ and specify lengths within the engine's virtual space\n; UV mapping : two-dimensional\
      \ application and alignment of a skin on a [[Legacy:Mesh|mesh]]\n\n==V ==\n\n\
      ; [[Legacy:Variable Syntax|Variable]] : memory location with a symbolic name\
      \ where a program can store information for future retrieval\n; Vertex : point\
      \ in (normally two- or three-dimensional) space; point where polygon edges meet\n\
      ; Vertex animation : [[Legacy:Mesh|mesh]] animation by playing a set of different,\
      \ fixed vertex arrangements (like stop-motion animation in movies); see [[Legacy:Animation|Animation]]\n\
      ; [[Legacy:UnrealEd Viewport|Viewport]] : Window in UnrealEd which shows one\
      \ view of the map that is loaded; a class in UnrealScript that represents the\
      \ local player\n\n==W ==\n\n; [[Legacy:Project FAQ|Wiki]] : collaborative, open\
      \ project on the web, gathering knowledge on a certain topic\n; [[Legacy:WarpZoneInfo|WarpZone]]\
      \ : special kind of [[Legacy:Zone|zone]]. A WarpZone's portal renders what can\
      \ be seen from the destination portal, and also teleports players and objects\
      \ which enter it to the destination portal.\n\n==Z ==\n\n; [[Legacy:Z-Axis|Z-axis]]\
      \ : The third axis in a 3D co-ordinate system. In FPS games, this also refers\
      \ to things (architectural detail, enemies, etc) being above or below the player.\n\
      ; [[Legacy:Zone|Zone]] : Portion of a map's space that is sectioned off, either\
      \ to achieve special effects (gravity, water, etc.) or for engine optimization\n\
      ; [[Legacy:Zone Portal|Zone portal]] : Type of polygon (usually built with a\
      \ [[Legacy:Sheet|sheet]] [[Legacy:Brush|brush]]) which tells the engine where\
      \ zone boundaries lie.\n\n==Related Topics ==\n\nSome other pages that may help:\n\
      * [[Legacy:File Format|File Format]] &ndash; Summary of all the file formats\
      \ encountered when working with Unreal\n* [[Legacy:Texture Format|Texture Format]]\n\
      * [[udn2:UnGlossary]]\n* External Link: [http://www.icecreamyou.com/KeyTerms.htm\
      \ IceCreamYou's Key Terms] &ndash; A very comprehensive list of terminology\n\
      \n==Discussion==\n\n'''Sweavo:''' I would have thought UScript's semantics would\
      \ be better thought of as references rather than pointers, since it's not meaningful\
      \ to increment a reference, whereas incrementing a pointer has some meaning,\
      \ albeit ill-defined...?  Also since non-native functions are executed in bytecode\
      \ (aren't they?) then actual pointers (in the hardware sense) are not passed\
      \ around in executing unrealscript are they?  I imagined array indices.\n\n\
      '''IceCreamYou:''' I took the liberty of adding a link to my own Key Terms page...\
      \ I can't guarantee there aren't a few errors, but it is a very complete list.\n\
      \n[[Category:Legacy FAQ|{{PAGENAME}}]]"
  properties: []
  revId: 8064
name: "Legacy:Terminology"
revision:
  revid: 8064
  parentid: 8065
  user: "IceCreamYou"
  timestamp: 1182097512.000000000
  comment: "*Added relevant link"
timestamp: 1668753057.395127000
