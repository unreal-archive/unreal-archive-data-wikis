---
parse:
  title: "User:Rejecht"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#About\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">About</span></a>\n<ul>\n\
      <li class=\"toclevel-2 tocsection-2\"><a href=\"#Articles\"><span class=\"tocnumber\"\
      >1.1</span> <span class=\"toctext\">Articles</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-3\"><a href=\"#Where\"><span class=\"tocnumber\">1.2</span> <span\
      \ class=\"toctext\">Where</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#UE_4\"><span class=\"tocnumber\">1.3</span> <span class=\"toctext\"\
      >UE 4</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-5\"><a\
      \ href=\"#Mods\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Mods</span></a></li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#Experience\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Experience</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-7\"><a href=\"#Countless_Hours_Wasted\"\
      ><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">Countless Hours\
      \ Wasted</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-8\"><a href=\"\
      #Demo_Recording_.26_Playback\"><span class=\"tocnumber\">3.1.1</span> <span\
      \ class=\"toctext\">Demo Recording &amp; Playback</span></a></li>\n</ul>\n</li>\n\
      <li class=\"toclevel-2 tocsection-9\"><a href=\"#Nice_to_know\"><span class=\"\
      tocnumber\">3.2</span> <span class=\"toctext\">Nice to know</span></a>\n<ul>\n\
      <li class=\"toclevel-3 tocsection-10\"><a href=\"#ClientFlash_does_nothing\"\
      ><span class=\"tocnumber\">3.2.1</span> <span class=\"toctext\">ClientFlash\
      \ does nothing</span></a></li>\n<li class=\"toclevel-3 tocsection-11\"><a href=\"\
      #Having_no_pawn_is_the_same_as_being_in_a_Dead_state\"><span class=\"tocnumber\"\
      >3.2.2</span> <span class=\"toctext\">Having no pawn is the same as being in\
      \ a Dead state</span></a></li>\n<li class=\"toclevel-3 tocsection-12\"><a href=\"\
      #NumLives_is_not_the_number_of_lives\"><span class=\"tocnumber\">3.2.3</span>\
      \ <span class=\"toctext\">NumLives is not the number of lives</span></a></li>\n\
      <li class=\"toclevel-3 tocsection-13\"><a href=\"#Errors_found_in_Unreal_Engine_2.5_may_also_be_present_in_the_UDK\"\
      ><span class=\"tocnumber\">3.2.4</span> <span class=\"toctext\">Errors found\
      \ in Unreal Engine 2.5 may also be present in the UDK</span></a></li>\n</ul>\n\
      </li>\n<li class=\"toclevel-2 tocsection-14\"><a href=\"#Unreal_Tournament_2004_-_Compiler_Errors\"\
      ><span class=\"tocnumber\">3.3</span> <span class=\"toctext\">Unreal Tournament\
      \ 2004 - Compiler Errors</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-15\"\
      ><a href=\"#General_Protection_Fault\"><span class=\"tocnumber\">3.3.1</span>\
      \ <span class=\"toctext\">General Protection Fault</span></a></li>\n<li class=\"\
      toclevel-3 tocsection-16\"><a href=\"#ImportText_.26.26_.22Bad_termination_in:.22\"\
      ><span class=\"tocnumber\">3.3.2</span> <span class=\"toctext\">ImportText &amp;&amp;\
      \ \"Bad termination in:\"</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2\
      \ tocsection-17\"><a href=\"#Unreal_Tournament_2004_Bugs_.7C.7C_Errors\"><span\
      \ class=\"tocnumber\">3.4</span> <span class=\"toctext\">Unreal Tournament 2004\
      \ Bugs || Errors</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-18\"><a\
      \ href=\"#Servers_do_not_know_the_locations_of_spectators\"><span class=\"tocnumber\"\
      >3.4.1</span> <span class=\"toctext\">Servers do not know the locations of spectators</span></a></li>\n\
      <li class=\"toclevel-3 tocsection-19\"><a href=\"#xPawn.ChangedWeapon_breaks_simulated_function_chain\"\
      ><span class=\"tocnumber\">3.4.2</span> <span class=\"toctext\">xPawn.ChangedWeapon\
      \ breaks simulated function chain</span></a></li>\n<li class=\"toclevel-3 tocsection-20\"\
      ><a href=\"#Players_who_are_out_can_sometimes_respawn\"><span class=\"tocnumber\"\
      >3.4.3</span> <span class=\"toctext\">Players who are out can sometimes respawn</span></a></li>\n\
      <li class=\"toclevel-3 tocsection-21\"><a href=\"#AskforPawn_and_ClientGotoState\"\
      ><span class=\"tocnumber\">3.4.4</span> <span class=\"toctext\">AskforPawn and\
      \ ClientGotoState</span></a></li>\n<li class=\"toclevel-3 tocsection-22\"><a\
      \ href=\"#Sometimes_a_player_pawn_spawns_and_gets_possessed.2C_but_immediately_gets_destroyed_again\"\
      ><span class=\"tocnumber\">3.4.5</span> <span class=\"toctext\">Sometimes a\
      \ player pawn spawns and gets possessed, but immediately gets destroyed again</span></a></li>\n\
      <li class=\"toclevel-3 tocsection-23\"><a href=\"#InitTeamSymbols_may_sometimes_give_both_teams_the_same_team_symbol\"\
      ><span class=\"tocnumber\">3.4.6</span> <span class=\"toctext\">InitTeamSymbols\
      \ may sometimes give both teams the same team symbol</span></a></li>\n<li class=\"\
      toclevel-3 tocsection-24\"><a href=\"#ToggleScreenShotMode_does_not_restore_a_variety_of_state\"\
      ><span class=\"tocnumber\">3.4.7</span> <span class=\"toctext\">ToggleScreenShotMode\
      \ does not restore a variety of state</span></a></li>\n<li class=\"toclevel-3\
      \ tocsection-25\"><a href=\"#TakeDrowningDamage\"><span class=\"tocnumber\"\
      >3.4.8</span> <span class=\"toctext\">TakeDrowningDamage</span></a></li>\n<li\
      \ class=\"toclevel-3 tocsection-26\"><a href=\"#PlayTakeHit_never_played_drowning_sound\"\
      ><span class=\"tocnumber\">3.4.9</span> <span class=\"toctext\">PlayTakeHit\
      \ never played drowning sound</span></a></li>\n</ul>\n</li>\n</ul>\n</li>\n\
      <li class=\"toclevel-1 tocsection-27\"><a href=\"#Tips\"><span class=\"tocnumber\"\
      >4</span> <span class=\"toctext\">Tips</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-28\"><a href=\"#Example:_Using_a_bitwise_and_operator\"><span class=\"\
      tocnumber\">4.1</span> <span class=\"toctext\">Example: Using a bitwise and\
      \ operator</span></a></li>\n<li class=\"toclevel-2 tocsection-29\"><a href=\"\
      #Example:_Using_a_bitwise_and_operator_II\"><span class=\"tocnumber\">4.2</span>\
      \ <span class=\"toctext\">Example: Using a bitwise and operator II</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-30\"><a href=\"#Example:_Using_a_bitwise_and_operator_III\"\
      ><span class=\"tocnumber\">4.3</span> <span class=\"toctext\">Example: Using\
      \ a bitwise and operator III</span></a></li>\n<li class=\"toclevel-2 tocsection-31\"\
      ><a href=\"#Example:_Using_a_bitwise_or_operator\"><span class=\"tocnumber\"\
      >4.4</span> <span class=\"toctext\">Example: Using a bitwise or operator</span></a></li>\n\
      </ul>\n</li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"\
      About\">About</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=1\" title=\"Edit section: About\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Haphazard\
      \ hobbyist programming sessions since about 1992.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Articles\">Articles</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=2\" title=\"\
      Edit section: Articles\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p><a href=\"/User:Rejecht/Key_Bindings_(UT2004)\" title=\"User:Rejecht/Key\
      \ Bindings (UT2004)\">User:Rejecht/Key_Bindings_(UT2004)</a></p>\n<h3><span\
      \ class=\"mw-headline\" id=\"Where\">Where</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=3\"\
      \ title=\"Edit section: Where\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>Other</b></p>\n<ul>\n<li>rejecht on <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"https://twitter.com/#!/rejecht\">Twitter</a></li>\n\
      <li>rejecht on <a rel=\"nofollow\" class=\"external text\" href=\"http://www.moddb.com/members/rejecht\"\
      >ModDB</a></li>\n</ul>\n<p><b>Websites</b></p>\n<ul>\n<li>rejecht on <a rel=\"\
      nofollow\" class=\"external text\" href=\"https://sites.google.com/site/rejecht/\"\
      >Google Sites - rejecht's notes</a></li>\n</ul>\n<h3><span class=\"mw-headline\"\
      \ id=\"UE_4\">UE 4</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=4\" title=\"Edit section: UE 4\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p><a\
      \ href=\"/User:Rejecht/Getting_Started_UE4\" title=\"User:Rejecht/Getting Started\
      \ UE4\">User:Rejecht/Getting Started UE4</a></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Mods\">Mods</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=5\" title=\"Edit section: Mods\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>An\
      \ overview of mods (game types, maps, mutators) can be found on <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"https://sites.google.com/site/rejecht/\">rejecht's\
      \ notes</a>.</p>\n<h2><span class=\"mw-headline\" id=\"Experience\">Experience</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Rejecht?section=6\" title=\"Edit section: Experience\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span class=\"\
      mw-headline\" id=\"Countless_Hours_Wasted\">Countless Hours Wasted</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Rejecht?section=7\" title=\"Edit section: Countless Hours\
      \ Wasted\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <h4><span class=\"mw-headline\" id=\"Demo_Recording_.26_Playback\">Demo Recording\
      \ &amp; Playback</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=8\" title=\"Edit section: Demo\
      \ Recording &amp; Playback\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<ol>\n<li>Playing back a demo recorded in a networked\
      \ game results in several text messages being duplicated. For example, orders\
      \ sent to bots, so it was never a bug in the mod, but my lack of awareness of\
      \ this issue in the first place.</li>\n</ol>\n<h3><span class=\"mw-headline\"\
      \ id=\"Nice_to_know\">Nice to know</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=9\"\
      \ title=\"Edit section: Nice to know\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<h4><span class=\"mw-headline\" id=\"ClientFlash_does_nothing\"\
      >ClientFlash does nothing</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=10\" title=\"\
      Edit section: ClientFlash does nothing\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>(It's used to fade all screen colors from a starting\
      \ color.)</p>\n<p>Check these dependencies:</p>\n<ol>\n<li>ScreenFlashes in\
      \ UT2004.ini must be True for the driver you use.</li>\n<li>Check (ScreenFlashScaling\
      \ &gt; 0.0f) in User.ini.</li>\n</ol>\n<p>If the settings check out, check if\
      \ something prevents PlayerController.ViewFlash () from getting called.</p>\n\
      <h4><span class=\"mw-headline\" id=\"Having_no_pawn_is_the_same_as_being_in_a_Dead_state\"\
      >Having no pawn is the same as being in a Dead state</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=11\"\
      \ title=\"Edit section: Having no pawn is the same as being in a Dead state\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>The\
      \ game has a hard-coded client-side rule that forces the player to enter a dead\
      \ state when it does not find a Pawn.</p>\n<p>Triggers:</p>\n<ul>\n<li>[NM_Standalone|NM_ListenServer|NM_Client]\
      \ (Pawn == None)</li>\n</ul>\n<p>Cause:</p>\n<ul>\n<li>PlayerController.(PlayerWalking)PlayerMove\
      \ ()</li>\n</ul>\n<h4><span class=\"mw-headline\" id=\"NumLives_is_not_the_number_of_lives\"\
      >NumLives is not the number of lives</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=12\"\
      \ title=\"Edit section: NumLives is not the number of lives\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>NumLives is the\
      \ number of deaths (the number of lives used).</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"Errors_found_in_Unreal_Engine_2.5_may_also_be_present_in_the_UDK\">Errors\
      \ found in Unreal Engine 2.5 may also be present in the UDK</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=13\"\
      \ title=\"Edit section: Errors found in Unreal Engine 2.5 may also be present\
      \ in the UDK\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <h3><span class=\"mw-headline\" id=\"Unreal_Tournament_2004_-_Compiler_Errors\"\
      >Unreal Tournament 2004 - Compiler Errors</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=14\"\
      \ title=\"Edit section: Unreal Tournament 2004 - Compiler Errors\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<h4><span class=\"\
      mw-headline\" id=\"General_Protection_Fault\">General Protection Fault</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Rejecht?section=15\" title=\"Edit section: General Protection\
      \ Fault\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>History:</p>\n<ol>\n<li>FScriptCompiler::CompileConst</li>\n<li>&lt;- Const</li>\n\
      <li>&lt;- FScriptCompiler::CompileDeclaration</li>\n<li>&lt;- FScriptCompiler::CompileStatement</li>\n\
      <li>&lt;- FirstPass</li>\n<li>&lt;- TryCompile</li>\n<li>&lt;- FScriptCompiler::CompileScript</li>\n\
      <li>&lt;- (Class PackageName.ClassName, Pass 0, Line&#160;%Line_Number%)</li>\n\
      <li>&lt;- MakeScript &lt;- MakeScript &lt;- MakeScript &lt;- MakeScript &lt;-\
      \ MakeScript &lt;- MakeScript &lt;- MakeScript &lt;- MakeScript &lt;- MakeScript</li>\n\
      <li>&lt;- DoScripts</li>\n<li>&lt;- UEditorEngine::MakeScripts</li>\n<li>&lt;-\
      \ UMakeCommandlet::Main</li>\n</ol>\n<p>Cause:</p>\n<ul>\n<li>Declaring the\
      \ same variable name as const value twice.</li>\n</ul>\n<p>File content example:</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> Example\
      \ <span class=\"kw1\">extends</span> <span class=\"kw9\">Actor</span>;\n \n\
      <span class=\"kw1\">const</span> <span class=\"kw4\">crash</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">1</span>;\n<span class=\"kw1\">const</span>\
      \ <span class=\"kw4\">crash</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">2</span>; <span class=\"co1\">// Cause of crash.</span></pre></div>\n\
      </div>\n<h4><span class=\"mw-headline\" id=\"ImportText_.26.26_.22Bad_termination_in:.22\"\
      >ImportText &amp;&amp; \"Bad termination in:\"</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=16\"\
      \ title=\"Edit section: ImportText &amp;&amp; &quot;Bad termination in:&quot;\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Problem:</p>\n\
      <ul>\n<li>A dynamic array with a lot of elements will not be stored correctly\
      \ in the resulting int file.</li>\n</ul>\n<p>Cause:</p>\n<ul>\n<li>The compiler\
      \ cuts off the dynamic array after 4096 characters. After the 4096th character,\
      \ the int file will contain garbage. This is in turn logged by <b>ImportText</b>\
      \ upon accessing the dynamic array as <b>\"Bad termination in:\"</b> at runtime.</li>\n\
      </ul>\n<p>Trivia:</p>\n<ul>\n<li>Elements in a dynamic array are serialized\
      \ to a single line in an int file.</li>\n<li>Elements in a static array are\
      \ serialized to a single line per element.</li>\n<li>The compiler probably uses\
      \ a static text buffer of 4096 characters per line.</li>\n</ul>\n<p>Solutions:</p>\n\
      <ol>\n<li>Partition up the dynamic array into groups of dynamic arrays (acceptable).</li>\n\
      <li>Change over to a static array - replace <b>Count = ArrayVariableName.Length</b>\
      \ with <b>Count = ArrayCount (ArrayVariableName)</b>.</li>\n</ol>\n<h3><span\
      \ class=\"mw-headline\" id=\"Unreal_Tournament_2004_Bugs_.7C.7C_Errors\">Unreal\
      \ Tournament 2004 Bugs || Errors</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=17\"\
      \ title=\"Edit section: Unreal Tournament 2004 Bugs || Errors\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<h4><span class=\"\
      mw-headline\" id=\"Servers_do_not_know_the_locations_of_spectators\">Servers\
      \ do not know the locations of spectators</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=18\"\
      \ title=\"Edit section: Servers do not know the locations of spectators\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Spectators are in\
      \ control of the location, and do not get sneaky state information, nor do they\
      \ send location information to the server in the same way as a player with a\
      \ pawn does.</p>\n<p>The sources for UT3 1.5 try to solve this problem with\
      \ ServerSetSpectatorLocation, however, this function can't possibly work as\
      \ intended, as it does not update the position when the camera moves, but rather\
      \ sets the last position and stays there. To track the camera, use PlayerCalcView,\
      \ and throttle calls to your own ServerSetSpectatorLocation from the client\
      \ (no need to call each tick). You also need to make sure PlayerMove (movement\
      \ keys) does not offset the view from where the camera is, unless the player\
      \ has freed the camera.</p>\n<p>It is assumed that this has something to do\
      \ with sounds not playing in the right location, but not yet proven.</p>\n<h4><span\
      \ class=\"mw-headline\" id=\"xPawn.ChangedWeapon_breaks_simulated_function_chain\"\
      >xPawn.ChangedWeapon breaks simulated function chain</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=19\"\
      \ title=\"Edit section: xPawn.ChangedWeapon breaks simulated function chain\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Pawn.ChangedWeapon\
      \ is declared simulated, however, in the derived xPawn class, it is redeclared\
      \ non-simulated while still being called from simulated functions, thus breaking\
      \ the chain until the Pawn becomes ROLE_AutonomousProxy, which may take some\
      \ time in netplay.</p>\n<h4><span class=\"mw-headline\" id=\"Players_who_are_out_can_sometimes_respawn\"\
      >Players who are out can sometimes respawn</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=20\"\
      \ title=\"Edit section: Players who are out can sometimes respawn\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Triggers for this\
      \ error:</p>\n<ul>\n<li>It must be a TeamGame.</li>\n<li>(MaxLives &gt; 0) -\
      \ Assume that this example has (MaxLives == 1)</li>\n<li>TeamGame.ScoreKill\
      \ has the errors.</li>\n</ul>\n<p>By design?</p>\n<ul>\n<li>Team kills are not\
      \ counted as deaths, thus giving the player another chance. This might be desirable\
      \ in some game types, however, a simple solution is to track the NumLives of\
      \ the killed player before and after the TeamGame.ScoreKill call; if NumLives\
      \ is unchanged, decide whether to call Super(DeathMatch).ScoreKill to deal with\
      \ this, depending on whether this behavior is wanted.</li>\n</ul>\n<p>Consequences:</p>\n\
      <ul>\n<li>The player can respawn despite having died the allotted MaxLives.</li>\n\
      </ul>\n<p>Cause:</p>\n<ul>\n<li>The ScoreKill logic in TeamGame does not always\
      \ call Super.ScoreKill, which is the one handling the NumLives count and sets\
      \ bOutofLives accordingly. This is by design, but not necessarily desirable.</li>\n\
      </ul>\n<p>First attempt:</p>\n<ul>\n<li>OK, so let's just override ScoreKill\
      \ and increment NumLives ourselves, before calling ScoreKill, since the DeathMatch\
      \ implementation expects (NumLives &gt;= MaxLives) and sets bOutofLives accordingly.</li>\n\
      </ul>\n<p>First consequence of the first attempt: While this solved the original\
      \ problem, it also introduced another problem:</p>\n<ul>\n<li>This triggers\
      \ LateEntryLives (which defaults to 1), forcing latecomers to become spectators\
      \ (bOnlySpectator) at login, and some people losing their hair because they\
      \ now have a new unwanted behaviour.</li>\n</ul>\n<p>This is because some players\
      \ now get (NumLives == 2), and others get (NumLives == 1), depending on the\
      \ circumstances in TeamGame.ScoreKill. Login checks LateEntryLives against all\
      \ players and boots the player to a spectator slot when it finds (NumLives (2)\
      \ &gt; LateEntryLives (1)).</p>\n<p>Other possible approaches to solve the first\
      \ consequence:</p>\n<ol>\n<li>Bad: Set LateEntryLives to MAXINT in InitGame\
      \ to override any ini setting, unless you want to use LateEntryLives.</li>\n\
      <li>Bad: Preincrement NumLives before Super.ScoreKill and clamp the value postcall\
      \ (the first attempt).</li>\n</ol>\n<p>The best solution is to track changes\
      \ in NumLives and act accordingly after a Super.ScoreKill call to the TeamGame\
      \ implementation. Also, add a choice whether to trigger this behavior, in case\
      \ someone actually wants the default behavior.</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"AskforPawn_and_ClientGotoState\">AskforPawn and ClientGotoState</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Rejecht?section=21\" title=\"Edit section: AskforPawn and\
      \ ClientGotoState\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>AskforPawn insists on calling ClientGotoState ('Spectating', 'Begin'), but\
      \ there is no Begin: label in the Spectating state, which leads to an error.</p>\n\
      <p>The UDK solves this in the ClientGotoState function, but this code base also\
      \ gets rid of the logic forcing the client to a spectating state.</p>\n<h4><span\
      \ class=\"mw-headline\" id=\"Sometimes_a_player_pawn_spawns_and_gets_possessed.2C_but_immediately_gets_destroyed_again\"\
      >Sometimes a player pawn spawns and gets possessed, but immediately gets destroyed\
      \ again</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=22\" title=\"Edit section: Sometimes\
      \ a player pawn spawns and gets possessed, but immediately gets destroyed again\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p><i>(First,\
      \ figuring out how to reproduce the error took some time, then the technique\
      \ to trigger it again during testing. This one took 3/4 of a day to figure out\
      \ and solve; logging/tracing client-side and server-side state changes step\
      \ by effing step.)</i></p>\n<p>So, sometimes, when a player presses the Fire\
      \ button, just right after a controller enters one of the Player* states (PlayerWalking),\
      \ ServerSpectate gets called, which destroys the pawn, enters a spectating state,\
      \ and then ignores ClientRestart calls.</p>\n<p>The first solution is simply\
      \ to ignore ServerSpectate in the Player* states in PlayerController; such as\
      \ PlayerWaiting, PlayerWalking, WaitingforPawn.</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"InitTeamSymbols_may_sometimes_give_both_teams_the_same_team_symbol\"\
      >InitTeamSymbols may sometimes give both teams the same team symbol</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Rejecht?section=23\" title=\"Edit section: InitTeamSymbols\
      \ may sometimes give both teams the same team symbol\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h4>\n<p>DeathMatch.InitTeamSymbols\
      \ is replaced with the following implementation.</p>\n<p>Instead of getting\
      \ in trouble with more random numbers, it just picks the next team symbol in\
      \ the array, wrapping around to zero.</p>\n<p>(<b>Index_MaxTeams</b> == 2)</p>\n\
      <p>The (Count_TeamSymbols &lt; 10) check is an early warning system for someone\
      \ who managed to change the team symbols--this implementation is adapted for\
      \ at least ten different team symbols.</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co1\">// *UT2004Fix*</span>\n<span class=\"co1\">// (Replaces)\
      \ DeathMatch.InitTeamSymbols</span>\n<span class=\"co1\">// - Sometimes both\
      \ teams would get the same team symbol.</span>\n \n<span class=\"kw1\">event</span>\
      \ InitTeamSymbols <span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span> array<span\
      \ class=\"sy0\">&lt;</span>string<span class=\"sy0\">&gt;</span> Group_Text_TeamSymbol;\n\
      \    <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> Count_TeamSymbols;\n\
      \    <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> Index_TeamSymbol<span\
      \ class=\"br0\">[</span>Index_MaxTeams<span class=\"br0\">]</span>;\n    <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">Texture</span> Texture_TeamSymbol;\n\
      \ \n    <span class=\"co1\">// ** Attempt to get a list of team symbols.</span>\n\
      \ \n    <span class=\"kw2\">if</span>\n    <span class=\"br0\">(</span>\n  \
      \      <span class=\"br0\">(</span>GameReplicationInfo.<span class=\"me0\">TeamSymbols</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span>\n        <span class=\"sy0\">&amp;&amp;</span>\n        <span\
      \ class=\"br0\">(</span>GameReplicationInfo.<span class=\"me0\">TeamSymbols</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span>\n    <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw2\">return</span>; <span class=\"co1\">// Already loaded.</span>\n\
      \    <span class=\"br0\">}</span>\n \n    <span class=\"co1\">// ** Team Symbol\
      \ Names</span>\n \n    <span class=\"kw1\">Class</span><span class=\"st0\">'CacheManager'</span>.<span\
      \ class=\"kw1\">Static</span>.<span class=\"me0\">GetTeamSymbolList</span> <span\
      \ class=\"br0\">(</span>Group_Text_TeamSymbol, <span class=\"kw6\">true</span><span\
      \ class=\"br0\">)</span>;\n \n    Count_TeamSymbols <span class=\"sy0\">=</span>\
      \ Group_Text_TeamSymbol.<span class=\"me0\">Length</span>;\n \n    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>Count_TeamSymbols <span class=\"\
      sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n        <span class=\"kw3\">Warn</span> <span\
      \ class=\"br0\">(</span><span class=\"st0\">\"(Count_TeamSymbols &lt; 10)\"\
      </span><span class=\"br0\">)</span>;\n \n        <span class=\"kw2\">return</span>;\n\
      \    <span class=\"br0\">}</span>\n \n    <span class=\"co1\">// ** Randomization</span>\n\
      \ \n    Index_TeamSymbol<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Rand</span>\
      \ <span class=\"br0\">(</span>Count_TeamSymbols <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n    Index_TeamSymbol<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Rand</span> <span class=\"\
      br0\">(</span>Count_TeamSymbols <span class=\"sy0\">-</span> <span class=\"\
      nu0\">9</span><span class=\"br0\">)</span>;\n \n    <span class=\"co1\">// **</span>\n\
      \    <span class=\"co1\">// - Handle Equality</span>\n \n    <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>Index_TeamSymbol<span class=\"br0\"\
      >[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"\
      sy0\">==</span> Index_TeamSymbol<span class=\"br0\">[</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n        <span class=\"sy0\">++</span>Index_TeamSymbol<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;\n\
      \ \n        <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Index_TeamSymbol<span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">&gt;=</span> Count_TeamSymbols<span class=\"br0\">)</span>\n\
      \        <span class=\"br0\">{</span>\n            Index_TeamSymbol<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n        <span class=\"\
      br0\">}</span>\n    <span class=\"br0\">}</span>\n \n    <span class=\"co1\"\
      >// ** Red Team</span>\n \n    Texture_TeamSymbol <span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">Texture</span><span class=\"br0\">(</span><span class=\"\
      kw3\">DynamicLoadObject</span> <span class=\"br0\">(</span>Group_Text_TeamSymbol<span\
      \ class=\"br0\">[</span>Index_TeamSymbol<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span>, <span\
      \ class=\"kw1\">Class</span><span class=\"st0\">'Texture'</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Texture_TeamSymbol <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n    <span class=\"\
      br0\">{</span>\n        GameReplicationInfo.<span class=\"me0\">TeamSymbols</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> Texture_TeamSymbol;\n    <span class=\"br0\"\
      >}</span>\n    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw3\">Warn</span> <span class=\"br0\">(</span><span class=\"\
      st0\">\"(Texture_TeamSymbol[0] == None)\"</span><span class=\"sy0\">@</span>Group_Text_TeamSymbol<span\
      \ class=\"br0\">[</span>Index_TeamSymbol<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n \n    <span class=\"\
      co1\">// ** Blue Team</span>\n \n    Texture_TeamSymbol <span class=\"sy0\"\
      >=</span> <span class=\"kw5\">Texture</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">DynamicLoadObject</span> <span class=\"br0\">(</span>Group_Text_TeamSymbol<span\
      \ class=\"br0\">[</span>Index_TeamSymbol<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>, <span\
      \ class=\"kw1\">Class</span><span class=\"st0\">'Texture'</span><span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Texture_TeamSymbol <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n    <span class=\"\
      br0\">{</span>\n        GameReplicationInfo.<span class=\"me0\">TeamSymbols</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> Texture_TeamSymbol;\n    <span class=\"br0\"\
      >}</span>\n    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw3\">Warn</span> <span class=\"br0\">(</span><span class=\"\
      st0\">\"(Texture_TeamSymbol[1] == None)\"</span><span class=\"sy0\">@</span>Group_Text_TeamSymbol<span\
      \ class=\"br0\">[</span>Index_TeamSymbol<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n \n    <span class=\"\
      co1\">// ** Replication</span>\n \n    GameReplicationInfo.<span class=\"me0\"\
      >TeamSymbolNotify</span> <span class=\"br0\">(</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h4><span class=\"mw-headline\"\
      \ id=\"ToggleScreenShotMode_does_not_restore_a_variety_of_state\">ToggleScreenShotMode\
      \ does not restore a variety of state</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=24\"\
      \ title=\"Edit section: ToggleScreenShotMode does not restore a variety of state\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Scope:</p>\n\
      <ul>\n<li>PlayerController.ToggleScreenShotMode</li>\n</ul>\n<p>Type:</p>\n\
      <ul>\n<li>Save/Restore</li>\n</ul>\n<p>Fix:</p>\n<ol>\n<li>Remember and restore\
      \ Handedness, bHideVehicleNoEntryIndicator.</li>\n</ol>\n<h4><span class=\"\
      mw-headline\" id=\"TakeDrowningDamage\">TakeDrowningDamage</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=25\"\
      \ title=\"Edit section: TakeDrowningDamage\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>Triggers:</p>\n<ul>\n<li>Pawn is in a water volume\
      \ and the match has entered the MatchOver state.</li>\n</ul>\n<p>Scope:</p>\n\
      <ul>\n<li>Pawn.TakeDrowningDamage</li>\n</ul>\n<p>Type:</p>\n<ul>\n<li>Access\
      \ Error</li>\n</ul>\n<p>Fix:</p>\n<ol>\n<li>Check (Controller&#160;!= None)\
      \ before calling Super.TakeDrowningDamage in a subclass of pawn.</li>\n</ol>\n\
      <h4><span class=\"mw-headline\" id=\"PlayTakeHit_never_played_drowning_sound\"\
      >PlayTakeHit never played drowning sound</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=26\"\
      \ title=\"Edit section: PlayTakeHit never played drowning sound\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Scope:</p>\n<ul>\n\
      <li>xPawn.PlayTakeHit</li>\n</ul>\n<p>Type:</p>\n<ul>\n<li>Class Check Error</li>\n\
      </ul>\n<p>Corrections:</p>\n<ol>\n<li>Find: DamageType.IsA('Drowned')</li>\n\
      <li>Replace With: DamageType == Class'Drowned'</li>\n</ol>\n<p>Reminder:</p>\n\
      <ul>\n<li>Do not use IsA with a metaclass reference (Syntax: Class&lt;Classname&gt;).</li>\n\
      <li>Use IsA with an instance of a class.</li>\n</ul>\n<p>Trivia:</p>\n<ul>\n\
      <li>I don't think the actual drowning sounds were included anyway.</li>\n</ul>\n\
      <h2><span class=\"mw-headline\" id=\"Tips\">Tips</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=27\"\
      \ title=\"Edit section: Tips\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Example:_Using_a_bitwise_and_operator\"\
      >Example: Using a bitwise and operator</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=28\"\
      \ title=\"Edit section: Example: Using a bitwise and operator\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>Theory: You can\
      \ check if a number is even {0, 2, 4, ...} or odd (1, 3, 5, ...) by testing\
      \ the least significant binary digit of an integer (two's complement). If it's\
      \ 0, this is an even number (0, 2, 4, ...). If it's 1, this is an odd number\
      \ {1, 3, 5, ...}.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> Example <span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> Index;\n \n    <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>Index <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>; Index <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span>;\
      \ <span class=\"sy0\">++</span>Index<span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n        <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"br0\">(</span>Index <span class=\"sy0\">&amp;</span>\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"\
      co1\">// Test if the least significant bit is cleared.</span>\n        <span\
      \ class=\"br0\">{</span>\n            <span class=\"kw3\">Log</span> <span class=\"\
      br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"sy0\">$</span>Index<span\
      \ class=\"sy0\">$</span><span class=\"st0\">\"] Even\"</span><span class=\"\
      br0\">)</span>;\n        <span class=\"br0\">}</span>\n \n        <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>Index\
      \ <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span> <span class=\"co1\">// Test if the least significant\
      \ bit is set.</span>\n        <span class=\"br0\">{</span>\n            <span\
      \ class=\"kw3\">Log</span> <span class=\"br0\">(</span><span class=\"st0\">\"\
      [\"</span><span class=\"sy0\">$</span>Index<span class=\"sy0\">$</span><span\
      \ class=\"st0\">\"] Odd\"</span><span class=\"br0\">)</span>;\n        <span\
      \ class=\"br0\">}</span>\n    <span class=\"br0\">}</span>\n<span class=\"br0\"\
      >}</span>\n \n<span class=\"co1\">// Output:</span>\n<span class=\"co1\">//\
      \ ScriptLog: [0] Even</span>\n<span class=\"co1\">// ScriptLog: [1] Odd</span>\n\
      <span class=\"co1\">// ScriptLog: [2] Even</span>\n<span class=\"co1\">// ScriptLog:\
      \ [3] Odd</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\" id=\"\
      Example:_Using_a_bitwise_and_operator_II\">Example: Using a bitwise and operator\
      \ II</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=29\" title=\"Edit section: Example:\
      \ Using a bitwise and operator II\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> Example <span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> Index;\n \n    <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>Index <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>; Index <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span>;\
      \ <span class=\"sy0\">++</span>Index<span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n        <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"br0\">(</span>Index <span class=\"sy0\">&amp;</span>\
      \ <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"\
      co1\">// Test if bit #2 is set. You have to compare using powers of two.</span>\n\
      \        <span class=\"br0\">{</span>\n            <span class=\"kw3\">Log</span>\
      \ <span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"\
      sy0\">$</span>Index<span class=\"sy0\">$</span><span class=\"st0\">\"] Set\"\
      </span><span class=\"br0\">)</span>;\n        <span class=\"br0\">}</span>\n\
      \    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"\
      co1\">// Output:</span>\n<span class=\"co1\">// ScriptLog: [2] Set</span>\n\
      <span class=\"co1\">// ScriptLog: [3] Set</span>\n<span class=\"co1\">// ScriptLog:\
      \ [6] Set</span>\n<span class=\"co1\">// ScriptLog: [7] Set</span></pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"Example:_Using_a_bitwise_and_operator_III\"\
      >Example: Using a bitwise and operator III</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Rejecht?section=30\"\
      \ title=\"Edit section: Example: Using a bitwise and operator III\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>To show that you\
      \ are not testing against the bit number, but a value. You have to compare using\
      \ powers of two.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> Example <span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> Index;\n \n    Index <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">255</span>;\n \n    <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span><span class=\"br0\">(</span>Index <span class=\"sy0\"\
      >&amp;</span> <span class=\"nu0\">128</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">==</span> <span class=\"nu0\">128</span><span class=\"br0\"\
      >)</span> <span class=\"co1\">// Test if bit #7 (2^7 = 128) is set. You have\
      \ to compare and check using powers of two.</span>\n    <span class=\"br0\"\
      >{</span>\n        <span class=\"kw3\">Log</span> <span class=\"br0\">(</span><span\
      \ class=\"st0\">\"[\"</span><span class=\"sy0\">$</span>Index<span class=\"\
      sy0\">$</span><span class=\"st0\">\"] Set\"</span><span class=\"br0\">)</span>;\
      \ <span class=\"co1\">// Bit #7 was set</span>\n    <span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n   \
      \     <span class=\"kw3\">Log</span> <span class=\"br0\">(</span><span class=\"\
      st0\">\"[\"</span><span class=\"sy0\">$</span>Index<span class=\"sy0\">$</span><span\
      \ class=\"st0\">\"] Cleared\"</span><span class=\"br0\">)</span>; <span class=\"\
      co1\">// Bit #7 was cleared</span>\n    <span class=\"br0\">}</span>\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"co1\">// Output:</span>\n<span class=\"\
      co1\">// ScriptLog: [255] Set</span></pre></div>\n</div>\n<h3><span class=\"\
      mw-headline\" id=\"Example:_Using_a_bitwise_or_operator\">Example: Using a bitwise\
      \ or operator</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Rejecht?section=31\" title=\"Edit section: Example:\
      \ Using a bitwise or operator\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Theory: The color-coded text strings have the format\
      \ 0x1B (ANSI Escape Code) followed by three bytes representing the red, green,\
      \ and blue channels, where each channel must be in the range [1, 255] because\
      \ the value 0 (NUL) terminates the string. The function in this example takes\
      \ a color and uses the bitwise or operator to make sure that the value of each\
      \ color channel is always at least 1. Note that there is no alpha channel (the\
      \ string is opaque). Note that StrLen counts color codes.</p>\n<p>Also note\
      \ that this is a bad real-world example, because all channel values are always\
      \ odd numbers. For example, if the red channel value is 50, the color code becomes\
      \ 51. See the second example for the real world use of such a function, or you\
      \ care about accuracy.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> GetText_ColorCode <span\
      \ class=\"br0\">(</span><span class=\"kw5\">Color</span> <span class=\"kw5\"\
      >Color</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  \
      \  <span class=\"kw2\">return</span>\n    <span class=\"br0\">(</span>\n   \
      \     <span class=\"kw3\">Chr</span> <span class=\"br0\">(</span>0x1B<span class=\"\
      br0\">)</span>\n        <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span>\
      \ <span class=\"br0\">(</span><span class=\"kw5\">Color</span>.<span class=\"\
      me0\">R</span> <span class=\"sy0\">|</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>\n        <span class=\"sy0\">$</span> <span class=\"\
      kw3\">Chr</span> <span class=\"br0\">(</span><span class=\"kw5\">Color</span>.<span\
      \ class=\"me0\">G</span> <span class=\"sy0\">|</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>\n        <span class=\"sy0\">$</span> <span class=\"\
      kw3\">Chr</span> <span class=\"br0\">(</span><span class=\"kw5\">Color</span>.<span\
      \ class=\"me0\">B</span> <span class=\"sy0\">|</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p>For the sake of completeness, a version\
      \ that applies to the real world, using Max to keep the value within the allowed\
      \ range [1, 255].</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> GetText_ColorCode <span\
      \ class=\"br0\">(</span><span class=\"kw5\">Color</span> <span class=\"kw5\"\
      >Color</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  \
      \  <span class=\"kw2\">return</span>\n    <span class=\"br0\">(</span>\n   \
      \     <span class=\"kw3\">Chr</span> <span class=\"br0\">(</span>0x1B<span class=\"\
      br0\">)</span>\n        <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Max</span> <span class=\"\
      br0\">(</span><span class=\"kw5\">Color</span>.<span class=\"me0\">R</span>,\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>\n        <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Max</span> <span class=\"\
      br0\">(</span><span class=\"kw5\">Color</span>.<span class=\"me0\">G</span>,\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>\n        <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Max</span> <span class=\"\
      br0\">(</span><span class=\"kw5\">Color</span>.<span class=\"me0\">B</span>,\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>\n    <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.194 seconds\nReal time\
      \ usage: 0.198 seconds\nPreprocessor visited node count: 173/1000000\nPreprocessor\
      \ generated node count: 268/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:29293-0!*!0!!en!*!* and timestamp\
      \ 20221207061405 and revision id 46044\n -->\n"
  categories: []
  links:
  - ns: 2
    exists: true
    name: "User:Rejecht/Key Bindings (UT2004)"
  - ns: 2
    exists: true
    name: "User:Rejecht/Getting Started UE4"
  templates: []
  images: []
  externallinks:
  - "http://www.moddb.com/members/rejecht"
  - "https://twitter.com/#!/rejecht"
  - "https://sites.google.com/site/rejecht/"
  sections:
  - toclevel: 1
    level: "2"
    line: "About"
    number: "1"
    index: "1"
    fromtitle: "User:Rejecht"
    byteoffset: 0
    anchor: "About"
  - toclevel: 2
    level: "3"
    line: "Articles"
    number: "1.1"
    index: "2"
    fromtitle: "User:Rejecht"
    byteoffset: 72
    anchor: "Articles"
  - toclevel: 2
    level: "3"
    line: "Where"
    number: "1.2"
    index: "3"
    fromtitle: "User:Rejecht"
    byteoffset: 130
    anchor: "Where"
  - toclevel: 2
    level: "3"
    line: "UE 4"
    number: "1.3"
    index: "4"
    fromtitle: "User:Rejecht"
    byteoffset: 373
    anchor: "UE_4"
  - toclevel: 1
    level: "2"
    line: "Mods"
    number: "2"
    index: "5"
    fromtitle: "User:Rejecht"
    byteoffset: 425
    anchor: "Mods"
  - toclevel: 1
    level: "2"
    line: "Experience"
    number: "3"
    index: "6"
    fromtitle: "User:Rejecht"
    byteoffset: 561
    anchor: "Experience"
  - toclevel: 2
    level: "3"
    line: "Countless Hours Wasted"
    number: "3.1"
    index: "7"
    fromtitle: "User:Rejecht"
    byteoffset: 579
    anchor: "Countless_Hours_Wasted"
  - toclevel: 3
    level: "4"
    line: "Demo Recording & Playback"
    number: "3.1.1"
    index: "8"
    fromtitle: "User:Rejecht"
    byteoffset: 611
    anchor: "Demo_Recording_.26_Playback"
  - toclevel: 2
    level: "3"
    line: "Nice to know"
    number: "3.2"
    index: "9"
    fromtitle: "User:Rejecht"
    byteoffset: 878
    anchor: "Nice_to_know"
  - toclevel: 3
    level: "4"
    line: "ClientFlash does nothing"
    number: "3.2.1"
    index: "10"
    fromtitle: "User:Rejecht"
    byteoffset: 900
    anchor: "ClientFlash_does_nothing"
  - toclevel: 3
    level: "4"
    line: "Having no pawn is the same as being in a Dead state"
    number: "3.2.2"
    index: "11"
    fromtitle: "User:Rejecht"
    byteoffset: 1246
    anchor: "Having_no_pawn_is_the_same_as_being_in_a_Dead_state"
  - toclevel: 3
    level: "4"
    line: "NumLives is not the number of lives"
    number: "3.2.3"
    index: "12"
    fromtitle: "User:Rejecht"
    byteoffset: 1554
    anchor: "NumLives_is_not_the_number_of_lives"
  - toclevel: 3
    level: "4"
    line: "Errors found in Unreal Engine 2.5 may also be present in the UDK"
    number: "3.2.4"
    index: "13"
    fromtitle: "User:Rejecht"
    byteoffset: 1662
    anchor: "Errors_found_in_Unreal_Engine_2.5_may_also_be_present_in_the_UDK"
  - toclevel: 2
    level: "3"
    line: "Unreal Tournament 2004 - Compiler Errors"
    number: "3.3"
    index: "14"
    fromtitle: "User:Rejecht"
    byteoffset: 1738
    anchor: "Unreal_Tournament_2004_-_Compiler_Errors"
  - toclevel: 3
    level: "4"
    line: "General Protection Fault"
    number: "3.3.1"
    index: "15"
    fromtitle: "User:Rejecht"
    byteoffset: 1788
    anchor: "General_Protection_Fault"
  - toclevel: 3
    level: "4"
    line: "ImportText && \"Bad termination in:\""
    number: "3.3.2"
    index: "16"
    fromtitle: "User:Rejecht"
    byteoffset: 2480
    anchor: "ImportText_.26.26_.22Bad_termination_in:.22"
  - toclevel: 2
    level: "3"
    line: "Unreal Tournament 2004 Bugs || Errors"
    number: "3.4"
    index: "17"
    fromtitle: "User:Rejecht"
    byteoffset: 3352
    anchor: "Unreal_Tournament_2004_Bugs_.7C.7C_Errors"
  - toclevel: 3
    level: "4"
    line: "Servers do not know the locations of spectators"
    number: "3.4.1"
    index: "18"
    fromtitle: "User:Rejecht"
    byteoffset: 3399
    anchor: "Servers_do_not_know_the_locations_of_spectators"
  - toclevel: 3
    level: "4"
    line: "xPawn.ChangedWeapon breaks simulated function chain"
    number: "3.4.2"
    index: "19"
    fromtitle: "User:Rejecht"
    byteoffset: 4292
    anchor: "xPawn.ChangedWeapon_breaks_simulated_function_chain"
  - toclevel: 3
    level: "4"
    line: "Players who are out can sometimes respawn"
    number: "3.4.3"
    index: "20"
    fromtitle: "User:Rejecht"
    byteoffset: 4623
    anchor: "Players_who_are_out_can_sometimes_respawn"
  - toclevel: 3
    level: "4"
    line: "AskforPawn and ClientGotoState"
    number: "3.4.4"
    index: "21"
    fromtitle: "User:Rejecht"
    byteoffset: 6851
    anchor: "AskforPawn_and_ClientGotoState"
  - toclevel: 3
    level: "4"
    line: "Sometimes a player pawn spawns and gets possessed, but immediately gets\
      \ destroyed again"
    number: "3.4.5"
    index: "22"
    fromtitle: "User:Rejecht"
    byteoffset: 7186
    anchor: "Sometimes_a_player_pawn_spawns_and_gets_possessed.2C_but_immediately_gets_destroyed_again"
  - toclevel: 3
    level: "4"
    line: "InitTeamSymbols may sometimes give both teams the same team symbol"
    number: "3.4.6"
    index: "23"
    fromtitle: "User:Rejecht"
    byteoffset: 7948
    anchor: "InitTeamSymbols_may_sometimes_give_both_teams_the_same_team_symbol"
  - toclevel: 3
    level: "4"
    line: "ToggleScreenShotMode does not restore a variety of state"
    number: "3.4.7"
    index: "24"
    fromtitle: "User:Rejecht"
    byteoffset: 10463
    anchor: "ToggleScreenShotMode_does_not_restore_a_variety_of_state"
  - toclevel: 3
    level: "4"
    line: "TakeDrowningDamage"
    number: "3.4.8"
    index: "25"
    fromtitle: "User:Rejecht"
    byteoffset: 10672
    anchor: "TakeDrowningDamage"
  - toclevel: 3
    level: "4"
    line: "PlayTakeHit never played drowning sound"
    number: "3.4.9"
    index: "26"
    fromtitle: "User:Rejecht"
    byteoffset: 10943
    anchor: "PlayTakeHit_never_played_drowning_sound"
  - toclevel: 1
    level: "2"
    line: "Tips"
    number: "4"
    index: "27"
    fromtitle: "User:Rejecht"
    byteoffset: 11338
    anchor: "Tips"
  - toclevel: 2
    level: "3"
    line: "Example: Using a bitwise and operator"
    number: "4.1"
    index: "28"
    fromtitle: "User:Rejecht"
    byteoffset: 11348
    anchor: "Example:_Using_a_bitwise_and_operator"
  - toclevel: 2
    level: "3"
    line: "Example: Using a bitwise and operator II"
    number: "4.2"
    index: "29"
    fromtitle: "User:Rejecht"
    byteoffset: 12143
    anchor: "Example:_Using_a_bitwise_and_operator_II"
  - toclevel: 2
    level: "3"
    line: "Example: Using a bitwise and operator III"
    number: "4.3"
    index: "30"
    fromtitle: "User:Rejecht"
    byteoffset: 12563
    anchor: "Example:_Using_a_bitwise_and_operator_III"
  - toclevel: 2
    level: "3"
    line: "Example: Using a bitwise or operator"
    number: "4.4"
    index: "31"
    fromtitle: "User:Rejecht"
    byteoffset: 13104
    anchor: "Example:_Using_a_bitwise_or_operator"
  displaytitle: "User:Rejecht"
  iwlinks: []
  wikitext:
    text: "== About ==\n\nHaphazard hobbyist programming sessions since about 1992.\n\
      \n=== Articles ===\n\n[[User:Rejecht/Key_Bindings_(UT2004)]]\n\n=== Where ===\n\
      \n'''Other'''\n\n* rejecht on [https://twitter.com/#!/rejecht Twitter]\n* rejecht\
      \ on [http://www.moddb.com/members/rejecht ModDB]\n\n'''Websites'''\n\n* rejecht\
      \ on [https://sites.google.com/site/rejecht/ Google Sites - rejecht's notes]\n\
      \n=== UE 4 ===\n\n[[User:Rejecht/Getting Started UE4]]\n\n== Mods ==\n\nAn overview\
      \ of mods (game types, maps, mutators) can be found on [https://sites.google.com/site/rejecht/\
      \ rejecht's notes].\n\n== Experience ==\n\n=== Countless Hours Wasted ===\n\n\
      ==== Demo Recording & Playback ====\n\n# Playing back a demo recorded in a networked\
      \ game results in several text messages being duplicated. For example, orders\
      \ sent to bots, so it was never a bug in the mod, but my lack of awareness of\
      \ this issue in the first place.\n\n=== Nice to know ===\n\n==== ClientFlash\
      \ does nothing ====\n\n(It's used to fade all screen colors from a starting\
      \ color.)\n\nCheck these dependencies:\n#ScreenFlashes in UT2004.ini must be\
      \ True for the driver you use.\n#Check (ScreenFlashScaling > 0.0f) in User.ini.\n\
      \nIf the settings check out, check if something prevents PlayerController.ViewFlash\
      \ () from getting called.\n\n==== Having no pawn is the same as being in a Dead\
      \ state ====\n\nThe game has a hard-coded client-side rule that forces the player\
      \ to enter a dead state when it does not find a Pawn.\n\nTriggers:\n* [NM_Standalone|NM_ListenServer|NM_Client]\
      \ (Pawn == None)\n\nCause:\n* PlayerController.(PlayerWalking)PlayerMove ()\n\
      \n==== NumLives is not the number of lives ====\nNumLives is the number of deaths\
      \ (the number of lives used).\n\n==== Errors found in Unreal Engine 2.5 may\
      \ also be present in the UDK ====\n\n=== Unreal Tournament 2004 - Compiler Errors\
      \ ===\n\n==== General Protection Fault ====\n\nHistory:\n# FScriptCompiler::CompileConst\n\
      # <- Const\n# <- FScriptCompiler::CompileDeclaration\n# <- FScriptCompiler::CompileStatement\n\
      # <- FirstPass\n# <- TryCompile\n# <- FScriptCompiler::CompileScript\n# <- (Class\
      \ PackageName.ClassName, Pass 0, Line %Line_Number%)\n# <- MakeScript <- MakeScript\
      \ <- MakeScript <- MakeScript <- MakeScript <- MakeScript <- MakeScript <- MakeScript\
      \ <- MakeScript\n# <- DoScripts\n# <- UEditorEngine::MakeScripts\n# <- UMakeCommandlet::Main\n\
      \nCause:\n* Declaring the same variable name as const value twice.\n\nFile content\
      \ example:\n<UScript>\nclass Example extends Actor;\n\nconst crash = 1;\nconst\
      \ crash = 2; // Cause of crash.</UScript>\n\n==== ImportText && \"Bad termination\
      \ in:\" ====\n\nProblem:\n* A dynamic array with a lot of elements will not\
      \ be stored correctly in the resulting int file.\n\nCause:\n* The compiler cuts\
      \ off the dynamic array after 4096 characters.  After the 4096th character,\
      \ the int file will contain garbage.  This is in turn logged by '''ImportText'''\
      \ upon accessing the dynamic array as '''\"Bad termination in:\"''' at runtime.\n\
      \nTrivia:\n* Elements in a dynamic array are serialized to a single line in\
      \ an int file.\n* Elements in a static array are serialized to a single line\
      \ per element.\n* The compiler probably uses a static text buffer of 4096 characters\
      \ per line.\n\nSolutions:\n# Partition up the dynamic array into groups of dynamic\
      \ arrays (acceptable).\n# Change over to a static array - replace '''Count =\
      \ ArrayVariableName.Length''' with '''Count = ArrayCount (ArrayVariableName)'''.\n\
      \n=== Unreal Tournament 2004 Bugs || Errors ===\n\n==== Servers do not know\
      \ the locations of spectators ====\n\nSpectators are in control of the location,\
      \ and do not get sneaky state information, nor do they send location information\
      \ to the server in the same way as a player with a pawn does.\n\nThe sources\
      \ for UT3 1.5 try to solve this problem with ServerSetSpectatorLocation, however,\
      \ this function can't possibly work as intended, as it does not update the position\
      \ when the camera moves, but rather sets the last position and stays there.\
      \  To track the camera, use PlayerCalcView, and throttle calls to your own ServerSetSpectatorLocation\
      \ from the client (no need to call each tick). You also need to make sure PlayerMove\
      \ (movement keys) does not offset the view from where the camera is, unless\
      \ the player has freed the camera.\n\nIt is assumed that this has something\
      \ to do with sounds not playing in the right location, but not yet proven.\n\
      \n==== xPawn.ChangedWeapon breaks simulated function chain ====\n\nPawn.ChangedWeapon\
      \ is declared simulated, however, in the derived xPawn class, it is redeclared\
      \ non-simulated while still being called from simulated functions, thus breaking\
      \ the chain until the Pawn becomes ROLE_AutonomousProxy, which may take some\
      \ time in netplay.\n\n==== Players who are out can sometimes respawn ====\n\n\
      Triggers for this error:\n* It must be a TeamGame.\n* (MaxLives > 0) - Assume\
      \ that this example has (MaxLives == 1)\n* TeamGame.ScoreKill has the errors.\n\
      \nBy design?\n* Team kills are not counted as deaths, thus giving the player\
      \ another chance.  This might be desirable in some game types, however, a simple\
      \ solution is to track the NumLives of the killed player before and after the\
      \ TeamGame.ScoreKill call; if NumLives is unchanged, decide whether to call\
      \ Super(DeathMatch).ScoreKill to deal with this, depending on whether this behavior\
      \ is wanted.\n\nConsequences:\n* The player can respawn despite having died\
      \ the allotted MaxLives.\n\nCause:\n* The ScoreKill logic in TeamGame does not\
      \ always call Super.ScoreKill, which is the one handling the NumLives count\
      \ and sets bOutofLives accordingly.  This is by design, but not necessarily\
      \ desirable.\n\nFirst attempt:\n* OK, so let's just override ScoreKill and increment\
      \ NumLives ourselves, before calling ScoreKill, since the DeathMatch implementation\
      \ expects (NumLives >= MaxLives) and sets bOutofLives accordingly.\n\nFirst\
      \ consequence of the first attempt:\nWhile this solved the original problem,\
      \ it also introduced another problem:\n* This triggers LateEntryLives (which\
      \ defaults to 1), forcing latecomers to become spectators (bOnlySpectator) at\
      \ login, and some people losing their hair because they now have a new unwanted\
      \ behaviour.\nThis is because some players now get (NumLives == 2), and others\
      \ get (NumLives == 1), depending on the circumstances in TeamGame.ScoreKill.\
      \  Login checks LateEntryLives against all players and boots the player to a\
      \ spectator slot when it finds (NumLives (2) > LateEntryLives (1)).\n\nOther\
      \ possible approaches to solve the first consequence:\n# Bad: Set LateEntryLives\
      \ to MAXINT in InitGame to override any ini setting, unless you want to use\
      \ LateEntryLives.\n# Bad: Preincrement NumLives before Super.ScoreKill and clamp\
      \ the value postcall (the first attempt).\n\nThe best solution is to track changes\
      \ in NumLives and act accordingly after a Super.ScoreKill call to the TeamGame\
      \ implementation.  Also, add a choice whether to trigger this behavior, in case\
      \ someone actually wants the default behavior.\n\n==== AskforPawn and ClientGotoState\
      \ ====\n\nAskforPawn insists on calling ClientGotoState ('Spectating', 'Begin'),\
      \ but there is no Begin: label in the Spectating state, which leads to an error.\n\
      \nThe UDK solves this in the ClientGotoState function, but this code base also\
      \ gets rid of the logic forcing the client to a spectating state.\n\n==== Sometimes\
      \ a player pawn spawns and gets possessed, but immediately gets destroyed again\
      \ ====\n\n''(First, figuring out how to reproduce the error took some time,\
      \ then the technique to trigger it again during testing.  This one took 3/4\
      \ of a day to figure out and solve; logging/tracing client-side and server-side\
      \ state changes step by effing step.)\n''\n\nSo, sometimes, when a player presses\
      \ the Fire button, just right after a controller enters one of the Player* states\
      \ (PlayerWalking), ServerSpectate gets called, which destroys the pawn, enters\
      \ a spectating state, and then ignores ClientRestart calls.\n\nThe first solution\
      \ is simply to ignore ServerSpectate in the Player* states in PlayerController;\
      \ such as PlayerWaiting, PlayerWalking, WaitingforPawn.\n\n==== InitTeamSymbols\
      \ may sometimes give both teams the same team symbol ====\n\nDeathMatch.InitTeamSymbols\
      \ is replaced with the following implementation.\n\nInstead of getting in trouble\
      \ with more random numbers, it just picks the next team symbol in the array,\
      \ wrapping around to zero.\n\n('''Index_MaxTeams''' == 2)\n\nThe (Count_TeamSymbols\
      \ < 10) check is an early warning system for someone who managed to change the\
      \ team symbols--this implementation is adapted for at least ten different team\
      \ symbols.\n\n<uscript>\n// *UT2004Fix*\n// (Replaces) DeathMatch.InitTeamSymbols\n\
      // - Sometimes both teams would get the same team symbol.\n\nevent InitTeamSymbols\
      \ ()\n{\n    local array<string> Group_Text_TeamSymbol;\n    local int Count_TeamSymbols;\n\
      \    local int Index_TeamSymbol[Index_MaxTeams];\n    local Texture Texture_TeamSymbol;\n\
      \n    // ** Attempt to get a list of team symbols.\n\n    if\n    (\n      \
      \  (GameReplicationInfo.TeamSymbols[0] != None)\n        &&\n        (GameReplicationInfo.TeamSymbols[1]\
      \ != None)\n    )\n    {\n        return; // Already loaded.\n    }\n\n    //\
      \ ** Team Symbol Names\n\n    Class'CacheManager'.Static.GetTeamSymbolList (Group_Text_TeamSymbol,\
      \ true);\n\n    Count_TeamSymbols = Group_Text_TeamSymbol.Length;\n\n    if\
      \ (Count_TeamSymbols < 10)\n    {\n        Warn (\"(Count_TeamSymbols < 10)\"\
      );\n\n        return;\n    }\n\n    // ** Randomization\n\n    Index_TeamSymbol[0]\
      \ = Rand (Count_TeamSymbols - 1);\n    Index_TeamSymbol[1] = Rand (Count_TeamSymbols\
      \ - 9);\n\n    // **\n    // - Handle Equality\n\n    if (Index_TeamSymbol[0]\
      \ == Index_TeamSymbol[1])\n    {\n        ++Index_TeamSymbol[1];\n\n       \
      \ if (Index_TeamSymbol[1] >= Count_TeamSymbols)\n        {\n            Index_TeamSymbol[1]\
      \ = 0;\n        }\n    }\n\n    // ** Red Team\n\n    Texture_TeamSymbol = Texture(DynamicLoadObject\
      \ (Group_Text_TeamSymbol[Index_TeamSymbol[0]], Class'Texture'));\n\n    if (Texture_TeamSymbol\
      \ != None)\n    {\n        GameReplicationInfo.TeamSymbols[0] = Texture_TeamSymbol;\n\
      \    }\n    else\n    {\n        Warn (\"(Texture_TeamSymbol[0] == None)\"@Group_Text_TeamSymbol[Index_TeamSymbol[0]]);\n\
      \    }\n\n    // ** Blue Team\n\n    Texture_TeamSymbol = Texture(DynamicLoadObject\
      \ (Group_Text_TeamSymbol[Index_TeamSymbol[1]], Class'Texture'));\n\n    if (Texture_TeamSymbol\
      \ != None)\n    {\n        GameReplicationInfo.TeamSymbols[1] = Texture_TeamSymbol;\n\
      \    }\n    else\n    {\n        Warn (\"(Texture_TeamSymbol[1] == None)\"@Group_Text_TeamSymbol[Index_TeamSymbol[1]]);\n\
      \    }\n\n    // ** Replication\n\n    GameReplicationInfo.TeamSymbolNotify\
      \ ();\n}\n\n</uscript>\n\n==== ToggleScreenShotMode does not restore a variety\
      \ of state ====\n\nScope:\n* PlayerController.ToggleScreenShotMode\n\nType:\n\
      * Save/Restore\n\nFix:\n# Remember and restore Handedness, bHideVehicleNoEntryIndicator.\n\
      \n==== TakeDrowningDamage ==== \n\nTriggers:\n* Pawn is in a water volume and\
      \ the match has entered the MatchOver state.\n\nScope:\n* Pawn.TakeDrowningDamage\n\
      \nType:\n* Access Error\n\nFix:\n# Check (Controller != None) before calling\
      \ Super.TakeDrowningDamage in a subclass of pawn.\n\n==== PlayTakeHit never\
      \ played drowning sound ====\n\nScope:\n* xPawn.PlayTakeHit\n\nType:\n* Class\
      \ Check Error\n\nCorrections:\n# Find: DamageType.IsA('Drowned')\n# Replace\
      \ With: DamageType == Class'Drowned'\n\nReminder:\n* Do not use IsA with a metaclass\
      \ reference (Syntax: Class<Classname>).\n* Use IsA with an instance of a class.\n\
      \nTrivia:\n* I don't think the actual drowning sounds were included anyway.\n\
      \n==Tips==\n\n===Example: Using a bitwise and operator===\n\nTheory: You can\
      \ check if a number is even {0, 2, 4, ...} or odd (1, 3, 5, ...) by testing\
      \ the least significant binary digit of an integer (two's complement). If it's\
      \ 0, this is an even number (0, 2, 4, ...).  If it's 1, this is an odd number\
      \ {1, 3, 5, ...}.\n\n<uscript>function Example ()\n{\n    local int Index;\n\
      \n    for (Index = 0; Index < 4; ++Index)\n    {\n        if ((Index & 1) ==\
      \ 0) // Test if the least significant bit is cleared.\n        {\n         \
      \   Log (\"[\"$Index$\"] Even\");\n        }\n\n        if ((Index & 1) == 1)\
      \ // Test if the least significant bit is set.\n        {\n            Log (\"\
      [\"$Index$\"] Odd\");\n        }\n    }\n}\n\n// Output:\n// ScriptLog: [0]\
      \ Even\n// ScriptLog: [1] Odd\n// ScriptLog: [2] Even\n// ScriptLog: [3] Odd</uscript>\n\
      \n===Example: Using a bitwise and operator II===\n\n<uscript>function Example\
      \ ()\n{\n    local int Index;\n\n    for (Index = 0; Index < 8; ++Index)\n \
      \   {\n        if ((Index & 2) == 2) // Test if bit #2 is set. You have to compare\
      \ using powers of two.\n        {\n            Log (\"[\"$Index$\"] Set\");\n\
      \        }\n    }\n}\n\n// Output:\n// ScriptLog: [2] Set\n// ScriptLog: [3]\
      \ Set\n// ScriptLog: [6] Set\n// ScriptLog: [7] Set</uscript>\n\n===Example:\
      \ Using a bitwise and operator III===\nTo show that you are not testing against\
      \ the bit number, but a value. You have to compare using powers of two.\n<uscript>function\
      \ Example ()\n{\n    local int Index;\n\n    Index = 255;\n\n    if ((Index\
      \ & 128) == 128) // Test if bit #7 (2^7 = 128) is set. You have to compare and\
      \ check using powers of two.\n    {\n        Log (\"[\"$Index$\"] Set\"); //\
      \ Bit #7 was set\n    }\n    else\n    {\n        Log (\"[\"$Index$\"] Cleared\"\
      ); // Bit #7 was cleared\n    }\n}\n\n// Output:\n// ScriptLog: [255] Set</uscript>\n\
      \n===Example: Using a bitwise or operator===\n\nTheory: The color-coded text\
      \ strings have the format 0x1B (ANSI Escape Code) followed by three bytes representing\
      \ the red, green, and blue channels, where each channel must be in the range\
      \ [1, 255] because the value 0 (NUL) terminates the string.  The function in\
      \ this example takes a color and uses the bitwise or operator to make sure that\
      \ the value of each color channel is always at least 1. Note that there is no\
      \ alpha channel (the string is opaque). Note that StrLen counts color codes.\n\
      \nAlso note that this is a bad real-world example, because all channel values\
      \ are always odd numbers.  For example, if the red channel value is 50, the\
      \ color code becomes 51.  See the second example for the real world use of such\
      \ a function, or you care about accuracy.\n\n<uscript>function string GetText_ColorCode\
      \ (Color Color)\n{\n    return\n    (\n        Chr (0x1B)\n        $ Chr (Color.R\
      \ | 1)\n        $ Chr (Color.G | 1)\n        $ Chr (Color.B | 1)\n    );\n}</uscript>\n\
      \nFor the sake of completeness, a version that applies to the real world, using\
      \ Max to keep the value within the allowed range [1, 255].\n\n<uscript>function\
      \ string GetText_ColorCode (Color Color)\n{\n    return\n    (\n        Chr\
      \ (0x1B)\n        $ Chr (Max (Color.R, 1))\n        $ Chr (Max (Color.G, 1))\n\
      \        $ Chr (Max (Color.B, 1))\n    );\n}</uscript>"
  properties: []
  revId: 46044
name: "User:Rejecht"
revision:
  revid: 46044
  parentid: 46034
  user: "Rejecht"
  timestamp: 1407496276.000000000
  comment: "/* About */"
timestamp: 1670393646.655602000
