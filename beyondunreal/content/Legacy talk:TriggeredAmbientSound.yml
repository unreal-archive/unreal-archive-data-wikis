---
parse:
  title: "Legacy talk:TriggeredAmbientSound"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#TrigAmbSound\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">TrigAmbSound</span></a>\n\
      <ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#2001\"><span class=\"\
      tocnumber\">1.1</span> <span class=\"toctext\">2001</span></a></li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#Simple_triggerable_AmbientSound\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">Simple triggerable\
      \ AmbientSound</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"TrigAmbSound\">TrigAmbSound</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy_talk:TriggeredAmbientSound?section=1\"\
      \ title=\"Edit section: TrigAmbSound\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>YoMammy: (04/11/2002)</p>\n<p>Advanced -&gt; bStatic\
      \ IS the problem with the TriggeredAmbientSound. On and above that, the TAS\
      \ was likely coded up rather quickly for a specific purpose and therefor leaves\
      \ lots to be desired.</p>\n<p>For you sounding pleasure, however, I coded up\
      \ a much better (if I do say so myself&#160;:) ) TAS. Here's a list of its new\
      \ properties and one other parent property setting worth mentioning:</p>\n<p>TrigAmbSound\
      \ properties:</p>\n<ul>\n<li>var() sound StartSound;</li>\n<li>var() sound AmbSound;</li>\n\
      <li>var() sound StopSound;</li>\n<li>var() bool bInitiallyOn;</li>\n<li>var()\
      \ float AmbDuration;</li>\n<li>Object/InitialState TriggerToggle or TriggerControl\
      \ (latter is default)</li>\n</ul>\n<p>\"StartSound\" is where you can optionally\
      \ place a one-shot sound. This will play when the TAS is triggered. Thereafter,\
      \ if you specified an \"AmbSound\" (preferrably a looping sound), it will then\
      \ play until you untrigger. Once untriggered, if you specified a \"StopSound\"\
      , that will play to finish things up.</p>\n<p>\"bInitially\" should only be\
      \ set to True if you set Object/InitialState = TriggleToggle. When doing this,\
      \ the \"StartSound\" is bypassed and the process proceeds to the \"AmbSound\"\
      ...if any was specified.</p>\n<p>If you set \"AmbDuration\" to anything other\
      \ than it's default 0.0, the looping ambient sound specified in \"AmbSound\"\
      \ will only play for the duration specified. Thereafter, things will work as\
      \ normal...i.e. you'll still get the \"StopSound\" when untriggering.</p>\n\
      <p>If you want the script, get it here: <a rel=\"nofollow\" class=\"external\
      \ free\" href=\"http://www.gentekcom.com/~diinc/UTMaps/TrigAmbSound.u\">http://www.gentekcom.com/~diinc/UTMaps/TrigAmbSound.u</a></p>\n\
      <p>In UEd, You'll find it under KeyPoint (where you'd expect). Open up the script\
      \ and look at it...its ridiculously simple. Now, forgive me for being a smartass,\
      \ but isn't THIS what you'd expect a TriggeredAmbientSound to do in the first\
      \ place?</p>\n<p><b>CoolDude:</b> Too bad, the link above seems to be broken.\
      \ If anybody has a working one, please add it.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"2001\">2001</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy_talk:TriggeredAmbientSound?section=2\" title=\"\
      Edit section: 2001\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p><b>Tarquin:</b> I tried a search of my UT folder for anything with the name\
      \ \"TrigAmbSound\" and found this in both a map called DM-2001][ by Wayne Young\
      \ (AKA Slartybartfast) and wdy_mods.U (whatever that is!) The 'OnWhileTriggered'\
      \ state sounds like it corresponds to 'TriggerControl' described above. I don't\
      \ know if it's coincidence that it uses the same name, or if it's an earlier\
      \ version. If anyone feels like contacting this guy and asking him if we can\
      \ alter his script &amp; improve it, his website is <a rel=\"nofollow\" class=\"\
      external free\" href=\"http://www.ganimede.demon.co.uk/\">http://www.ganimede.demon.co.uk/</a>\
      \ (and he works for nVidia).</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// TrigAmbSound.</span>\n<span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">class</span> TrigAmbSound <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">Keypoint</span>;\n \n<span class=\"co1\">// Re-plays a\
      \ sound effect if triggered.  If in state TriggerToggled,</span>\n<span class=\"\
      co1\">// the sound is turned off if triggered, and turned on, etc..</span>\n\
      <span class=\"co1\">// when triggered again.  In the OnWhileTriggered state,\
      \ the instigator</span>\n<span class=\"co1\">// must stay within the trigger's\
      \ radius for the sound effect to continue</span>\n<span class=\"co1\">// playing.\
      \  bInitiallyOn determines if the sound is playing from the </span>\n<span class=\"\
      co1\">// start, and does not apply in the OnWhileTriggered state.</span>\n \n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">sound</span> StartSound; <span class=\"co1\">//\
      \ Hmmm. This doesn't do anything yet :(</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">sound</span>\
      \ LoopSound;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">sound</span> EndSound;\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">bool</span>  bInitiallyOn;\n \n<span class=\"kw1\">var</span>\t\
      \  <span class=\"kw5\">bool</span>  bIsOn;\n \n<span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">BeginPlay</span> <span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\t\n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>bInitiallyOn<span class=\"br0\">)</span> <span\
      \ class=\"br0\">{</span>\n<span class=\"co1\">//    if (StartSound != None)\
      \ {</span>\n<span class=\"co1\">//\t  PlaySound (StartSound, , Float(SoundVolume)/128,\
      \ , Float(SoundRadius)*25);</span>\n<span class=\"co1\">//\t  }</span>\n   \
      \ <span class=\"kw2\">if</span> <span class=\"br0\">(</span>LoopSound <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n\t  <span class=\"kw4\">PlaySound</span>\
      \ <span class=\"br0\">(</span>LoopSound, , <span class=\"kw5\">Float</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">SoundVolume</span><span class=\"\
      br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">128</span>, ,\
      \ <span class=\"kw5\">Float</span><span class=\"br0\">(</span><span class=\"\
      kw7\">SoundRadius</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span\
      \ class=\"nu0\">25</span><span class=\"br0\">)</span>;\n\t  <span class=\"br0\"\
      >}</span>\n    bIsOn <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n\
      \    <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"\
      kw1\">state</span><span class=\"br0\">(</span><span class=\"br0\">)</span> TriggerToggled\n\
      <span class=\"br0\">{</span>\n  <span class=\"kw1\">function</span> <span class=\"\
      kw4\">Trigger</span><span class=\"br0\">(</span> <span class=\"kw9\">actor</span>\
      \ Other, <span class=\"kw9\">pawn</span> EventInstigator <span class=\"br0\"\
      >)</span>\n\t<span class=\"br0\">{</span>\n\tbIsOn <span class=\"sy0\">=</span>\
      \ <span class=\"sy0\">!</span>bIsOn;\n\t<span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>bIsOn<span class=\"br0\">)</span> <span class=\"br0\"\
      >{</span>\n<span class=\"co1\">//      if (StartSound != None) {</span>\n<span\
      \ class=\"co1\">//\t    PlaySound (StartSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);</span>\n\
      <span class=\"co1\">//\t    }</span>\n      <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>LoopSound <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \        <span class=\"kw4\">PlaySound</span> <span class=\"br0\">(</span>LoopSound,\
      \ , <span class=\"kw5\">Float</span><span class=\"br0\">(</span><span class=\"\
      kw7\">SoundVolume</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span\
      \ class=\"nu0\">128</span>, , <span class=\"kw5\">Float</span><span class=\"\
      br0\">(</span><span class=\"kw7\">SoundRadius</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">*</span><span class=\"nu0\">25</span><span class=\"br0\">)</span>;\n\
      \        <span class=\"br0\">}</span>\n\t  <span class=\"br0\">}</span>\n\t\
      <span class=\"kw2\">else</span> <span class=\"br0\">{</span>\n      <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>EndSound <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span> <span class=\"\
      br0\">{</span>\n        <span class=\"kw4\">PlaySound</span> <span class=\"\
      br0\">(</span>EndSound, , <span class=\"kw5\">Float</span><span class=\"br0\"\
      >(</span><span class=\"kw7\">SoundVolume</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">/</span><span class=\"nu0\">128</span>, , <span class=\"kw5\"\
      >Float</span><span class=\"br0\">(</span><span class=\"kw7\">SoundRadius</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">25</span><span\
      \ class=\"br0\">)</span>;\n        <span class=\"br0\">}</span>\n\t  <span class=\"\
      br0\">}</span>\n\t<span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">state</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> OnWhileTriggered\n<span class=\"br0\">{</span>\n  <span class=\"\
      kw1\">function</span> <span class=\"kw4\">Trigger</span><span class=\"br0\"\
      >(</span> <span class=\"kw9\">actor</span> Other, <span class=\"kw9\">pawn</span>\
      \ EventInstigator <span class=\"br0\">)</span>\t<span class=\"br0\">{</span>\n\
      \    bIsOn <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n<span\
      \ class=\"co1\">//    if (StartSound != None) {</span>\n<span class=\"co1\"\
      >//\t  PlaySound (StartSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);</span>\n\
      <span class=\"co1\">//\t  }</span>\n    <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>LoopSound <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \      <span class=\"kw4\">PlaySound</span> <span class=\"br0\">(</span>LoopSound,\
      \ , <span class=\"kw5\">Float</span><span class=\"br0\">(</span><span class=\"\
      kw7\">SoundVolume</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span\
      \ class=\"nu0\">128</span>, , <span class=\"kw5\">Float</span><span class=\"\
      br0\">(</span><span class=\"kw7\">SoundRadius</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">*</span><span class=\"nu0\">25</span><span class=\"br0\">)</span>;\n\
      \      <span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n \n  <span\
      \ class=\"kw1\">function</span> <span class=\"kw4\">UnTrigger</span><span class=\"\
      br0\">(</span> <span class=\"kw9\">actor</span> Other, <span class=\"kw9\">pawn</span>\
      \ EventInstigator <span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \    bIsOn <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>EndSound <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n      <span class=\"kw4\">PlaySound</span>\
      \ <span class=\"br0\">(</span>EndSound, , <span class=\"kw5\">Float</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">SoundVolume</span><span class=\"\
      br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">128</span>, ,\
      \ <span class=\"kw5\">Float</span><span class=\"br0\">(</span><span class=\"\
      kw7\">SoundRadius</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span\
      \ class=\"nu0\">25</span><span class=\"br0\">)</span>;\n      <span class=\"\
      br0\">}</span>\n    <span class=\"br0\">}</span>\n \n<span class=\"kw2\">Begin</span>:\n\
      \tbIsOn <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n<span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p><br />\n<b>GTD-Carthage:</b>\
      \ Hey, has there been any update here?&#160;:o Looks like this is one unsolved\
      \ problem...</p>\n<p><b>SuperApe:</b> The bStatic problem? I have a thought\
      \ about this, although I'm not a UT person. The bStatic problem could be solved\
      \ with a special Trigger, like the VolumeTrigger is able to toggle bStatic Volumes.\
      \ The custom Trigger function can simply search for TrigAmbSound actors with\
      \ the matching Tag and call <u>the TrigAmbSound's</u> Trigger function.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Simple_triggerable_AmbientSound\">Simple\
      \ triggerable AmbientSound</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy_talk:TriggeredAmbientSound?section=3\"\
      \ title=\"Edit section: Simple triggerable AmbientSound\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>A very simple version is this:</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> AmbientSoundEx\
      \ <span class=\"kw1\">expands</span> <span class=\"kw9\">AmbientSound</span>;\n\
      \ \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> <span class=\"kw5\">bool</span> bInitiallyOn;\n \n<span class=\"\
      kw1\">var</span> <span class=\"kw5\">sound</span> MyAmbientSound;\n \n<span\
      \ class=\"kw1\">function</span> <span class=\"kw4\">BeginPlay</span> <span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\t\
      MyAmbientSound <span class=\"sy0\">=</span> <span class=\"kw9\">AmbientSound</span>;\n\
      \t<span class=\"kw2\">if</span> <span class=\"br0\">(</span> <span class=\"\
      sy0\">!</span> bInitiallyOn<span class=\"br0\">)</span> <span class=\"kw9\"\
      >AmbientSound</span> <span class=\"sy0\">=</span> <span class=\"kw5\">None</span>;\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"kw1\">function</span> <span\
      \ class=\"kw4\">Trigger</span><span class=\"br0\">(</span> <span class=\"kw9\"\
      >actor</span> Other, <span class=\"kw9\">pawn</span> EventInstigator <span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw9\">AmbientSound</span> <span\
      \ class=\"sy0\">==</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span>\n\t\t<span class=\"kw9\">AmbientSound</span> <span class=\"sy0\">=</span>\
      \ MyAmbientSound;\n\t<span class=\"kw2\">else</span>\n\t\t<span class=\"kw9\"\
      >AmbientSound</span> <span class=\"sy0\">=</span> <span class=\"kw5\">None</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">DefaultProperties</span>\
      \ <span class=\"br0\">{</span>\n\tbStatic<span class=\"sy0\">=</span><span class=\"\
      kw6\">False</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>Each\
      \ time this Actor is triggered, it switches its AmbientSound between on and\
      \ off. If bInitiallyOn is set to True, it switches between off and on. --<a\
      \ href=\"/User:SeriousBarbie\" title=\"User:SeriousBarbie\">SeriousBarbie</a>\
      \ (<a href=\"/User_talk:SeriousBarbie\" title=\"User talk:SeriousBarbie\">talk</a>)\
      \ 00:54, 24 September 2016 (EDT)</p>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.079 seconds\nReal time usage: 0.081 seconds\nPreprocessor visited\
      \ node count: 23/1000000\nPreprocessor generated node count: 56/1000000\nPost‐\
      expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:29729-0!*!0!!en!*!*\
      \ and timestamp 20221117232534 and revision id 46368\n -->\n"
  categories: []
  links:
  - ns: 3
    exists: true
    name: "User talk:SeriousBarbie"
  - ns: 2
    exists: true
    name: "User:SeriousBarbie"
  templates: []
  images: []
  externallinks:
  - "http://www.gentekcom.com/~diinc/UTMaps/TrigAmbSound.u"
  - "http://www.ganimede.demon.co.uk/"
  sections:
  - toclevel: 1
    level: "2"
    line: "TrigAmbSound"
    number: "1"
    index: "1"
    fromtitle: "Legacy_talk:TriggeredAmbientSound"
    byteoffset: 8
    anchor: "TrigAmbSound"
  - toclevel: 2
    level: "3"
    line: "2001"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy_talk:TriggeredAmbientSound"
    byteoffset: 1879
    anchor: "2001"
  - toclevel: 1
    level: "2"
    line: "Simple triggerable AmbientSound"
    number: "2"
    index: "3"
    fromtitle: "Legacy_talk:TriggeredAmbientSound"
    byteoffset: 5110
    anchor: "Simple_triggerable_AmbientSound"
  displaytitle: "Legacy talk:TriggeredAmbientSound"
  iwlinks: []
  wikitext:
    text: "__TOC__\n== TrigAmbSound ==\nYoMammy: (04/11/2002)\n\nAdvanced -> bStatic\
      \ IS the problem with the TriggeredAmbientSound.  On and above that, the TAS\
      \ was likely coded up rather quickly for a specific purpose and therefor leaves\
      \ lots to be desired.\n\nFor you sounding pleasure, however, I coded up a much\
      \ better (if I do say so myself :) ) TAS.  Here's a list of its new properties\
      \ and one other parent property setting worth mentioning:\n\nTrigAmbSound properties:\n\
      * var() sound StartSound;\n* var() sound AmbSound;\n* var() sound StopSound;\n\
      * var() bool  bInitiallyOn;\n* var() float AmbDuration;\n* Object/InitialState\
      \   TriggerToggle or TriggerControl (latter is default)\n\n\"StartSound\" is\
      \ where you can optionally place a one-shot sound.  This will play when the\
      \ TAS is triggered.  Thereafter, if you specified an \"AmbSound\" (preferrably\
      \ a looping sound), it will then play until you untrigger.  Once untriggered,\
      \ if you specified a \"StopSound\", that will play to finish things up.\n\n\"\
      bInitially\" should only be set to True if you set Object/InitialState = TriggleToggle.\
      \  When doing this, the \"StartSound\" is bypassed and the process proceeds\
      \ to the \"AmbSound\"...if any was specified.\n\nIf you set \"AmbDuration\"\
      \ to anything other than it's default 0.0, the looping ambient sound specified\
      \ in \"AmbSound\" will only play for the duration specified.  Thereafter, things\
      \ will work as normal...i.e. you'll still get the \"StopSound\" when untriggering.\n\
      \nIf you want the script, get it here: http://www.gentekcom.com/~diinc/UTMaps/TrigAmbSound.u\n\
      \nIn UEd, You'll find it under KeyPoint (where you'd expect).  Open up the script\
      \ and look at it...its ridiculously simple.  Now, forgive me for being a smartass,\
      \ but isn't THIS what you'd expect a TriggeredAmbientSound to do in the first\
      \ place?\n\n'''CoolDude:''' Too bad, the link above seems to be broken. If anybody\
      \ has a working one, please add it.\n\n===2001===\n\n'''Tarquin:''' I tried\
      \ a search of my UT folder for anything with the name \"TrigAmbSound\" and found\
      \ this in both a map called DM-2001][ by Wayne Young (AKA Slartybartfast) and\
      \ wdy_mods.U (whatever that is!) The 'OnWhileTriggered' state sounds like it\
      \ corresponds to 'TriggerControl' described above. I don't know if it's coincidence\
      \ that it uses the same name, or if it's an earlier version. If anyone feels\
      \ like contacting this guy and asking him if we can alter his script & improve\
      \ it, his website is http://www.ganimede.demon.co.uk/ (and he works for nVidia).\n\
      \n<uscript>\n//=============================================================================\n\
      // TrigAmbSound.\n//=============================================================================\n\
      class TrigAmbSound extends Keypoint;\n\n// Re-plays a sound effect if triggered.\
      \  If in state TriggerToggled,\n// the sound is turned off if triggered, and\
      \ turned on, etc..\n// when triggered again.  In the OnWhileTriggered state,\
      \ the instigator\n// must stay within the trigger's radius for the sound effect\
      \ to continue\n// playing.  bInitiallyOn determines if the sound is playing\
      \ from the \n// start, and does not apply in the OnWhileTriggered state.\n\n\
      var() sound StartSound; // Hmmm. This doesn't do anything yet :(\nvar() sound\
      \ LoopSound;\nvar() sound EndSound;\nvar() bool  bInitiallyOn;\n\nvar\t  bool\
      \  bIsOn;\n\nfunction BeginPlay ()\n{\t\n  if (bInitiallyOn) {\n//    if (StartSound\
      \ != None) {\n//\t  PlaySound (StartSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n\
      //\t  }\n    if (LoopSound != None) {\n\t  PlaySound (LoopSound, , Float(SoundVolume)/128,\
      \ , Float(SoundRadius)*25);\n\t  }\n    bIsOn = true;\n    }\n}\n\nstate() TriggerToggled\n\
      {\n  function Trigger( actor Other, pawn EventInstigator )\n\t{\n\tbIsOn = !bIsOn;\n\
      \tif (bIsOn) {\n//      if (StartSound != None) {\n//\t    PlaySound (StartSound,\
      \ , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n//\t    }\n      if (LoopSound\
      \ != None) {\n        PlaySound (LoopSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n\
      \        }\n\t  }\n\telse {\n      if (EndSound != None) {\n        PlaySound\
      \ (EndSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n        }\n\
      \t  }\n\t}\n}\n\nstate() OnWhileTriggered\n{\n  function Trigger( actor Other,\
      \ pawn EventInstigator )\t{\n    bIsOn = true;\n//    if (StartSound != None)\
      \ {\n//\t  PlaySound (StartSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n\
      //\t  }\n    if (LoopSound != None) {\n      PlaySound (LoopSound, , Float(SoundVolume)/128,\
      \ , Float(SoundRadius)*25);\n      }\n\t}\n\n  function UnTrigger( actor Other,\
      \ pawn EventInstigator ) {\n    bIsOn = false;\n    if (EndSound != None) {\n\
      \      PlaySound (EndSound, , Float(SoundVolume)/128, , Float(SoundRadius)*25);\n\
      \      }\n    }\n\nBegin:\n\tbIsOn = false;\n}\n\n</uscript>\n\n\n'''GTD-Carthage:'''\
      \ Hey, has there been any update here? :o Looks like this is one unsolved problem...\n\
      \n'''SuperApe:''' The bStatic problem?  I have a thought about this, although\
      \ I'm not a UT person.  The bStatic problem could be solved with a special Trigger,\
      \ like the VolumeTrigger is able to toggle bStatic Volumes.  The custom Trigger\
      \ function can simply search for TrigAmbSound actors with the matching Tag and\
      \ call <u>the TrigAmbSound's</u> Trigger function.\n\n== Simple triggerable\
      \ AmbientSound ==\nA very simple version is this:\n<uscript>class AmbientSoundEx\
      \ expands AmbientSound;\n\nvar() bool bInitiallyOn;\n\nvar sound MyAmbientSound;\n\
      \nfunction BeginPlay () {\n\tMyAmbientSound = AmbientSound;\n\tif ( ! bInitiallyOn)\
      \ AmbientSound = None;\n}\n\n\nfunction Trigger( actor Other, pawn EventInstigator\
      \ ) {\n\tif (AmbientSound == None)\n\t\tAmbientSound = MyAmbientSound;\n\telse\n\
      \t\tAmbientSound = None;\n}\n\nDefaultProperties {\n\tbStatic=False\n}</uscript>\n\
      Each time this Actor is triggered, it switches its AmbientSound between on and\
      \ off. If bInitiallyOn is set to True, it switches between off and on.\n--[[User:SeriousBarbie|SeriousBarbie]]\
      \ ([[User talk:SeriousBarbie|talk]]) 00:54, 24 September 2016 (EDT)"
  properties: []
  revId: 46368
name: "Legacy talk:TriggeredAmbientSound"
revision:
  revid: 46368
  parentid: 0
  user: "SeriousBarbie"
  timestamp: 1474692877.000000000
  comment: "Moved discussion/custom Actor code from article page to discussion page"
timestamp: 1668752759.230599000
