---
parse:
  title: "Legacy:Releasing A Mod"
  text:
    text: "<p>After <a href=\"/Legacy:Making_Mods\" title=\"Legacy:Making Mods\">Making\
      \ Mods</a>, comes releasing your work to the public. But are you sure you're\
      \ ready? Too many projects suffer because the final product is lacking fairly\
      \ basic touches. Here's what experienced mod-makers from the Unreal Wiki think\
      \ you should watch for, in particular <a href=\"/Legacy:Mychaeel\" title=\"\
      Legacy:Mychaeel\">Mychaeel</a> and <a href=\"/Legacy:RegularX\" title=\"Legacy:RegularX\"\
      >RegularX</a>...</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Pre-release\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Pre-release</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"\
      #Project_States\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Project States</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"\
      #User-friendliness\"><span class=\"tocnumber\">3</span> <span class=\"toctext\"\
      >User-friendliness</span></a></li>\n<li class=\"toclevel-1 tocsection-4\"><a\
      \ href=\"#Distribution_format\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">Distribution format</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-5\"\
      ><a href=\"#Compressed_archive\"><span class=\"tocnumber\">4.1</span> <span\
      \ class=\"toctext\">Compressed archive</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#Installer\"><span class=\"tocnumber\">4.2</span>\
      \ <span class=\"toctext\">Installer</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-7\"><a href=\"#UMod\"><span class=\"tocnumber\">4.3</span> <span\
      \ class=\"toctext\">UMod</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-8\"><a href=\"#Release_CheckList\"><span class=\"tocnumber\">5</span>\
      \ <span class=\"toctext\">Release CheckList</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-9\"><a href=\"#Page_under_construction\"><span class=\"tocnumber\"\
      >6</span> <span class=\"toctext\">Page under construction</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Pre-release\">Pre-release</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Releasing_A_Mod?section=1\" title=\"Edit section: Pre-release\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Chances\
      \ are you've told people what you're working on. It's hard to keep it under\
      \ wraps, and besides, part of a good publicity campaign is getting people's\
      \ interest in anticipation of the product. But what should you tell them?</p>\n\
      <ul>\n<li>good screenshots.</li>\n<li>Give only enough information to describe\
      \ roughly what the mod does, then fill in anything else as required by the questions\
      \ asked.</li>\n<li>It can be fun to only hint at some features, encouraging\
      \ people to keep checking back for more info, and then eventually to download\
      \ the mod to see what the hell you were talking about.</li>\n</ul>\n<h2><span\
      \ class=\"mw-headline\" id=\"Project_States\">Project States</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=2\"\
      \ title=\"Edit section: Project States\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>These terms are often misused or misunderstood – due\
      \ largely to the fact that even professional developers have differing definitions\
      \ of them sometimes.</p>\n<dl>\n<dt>Alpha&#160;</dt>\n<dd>Non-feature complete,\
      \ for internal testing only. The term \"Alpha\" is usually applied to the first\
      \ build (and subsequent builds prior to Beta) that has the game's core functionality\
      \ working – if not perfectly, at least recognizably.</dd>\n<dt>Beta&#160;</dt>\n\
      <dd>Feature complete. The transition from Alpha to Beta is reached when the\
      \ project is developed to the point where it closely resembles the upcoming\
      \ Gold version. Developers often use the terms \"Private\" and \"Public\" Beta\
      \ to describe the state of the project. Private Betas remain in-house, while\
      \ Public Betas are often made available to select members of a community to\
      \ assist in bug-hunting and game balancing feedback. In (increasing common)\
      \ circumstances, projects are put up for general download in a Public Beta state\
      \ – these are often referred to (incorrectly) as Demos.</dd>\n<dt>Gold&#160;</dt>\n\
      <dd>The final version, ready for duplication, of a project.</dd>\n<dt>Demo&#160;</dt>\n\
      <dd>A stripped version of a project, to give an interested party a taste of\
      \ what the full version has to offer. Four levels of an FPS or one town of an\
      \ RPG might constitute a Demo. There is no functional difference between the\
      \ Demo version and the retail version.</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"User-friendliness\">User-friendliness</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=3\"\
      \ title=\"Edit section: User-friendliness\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Remember that hardly anyone reads readmes, so everything\
      \ should be as simple and intuitive as possible, otherwise you will end up answering\
      \ a thousand e-mails with \"it explains feature x in the readme\".</p>\n<p>Use\
      \ standard controls where possible and don't add any more new keybinds than\
      \ are absolutely necessary.</p>\n<p><b>Ian Pilipski:</b> Try not to install\
      \ your files to the same directories as the original game. Keep your files in\
      \ a sub-directory. This will make it easier for the end-user to remove or identify\
      \ which files are part of your mod. You can do this in UT2003 by providing your\
      \ own &lt;modname&gt;.ini file (preferred and only method you should use as\
      \ HSDanClark points out below). Just add your mod paths to the [Core.System]\
      \ heading. The example below could be for a mod named \"RaceMod\".</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"br0\">[</span>Core.<span\
      \ class=\"me0\">System</span><span class=\"br0\">]</span>\nPaths<span class=\"\
      sy0\">=</span>..\\RaceMod\\System\\<span class=\"sy0\">*</span>.<span class=\"\
      me0\">u</span>\nPaths<span class=\"sy0\">=</span>..\\RaceMod\\Textures\\<span\
      \ class=\"sy0\">*</span>.<span class=\"me0\">utx</span>\nPaths<span class=\"\
      sy0\">=</span>..\\RaceMod\\Sounds\\<span class=\"sy0\">*</span>.<span class=\"\
      me0\">uax</span>\nPaths<span class=\"sy0\">=</span>..\\RaceMod\\......<span\
      \ class=\"br0\">(</span>you get the point<span class=\"br0\">)</span></pre></div>\n\
      </div>\n<p><b>HSDanClark:</b> Never, ever, ever, write your own UT2003.ini file\
      \ and distribute it with a mod. The last thing you need is for something to\
      \ go wrong and the user is now left with an unplayable game. The best method\
      \ is to write an ini file for your game such as <tt>MyGame.ini</tt>, then use\
      \ a custom shortcut to launch UT2003 with that file in the command line – e.g.\
      \ <b>Shortcut to MyGame</b>, with <b>-ini=MyGame.ini</b> in the command line.\
      \ There's a Wiki page explaining that, and as soon as I find it I'll reference\
      \ it here.</p>\n<p><b>GRAF1K:</b> <a href=\"/Category:Legacy_Link_Me\" title=\"\
      Category:Legacy Link Me\">Category:Legacy Link Me</a></p>\n<p><b>Tarquin:</b>\
      \ Is it <a href=\"/Legacy:Game_Ini_File\" title=\"Legacy:Game Ini File\">Game\
      \ Ini File</a> you want?</p>\n<p><b>HSDanClark:</b> Not exactly... perhaps it\
      \ wasn't a Wiki page where I found the info; I can't seem to find a relevant\
      \ page that describes what I was talking about. I found a page a while back\
      \ that explained how to use custom &lt;Game&gt;.ini, &lt;Game&gt;User.ini and\
      \ USERLOGO=MyLogo.gif (among others) to change how the game starts up. I'll\
      \ poke around on the net and see if I can find it again. If I can't, I'll write\
      \ up a Wiki page for it.</p>\n<h2><span class=\"mw-headline\" id=\"Distribution_format\"\
      >Distribution format</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=4\" title=\"Edit section:\
      \ Distribution format\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>There are a few ways to distribute your mod:</p>\n<ul>\n<li>Plain compressed\
      \ archive</li>\n<li>Installer</li>\n<li>UMod</li>\n</ul>\n<p>Server Administrators\
      \ prefer plain compressed archives, because often they don't have a graphical\
      \ interface or installed copy of the game. Also archives are easier to be reviewed\
      \ for it's contents.</p>\n<p>Normal users/players prefer to use installers/umods\
      \ so they can uninstall the game in the future.</p>\n<p>So always release both\
      \ a plain archive and an install/umod of your mod (<b>zip</b> and <b>umod</b>\
      \ are the best choise).</p>\n<h3><span class=\"mw-headline\" id=\"Compressed_archive\"\
      >Compressed archive</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=5\" title=\"Edit section:\
      \ Compressed archive\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>This is the easiest method. However, don't use exotic archive formats, stick\
      \ with the normal ZIP format. Ofcourse RAR or 7z will produce smaller archives,\
      \ but they are less common. With ZIP you know for sure that pretty much every\
      \ user can extract them without needing to search for a tool to extract it.</p>\n\
      <p>You could create a self extracting volume (a.k.a SFX), but this is maybe\
      \ the worst method. Because it's pretty much the same as a normal installer,\
      \ except that it doesn't have an uninstall method. In other words, no SFX archives.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Installer\">Installer</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=6\"\
      \ title=\"Edit section: Installer\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Installers are nice, you can guide people through\
      \ the whole install and make sure everything is done correctly and they will\
      \ be able to uninstall the mod in the future. However, installers are pretty\
      \ much always system depended. This isn't very usefull for people on other Operating\
      \ Systems.</p>\n<p>If an installer isn't set up correctly, it might leave behind\
      \ files during uninstall. So test your installer on a clean installation of\
      \ the game to make sure it doesn't leave behind any files when it's uninstalled.\
      \ (Making sure the uninstaller doesn't uninstall <i>too many</i> files doesn't\
      \ need to be mentioned, I guess.)</p>\n<p>There are quite some free installer\
      \ generators available. Here's a short list of <i>free</i> installer generators:</p>\n\
      <ul>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://www.jrsoftware.org/isinfo.php\"\
      >Inno Setup</a></li>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"\
      http://nsis.sourceforge.net/\">NSIS</a></li>\n</ul>\n<h3><span class=\"mw-headline\"\
      \ id=\"UMod\">UMod</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=7\" title=\"Edit section:\
      \ UMod\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Not the easiest thing to create, but <a href=\"/Legacy:Umod_Wizard\" title=\"\
      Legacy:Umod Wizard\">Umod Wizard</a> can make it much easier.</p>\n<p><a href=\"\
      /Legacy:UMOD\" title=\"Legacy:UMOD\">UMods</a> are the best choice for an installer,\
      \ it can be installed for every operating system and it can also be uninstalled\
      \ (via the game's uninstaller/setup).</p>\n<p>However, often users managed to\
      \ screw up their game install. You might want to include directions on your\
      \ download page how they could fix it (Or link to this page: <a href=\"/Legacy:UMOD/Problems\"\
      \ title=\"Legacy:UMOD/Problems\">UMOD/Problems</a>)</p>\n<p>Because UMods are\
      \ not compressed they might become quite large. It's ok to simply zip the UMod\
      \ and release that. It's best to hint the umod in the filename of the zip file:\
      \ <code>MyMod-version-umoz.zip</code></p>\n<h2><span class=\"mw-headline\" id=\"\
      Release_CheckList\">Release CheckList</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=8\"\
      \ title=\"Edit section: Release CheckList\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>(this is a rough draft, and I'm certainly no saint\
      \ when it comes to releasing files... rgx )</p>\n<p>When you have adequetely\
      \ tested your mod, map or mutator and decide it's high time for the mass public\
      \ to see it, there's a few steps you can try to insure not annoying people or\
      \ having to issue out a patch:</p>\n<ol>\n<li>Before getting to this point,\
      \ maintain a file list of all the assets your project would be installing. It's\
      \ easy to forget that one texture file (in fact, and I've done this, texture\
      \ files seem to be the first things coder-types seem to forget) that you haven't\
      \ updated in the last few weeks/months/etc.</li>\n</ol>\n<ol>\n<li>Write your\
      \ README and INSTALL docs. For UT2003, they're usually the same text file. ASCII\
      \ is the most common and readable across platforms, but making an HTML version\
      \ can look somewhat snazzy and is almost as cross-platform. README's are something\
      \ of ironic device - they're absolutely essential, but most people won't read\
      \ them. Regardless, you should include (at least) author information, project\
      \ overview and description, installation instructions (usually for both the\
      \ UMOD and ZIP version), any known bugs, and then also any thanks or footnotes.\
      \ Adding in the filelist isn't necessary, but not always a bad idea. Links to\
      \ websites, email addresses or other places to hunt down more info is also pretty\
      \ common.</li>\n</ol>\n<ol>\n<li>Make a foldered zip file. Easiest method I\
      \ have found to do this is to create a brand new folder named something like\
      \ \"mymodzip\". Consider that folder the new root of your soon to be archive.\
      \ In there, make copies of the directories within the UT2003 folder containing\
      \ only the files for your mod. So, make a System folder into the mymodzip and\
      \ copy, for instance, the .u and .int files in there. Or for a map, you would\
      \ make a Maps, Textures, and maybe Sounds for instance. You can then use your\
      \ archive tool (like WinZip) to just archive the whole mymodzip folder. When\
      \ someone extracts it to their UT2003 folder, all the subfolders should match\
      \ up. Put your README in there as well of course (I usually put into the system\
      \ folder named PROJECT-README.txt or the like ... just naming it \"README\"\
      \ can get it overwritten).</li>\n</ol>\n<ol>\n<li>Do a clean box test. Find\
      \ someone who either has never installed your project or can insure they can\
      \ wipe out all old files. This is also where your file list will come in handy.\
      \ Here's a tricky part though: make sure to check with your team and double\
      \ check that the list includes any dependencies. For example - I released the\
      \ XPakI. A few weeks later, I released the XPakII and found that some people\
      \ could install and run it fine, and others couldn't. The problem? I had left\
      \ some references into XPakII about the first one, meaning only people who had\
      \ XPakI installed could play it. If your project includes any dependencies to\
      \ things outside of your project (for instance, the Epic Bonus Pack) - this\
      \ has to be plastered all over your download page, README file, etc.</li>\n\
      </ol>\n<ol>\n<li>Make the umod file. Check the <a href=\"/Legacy:Umod_Wizard\"\
      \ title=\"Legacy:Umod Wizard\">Umod Wizard</a> page for more. Now, at this point\
      \ I've made it sound like both the ZIP and UMOD versions are necessary. This\
      \ is what I would consider best practice for nearly any project - but each team\
      \ should examine both versions and make up their own mind. Some teams even use\
      \ other archive and self-install programs. Here's the deal: ZIP files are great\
      \ for people who either are installing onto a machine that doesn't actually\
      \ have a full UT2003 (like a server) or people who are tired of fighting with\
      \ Windows when it comes to the umod extension. UMOD files are great for people\
      \ who don't have any problems with the installer and like the double-click ease\
      \ and uninstall options of it.</li>\n</ol>\n<ol>\n<li>Clean box test the umod\
      \ file.</li>\n</ol>\n<ol>\n<li>OK, now you have your archives with their README\
      \ files. If you want to be cautious, put it up on an FTP somewhere and have\
      \ a few other people try it out. Not everyone has access to servers though,\
      \ so FilePlanet, FileShack or the like might be your thing. You might want to\
      \ shoot emails around to places like BeyondUnreal and PlanetUnreal to get the\
      \ word out.</li>\n</ol>\n<ol>\n<li>Post release, try to track feedback carefully.\
      \ I can't speak much about maps - but for mutators and mods, I can say that\
      \ it's not uncommon for a still unforseen problem to arise. Hopefully you've\
      \ done enough testing that it's a limited problem, or perhaps is some bizarro\
      \ combination of mutators that causing it or something.</li>\n</ol>\n<ol>\n\
      <li>If you are of legal age in the country you reside and fall to this particular\
      \ habit, it's common to have a beer.</li>\n</ol>\n<h2><span class=\"mw-headline\"\
      \ id=\"Page_under_construction\">Page under construction</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Releasing_A_Mod?section=9\"\
      \ title=\"Edit section: Page under construction\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Tarquin:</b> I've made this page because we have\
      \ several pages on the wiki with personal advice on this topic. I would like\
      \ to produce something general. Remember to use Document Mode rather than Thread\
      \ Mode please!</p>\n<p><b>RegularX:</b> Should we add links to <a href=\"/Legacy:Umod_Wizard\"\
      \ title=\"Legacy:Umod Wizard\">Umod Wizard</a>? Maybe some tips on how to generate\
      \ a zip with the correct folders in it? Maybe of a checklist of things to step\
      \ through before a release?</p>\n<p><b>Chip:</b> I for one would value this\
      \ highly, RegularX, as there seems to be no real \"standard\" for (or even consensus\
      \ on) the most acceptable distribution method, so specific recommendations from\
      \ those with experience would be helpful.</p>\n<p><b>RegularX:</b> Once I get\
      \ block of time I'll try to toss a rough down.</p>\n<p>It would be nice if the\
      \ following ranters could donate some of their thoughts to this page:</p>\n\
      <ul>\n<li><a href=\"/Legacy:Mychaeel/Modding_Etiquette\" title=\"Legacy:Mychaeel/Modding\
      \ Etiquette\">Mychaeel/Modding Etiquette</a></li>\n<li><a href=\"/Legacy:RegularX/Rants\"\
      \ title=\"Legacy:RegularX/Rants\">RegularX/Rants</a></li>\n<li><a href=\"/Legacy:Piglet/Finishing_Things\"\
      \ title=\"Legacy:Piglet/Finishing Things\">Piglet/Finishing Things</a></li>\n\
      </ul>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.065 seconds\nReal time\
      \ usage: 0.067 seconds\nPreprocessor visited node count: 45/1000000\nPreprocessor\
      \ generated node count: 68/1000000\nPost‐expand include size: 15/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:2637-0!*!0!!en!*!* and timestamp\
      \ 20221118022716 and revision id 6287\n -->\n"
  categories:
  - sortkey: "Releasing A Mod"
    name: "Legacy_Link_Me"
  links:
  - ns: 100
    exists: true
    name: "Legacy:UMOD/Problems"
  - ns: 100
    exists: true
    name: "Legacy:Making Mods"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel"
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel/Modding Etiquette"
  - ns: 100
    exists: true
    name: "Legacy:RegularX"
  - ns: 100
    exists: true
    name: "Legacy:Piglet/Finishing Things"
  - ns: 100
    exists: true
    name: "Legacy:Game Ini File"
  - ns: 100
    exists: true
    name: "Legacy:UMOD"
  - ns: 14
    exists: true
    name: "Category:Legacy Link Me"
  - ns: 100
    exists: true
    name: "Legacy:RegularX/Rants"
  - ns: 100
    exists: true
    name: "Legacy:Umod Wizard"
  templates: []
  images: []
  externallinks:
  - "http://www.jrsoftware.org/isinfo.php"
  - "http://nsis.sourceforge.net/"
  sections:
  - toclevel: 1
    level: "2"
    line: "Pre-release"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 362
    anchor: "Pre-release"
  - toclevel: 1
    level: "2"
    line: "Project States"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 952
    anchor: "Project_States"
  - toclevel: 1
    level: "2"
    line: "User-friendliness"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 2306
    anchor: "User-friendliness"
  - toclevel: 1
    level: "2"
    line: "Distribution format"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 4380
    anchor: "Distribution_format"
  - toclevel: 2
    level: "3"
    line: "Compressed archive"
    number: "4.1"
    index: "5"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 4915
    anchor: "Compressed_archive"
  - toclevel: 2
    level: "3"
    line: "Installer"
    number: "4.2"
    index: "6"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 5478
    anchor: "Installer"
  - toclevel: 2
    level: "3"
    line: "UMod"
    number: "4.3"
    index: "7"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 6313
    anchor: "UMod"
  - toclevel: 1
    level: "2"
    line: "Release CheckList"
    number: "5"
    index: "8"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 7014
    anchor: "Release_CheckList"
  - toclevel: 1
    level: "2"
    line: "Page under construction"
    number: "6"
    index: "9"
    fromtitle: "Legacy:Releasing_A_Mod"
    byteoffset: 11591
    anchor: "Page_under_construction"
  displaytitle: "Legacy:Releasing A Mod"
  iwlinks: []
  wikitext:
    text: "After [[Legacy:Making Mods|Making Mods]], comes releasing your work to\
      \ the public. But are you sure you're ready? Too many projects suffer because\
      \ the final product is lacking fairly basic touches. Here's what experienced\
      \ mod-makers from the Unreal Wiki think you should watch for, in particular\
      \ [[Legacy:Mychaeel|Mychaeel]] and [[Legacy:RegularX|RegularX]]...\n\n==Pre-release==\n\
      \nChances are you've told people what you're working on. It's hard to keep it\
      \ under wraps, and besides, part of a good publicity campaign is getting people's\
      \ interest in anticipation of the product. But what should you tell them?\n\n\
      * good screenshots. \n* Give only enough information to describe roughly what\
      \ the mod does, then fill in anything else as required by the questions asked.\
      \ \n* It can be fun to only hint at some features, encouraging people to keep\
      \ checking back for more info, and then eventually to download the mod to see\
      \ what the hell you were talking about.\n\n==Project States==\n\nThese terms\
      \ are often misused or misunderstood &ndash; due largely to the fact that even\
      \ professional developers have differing definitions of them sometimes.\n\n\
      ; Alpha : Non-feature complete, for internal testing only. The term \"Alpha\"\
      \ is usually applied to the first build (and subsequent builds prior to Beta)\
      \ that has the game's core functionality working &ndash; if not perfectly, at\
      \ least recognizably.\n; Beta : Feature complete. The transition from Alpha\
      \ to Beta is reached when the project is developed to the point where it closely\
      \ resembles the upcoming Gold version. Developers often use the terms \"Private\"\
      \ and \"Public\" Beta to describe the state of the project. Private Betas remain\
      \ in-house, while Public Betas are often made available to select members of\
      \ a community to assist in bug-hunting and game balancing feedback. In (increasing\
      \ common) circumstances, projects are put up for general download in a Public\
      \ Beta state &ndash; these are often referred to (incorrectly) as Demos.\n;\
      \ Gold : The final version, ready for duplication, of a project.\n; Demo : A\
      \ stripped version of a project, to give an interested party a taste of what\
      \ the full version has to offer. Four levels of an FPS or one town of an RPG\
      \ might constitute a Demo. There is no functional difference between the Demo\
      \ version and the retail version. \n\n==User-friendliness==\n\nRemember that\
      \ hardly anyone reads readmes, so everything should be as simple and intuitive\
      \ as possible, otherwise you will end up answering a thousand e-mails with \"\
      it explains feature x in the readme\". \n\nUse standard controls where possible\
      \ and don't add any more new keybinds than are absolutely necessary.\n\n'''Ian\
      \ Pilipski:'''  Try not to install your files to the same directories as the\
      \ original game.  Keep your files in a sub-directory.  This will make it easier\
      \ for the end-user to remove or identify which files are part of your mod. \
      \ You can do this in UT2003 by providing your own <modname>.ini file (preferred\
      \ and only method you should use as HSDanClark points out below).  Just add\
      \ your mod paths to the [Core.System] heading.  The example below could be for\
      \ a mod named \"RaceMod\".\n\n<uscript>\n[Core.System]\nPaths=..\\RaceMod\\\
      System\\*.u\nPaths=..\\RaceMod\\Textures\\*.utx\nPaths=..\\RaceMod\\Sounds\\\
      *.uax\nPaths=..\\RaceMod\\......(you get the point)\n</uscript>\n\n'''HSDanClark:'''\
      \ Never, ever, ever, write your own UT2003.ini file and distribute it with a\
      \ mod. The last thing you need is for something to go wrong and the user is\
      \ now left with an unplayable game. The best method is to write an ini file\
      \ for your game such as <tt>MyGame.ini</tt>, then use a custom shortcut to launch\
      \ UT2003 with that file in the command line &ndash; e.g. '''Shortcut to MyGame''',\
      \ with '''-ini=MyGame.ini''' in the command line. There's a Wiki page explaining\
      \ that, and as soon as I find it I'll reference it here.\n\n'''GRAF1K:''' [[:Category:Legacy\
      \ Link Me]]\n\n'''Tarquin:''' Is it [[Legacy:Game Ini File|Game Ini File]] you\
      \ want?\n\n'''HSDanClark:''' Not exactly... perhaps it wasn't a Wiki page where\
      \ I found the info; I can't seem to find a relevant page that describes what\
      \ I was talking about. I found a page a while back that explained how to use\
      \ custom <Game>.ini, <Game>User.ini and USERLOGO=MyLogo.gif (among others) to\
      \ change how the game starts up. I'll poke around on the net and see if I can\
      \ find it again. If I can't, I'll write up a Wiki page for it.\n\n==Distribution\
      \ format==\n\nThere are a few ways to distribute your mod:\n* Plain compressed\
      \ archive\n* Installer\n* UMod\n\nServer Administrators prefer plain compressed\
      \ archives, because often they don't have a graphical interface or installed\
      \ copy of the game. Also archives are easier to be reviewed for it's contents.\n\
      \nNormal users/players prefer to use installers/umods so they can uninstall\
      \ the game in the future.\n\nSo always release both a plain archive and an install/umod\
      \ of your mod ('''zip''' and '''umod''' are the best choise).\n\n===Compressed\
      \ archive===\n\nThis is the easiest method. However, don't use exotic archive\
      \ formats, stick with the normal ZIP format. Ofcourse RAR or 7z will produce\
      \ smaller archives, but they are less common. With ZIP you know for sure that\
      \ pretty much every user can extract them without needing to search for a tool\
      \ to extract it.\n\nYou could create a self extracting volume (a.k.a SFX), but\
      \ this is maybe the worst method. Because it's pretty much the same as a normal\
      \ installer, except that it doesn't have an uninstall method. In other words,\
      \ no SFX archives.\n\n===Installer===\n\nInstallers are nice, you can guide\
      \ people through the whole install and make sure everything is done correctly\
      \ and they will be able to uninstall the mod in the future. However, installers\
      \ are pretty much always system depended. This isn't very usefull for people\
      \ on other Operating Systems.\n\nIf an installer isn't set up correctly, it\
      \ might leave behind files during uninstall. So test your installer on a clean\
      \ installation of the game to make sure it doesn't leave behind any files when\
      \ it's uninstalled. (Making sure the uninstaller doesn't uninstall ''too many''\
      \ files doesn't need to be mentioned, I guess.)\n\nThere are quite some free\
      \ installer generators available. Here's a short list of ''free'' installer\
      \ generators:\n* [http://www.jrsoftware.org/isinfo.php Inno Setup]\n* [http://nsis.sourceforge.net/\
      \ NSIS]\n\n===UMod===\n\nNot the easiest thing to create, but [[Legacy:Umod\
      \ Wizard|Umod Wizard]] can make it much easier.\n\n[[Legacy:UMOD|UMods]] are\
      \ the best choice for an installer, it can be installed for every operating\
      \ system and it can also be uninstalled (via the game's uninstaller/setup).\n\
      \nHowever, often users managed to screw up their game install. You might want\
      \ to include directions on your download page how they could fix it (Or link\
      \ to this page: [[Legacy:UMOD/Problems|UMOD/Problems]])\n\nBecause UMods are\
      \ not compressed they might become quite large. It's ok to simply zip the UMod\
      \ and release that. It's best to hint the umod in the filename of the zip file:\
      \ <code>MyMod-version-umoz.zip</code>\n\n==Release CheckList==\n\n(this is a\
      \ rough draft, and I'm certainly no saint when it comes to releasing files...\
      \ rgx )\n\nWhen you have adequetely tested your mod, map or mutator and decide\
      \ it's high time for the mass public to see it, there's a few steps you can\
      \ try to insure not annoying people or having to issue out a patch:\n\n# Before\
      \ getting to this point, maintain a file list of all the assets your project\
      \ would be installing.  It's easy to forget that one texture file (in fact,\
      \ and I've done this, texture files seem to be the first things coder-types\
      \ seem to forget) that you haven't updated in the last few weeks/months/etc.\n\
      \n# Write your README and INSTALL docs.  For UT2003, they're usually the same\
      \ text file.  ASCII is the most common and readable across platforms, but making\
      \ an HTML version can look somewhat snazzy and is almost as cross-platform.\
      \  README's are something of ironic device - they're absolutely essential, but\
      \ most people won't read them.  Regardless, you should include (at least) author\
      \ information, project overview and description, installation instructions (usually\
      \ for both the UMOD and ZIP version), any known bugs, and then also any thanks\
      \ or footnotes.  Adding in the filelist isn't necessary, but not always a bad\
      \ idea.  Links to websites, email addresses or other places to hunt down more\
      \ info is also pretty common.\n\n# Make a foldered zip file.  Easiest method\
      \ I have found to do this is to create a brand new folder named something like\
      \ \"mymodzip\".  Consider that folder the new root of your soon to be archive.\
      \  In there, make copies of the directories within the UT2003 folder containing\
      \ only the files for your mod.  So, make a System folder into the mymodzip and\
      \ copy, for instance, the .u and .int files in there.  Or for a map, you would\
      \ make a Maps, Textures, and maybe Sounds for instance.  You can then use your\
      \ archive tool (like WinZip) to just archive the whole mymodzip folder.  When\
      \ someone extracts it to their UT2003 folder, all the subfolders should match\
      \ up.  Put your README in there as well of course (I usually put into the system\
      \ folder named PROJECT-README.txt or the like ... just naming it \"README\"\
      \ can get it overwritten).\n\n# Do a clean box test.  Find someone who either\
      \ has never installed your project or can insure they can wipe out all old files.\
      \  This is also where your file list will come in handy.   Here's a tricky part\
      \ though: make sure to check with your team and double check that the list includes\
      \ any dependencies.  For example - I released the XPakI.  A few weeks later,\
      \ I released the XPakII and found that some people could install and run it\
      \ fine, and others couldn't.  The problem?  I had left some references into\
      \ XPakII about the first one, meaning only people who had XPakI installed could\
      \ play it.  If your project includes any dependencies to things outside of your\
      \ project (for instance, the Epic Bonus Pack) - this has to be plastered all\
      \ over your download page, README file, etc.\n\n# Make the umod file.  Check\
      \ the  [[Legacy:Umod Wizard|Umod Wizard]] page for more.  Now, at this point\
      \ I've made it sound like both the ZIP and UMOD versions are necessary.  This\
      \ is what I would consider best practice for nearly any project - but each team\
      \ should examine both versions and make up their own mind.  Some teams even\
      \ use other archive and self-install programs.  Here's the deal: ZIP files are\
      \ great for people who either are installing onto a machine that doesn't actually\
      \ have a full UT2003 (like a server) or people who are tired of fighting with\
      \ Windows when it comes to the umod extension.  UMOD files are great for people\
      \ who don't have any problems with the installer and like the double-click ease\
      \ and uninstall options of it.  \n\n# Clean box test the umod file.\n\n# OK,\
      \ now you have your archives with their README files.  If you want to be cautious,\
      \ put it up on an FTP somewhere and have a few other people try it out.  Not\
      \ everyone has access to servers though, so FilePlanet, FileShack or the like\
      \ might be your thing.  You might want to shoot emails around to places like\
      \ BeyondUnreal and PlanetUnreal to get the word out.\n\n# Post release, try\
      \ to track feedback carefully.  I can't speak much about maps - but for mutators\
      \ and mods, I can say that it's not uncommon for a still unforseen problem to\
      \ arise.  Hopefully you've done enough testing that it's a limited problem,\
      \ or perhaps is some bizarro combination of mutators that causing it or something.\n\
      \n# If you are of legal age in the country you reside and fall to this particular\
      \ habit, it's common to have a beer.\n\n==Page under construction==\n\n'''Tarquin:'''\
      \ I've made this page because we have several pages on the wiki with personal\
      \ advice on this topic. I would like to produce something general. Remember\
      \ to use Document Mode rather than Thread Mode please!\n\n'''RegularX:''' Should\
      \ we add links to [[Legacy:Umod Wizard|Umod Wizard]]?  Maybe some tips on how\
      \ to generate a zip with the correct folders in it?  Maybe of a checklist of\
      \ things to step through before a release?\n\n'''Chip:''' I for one would value\
      \ this highly, RegularX, as there seems to be no real \"standard\" for (or even\
      \ consensus on) the most acceptable distribution method, so specific recommendations\
      \ from those with experience would be helpful.\n\n'''RegularX:''' Once I get\
      \ block of time I'll try to toss a rough down.\n\nIt would be nice if the following\
      \ ranters could donate some of their thoughts to this page:\n* [[Legacy:Mychaeel/Modding\
      \ Etiquette|Mychaeel/Modding Etiquette]]\n* [[Legacy:RegularX/Rants|RegularX/Rants]]\n\
      * [[Legacy:Piglet/Finishing Things|Piglet/Finishing Things]]\n[[Category:Legacy\
      \ Link Me|{{PAGENAME}}]]"
  properties: []
  revId: 6287
name: "Legacy:Releasing A Mod"
revision:
  revid: 6287
  parentid: 6288
  user: "Strider"
  timestamp: 1105457139.000000000
  comment: "*"
timestamp: 1668763149.518668000
