---
parse:
  title: "Legacy:VisualUC"
  text:
    text: "<p>VisualUC++ is an <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\"\
      >UnrealScript</a> <a href=\"/Legacy:IDE\" title=\"Legacy:IDE\">IDE</a> made\
      \ by the creater of CSHP, DrSiN. This program is for Unreal Tournament only.\
      \ It does not work with UT2003.</p>\n<p>A brief list of its features:</p>\n\
      <p>Fully customisable syntax higlighting for:</p>\n<ul>\n<li><a href=\"/Legacy:UnrealScript\"\
      \ title=\"Legacy:UnrealScript\">UnrealScript</a></li>\n<li>C++</li>\n<li><a\
      \ href=\"/Legacy:INI_File\" title=\"Legacy:INI File\">INI files</a></li>\n<li><a\
      \ href=\"/Legacy:INT_File\" title=\"Legacy:INT File\">INT files</a></li>\n<li>LOG\
      \ files</li>\n</ul>\n<p>You can completely configure the syntax higlighting\
      \ to your needs.</p>\n<dl>\n<dt>Header templates for new files&#160;</dt>\n\
      <dd>This feature automaticly adds a fully configurable template to your newly\
      \ created <a href=\"/Legacy:UC_File\" title=\"Legacy:UC File\" class=\"mw-redirect\"\
      >UC files</a></dd>\n<dt>Auto correction&#160;</dt>\n<dd></dd>\n<dt>Code templates&#160;</dt>\n\
      <dd>If you need to type the same piece of code a lot of times, normally you\
      \ would have to copy/paste it. In Visual UC++ you can write your own code templates.\
      \ Once you've made one you can always include it in your code by pressing one\
      \ key combination and selecting it from the list that will appear.</dd>\n<dt>Completely\
      \ configurable&#160;</dt>\n<dd>Visual UC++ is a completely configurable editor.</dd>\n\
      <dt>Project Managment&#160;</dt>\n<dd>You can manage the content of your packages\
      \ directory from within Visual UC++; Order your source code in virtual folders;\
      \ View the textures in your Packages' texture directories; Listen to sounds,\
      \ and much more.</dd>\n<dt>Communication between VUC++ and VC++&#160;</dt>\n\
      <dd>Visual UC++, can handle C(++) and header files itself pretty well, but if\
      \ you own Visual C++ you can make VUC++ open the C(++) files in Visual C++ for\
      \ you. You can even make VUC++ add them to your workspace.</dd>\n<dt>Import\
      \ textures and audio files&#160;</dt>\n<dd>Typing all those #exec's lines can\
      \ be boring as hell so let VUC++ make them for you! Easy to use wizards make\
      \ you import your textures/audio files in a matter of seconds.</dd>\n<dt>Compiling\
      \ and testing your code&#160;</dt>\n<dd>No more batch files, no more command\
      \ line arguments! Visual UC++ compiles the code for you. And if something goes\
      \ wrong VUC++ automaticly jumps to the line where the error/warning occured.\
      \ You can specify the arguments you want to send to your Unreal engine based\
      \ game for testing.</dd>\n<dt>Post/Pre compile scripts&#160;</dt>\n<dd>After\
      \ or before you compile your code, you can let VUC++ execute simple scripts,\
      \ for example to back up your UC files</dd>\n<dt>Class browser&#160;</dt>\n\
      <dd>Just like in <a href=\"/Legacy:UnrealEd\" title=\"Legacy:UnrealEd\" class=\"\
      mw-redirect\">UnrealEd</a> you can check the complete hierarchy of all classes\
      \ in VUC++. You can search it for a specific class. You can also view the classes\
      \ for each package. This makes it easier for you to find classes.</dd>\n<dt><a\
      \ href=\"/Legacy:Default_Properties\" title=\"Legacy:Default Properties\">Default\
      \ Properties</a>&#160;</dt>\n<dd>Just like in exported UC files you can view\
      \ the default properties in the source code itself. VUC++ also offers you the\
      \ option to view/edit the default properties in an 'UnrealEd style' window</dd>\n\
      </dl>\n<p>You can download the latest version from:</p>\n<dl>\n<dd><a rel=\"\
      nofollow\" class=\"external free\" href=\"http://www.midnightinteractive.com/VUC\"\
      >http://www.midnightinteractive.com/VUC</a> (link currently broken)</dd>\n<dd><a\
      \ rel=\"nofollow\" class=\"external free\" href=\"http://www.unrealscript.ru/utils/utils.html\"\
      >http://www.unrealscript.ru/utils/utils.html</a> (It's Russian, but the important\
      \ stuff is in English.)</dd>\n</dl>\n<p>Visual UC++ is an open source <a href=\"\
      /Legacy:Application\" title=\"Legacy:Application\">application</a>, the source\
      \ can be found on the forums of VUC</p>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.018 seconds\nReal time usage: 0.019 seconds\nPreprocessor visited\
      \ node count: 2/1000000\nPreprocessor generated node count: 12/1000000\nPost‐\
      expand include size: 8/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3582-0!*!0!*!*!*!*\
      \ and timestamp 20221117151125 and revision id 9165\n -->\n"
  categories:
  - sortkey: "VisualUC"
    name: "Legacy_Application"
  links:
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  - ns: 100
    exists: true
    name: "Legacy:Application"
  - ns: 100
    exists: true
    name: "Legacy:INT File"
  - ns: 100
    exists: true
    name: "Legacy:UC File"
  - ns: 100
    exists: true
    name: "Legacy:IDE"
  - ns: 100
    exists: true
    name: "Legacy:Default Properties"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:INI File"
  templates: []
  images: []
  externallinks:
  - "http://www.unrealscript.ru/utils/utils.html"
  - "http://www.midnightinteractive.com/VUC"
  sections: []
  displaytitle: "Legacy:VisualUC"
  iwlinks: []
  wikitext:
    text: "VisualUC++ is an [[Legacy:UnrealScript|UnrealScript]] [[Legacy:IDE|IDE]]\
      \ made by the creater of CSHP, DrSiN.  This program is for Unreal Tournament\
      \ only. It does not work with UT2003.\n\nA brief list of its features:\n\nFully\
      \ customisable syntax higlighting for: \n* [[Legacy:UnrealScript|UnrealScript]]\n\
      * C++\n* [[Legacy:INI File|INI file]]s\n* [[Legacy:INT File|INT file]]s\n* LOG\
      \ files\n\nYou can completely configure the syntax higlighting to your needs.\
      \ \n\n; Header templates for new files : This feature automaticly adds a fully\
      \ configurable template to your newly created [[Legacy:UC File|UC file]]s\n\
      ; Auto correction : \n; Code templates : If you need to type the same piece\
      \ of code a lot of times, normally you would have to copy/paste it. In Visual\
      \ UC++ you can write your own code templates. Once you've made one you can always\
      \ include it in your code by pressing one key combination and selecting it from\
      \ the list that will appear.\n; Completely configurable : Visual UC++ is a completely\
      \ configurable editor.\n; Project Managment : You can manage the content of\
      \ your packages directory from within Visual UC++; Order your source code in\
      \ virtual folders; View the textures in your Packages' texture directories;\
      \ Listen to sounds, and much more.\n; Communication between VUC++ and VC++ :\
      \ Visual UC++, can handle C(++) and header files itself pretty well, but if\
      \ you own Visual C++ you can make VUC++ open the C(++) files in Visual C++ for\
      \ you. You can even make VUC++ add them to your workspace.\n; Import textures\
      \ and audio files : Typing all those #exec's lines can be boring as hell so\
      \ let VUC++ make them for you! Easy to use wizards make you import your textures/audio\
      \ files in a matter of seconds.\n; Compiling and testing your code : No more\
      \ batch files, no more command line arguments! Visual UC++ compiles the code\
      \ for you. And if something goes wrong VUC++ automaticly jumps to the line where\
      \ the error/warning occured. You can specify the arguments you want to send\
      \ to your Unreal engine based game for testing. \n; Post/Pre compile scripts\
      \ : After or before you compile your code, you can let VUC++ execute simple\
      \ scripts, for example to back up your UC files\n; Class browser : Just like\
      \ in [[Legacy:UnrealEd|UnrealEd]] you can check the complete hierarchy of all\
      \ classes in VUC++. You can search it for a specific class. You can also view\
      \ the classes for each package. This makes it easier for you to find classes.\n\
      ; [[Legacy:Default Properties|Default Properties]] : Just like in exported UC\
      \ files you can view the default properties in the source code itself. VUC++\
      \ also offers you the option to view/edit the default properties in an 'UnrealEd\
      \ style' window\n\nYou can download the latest version from:\n\n: http://www.midnightinteractive.com/VUC\
      \  (link currently broken)\n: http://www.unrealscript.ru/utils/utils.html  (It's\
      \ Russian, but the important stuff is in English.)\n\nVisual UC++ is an open\
      \ source [[Legacy:Application|application]], the source can be found on the\
      \ forums of VUC\n\n[[Category:Legacy Application|{{PAGENAME}}]]"
  properties: []
  revId: 9165
name: "Legacy:VisualUC"
revision:
  revid: 9165
  parentid: 9166
  user: "Wormbo"
  timestamp: 1067034775.000000000
  comment: "links and [[Category Application]]"
timestamp: 1668772608.952879000
