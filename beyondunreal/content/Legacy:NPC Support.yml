---
parse:
  title: "Legacy:NPC Support"
  text:
    text: "<p>This page is a hub for support of <b>Non-Player Characters (NPCs)</b>:\
      \ any artificially intelligent agent or character that is <u>not</u> meant to\
      \ act as a player. NPCs can be ambient creatures, various animals, character\
      \ \"extras\", neutral individuals, helpful characters, etc. NPCs use a custom\
      \ AI construct that will serve their unique goals and tasks, whether that be\
      \ self-preservation, conversation, navigation, etc.</p>\n<p>Monsters can be\
      \ easily considered a specific variety of NPC whose sole purpose is to hunt\
      \ down and attack players. See <a href=\"/Legacy:Monster_Support\" title=\"\
      Legacy:Monster Support\">Monster Support</a>. This page, however, will focus\
      \ on custom non-monster NPCs.</p>\n<p>The NPC is created to support the game\
      \ world, to enrich it and either give the player a stronger sense of realism\
      \ within it or to support the player in their game objectives. For this reason,\
      \ each NPC class is a product of the game world it lives in; a unique entity\
      \ whose purpose is directly tied to that world.</p>\n<p></p>\n<div id=\"toc\"\
      \ class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li\
      \ class=\"toclevel-1 tocsection-1\"><a href=\"#Design\"><span class=\"tocnumber\"\
      >1</span> <span class=\"toctext\">Design</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-2\"><a href=\"#Purpose\"><span class=\"tocnumber\">1.1</span> <span\
      \ class=\"toctext\">Purpose</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-3\"\
      ><a href=\"#Immersion\"><span class=\"tocnumber\">1.1.1</span> <span class=\"\
      toctext\">Immersion</span></a></li>\n<li class=\"toclevel-3 tocsection-4\"><a\
      \ href=\"#Information\"><span class=\"tocnumber\">1.1.2</span> <span class=\"\
      toctext\">Information</span></a></li>\n<li class=\"toclevel-3 tocsection-5\"\
      ><a href=\"#Inventory\"><span class=\"tocnumber\">1.1.3</span> <span class=\"\
      toctext\">Inventory</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2 tocsection-6\"\
      ><a href=\"#Behavior\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\"\
      >Behavior</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-7\"><a href=\"\
      #Self-Preservation\"><span class=\"tocnumber\">1.2.1</span> <span class=\"toctext\"\
      >Self-Preservation</span></a></li>\n<li class=\"toclevel-3 tocsection-8\"><a\
      \ href=\"#Navigation\"><span class=\"tocnumber\">1.2.2</span> <span class=\"\
      toctext\">Navigation</span></a></li>\n<li class=\"toclevel-3 tocsection-9\"\
      ><a href=\"#Conversation\"><span class=\"tocnumber\">1.2.3</span> <span class=\"\
      toctext\">Conversation</span></a></li>\n<li class=\"toclevel-3 tocsection-10\"\
      ><a href=\"#Special_Behavior\"><span class=\"tocnumber\">1.2.4</span> <span\
      \ class=\"toctext\">Special Behavior</span></a></li>\n</ul>\n</li>\n<li class=\"\
      toclevel-2 tocsection-11\"><a href=\"#Appearance\"><span class=\"tocnumber\"\
      >1.3</span> <span class=\"toctext\">Appearance</span></a></li>\n<li class=\"\
      toclevel-2 tocsection-12\"><a href=\"#Movement_and_Sound\"><span class=\"tocnumber\"\
      >1.4</span> <span class=\"toctext\">Movement and Sound</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-13\"><a href=\"#Effects.2C_Props_and_Vehicles\"\
      ><span class=\"tocnumber\">1.5</span> <span class=\"toctext\">Effects, Props\
      \ and Vehicles</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-14\"\
      ><a href=\"#Construction\"><span class=\"tocnumber\">2</span> <span class=\"\
      toctext\">Construction</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-15\"\
      ><a href=\"#Modeling\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\"\
      >Modeling</span></a></li>\n<li class=\"toclevel-2 tocsection-16\"><a href=\"\
      #Rigging\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">Rigging</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-17\"><a href=\"#Animating\"><span class=\"\
      tocnumber\">2.3</span> <span class=\"toctext\">Animating</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-18\"><a href=\"#Coding\"><span class=\"tocnumber\"\
      >2.4</span> <span class=\"toctext\">Coding</span></a>\n<ul>\n<li class=\"toclevel-3\
      \ tocsection-19\"><a href=\"#Controllers\"><span class=\"tocnumber\">2.4.1</span>\
      \ <span class=\"toctext\">Controllers</span></a></li>\n</ul>\n</li>\n</ul>\n\
      </li>\n<li class=\"toclevel-1 tocsection-20\"><a href=\"#Testing_and_Integration\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Testing and Integration</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-21\"><a href=\"#Tutorials\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Tutorials</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-22\"><a href=\"#Examples\"><span class=\"tocnumber\"\
      >5</span> <span class=\"toctext\">Examples</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-23\"><a href=\"#Related_Topics\"><span class=\"tocnumber\">6</span>\
      \ <span class=\"toctext\">Related Topics</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-24\"><a href=\"#Custom_Content\"><span class=\"tocnumber\">6.1</span>\
      \ <span class=\"toctext\">Custom Content</span></a></li>\n</ul>\n</li>\n<li\
      \ class=\"toclevel-1 tocsection-25\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">7</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Design\">Design</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NPC_Support?section=1\" title=\"Edit section: Design\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span\
      \ class=\"mw-headline\" id=\"Purpose\">Purpose</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=2\"\
      \ title=\"Edit section: Purpose\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The NPC must have a reason to exist in the game. They\
      \ may provide the players with information, inventory or immersion in the game.\
      \ The purpose is normally dictated by the <a href=\"/Legacy:Gameplay\" title=\"\
      Legacy:Gameplay\">gameplay</a> itself; the goals of the game, the theme, the\
      \ rules, etc. Keep in mind those elements and concepts of gameplay, such as\
      \ Balance and Chance, as you design the NPC.</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"Immersion\">Immersion</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=3\"\
      \ title=\"Edit section: Immersion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>This purpose is simply to support the believability\
      \ of the game world by existing within it. The NPC \"lives\" in this world and\
      \ therefore adds to the illusion that this game world is a real one that the\
      \ player live in as well. Ambient creatures and other animals can serve this\
      \ purpose well as they will follow their own rules within this world and largely\
      \ ignore the goals of the player, but still give the player plenty of opportunity\
      \ for interaction. But, another common example is citizen NPCs that live out\
      \ their own lives, but do not interact with the players in a way that impact\
      \ their gameplay.</p>\n<h4><span class=\"mw-headline\" id=\"Information\">Information</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NPC_Support?section=4\" title=\"Edit section: Information\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>Here\
      \ the NPC's reason to exist is loosely tied to the goals of the player. Through\
      \ some combonation of conditions, the player may recieve information from this\
      \ NPC that will impact their gameplay. Some common examples of this are the\
      \ \"guide\" characters that provide the novice player with the most basic instructions\
      \ for this particular game (where to buy food or weapons in town, who can heal\
      \ you, how to save your progress), or the character who will give you critical\
      \ information to allow progress in the game (after paying them a bribe, they\
      \ tell you where to find the entrance to the dungeon).</p>\n<h4><span class=\"\
      mw-headline\" id=\"Inventory\">Inventory</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=5\"\
      \ title=\"Edit section: Inventory\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>This purpose is directly tied to the player's gameplay,\
      \ where the NPC is to give the player a key piece of inventory, which gives\
      \ them extra ability. A very common example of this might be the storekeeper\
      \ who sells you weapons for a price. Another example could be the \"sage\" character,\
      \ who can give you a special item that can protect you during the next stage\
      \ of the game or a key that unlocks the next series of tasks to perform.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Behavior\">Behavior</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=6\"\
      \ title=\"Edit section: Behavior\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The NPC behavior will be designed to serve it's unique\
      \ purpose. Their behavior may be simple, as in the actions of a song bird, or\
      \ complex, as in a mentor who directs the player's progress from beginner through\
      \ mastery. Designing the behavior for your NPC can be difficult, as all possible\
      \ conditions and posibilities should be considered and factored into the design.\
      \ Common ways to keep it simple include limiting the behavior to it's essential\
      \ purpose and limiting the conditions the NPC will have to face. For example,\
      \ a barkeep who tells local gossip for a price might be a great NPC to give\
      \ your players information about their game world, but designing a behavior\
      \ that would be able to believably answer any question the player might ask\
      \ is virutally impossible. The barkeep's behavior can be limited to just talking\
      \ about the most probable questions it will be asked. The conditions that the\
      \ barkeep will engage in conversation can be limited as well by telling the\
      \ player, \"I'm busy right now, come back later.\", or, \"Hey, I'm just a simple\
      \ barkeep, I don't know everything.\"</p>\n<h4><span class=\"mw-headline\" id=\"\
      Self-Preservation\">Self-Preservation</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=7\"\
      \ title=\"Edit section: Self-Preservation\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>The most basic NPC behavior to consider is self-preservation.\
      \ Animals, characters, and just about every other living thing is capable of\
      \ this behavior. A defense mechanism such as stealth, evasion, or protection\
      \ should be considered first. Is this the type of creature to run if startled\
      \ or will it roll up into a ball and show spikes on it's back for defense? Offensive\
      \ behavior is common, most creatures have some means of attacking in self-defense,\
      \ even herbavores. Does this character throw a punch if backed into a corner?</p>\n\
      <h4><span class=\"mw-headline\" id=\"Navigation\">Navigation</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=8\"\
      \ title=\"Edit section: Navigation\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>The Unreal engine already has a well-designed method\
      \ of allowing AI agents to navigate: the bot path network. (See also <a href=\"\
      /Legacy:Bot_Pathing\" title=\"Legacy:Bot Pathing\">Bot Pathing</a>) However,\
      \ because the bot path network is designed for bot players, many NPCs will have\
      \ a purpose that dictates they use another way to navigate; away from the combat\
      \ or one that allows movement to any space, not just spaces defined by the mapper.\
      \ While it is possible to design a new method of intelligent navigation; one\
      \ that doesn't use the bot path network, it will most likely be much more work\
      \ than the rest of the behavior. It's recommended that navigation behavior be\
      \ simplified, using any existing methods (such as the bot path network or some\
      \ simple variation) as much as possible.</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"Conversation\">Conversation</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=9\"\
      \ title=\"Edit section: Conversation\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>As mentioned above, this can be an incredibly complex\
      \ behavior to design, if all possible situations and conditions are accounted\
      \ for. The design should be complex enough to carry the illusion of intelligent\
      \ speech with the NPC, but simple enough that the designer isn't wasting effort\
      \ on situations or conditions that are rarely met or will not yield a relevant\
      \ result. For example, you'll want a damsel in distress to yell, \"Help!\",\
      \ at the appropriate time, as the train approaches, and to say, \"My hero!\"\
      , once saved by the player, but you'd want to avoid designing her behavior to\
      \ account for her her response to an obscure question like, \"What kind of music\
      \ do you like?\". Again, by limiting the NPC's behavior and at the same time\
      \ limiting the conditions the NPC will have to face, you avoid having to design\
      \ too much. Once the damsel is saved, she may insist that she run home, which\
      \ conveniently avoids any further conversation.</p>\n<h4><span class=\"mw-headline\"\
      \ id=\"Special_Behavior\">Special Behavior</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=10\"\
      \ title=\"Edit section: Special Behavior\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>This is a unique task this NPC performs. It will most\
      \ likely be tied directly to the story of the game and the main purpose for\
      \ this NPC to exist. Perhaps this NPC character is the catburglar that the player\
      \ is supposed to track down, so their unique behavior is to sneak around at\
      \ night, steal stuff and leave clues. Maybe this NPC critter is a pack rat that\
      \ steals a key item from the player at a critical point in the game. The special\
      \ behavior is less likely to be as simplified as the other major (more common)\
      \ behaviors, and that's to be expected. The designer may spend the most time\
      \ developing this behavior.</p>\n<h3><span class=\"mw-headline\" id=\"Appearance\"\
      >Appearance</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:NPC_Support?section=11\" title=\"Edit section:\
      \ Appearance\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>This is the visual design of the NPC. It should be in line with the overall\
      \ visual design of the game, the player characters and the other NPCs. It's\
      \ best to have the tone of the visual design suggest the NPCs purpose and behavior.\
      \ For example, a simple forest creature's visual design might be basic, with\
      \ no extra-ordinary consideration, while a unique NPC, critical to the advancement\
      \ of the game, such as the hostage character the player is to escort through\
      \ enemy territory, should appear obviously unarmed or hurt, have distinctive\
      \ facial features or clothing and should generally stand out from the look of\
      \ other NPCs, player characters and enemies.</p>\n<h3><span class=\"mw-headline\"\
      \ id=\"Movement_and_Sound\">Movement and Sound</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=12\"\
      \ title=\"Edit section: Movement and Sound\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The movement and sound design is the acting of the\
      \ NPC. Will it act like a real animal? Does this NPC character call attention\
      \ to himself by having an odd voice or moving in a unique way or do they blend\
      \ into the crowd? Is this NPC subtle, like the bluffing gambler in the saloon,\
      \ or over the top, like the cartoonish side-kick robot that gives you game hints\
      \ when the player is stuck. The movement and sound design will be closely tied\
      \ it's visual design and should likewise suggest both the NPC's purpose and\
      \ behavior.</p>\n<h3><span class=\"mw-headline\" id=\"Effects.2C_Props_and_Vehicles\"\
      >Effects, Props and Vehicles</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=13\"\
      \ title=\"Edit section: Effects, Props and Vehicles\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p>It is possible for an NPC\
      \ to have unique effects, props or vehicles in addition to their base design.\
      \ These are extra pieces to the design, parts that are separate from the NPC\
      \ itself. By in large, these elements will be spawned or emitted from the NPC\
      \ (effect), attached to the NPC (prop) or the NPC will be attached to the object\
      \ (vehicle). Any abilities that the NPC gains by these items would be dependent\
      \ on their availablity. A gunslinger might have a black hat that falls off once\
      \ the player has killed him. An ogre may carry an oversized club that he lays\
      \ down when he sleeps. A gnome may ride a cat or bird. A Egyptian god may drive\
      \ a charriot made of gold mist. While it's concievable that a player may also\
      \ use these props or vehicles, by making them unique to the NPC (either too\
      \ small, too large or otherwise unavailble to the player), the designer can\
      \ avoid the extra work of creating new player items that may also throw off\
      \ the game balance.</p>\n<h2><span class=\"mw-headline\" id=\"Construction\"\
      >Construction</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:NPC_Support?section=14\" title=\"Edit section:\
      \ Construction\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Once a design is formulated, it's time to begin to bring it to life. The\
      \ physical appearance is achieved through modeling, the acting is achieved through\
      \ animation and the behavior and special actions are achieved through coding.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Modeling\">Modeling</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=15\"\
      \ title=\"Edit section: Modeling\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Modeling is the process of creating a <a href=\"/Legacy:Mesh\"\
      \ title=\"Legacy:Mesh\">Mesh</a> or <a href=\"/Legacy:Skeletal_Mesh\" title=\"\
      Legacy:Skeletal Mesh\">Skeletal Mesh</a> for a character design. This will be\
      \ the visual representation of that character and the basis for its animations.\
      \ The model is made up of several triangle polygons (or Faces) that are oriented\
      \ in 3D space to make up the whole shape of the character. That polygon Mesh\
      \ also contains the information necessary to properly display one or more Skins\
      \ (or materials, textures) over the surface of the character model, which is\
      \ typically called UV mapping.</p>\n<p>There are several Third-Party Applications\
      \ that can handle creation of the polygon model and it's UV mapping, including\
      \ <a href=\"/Legacy:Maya\" title=\"Legacy:Maya\">Maya</a>PLE, a free Personal\
      \ Learning Edition of a professional 3D modeling and animation program, which\
      \ is included with Unreal Tournament 2003 and beyond.</p>\n<p>See also <a href=\"\
      /Legacy:Player_Modeling\" title=\"Legacy:Player Modeling\">Player Modeling</a>\
      \ and <a href=\"/Legacy:Unreal_Modeling_FAQ\" title=\"Legacy:Unreal Modeling\
      \ FAQ\">Unreal Modeling FAQ</a>.</p>\n<h3><span class=\"mw-headline\" id=\"\
      Rigging\">Rigging</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:NPC_Support?section=16\" title=\"Edit section:\
      \ Rigging\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Rigging is the process of setting up the polygonal model for animation. Depending\
      \ on the animation requirements of the character's design, each model will have\
      \ unique rigging requirements with varying levels of complexity. Generally,\
      \ a character model will be rigged using a Skeleton deformer (sometimes called,\
      \ Joints, Bones, etc.) to deform the polygon mesh as if it had an internal skeletal\
      \ structure with hinged connections. A Skeletal deformer allows basic character\
      \ model manipulation, such as bending of arms and legs, as well as complex manipulation,\
      \ such as a tail or spine. The individual joints (or bones) of the Skeleton\
      \ deformer can be connected to create an overal skeletal hierachy, with each\
      \ appendage (and sub-appendages) recieving inherited movement from it's parent\
      \ joint.</p>\n<p>Rigging models can also use other deformer tools such as Shape\
      \ deformers, Spline deformers, Lattice deformers, etc., depending on the tools\
      \ available in the Third-Party Application used. The common element in all these\
      \ deformer tools is that they will move the individual points that make up the\
      \ connecting polygonal faces, thereby changing the shape of the overall model.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Animating\">Animating</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=17\"\
      \ title=\"Edit section: Animating\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Animating is the process of manipulating the rigging\
      \ of the character model within a timeline to create a series of sequences that\
      \ represent various actions the character can make. Typically, the character\
      \ rigging (skeletal hierarchy or the like) will be positioned and \"keyed\"\
      \ at various points in the timeline, just like the keys of a <a href=\"/Legacy:Mover\"\
      \ title=\"Legacy:Mover\">Mover</a>. As the animator moves (or \"scrubs\") along\
      \ the timeline, the keyed animation will be played back and the model's rigging\
      \ will animate the character.</p>\n<p>Although the basic premise is the same,\
      \ depending on the Third-Party Application used, the process of keying positions\
      \ and saving animated sequences will differ slightly. The main idea is to make\
      \ sure that the character model moves appropriately in terms of timing, attitude\
      \ and acting for each animation sequence. Once animation is completed, these\
      \ series of sequences, that represent each possible action the character can\
      \ make, will be exported from the Third-Party Application to the Unreal Editor's\
      \ <a href=\"/Legacy:Animation_Browser\" title=\"Legacy:Animation Browser\">Animation\
      \ Browser</a>.</p>\n<p>See also <a href=\"/Legacy:Animation\" title=\"Legacy:Animation\"\
      >Animation</a>.</p>\n<h3><span class=\"mw-headline\" id=\"Coding\">Coding</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NPC_Support?section=18\" title=\"Edit section: Coding\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>Based\
      \ on the design of the character's behavior and the character's abilities, the\
      \ coding will entail a unique degree of complexity, in order to believably represent\
      \ the chatacter's Artificial Intelligence as well as it's movements, combat\
      \ abilities, special effects, etc. Once the character animations are available\
      \ to the Unreal Editor, various Object classes can be created to use those sequences\
      \ to display the character's existance and behavior. Typically, simple characters\
      \ can use one class, a <a href=\"/Legacy:Pawn\" title=\"Legacy:Pawn\">Pawn</a>\
      \ subclass, to represent that character. The Pawn classes are specifically designed\
      \ to represent characters in the Unreal gamespace, handling Movement, Damage,\
      \ Dying and other typical character functions as well as the inherited Animation,\
      \ Physics and Sound functions from <a href=\"/Legacy:Actor\" title=\"Legacy:Actor\"\
      >Actor</a>. More complex characters (like Player Characters) will require extra\
      \ Object classes to complete their behavior and potential actions, such as <a\
      \ href=\"/Legacy:Controller\" title=\"Legacy:Controller\">Controllers</a>, <a\
      \ href=\"/Legacy:Weapon\" title=\"Legacy:Weapon\">Weapons</a>, <a href=\"/Legacy:InventoryAttachment\"\
      \ title=\"Legacy:InventoryAttachment\">InventoryAttachments</a>, etc.</p>\n\
      <h4><span class=\"mw-headline\" id=\"Controllers\">Controllers</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=19\"\
      \ title=\"Edit section: Controllers\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>UT2003 introduced the use of Controllers in collaboration\
      \ with Pawns to represent all characters, including AI controlled entities,\
      \ whereas UT used <a href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\"\
      >ScriptedPawns</a> alone (or in conjunction with a <a href=\"/Legacy:ScriptedSequence\"\
      \ title=\"Legacy:ScriptedSequence\">ScriptedSequence</a> for special control\
      \ of individual characters per map). Controller classes are used to dictate\
      \ the actions of a Pawn and handle it's non-physical elements. While the Pawn\
      \ is the visual and physical representation of a character, the Controller is\
      \ the \"mind\" or \"soul\" of the character; both the decision making element\
      \ and the entity that persists if that character Pawn is killed and respawned.</p>\n\
      <p>See also <a href=\"/Legacy:Controller_Overview\" title=\"Legacy:Controller\
      \ Overview\">Controller Overview</a>.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Testing_and_Integration\">Testing and Integration</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=20\"\
      \ title=\"Edit section: Testing and Integration\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Once your NPC is available, begin to itegrate it into\
      \ the game world and among the other players and NPCs. Test it thoroughly to\
      \ ensure it will serve it's purpose adequately, behave properly under all possible\
      \ considitions and situations it might face, and will appear, move and sound\
      \ appropriate to it's purpose and behavior.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Tutorials\">Tutorials</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=21\"\
      \ title=\"Edit section: Tutorials\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Maya_PLE_Character_Model_Tutorial\"\
      \ title=\"Legacy:Maya PLE Character Model Tutorial\">Maya PLE Character Model\
      \ Tutorial</a> – A tutorial covering modeling, rigging, animation and import\
      \ of skeletal mesh characters.</li>\n<li><a href=\"/Legacy:Basic_AI_Scripting_Tutorial\"\
      \ title=\"Legacy:Basic AI Scripting Tutorial\">Basic AI Scripting Tutorial</a>\
      \ – A tutorial detailing the (re)creation of the NaliCow NPC for UT2004.</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Examples\">Examples</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NPC_Support?section=22\" title=\"Edit section: Examples\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li><a href=\"/Legacy:Nali\" title=\"Legacy:Nali\">Nali</a> and <a href=\"/Legacy:Cow\"\
      \ title=\"Legacy:Cow\">Cow</a> – Stock non-Monster NPCs for UT</li>\n<li><a\
      \ href=\"/Legacy:TankVictim\" title=\"Legacy:TankVictim\">TankVictim</a> – A\
      \ stock NPC for UT200x found in DM-Insidious</li>\n<li>The <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://wiki.beyondunreal.com/wiki/SuperApe#0.2.4\"\
      >ROOs</a> – Kangaroo Non-Player Characters for UT2004 mappers. And the <a rel=\"\
      nofollow\" class=\"external text\" href=\"http://unrealplayground.com/forums/showthread.php?t=36679\"\
      >ROOtator</a>&#160;: A mutator designed to populate any map with ROOs; also\
      \ includes the Australian RooLette and RooHunt minigames.</li>\n</ul>\n<h2><span\
      \ class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:NPC_Support?section=23\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Gameplay\" title=\"Legacy:Gameplay\"\
      >Gameplay</a> – Concepts and elements of satisfying game design.</li>\n<li><a\
      \ href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\">ScriptedPawn</a>\
      \ – The parent UT class for NPCs</li>\n<li><a href=\"/Legacy:XIntroPawn\" title=\"\
      Legacy:XIntroPawn\">xIntroPawn</a> – UT200x NPC Pawns used to act in intro scenes,\
      \ cut scenes, etc.</li>\n<li><a href=\"/Legacy:Artificial_Intelligence\" title=\"\
      Legacy:Artificial Intelligence\">Artificial Intelligence</a> – A super topic\
      \ for all AI (bots, monsters, etc.)\n<ul>\n<li><a href=\"/Legacy:Monster_Support\"\
      \ title=\"Legacy:Monster Support\">Monster Support</a> – A hub for monster support\n\
      <ul>\n<li><a href=\"/Legacy:An_AI_Concept\" title=\"Legacy:An AI Concept\">An\
      \ AI Concept</a> – Exploration of a custom monster AI construct.</li>\n</ul>\n\
      </li>\n</ul>\n</li>\n</ul>\n<h3><span class=\"mw-headline\" id=\"Custom_Content\"\
      >Custom Content</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:NPC_Support?section=24\" title=\"Edit section:\
      \ Custom Content\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <ul>\n<li><a href=\"/Legacy:SuperApe/Old_Skool_Monsta_Toolz\" title=\"Legacy:SuperApe/Old\
      \ Skool Monsta Toolz\" class=\"mw-redirect\">Old Skool Monsta Toolz</a> – A\
      \ mod/mapping toolset for implementing complex monster/NPC behavior in UT2004.</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:NPC_Support?section=25\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>SuperApe:</b>\
      \ This page is in progress. It will contain information on creating custom NPCs\
      \ in the unreal engine. (critters, neutral individuals, helpful NPCs, etc.)\
      \ <u>The idea will be to give general concepts (not a tutorial) and to link\
      \ to any relevant pages.</u> Working...</p>\n<p><b>SuperApe:</b> The structure\
      \ of this page is complete. Please give your thoughts here.</p>\n\n<!-- \nNewPP\
      \ limit report\nCPU time usage: 0.083 seconds\nReal time usage: 0.312 seconds\n\
      Preprocessor visited node count: 99/1000000\nPreprocessor generated node count:\
      \ 104/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate argument\
      \ size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2306-0!*!0!!en!*!* and timestamp 20221118091040 and revision\
      \ id 5564\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:TankVictim"
  - ns: 100
    exists: true
    name: "Legacy:Pawn"
  - ns: 100
    exists: true
    name: "Legacy:Player Modeling"
  - ns: 100
    exists: true
    name: "Legacy:Monster Support"
  - ns: 100
    exists: true
    name: "Legacy:Skeletal Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Nali"
  - ns: 100
    exists: true
    name: "Legacy:Artificial Intelligence"
  - ns: 100
    exists: true
    name: "Legacy:Cow"
  - ns: 100
    exists: true
    name: "Legacy:Basic AI Scripting Tutorial"
  - ns: 100
    exists: true
    name: "Legacy:Mesh"
  - ns: 100
    exists: true
    name: "Legacy:Gameplay"
  - ns: 100
    exists: true
    name: "Legacy:Maya"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:SuperApe/Old Skool Monsta Toolz"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Modeling FAQ"
  - ns: 100
    exists: true
    name: "Legacy:An AI Concept"
  - ns: 100
    exists: true
    name: "Legacy:Maya PLE Character Model Tutorial"
  - ns: 100
    exists: true
    name: "Legacy:Controller Overview"
  - ns: 100
    exists: true
    name: "Legacy:Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:Weapon"
  - ns: 100
    exists: true
    name: "Legacy:InventoryAttachment"
  - ns: 100
    exists: true
    name: "Legacy:Animation Browser"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedSequence"
  - ns: 100
    exists: true
    name: "Legacy:Mover"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedPawn"
  - ns: 100
    exists: true
    name: "Legacy:Animation"
  - ns: 100
    exists: true
    name: "Legacy:XIntroPawn"
  - ns: 100
    exists: true
    name: "Legacy:Controller"
  templates: []
  images: []
  externallinks:
  - "http://wiki.beyondunreal.com/wiki/SuperApe#0.2.4"
  - "http://unrealplayground.com/forums/showthread.php?t=36679"
  sections:
  - toclevel: 1
    level: "2"
    line: "Design"
    number: "1"
    index: "1"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 965
    anchor: "Design"
  - toclevel: 2
    level: "3"
    line: "Purpose"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 977
    anchor: "Purpose"
  - toclevel: 3
    level: "4"
    line: "Immersion"
    number: "1.1.1"
    index: "3"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 1360
    anchor: "Immersion"
  - toclevel: 3
    level: "4"
    line: "Information"
    number: "1.1.2"
    index: "4"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 1985
    anchor: "Information"
  - toclevel: 3
    level: "4"
    line: "Inventory"
    number: "1.1.3"
    index: "5"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 2610
    anchor: "Inventory"
  - toclevel: 2
    level: "3"
    line: "Behavior"
    number: "1.2"
    index: "6"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 3065
    anchor: "Behavior"
  - toclevel: 3
    level: "4"
    line: "Self-Preservation"
    number: "1.2.1"
    index: "7"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 4173
    anchor: "Self-Preservation"
  - toclevel: 3
    level: "4"
    line: "Navigation"
    number: "1.2.2"
    index: "8"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 4734
    anchor: "Navigation"
  - toclevel: 3
    level: "4"
    line: "Conversation"
    number: "1.2.3"
    index: "9"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 5505
    anchor: "Conversation"
  - toclevel: 3
    level: "4"
    line: "Special Behavior"
    number: "1.2.4"
    index: "10"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 6469
    anchor: "Special_Behavior"
  - toclevel: 2
    level: "3"
    line: "Appearance"
    number: "1.3"
    index: "11"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 7118
    anchor: "Appearance"
  - toclevel: 2
    level: "3"
    line: "Movement and Sound"
    number: "1.4"
    index: "12"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 7797
    anchor: "Movement_and_Sound"
  - toclevel: 2
    level: "3"
    line: "Effects, Props and Vehicles"
    number: "1.5"
    index: "13"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 8349
    anchor: "Effects.2C_Props_and_Vehicles"
  - toclevel: 1
    level: "2"
    line: "Construction"
    number: "2"
    index: "14"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 9351
    anchor: "Construction"
  - toclevel: 2
    level: "3"
    line: "Modeling"
    number: "2.1"
    index: "15"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 9601
    anchor: "Modeling"
  - toclevel: 2
    level: "3"
    line: "Rigging"
    number: "2.2"
    index: "16"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 10572
    anchor: "Rigging"
  - toclevel: 2
    level: "3"
    line: "Animating"
    number: "2.3"
    index: "17"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 11759
    anchor: "Animating"
  - toclevel: 2
    level: "3"
    line: "Coding"
    number: "2.4"
    index: "18"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 12885
    anchor: "Coding"
  - toclevel: 3
    level: "4"
    line: "Controllers"
    number: "2.4.1"
    index: "19"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 13982
    anchor: "Controllers"
  - toclevel: 1
    level: "2"
    line: "Testing and Integration"
    number: "3"
    index: "20"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 14726
    anchor: "Testing_and_Integration"
  - toclevel: 1
    level: "2"
    line: "Tutorials"
    number: "4"
    index: "21"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 15084
    anchor: "Tutorials"
  - toclevel: 1
    level: "2"
    line: "Examples"
    number: "5"
    index: "22"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 15423
    anchor: "Examples"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "6"
    index: "23"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 15921
    anchor: "Related_Topics"
  - toclevel: 2
    level: "3"
    line: "Custom Content"
    number: "6.1"
    index: "24"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 16505
    anchor: "Custom_Content"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "7"
    index: "25"
    fromtitle: "Legacy:NPC_Support"
    byteoffset: 16682
    anchor: "Discussion"
  displaytitle: "Legacy:NPC Support"
  iwlinks: []
  wikitext:
    text: "This page is a hub for support of '''Non-Player Characters (NPCs)''': any\
      \ artificially intelligent agent or character that is <u>not</u> meant to act\
      \ as a player.  NPCs can be ambient creatures, various animals, character \"\
      extras\", neutral individuals, helpful characters, etc.  NPCs use a custom AI\
      \ construct that will serve their unique goals and tasks, whether that be self-preservation,\
      \ conversation, navigation, etc.\n\nMonsters can be easily considered a specific\
      \ variety of NPC whose sole purpose is to hunt down and attack players.  See\
      \ [[Legacy:Monster Support|Monster Support]].  This page, however, will focus\
      \ on custom non-monster NPCs.\n\nThe NPC is created to support the game world,\
      \ to enrich it and either give the player a stronger sense of realism within\
      \ it or to support the player in their game objectives.  For this reason, each\
      \ NPC class is a product of the game world it lives in; a unique entity whose\
      \ purpose is directly tied to that world.  \n\n==Design==\n\n===Purpose===\n\
      \nThe NPC must have a reason to exist in the game.  They may provide the players\
      \ with information, inventory or immersion in the game.  The purpose is normally\
      \ dictated by the [[Legacy:Gameplay|gameplay]] itself; the goals of the game,\
      \ the theme, the rules, etc.  Keep in mind those elements and concepts of gameplay,\
      \ such as Balance and Chance, as you design the NPC.\n\n====Immersion====\n\n\
      This purpose is simply to support the believability of the game world by existing\
      \ within it.  The NPC \"lives\" in this world and therefore adds to the illusion\
      \ that this game world is a real one that the player live in as well.  Ambient\
      \ creatures and other animals can serve this purpose well as they will follow\
      \ their own rules within this world and largely ignore the goals of the player,\
      \ but still give the player plenty of opportunity for interaction.  But, another\
      \ common example is citizen NPCs that live out their own lives, but do not interact\
      \ with the players in a way that impact their gameplay.\n\n====Information====\n\
      \nHere the NPC's reason to exist is loosely tied to the goals of the player.\
      \  Through some combonation of conditions, the player may recieve information\
      \ from this NPC that will impact their gameplay.  Some common examples of this\
      \ are the \"guide\" characters that provide the novice player with the most\
      \ basic instructions for this particular game (where to buy food or weapons\
      \ in town, who can heal you, how to save your progress), or the character who\
      \ will give you critical information to allow progress in the game (after paying\
      \ them a bribe, they tell you where to find the entrance to the dungeon).  \n\
      \n====Inventory====\n\nThis purpose is directly tied to the player's gameplay,\
      \ where the NPC is to give the player a key piece of inventory, which gives\
      \ them extra ability.  A very common example of this might be the storekeeper\
      \ who sells you weapons for a price.  Another example could be the \"sage\"\
      \ character, who can give you a special item that can protect you during the\
      \ next stage of the game or a key that unlocks the next series of tasks to perform.\n\
      \n===Behavior===\n\nThe NPC behavior will be designed to serve it's unique purpose.\
      \  Their behavior may be simple, as in the actions of a song bird, or complex,\
      \ as in a mentor who directs the player's progress from beginner through mastery.\
      \  Designing the behavior for your NPC can be difficult, as all possible conditions\
      \ and posibilities should be considered and factored into the design.  Common\
      \ ways to keep it simple include limiting the behavior to it's essential purpose\
      \ and limiting the conditions the NPC will have to face.  For example, a barkeep\
      \ who tells local gossip for a price might be a great NPC to give your players\
      \ information about their game world, but designing a behavior that would be\
      \ able to believably answer any question the player might ask is virutally impossible.\
      \  The barkeep's behavior can be limited to just talking about the most probable\
      \ questions it will be asked.  The conditions that the barkeep will engage in\
      \ conversation can be limited as well by telling the player, \"I'm busy right\
      \ now, come back later.\", or, \"Hey, I'm just a simple barkeep, I don't know\
      \ everything.\"\n\n====Self-Preservation====\n\nThe most basic NPC behavior\
      \ to consider is self-preservation.  Animals, characters, and just about every\
      \ other living thing is capable of this behavior.  A defense mechanism such\
      \ as stealth, evasion, or protection should be considered first.  Is this the\
      \ type of creature to run if startled or will it roll up into a ball and show\
      \ spikes on it's back for defense?  Offensive behavior is common, most creatures\
      \ have some means of attacking in self-defense, even herbavores.  Does this\
      \ character throw a punch if backed into a corner?\n\n====Navigation====\n\n\
      The Unreal engine already has a well-designed method of allowing AI agents to\
      \ navigate: the bot path network. (See also [[Legacy:Bot Pathing|Bot Pathing]])\
      \  However, because the bot path network is designed for bot players, many NPCs\
      \ will have a purpose that dictates they use another way to navigate; away from\
      \ the combat or one that allows movement to any space, not just spaces defined\
      \ by the mapper.  While it is possible to design a new method of intelligent\
      \ navigation; one that doesn't use the bot path network, it will most likely\
      \ be much more work than the rest of the behavior.  It's recommended that navigation\
      \ behavior be simplified, using any existing methods (such as the bot path network\
      \ or some simple variation) as much as possible.\n\n====Conversation====\n\n\
      As mentioned above, this can be an incredibly complex behavior to design, if\
      \ all possible situations and conditions are accounted for.  The design should\
      \ be complex enough to carry the illusion of intelligent speech with the NPC,\
      \ but simple enough that the designer isn't wasting effort on situations or\
      \ conditions that are rarely met or will not yield a relevant result.  For example,\
      \ you'll want a damsel in distress to yell, \"Help!\", at the appropriate time,\
      \ as the train approaches, and to say, \"My hero!\", once saved by the player,\
      \ but you'd want to avoid designing her behavior to account for her her response\
      \ to an obscure question like, \"What kind of music do you like?\".  Again,\
      \ by limiting the NPC's behavior and at the same time limiting the conditions\
      \ the NPC will have to face, you avoid having to design too much.  Once the\
      \ damsel is saved, she may insist that she run home, which conveniently avoids\
      \ any further conversation.\n\n====Special Behavior====\n\nThis is a unique\
      \ task this NPC performs.  It will most likely be tied directly to the story\
      \ of the game and the main purpose for this NPC to exist.  Perhaps this NPC\
      \ character is the catburglar that the player is supposed to track down, so\
      \ their unique behavior is to sneak around at night, steal stuff and leave clues.\
      \  Maybe this NPC critter is a pack rat that steals a key item from the player\
      \ at a critical point in the game.  The special behavior is less likely to be\
      \ as simplified as the other major (more common) behaviors, and that's to be\
      \ expected.  The designer may spend the most time developing this behavior.\n\
      \n===Appearance===\n\nThis is the visual design of the NPC.  It should be in\
      \ line with the overall visual design of the game, the player characters and\
      \ the other NPCs.  It's best to have the tone of the visual design suggest the\
      \ NPCs purpose and behavior.  For example, a simple forest creature's visual\
      \ design might be basic, with no extra-ordinary consideration, while a unique\
      \ NPC, critical to the advancement of the game, such as the hostage character\
      \ the player is to escort through enemy territory, should appear obviously unarmed\
      \ or hurt, have distinctive facial features or clothing and should generally\
      \ stand out from the look of other NPCs, player characters and enemies.\n\n\
      ===Movement and Sound===\n\nThe movement and sound design is the acting of the\
      \ NPC.  Will it act like a real animal?  Does this NPC character call attention\
      \ to himself by having an odd voice or moving in a unique way or do they blend\
      \ into the crowd?  Is this NPC subtle, like the bluffing gambler in the saloon,\
      \ or over the top, like the cartoonish side-kick robot that gives you game hints\
      \ when the player is stuck.  The movement and sound design will be closely tied\
      \ it's visual design and should likewise suggest both the NPC's purpose and\
      \ behavior.\n\n===Effects, Props and Vehicles===\n\nIt is possible for an NPC\
      \ to have unique effects, props or vehicles in addition to their base design.\
      \  These are extra pieces to the design, parts that are separate from the NPC\
      \ itself.  By in large, these elements will be spawned or emitted from the NPC\
      \ (effect), attached to the NPC (prop) or the NPC will be attached to the object\
      \ (vehicle).  Any abilities that the NPC gains by these items would be dependent\
      \ on their availablity.  A gunslinger might have a black hat that falls off\
      \ once the player has killed him.  An ogre may carry an oversized club that\
      \ he lays down when he sleeps.  A gnome may ride a cat or bird.  A Egyptian\
      \ god may drive a charriot made of gold mist.  While it's concievable that a\
      \ player may also use these props or vehicles, by making them unique to the\
      \ NPC (either too small, too large or otherwise unavailble to the player), the\
      \ designer can avoid the extra work of creating new player items that may also\
      \ throw off the game balance.\n\n==Construction==\n\nOnce a design is formulated,\
      \ it's time to begin to bring it to life.  The physical appearance is achieved\
      \ through modeling, the acting is achieved through animation and the behavior\
      \ and special actions are achieved through coding.\n\n===Modeling===\n\nModeling\
      \ is the process of creating a [[Legacy:Mesh|Mesh]] or [[Legacy:Skeletal Mesh|Skeletal\
      \ Mesh]] for a character design.  This will be the visual representation of\
      \ that character and the basis for its animations.  The model is made up of\
      \ several triangle polygons (or Faces) that are oriented in 3D space to make\
      \ up the whole shape of the character.  That polygon Mesh also contains the\
      \ information necessary to properly display one or more Skins (or materials,\
      \ textures) over the surface of the character model, which is typically called\
      \ UV mapping.\n\nThere are several Third-Party Applications that can handle\
      \ creation of the polygon model and it's UV mapping, including [[Legacy:Maya|Maya]]PLE,\
      \ a free Personal Learning Edition of a professional 3D modeling and animation\
      \ program, which is included with Unreal Tournament 2003 and beyond.\n\nSee\
      \ also [[Legacy:Player Modeling|Player Modeling]] and [[Legacy:Unreal Modeling\
      \ FAQ|Unreal Modeling FAQ]].\n\n===Rigging===\n\nRigging is the process of setting\
      \ up the polygonal model for animation.  Depending on the animation requirements\
      \ of the character's design, each model will have unique rigging requirements\
      \ with varying levels of complexity.  Generally, a character model will be rigged\
      \ using a Skeleton deformer (sometimes called, Joints, Bones, etc.) to deform\
      \ the polygon mesh as if it had an internal skeletal structure with hinged connections.\
      \  A Skeletal deformer allows basic character model manipulation, such as bending\
      \ of arms and legs, as well as complex manipulation, such as a tail or spine.\
      \  The individual joints (or bones) of the Skeleton deformer can be connected\
      \ to create an overal skeletal hierachy, with each appendage (and sub-appendages)\
      \ recieving inherited movement from it's parent joint.\n\nRigging models can\
      \ also use other deformer tools such as Shape deformers, Spline deformers, Lattice\
      \ deformers, etc., depending on the tools available in the Third-Party Application\
      \ used.  The common element in all these deformer tools is that they will move\
      \ the individual points that make up the connecting polygonal faces, thereby\
      \ changing the shape of the overall model.\n\n===Animating===\n\nAnimating is\
      \ the process of manipulating the rigging of the character model within a timeline\
      \ to create a series of sequences that represent various actions the character\
      \ can make.  Typically, the character rigging (skeletal hierarchy or the like)\
      \ will be positioned and \"keyed\" at various points in the timeline, just like\
      \ the keys of a [[Legacy:Mover|Mover]].  As the animator moves (or \"scrubs\"\
      ) along the timeline, the keyed animation will be played back and the model's\
      \ rigging will animate the character.\n\nAlthough the basic premise is the same,\
      \ depending on the Third-Party Application used, the process of keying positions\
      \ and saving animated sequences will differ slightly.  The main idea is to make\
      \ sure that the character model moves appropriately in terms of timing, attitude\
      \ and acting for each animation sequence.  Once animation is completed, these\
      \ series of sequences, that represent each possible action the character can\
      \ make, will be exported from the Third-Party Application to the Unreal Editor's\
      \ [[Legacy:Animation Browser|Animation Browser]].\n\nSee also [[Legacy:Animation|Animation]].\n\
      \n===Coding===\n\nBased on the design of the character's behavior and the character's\
      \ abilities, the coding will entail a unique degree of complexity, in order\
      \ to believably represent the chatacter's Artificial Intelligence as well as\
      \ it's movements, combat abilities, special effects, etc.  Once the character\
      \ animations are available to the Unreal Editor, various Object classes can\
      \ be created to use those sequences to display the character's existance and\
      \ behavior.  Typically, simple characters can use one class, a [[Legacy:Pawn|Pawn]]\
      \ subclass, to represent that character.  The Pawn classes are specifically\
      \ designed to represent characters in the Unreal gamespace, handling Movement,\
      \ Damage, Dying and other typical character functions as well as the inherited\
      \ Animation, Physics and Sound functions from [[Legacy:Actor|Actor]].  More\
      \ complex characters (like Player Characters) will require extra Object classes\
      \ to complete their behavior and potential actions, such as [[Legacy:Controller|Controller]]s,\
      \ [[Legacy:Weapon|Weapon]]s, [[Legacy:InventoryAttachment|InventoryAttachment]]s,\
      \ etc.\n\n====Controllers====\n\nUT2003 introduced the use of Controllers in\
      \ collaboration with Pawns to represent all characters, including AI controlled\
      \ entities, whereas UT used [[Legacy:ScriptedPawn|ScriptedPawn]]s alone (or\
      \ in conjunction with a [[Legacy:ScriptedSequence|ScriptedSequence]] for special\
      \ control of individual characters per map).  Controller classes are used to\
      \ dictate the actions of a Pawn and handle it's non-physical elements.  While\
      \ the Pawn is the visual and physical representation of a character, the Controller\
      \ is the \"mind\" or \"soul\" of the character; both the decision making element\
      \ and the entity that persists if that character Pawn is killed and respawned.\n\
      \nSee also [[Legacy:Controller Overview|Controller Overview]].\n\n==Testing\
      \ and Integration==\n\nOnce your NPC is available, begin to itegrate it into\
      \ the game world and among the other players and NPCs.  Test it thoroughly to\
      \ ensure it will serve it's purpose adequately, behave properly under all possible\
      \ considitions and situations it might face, and will appear, move and sound\
      \ appropriate to it's purpose and behavior.\n\n==Tutorials==\n* [[Legacy:Maya\
      \ PLE Character Model Tutorial|Maya PLE Character Model Tutorial]] &ndash; A\
      \ tutorial covering modeling, rigging, animation and import of skeletal mesh\
      \ characters.\n* [[Legacy:Basic AI Scripting Tutorial|Basic AI Scripting Tutorial]]\
      \ &ndash; A tutorial detailing the (re)creation of the NaliCow NPC for UT2004.\n\
      \n==Examples==\n* [[Legacy:Nali|Nali]] and [[Legacy:Cow|Cow]] &ndash; Stock\
      \ non-Monster NPCs for UT\n* [[Legacy:TankVictim|TankVictim]] &ndash; A stock\
      \ NPC for UT200x found in DM-Insidious\n* The [http://wiki.beyondunreal.com/wiki/SuperApe#0.2.4\
      \ ROOs] &ndash; Kangaroo Non-Player Characters for UT2004 mappers.  And the\
      \ [http://unrealplayground.com/forums/showthread.php?t=36679 ROOtator] : A mutator\
      \ designed to populate any map with ROOs; also includes the Australian RooLette\
      \ and RooHunt minigames.\n\n==Related Topics==\n* [[Legacy:Gameplay|Gameplay]]\
      \ &ndash; Concepts and elements of satisfying game design.\n* [[Legacy:ScriptedPawn|ScriptedPawn]]\
      \ &ndash; The parent UT class for NPCs\n* [[Legacy:XIntroPawn|xIntroPawn]] &ndash;\
      \ UT200x NPC Pawns used to act in intro scenes, cut scenes, etc.\n* [[Legacy:Artificial\
      \ Intelligence|Artificial Intelligence]] &ndash; A super topic for all AI (bots,\
      \ monsters, etc.)\n** [[Legacy:Monster Support|Monster Support]] &ndash; A hub\
      \ for monster support\n*** [[Legacy:An AI Concept|An AI Concept]] &ndash; Exploration\
      \ of a custom monster AI construct.\n\n===Custom Content===\n* [[Legacy:SuperApe/Old_Skool_Monsta_Toolz|Old\
      \ Skool Monsta Toolz]] &ndash; A mod/mapping toolset for implementing complex\
      \ monster/NPC behavior in UT2004.\n\n==Discussion==\n\n'''SuperApe:''' This\
      \ page is in progress.  It will contain information on creating custom NPCs\
      \ in the unreal engine. (critters, neutral individuals, helpful NPCs, etc.)\
      \  <u>The idea will be to give general concepts (not a tutorial) and to link\
      \ to any relevant pages.</u>  Working...\n\n'''SuperApe:''' The structure of\
      \ this page is complete.  Please give your thoughts here."
  properties: []
  revId: 5564
name: "Legacy:NPC Support"
revision:
  revid: 5564
  parentid: 5566
  user: "SuperApe"
  timestamp: 1205893167.000000000
  comment: "*"
timestamp: 1668762641.645225000
