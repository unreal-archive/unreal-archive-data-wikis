---
parse:
  title: "Legacy:CSG"
  text:
    text: "<p><b>Constructive Solid Geometry</b> (CSG) is a technique for defining\
      \ a detailed space by building it up gradually with simple shapes. This is what\
      \ the <a href=\"/Legacy:Unreal_Engine\" title=\"Legacy:Unreal Engine\">Unreal\
      \ Engine</a> uses to define the basic <a href=\"/Legacy:Unreal_World\" title=\"\
      Legacy:Unreal World\">Unreal World</a>.</p>\n<p></p>\n<div id=\"toc\" class=\"\
      toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"\
      toclevel-1 tocsection-1\"><a href=\"#Cookie_dough\"><span class=\"tocnumber\"\
      >1</span> <span class=\"toctext\">Cookie dough</span></a></li>\n<li class=\"\
      toclevel-1 tocsection-2\"><a href=\"#Brushes\"><span class=\"tocnumber\">2</span>\
      \ <span class=\"toctext\">Brushes</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#A_Quick_Mind_Game\"><span class=\"tocnumber\">2.1</span> <span class=\"\
      toctext\">A Quick Mind Game</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#The_Reality\"><span class=\"tocnumber\">2.2</span> <span class=\"\
      toctext\">The Reality</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-5\"\
      ><a href=\"#A_quick_change_of_pace\"><span class=\"tocnumber\">2.2.1</span>\
      \ <span class=\"toctext\">A quick change of pace</span></a></li>\n</ul>\n</li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-6\"><a href=\"#A_Note_About_UT2003\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">A Note About UT2003</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-7\"><a href=\"#Related_Topics\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Cookie_dough\"\
      >Cookie dough</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:CSG?section=1\" title=\"Edit section: Cookie\
      \ dough\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>The Unreal world is of course is three-dimensional, but let's imagine something\
      \ simpler. Suppose you have a big sheet of rolled-out dough on a kitchen worktop\
      \ and some square cookie cutters. You can create an open space in the sheet\
      \ by stamping out squares. This is <b>subtracting</b> from the world.</p>\n\
      <p>Now suppose the cookie cutters are magical: you can also set them to add\
      \ dough back in. So if you have a big cutter and a little cutter, you could\
      \ subtract the big cutter, then use the little one to add a bit back in, maybe\
      \ along an edge or in a corner. This is <b>adding</b> to the world.</p>\n<p>This\
      \ technique is pretty much what happens when a mapper works in <a href=\"/Legacy:UnrealEd\"\
      \ title=\"Legacy:UnrealEd\" class=\"mw-redirect\">UnrealEd</a>: removing chunks\
      \ of 3D space and sometimes putting bits back in.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Brushes\">Brushes</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:CSG?section=2\" title=\"\
      Edit section: Brushes\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>There is one crucial difference between the cookie dough and Unreal. With\
      \ the dough, the subtractions or additions were made immediately, and once they\
      \ are made the cookie cutter moves on.</p>\n<p>In Unreal, each subtraction or\
      \ addition to the space is represented by a <b>brush</b>. These are 3D wireframes\
      \ that represent the shape that is being added or subtracted. You'll see the\
      \ effects of CSG operations immediately, but brushes will always be there in\
      \ the map. A brush can be moved, resized, rotated or deleted. To extend the\
      \ cookie analogy, we're cutting the dough but keeping a copy of the cutter that\
      \ made it in that place. At any point we can restore the dough and quickly run\
      \ through all the cookie cutter operations again: this is the <b>build process</b>.</p>\n\
      <hr />\n<p>Constructive Solid Geometry (from now on referred to as CSG) refers\
      \ to the technique of building up a three dimensional area of space (volume\
      \ if you want to be more precise) from geometric shapes that either create space\
      \ or fill space.</p>\n<h3><span class=\"mw-headline\" id=\"A_Quick_Mind_Game\"\
      >A Quick Mind Game</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:CSG?section=3\" title=\"Edit section: A Quick\
      \ Mind Game\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Perhaps the easiest way to think of it is in terms of the addition and subtraction\
      \ of shapes. Imagine that you have a large solid block of <i>stuff</i>. Imagine\
      \ that you have a cursor in the shape of a small cube that you can move around\
      \ in this block of stuff. Using the cursor you can add stuff, or delete (subtract)\
      \ stuff at the press of a button. If you were to move your cursor into the center\
      \ of your block and press the subtract button you'd have a hollow cubic space\
      \ in the middle of your block of stuff.</p>\n<p>Still with me?</p>\n<p>Now,\
      \ without moving the cursor, press the add button. Your small cubic space has\
      \ just vanished. It's been filled with stuff by the addition you just did.</p>\n\
      <h3><span class=\"mw-headline\" id=\"The_Reality\">The Reality</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:CSG?section=4\"\
      \ title=\"Edit section: The Reality\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>CSG works just like the mind game above. Using what\
      \ is known as a brush (known as the <a href=\"/Legacy:Red_Builder_Brush\" title=\"\
      Legacy:Red Builder Brush\">red builder brush</a> in Unreal Editing parlance)\
      \ shapes are subtracted from and added to (or <i>painted</i> into, keeping with\
      \ the brush analogy) the solid block of stuff that makes up the <a href=\"/Legacy:Unreal_World\"\
      \ title=\"Legacy:Unreal World\">Unreal World</a>. It really is just like adding\
      \ and subtracting numbers with one vitally important difference.</p>\n<p>When\
      \ a shape is subtracted or added to the world it leaves a small wireframe of\
      \ effect behind to mark its boundaries (this is also confusingly known as a\
      \ brush). When shapes overlap only the last operation to be performed on the\
      \ overlapping areas actually has an effect. The order in which operations are\
      \ performed is important. In Unreal Editing speak this is known as the <a href=\"\
      /Legacy:Brush_Order\" title=\"Legacy:Brush Order\">brush order</a>.</p>\n<h4><span\
      \ class=\"mw-headline\" id=\"A_quick_change_of_pace\">A quick change of pace</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:CSG?section=5\" title=\"Edit section: A quick change of\
      \ pace\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <p>When the world is built (called the <a href=\"/Legacy:Build\" title=\"Legacy:Build\"\
      >build</a> process) brushes are processed in the order they were placed within\
      \ the world, to create a tree of visible surfaces, the <a href=\"/Legacy:BSP_Tree\"\
      \ title=\"Legacy:BSP Tree\">BSP Tree</a>. It is this tree of surfaces that you\
      \ see while playing in an Unreal world.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"A_Note_About_UT2003\">A Note About UT2003</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:CSG?section=6\"\
      \ title=\"Edit section: A Note About UT2003\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>One of the big differences between making maps for\
      \ Unreal Tournament and Unreal Tournament 2003 is that far less CSG is used\
      \ to create its levels. In a UT2003 map, space is hollowed out (and occasionally\
      \ added) of the solid world using CSG and then populated using <a href=\"/Legacy:Static_Mesh\"\
      \ title=\"Legacy:Static Mesh\">Static Meshes</a>. See <a href=\"/Legacy:Building_With_Static_Meshes\"\
      \ title=\"Legacy:Building With Static Meshes\">Building With Static Meshes</a>\
      \ for more information.</p>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\"\
      >Related Topics</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:CSG?section=7\" title=\"Edit section: Related\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Constructive_Solid_Geometry\"\
      \ class=\"extiw\" title=\"wikipedia:Constructive Solid Geometry\">Wikipedia:Constructive\
      \ Solid Geometry</a> - has some nice pictures that illustrate the CSG operations</li>\n\
      </ul>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.032 seconds\nReal time\
      \ usage: 0.033 seconds\nPreprocessor visited node count: 28/1000000\nPreprocessor\
      \ generated node count: 40/1000000\nPost‐expand include size: 3/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:714-0!*!0!!en!*!* and timestamp\
      \ 20221118014458 and revision id 2066\n -->\n"
  categories:
  - sortkey: "CSG"
    name: "Legacy_Mapping"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Build"
  - ns: 100
    exists: true
    name: "Legacy:Building With Static Meshes"
  - ns: 100
    exists: true
    name: "Legacy:BSP Tree"
  - ns: 100
    exists: true
    name: "Legacy:Brush Order"
  - ns: 100
    exists: true
    name: "Legacy:Static Mesh"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd"
  - ns: 100
    exists: true
    name: "Legacy:Red Builder Brush"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:Unreal World"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Cookie dough"
    number: "1"
    index: "1"
    fromtitle: "Legacy:CSG"
    byteoffset: 254
    anchor: "Cookie_dough"
  - toclevel: 1
    level: "2"
    line: "Brushes"
    number: "2"
    index: "2"
    fromtitle: "Legacy:CSG"
    byteoffset: 1025
    anchor: "Brushes"
  - toclevel: 2
    level: "3"
    line: "A Quick Mind Game"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:CSG"
    byteoffset: 2043
    anchor: "A_Quick_Mind_Game"
  - toclevel: 2
    level: "3"
    line: "The Reality"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:CSG"
    byteoffset: 2757
    anchor: "The_Reality"
  - toclevel: 3
    level: "4"
    line: "A quick change of pace"
    number: "2.2.1"
    index: "5"
    fromtitle: "Legacy:CSG"
    byteoffset: 3623
    anchor: "A_quick_change_of_pace"
  - toclevel: 1
    level: "2"
    line: "A Note About UT2003"
    number: "3"
    index: "6"
    fromtitle: "Legacy:CSG"
    byteoffset: 3943
    anchor: "A_Note_About_UT2003"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "4"
    index: "7"
    fromtitle: "Legacy:CSG"
    byteoffset: 4368
    anchor: "Related_Topics"
  displaytitle: "Legacy:CSG"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Constructive_Solid_Geometry"
    name: "wikipedia:Constructive Solid Geometry"
  wikitext:
    text: "'''Constructive Solid Geometry''' (CSG) is a technique for defining a detailed\
      \ space by building it up gradually with simple shapes. This is what the [[Legacy:Unreal\
      \ Engine|Unreal Engine]] uses to define the basic [[Legacy:Unreal World|Unreal\
      \ World]]. \n\n==Cookie dough==\n\nThe Unreal world is of course is three-dimensional,\
      \ but let's imagine something simpler. Suppose you have a big sheet of rolled-out\
      \ dough on a kitchen worktop and some square cookie cutters. You can create\
      \ an open space in the sheet by stamping out squares. This is '''subtracting'''\
      \ from the world.\n\nNow suppose the cookie cutters are magical: you can also\
      \ set them to add dough back in. So if you have a big cutter and a little cutter,\
      \ you could subtract the big cutter, then use the little one to add a bit back\
      \ in, maybe along an edge or in a corner. This is '''adding''' to the world.\n\
      \nThis technique is pretty much what happens when a mapper works in [[Legacy:UnrealEd|UnrealEd]]:\
      \ removing chunks of 3D space and sometimes putting bits back in. \n\n==Brushes==\n\
      \nThere is one crucial difference between the cookie dough and Unreal. With\
      \ the dough, the subtractions or additions were made immediately, and once they\
      \ are made the cookie cutter moves on. \n\nIn Unreal, each subtraction or addition\
      \ to the space is represented by a '''brush'''. These are 3D wireframes that\
      \ represent the shape that is being added or subtracted. You'll see the effects\
      \ of CSG operations immediately, but brushes will always be there in the map.\
      \ A brush can be moved, resized, rotated or deleted. To extend the cookie analogy,\
      \ we're cutting the dough but keeping a copy of the cutter that made it in that\
      \ place. At any point we can restore the dough and quickly run through all the\
      \ cookie cutter operations again: this is the '''build process'''.\n\n----\n\
      \nConstructive Solid Geometry (from now on referred to as CSG) refers to the\
      \ technique of building up a three dimensional area of space (volume if you\
      \ want to be more precise) from geometric shapes that either create space or\
      \ fill space.\n\n===A Quick Mind Game ===\n\nPerhaps the easiest way to think\
      \ of it is in terms of the addition and subtraction of shapes.  Imagine that\
      \ you have a large solid block of ''stuff''.  Imagine that you have a cursor\
      \ in the shape of a small cube that you can move around in this block of stuff.\
      \  Using the cursor you can add stuff, or delete (subtract) stuff at the press\
      \ of a button.  If you were to move your cursor into the center of your block\
      \ and press the subtract button you'd have a hollow cubic space in the middle\
      \ of your block of stuff.\n\nStill with me?\n\nNow, without moving the cursor,\
      \ press the add button.  Your small cubic space has just vanished.  It's been\
      \ filled with stuff by the addition you just did.\n\n===The Reality ===\n\n\
      CSG works just like the mind game above.  Using what is known as a brush (known\
      \ as the [[Legacy:Red Builder Brush|red builder brush]] in Unreal Editing parlance)\
      \ shapes are subtracted from and added to (or ''painted'' into, keeping with\
      \ the brush analogy) the solid block of stuff that makes up the [[Legacy:Unreal\
      \ World|Unreal World]].  It really is just like adding and subtracting numbers\
      \ with one vitally important difference.\n\nWhen a shape is subtracted or added\
      \ to the world it leaves a small wireframe of effect behind to mark its boundaries\
      \ (this is also confusingly known as a brush).  When shapes overlap only the\
      \ last operation to be performed on the overlapping areas actually has an effect.\
      \  The order in which operations are performed is important.  In Unreal Editing\
      \ speak this is known as the [[Legacy:Brush Order|brush order]].\n\n====A quick\
      \ change of pace ====\n\nWhen the world is built (called the [[Legacy:Build|build]]\
      \ process) brushes are processed in the order they were placed within the world,\
      \ to create a tree of visible surfaces, the [[Legacy:BSP Tree|BSP Tree]].  It\
      \ is this tree of surfaces that you see while playing in an Unreal world.\n\n\
      ==A Note About UT2003 ==\n\nOne of the big differences between making maps for\
      \ Unreal Tournament and Unreal Tournament 2003 is that far less CSG is used\
      \ to create its levels.  In a UT2003 map, space is hollowed out (and occasionally\
      \ added) of the solid world using CSG and then populated using [[Legacy:Static\
      \ Mesh|Static Mesh]]es.  See [[Legacy:Building With Static Meshes|Building With\
      \ Static Meshes]] for more information.\n\n==Related Topics==\n* [[Wikipedia:Constructive\
      \ Solid Geometry]] - has some nice pictures that illustrate the CSG operations\n\
      \n[[Category:Legacy Mapping|{{PAGENAME}}]]"
  properties: []
  revId: 2066
name: "Legacy:CSG"
revision:
  revid: 2066
  parentid: 2068
  user: "Tarquin"
  timestamp: 1066230361.000000000
  comment: "n00b-check please?"
timestamp: 1668762316.558352000
