---
parse:
  title: "Legacy:Making Unreal Tournament Decorations (Vertex)"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Introduction\">Introduction</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Making_Unreal_Tournament_Decorations_(Vertex)?section=1\"\
      \ title=\"Edit section: Introduction\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This is a great way for a beginner to get started\
      \ on modeling for Unreal Tournament. Even though great tools like <a href=\"\
      /Legacy:MeshMaker\" title=\"Legacy:MeshMaker\">MeshMaker</a> exist, learning\
      \ the old fashioned way of importing models can teach good skills like setting\
      \ up a project and compiling and working with Unrealscript.</p>\n<p>To export\
      \ a model from Max into something UT can use takes a few steps you must follow\
      \ before actually exporting the object. For simplicity I'm assuming the decoration\
      \ has no animations.</p>\n<dl>\n<dd>\"Max\" means <a href=\"/Legacy:3D_Studio_Max\"\
      \ title=\"Legacy:3D Studio Max\">3D Studio Max</a>, right? →<a href=\"/Legacy:Tarquin\"\
      \ title=\"Legacy:Tarquin\">Tarquin</a></dd>\n</dl>\n<h3><span class=\"mw-headline\"\
      \ id=\"Export_from_Max\">Export from Max</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Making_Unreal_Tournament_Decorations_(Vertex)?section=2\"\
      \ title=\"Edit section: Export from Max\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<ul>\n<li>It must be one object and named with a \"01\"\
      \ at the end. For example: boulder01. It also needs texture coordinates</li>\n\
      <li>It must not be bigger than a 256x256 grid extent centered on the origin.\
      \ You can scale it to suit in script later so don't fret over that yet.</li>\n\
      <li>Place a blank material on the object called \"Skin\".</li>\n<li>Export to\
      \ .3ds.</li>\n</ul>\n<h3><span class=\"mw-headline\" id=\"Import\">Import</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Making_Unreal_Tournament_Decorations_(Vertex)?section=3\"\
      \ title=\"Edit section: Import\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Now, setting up your stuff for import into Unrealtournament.\
      \ This is fun.</p>\n<ul>\n<li>Open up UnrealEd and then the Class Browser (little\
      \ chess piece icon).</li>\n</ul>\n<ul>\n<li>Choose File -&gt; Export All Scripts\
      \ and let it burn. Close down UnrealEd.</li>\n</ul>\n<ul>\n<li>Open up your\
      \ UnrealTournament folder and create a subfolder called MyDecoration (or whatever).\
      \ Create two subfolders in MyDecoration called Classes and Models.</li>\n</ul>\n\
      <dl>\n<dd>\n<dl>\n<dd><i>This step is explained in so many pages, it should\
      \ be on <a href=\"/Category:Legacy_Basic_Procedure\" title=\"Category:Legacy\
      \ Basic Procedure\">Category:Legacy Basic Procedure</a>. Ideas for a page name?\
      \ \"Set up a package folder\" maybe?</i> →<a href=\"/Legacy:Tarquin\" title=\"\
      Legacy:Tarquin\">Tarquin</a></dd>\n</dl>\n</dd>\n</dl>\n<ul>\n<li>Open up the\
      \ file called Unrealtournament.ini located in your Unrealtournament\\System\
      \ directory. About half way down you will see a bunch of stuff saying \"EditPackages=Botpack\"\
      , etc. Add a line to those that says \"EditPackages=MyDecoration\". Save the\
      \ file</li>\n</ul>\n<ul>\n<li>Download <a href=\"/Legacy:3ds2unr\" title=\"\
      Legacy:3ds2unr\">3ds2unr</a> from <a rel=\"nofollow\" class=\"external free\"\
      \ href=\"http://unreal.epicgames.com\">http://unreal.epicgames.com</a>; the\
      \ link is in the 3ds2unr doc located in the links to the left of the page. Extract\
      \ the zip to a folder called C:\\3ds2unr (create it).</li>\n</ul>\n<ul>\n<li>Open\
      \ up a DOS prompt window. Type: \"cd\\3ds2unr\". Then type: \"3ds2unr -setproj\"\
      </li>\n</ul>\n<p>A Browse window will pop up. Point to the MyDecoration folder\
      \ under your Unrealtournament folder. Hit ok. Minimize the DOS prompt window</p>\n\
      <ul>\n<li>Place your .3ds file into the 3ds2unr directory</li>\n</ul>\n<ul>\n\
      <li>Bring up the DOS prompt again. Type: \"3ds2unr MyDecoration whatever.3ds\"\
      </li>\n</ul>\n<p>(\"Whatever\" being the name of your .3ds file of course) Minimize\
      \ the window again</p>\n<ul>\n<li>You will now have in the Classes directory\
      \ of your MyDecoration folder a .uc file called \"MyDecoration.uc\". In the\
      \ models folder will be two files called \"MyDecoration_a.3d\" and \"MyDecoration_d.3d\"\
      <br />\nIf you get any errors it's most likely because you did something wrong\
      \ when exporting it from Max, like leaving a hidden object like a light around\
      \ or something</li>\n</ul>\n<ul>\n<li>Place your 8 bit 256 color .pcx skin in\
      \ the Models directory. Look in the .uc (in your Classes directory) for a line\
      \ that says \"#exec TEXTURE IMPORT NAME=Jwhatever1 FILE=MODELS\\whatever0.PCX\
      \ GROUP=Skins</li>\n</ul>\n<ul>\n<li>Change the .pcx name in the script to the\
      \ name of your .pcx skin. Or vice versa. Doesn't matter as long as both names\
      \ are the same</li>\n</ul>\n<ul>\n<li>At the top of the script is a line that\
      \ says \"Class MyDecoration expands Actor;\"</li>\n</ul>\n<p>Change it to read:\
      \ \"Class MyDecoration extends ut_Decoration;\". Save the .uc file.</p>\n<ul>\n\
      <li>Bring up your DOS prompt window again and type \"cd\\Unrealtournament\\\
      System\". Then type \"ucc make\"</li>\n</ul>\n<ul>\n<li>Your code and model\
      \ files will compile and may take a minute or so to get through checking all\
      \ of UT's packages. If all goes well (i.e. no errors or warnings) you will have\
      \ a file in your UT\\System directory called MyDecoration.u.</li>\n</ul>\n<p>You\
      \ can now load that into your map from UnrealEd at will and your class will\
      \ show up under Actor &gt;&gt; Decoration &gt;&gt; ut_Decoration in the <a href=\"\
      /Legacy:Actor_Classes_Browser\" title=\"Legacy:Actor Classes Browser\" class=\"\
      mw-redirect\">Actor Classes Browser</a>. You can also control its scale in the\
      \ script by adding \"DrawScale=\" ,with 1 being its default size, to one of\
      \ the lines under the DefaultProperties of the .uc file (at the bottom). If\
      \ you recompile the code again, make sure you delete the MyDecoration.u file\
      \ from your System directory first. Look at other ut_Decoration scripts located\
      \ in ..\\Unrealtournament\\Botpack\\Classes to get more default properties you\
      \ can use for your decoration, like solidity.</p>\n<p><b>Bean:</b> Note, if\
      \ you use an old version of 3ds2unr, such as the one at <a rel=\"nofollow\"\
      \ class=\"external text\" href=\"http://unreal.epicgames.com\">Epic's Unreal\
      \ Site</a>, you may encounter some problems with skins on decorations being\
      \ mirrored backwards randomly. It's actually quite odd how that happens. If\
      \ you are using an old version, encounter the problem, and don't feel like grabbing\
      \ an updated version, just go into Photoshop and flip your canvas horizontally\
      \ for the skin.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.029 seconds\n\
      Real time usage: 0.059 seconds\nPreprocessor visited node count: 12/1000000\n\
      Preprocessor generated node count: 26/1000000\nPost‐expand include size: 45/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:1821-0!*!0!!*!*!* and\
      \ timestamp 20221118015957 and revision id 4468\n -->\n"
  categories:
  - sortkey: "Making Unreal Tournament Decorations (Vertex)"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:3ds2unr"
  - ns: 100
    exists: true
    name: "Legacy:Tarquin"
  - ns: 100
    exists: true
    name: "Legacy:MeshMaker"
  - ns: 14
    exists: true
    name: "Category:Legacy Basic Procedure"
  - ns: 100
    exists: true
    name: "Legacy:Actor Classes Browser"
  - ns: 100
    exists: true
    name: "Legacy:3D Studio Max"
  templates: []
  images: []
  externallinks:
  - "http://unreal.epicgames.com"
  sections:
  - toclevel: 1
    level: "2"
    line: "Introduction"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Making_Unreal_Tournament_Decorations_(Vertex)"
    byteoffset: 0
    anchor: "Introduction"
  - toclevel: 2
    level: "3"
    line: "Export from Max"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Making_Unreal_Tournament_Decorations_(Vertex)"
    byteoffset: 601
    anchor: "Export_from_Max"
  - toclevel: 2
    level: "3"
    line: "Import"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Making_Unreal_Tournament_Decorations_(Vertex)"
    byteoffset: 962
    anchor: "Import"
  displaytitle: "Legacy:Making Unreal Tournament Decorations (Vertex)"
  iwlinks: []
  wikitext:
    text: "==Introduction ==\n\nThis is a great way for a beginner to get started\
      \ on modeling for Unreal Tournament. Even though great tools like [[Legacy:MeshMaker|MeshMaker]]\
      \ exist, learning the old fashioned way of importing models can teach good skills\
      \ like setting up a project and compiling and working with Unrealscript.\n\n\
      To export a model from Max into something UT can use takes a few steps you must\
      \ follow before actually exporting the object. For simplicity I'm assuming the\
      \ decoration has no animations.\n\n: \"Max\" means [[Legacy:3D Studio Max|3D\
      \ Studio Max]], right?  &rarr;[[Legacy:Tarquin|Tarquin]] \n\n===Export from\
      \ Max ===\n\n* It must be one object and named with a \"01\" at the end. For\
      \ example: boulder01. It also needs texture coordinates \n* It must not be bigger\
      \ than a 256x256 grid extent centered on the origin. You can scale it to suit\
      \ in script later so don't fret over that yet. \n* Place a blank material on\
      \ the object called \"Skin\". \n* Export to .3ds.\n\n===Import ===\n\nNow, setting\
      \ up your stuff for import into Unrealtournament. This is fun.\n\n* Open up\
      \ UnrealEd and then the Class Browser (little chess piece icon).\n\n* Choose\
      \ File -> Export All Scripts and let it burn. Close down UnrealEd.\n\n* Open\
      \ up your UnrealTournament folder and create a subfolder called MyDecoration\
      \ (or whatever). Create two subfolders in MyDecoration called Classes and Models.\n\
      \n:: ''This step is explained in so many pages, it should be on [[:Category:Legacy\
      \ Basic Procedure]]. Ideas for a page name? \"Set up a package folder\" maybe?''\
      \  &rarr;[[Legacy:Tarquin|Tarquin]] \n* Open up the file called Unrealtournament.ini\
      \ located in your Unrealtournament\\System directory. About half way down you\
      \ will see a bunch of stuff saying \"EditPackages=Botpack\", etc. Add a line\
      \ to those that says \"EditPackages=MyDecoration\". Save the file\n\n* Download\
      \ [[Legacy:3ds2unr|3ds2unr]] from http://unreal.epicgames.com; the link is in\
      \ the 3ds2unr doc located in the links to the left of the page. Extract the\
      \ zip to a folder called C:\\3ds2unr (create it).\n\n* Open up a DOS prompt\
      \ window. Type: \"cd\\3ds2unr\". Then type: \"3ds2unr -setproj\"\n\nA Browse\
      \ window will pop up. Point to the MyDecoration folder under your Unrealtournament\
      \ folder. Hit ok. Minimize the DOS prompt window\n\n* Place your .3ds file into\
      \ the 3ds2unr directory\n\n* Bring up the DOS prompt again. Type: \"3ds2unr\
      \ MyDecoration whatever.3ds\" \n\n(\"Whatever\" being the name of your .3ds\
      \ file of course) Minimize the window again\n\n* You will now have in the Classes\
      \ directory of your MyDecoration folder a .uc file called \"MyDecoration.uc\"\
      . In the models folder will be two files called \"MyDecoration_a.3d\" and \"\
      MyDecoration_d.3d\" <br />If you get any errors it's most likely because you\
      \ did something wrong when exporting it from Max, like leaving a hidden object\
      \ like a light around or something\n\n* Place your 8 bit 256 color .pcx skin\
      \ in the Models directory. Look in the .uc (in your Classes directory) for a\
      \ line that says \"#exec TEXTURE IMPORT NAME=Jwhatever1 FILE=MODELS\\whatever0.PCX\
      \ GROUP=Skins\n\n* Change the .pcx name in the script to the name of your .pcx\
      \ skin. Or vice versa. Doesn't matter as long as both names are the same\n\n\
      * At the top of the script is a line that says \"Class MyDecoration expands\
      \ Actor;\"\n\nChange it to read: \"Class MyDecoration extends ut_Decoration;\"\
      . Save the .uc file.\n\n* Bring up your DOS prompt window again and type \"\
      cd\\Unrealtournament\\System\". Then type \"ucc make\"\n\n* Your code and model\
      \ files will compile and may take a minute or so to get through checking all\
      \ of UT's packages. If all goes well (i.e. no errors or warnings) you will have\
      \ a file in your UT\\System directory called MyDecoration.u.\n\nYou can now\
      \ load that into your map from UnrealEd at will and your class will show up\
      \ under Actor >> Decoration >> ut_Decoration in the [[Legacy:Actor Classes Browser|Actor\
      \ Classes Browser]]. You can also control its scale in the script by adding\
      \ \"DrawScale=\" ,with 1 being its default size, to one of the lines under the\
      \ DefaultProperties of the .uc file (at the bottom). If you recompile the code\
      \ again, make sure you delete the MyDecoration.u file from your System directory\
      \ first. Look at other ut_Decoration scripts located in ..\\Unrealtournament\\\
      Botpack\\Classes to get more default properties you can use for your decoration,\
      \ like solidity.\n\n'''Bean:''' Note, if you use an old version of 3ds2unr,\
      \ such as the one at [http://unreal.epicgames.com Epic's Unreal Site], you may\
      \ encounter some problems with skins on decorations being mirrored backwards\
      \ randomly. It's actually quite odd how that happens. If you are using an old\
      \ version, encounter the problem, and don't feel like grabbing an updated version,\
      \ just go into Photoshop and flip your canvas horizontally for the skin.\n\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 4468
name: "Legacy:Making Unreal Tournament Decorations (Vertex)"
revision:
  revid: 4468
  parentid: 4470
  user: "Mychaeel"
  timestamp: 1058571111.000000000
  comment: "*"
timestamp: 1668775249.598600000
