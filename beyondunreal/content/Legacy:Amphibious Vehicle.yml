---
parse:
  title: "Legacy:Amphibious Vehicle"
  text:
    text: "<p>By UT2004Addict</p>\n<p><a rel=\"nofollow\" class=\"external free\"\
      \ href=\"http://www.arclength.net/ut2004\">http://www.arclength.net/ut2004</a></p>\n\
      <p>Based off of the Hellbender, here's the easiest way to make an Amphibious\
      \ vehicle (that I've found...)</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">class</span> Demo <span class=\"kw1\">extends</span> ONSPRV;\n\
      \ \n \n<span class=\"kw1\">var</span> <span class=\"kw5\">float</span> UprightStiffness,\
      \ UprightDamping;\n \n \n \n<span class=\"kw1\">simulated</span> <span class=\"\
      kw1\">function</span> <span class=\"kw4\">PostBeginPlay</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n \n\
      \    <span class=\"kw6\">super</span>.<span class=\"kw4\">PostBeginPlay</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n \n    <span class=\"\
      co1\">// Make sure we float</span>\n    <span class=\"kw8\">KarmaParams</span><span\
      \ class=\"br0\">(</span>KParams<span class=\"br0\">)</span>.<span class=\"me0\"\
      >KBuoyancy</span> <span class=\"sy0\">=</span> <span class=\"kw7\">Buoyancy</span>;\n\
      \ \n \n<span class=\"br0\">}</span>\n \n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw4\">Tick</span><span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> DeltaTime<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n \n \n    <span class=\"co1\">// Handle\
      \ water stuff</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>  <span class=\"kw9\">PhysicsVolume</span>.<span class=\"me0\">bWaterVolume</span>\n\
      \    <span class=\"sy0\">&amp;&amp;</span>    <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&gt;&gt;</span> <span class=\"\
      kw7\">Rotation</span><span class=\"br0\">)</span> dot <span class=\"kw9\">PhysicsVolume</span>.<span\
      \ class=\"me0\">Gravity</span> <span class=\"sy0\">&gt;</span> <span class=\"\
      nu0\">0</span>    <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"co1\">// Try to stay upright if we're not flipped over\
      \ already</span>\n        KSetStayUpright<span class=\"br0\">(</span><span class=\"\
      kw6\">true</span>, <span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n\
      \        KSetStayUprightParams<span class=\"br0\">(</span>UprightStiffness,\
      \ UprightDamping<span class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n   \
      \     <span class=\"co1\">// Allow to flip</span>\n        KSetStayUpright<span\
      \ class=\"br0\">(</span><span class=\"kw6\">false</span>, <span class=\"kw6\"\
      >false</span><span class=\"br0\">)</span>;\n        KSetStayUprightParams<span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"br0\">}</span>\n \n \n \n    <span\
      \ class=\"kw6\">super</span>.<span class=\"kw4\">Tick</span><span class=\"br0\"\
      >(</span>DeltaTime<span class=\"br0\">)</span>;\n \n<span class=\"br0\">}</span>\n\
      \ \n \n<span class=\"co1\">// Instead of using this to take damage,</span>\n\
      <span class=\"co1\">// we're going to use this to keep</span>\n<span class=\"\
      co1\">// our vehicle afloat</span>\n<span class=\"kw1\">event</span> TakeWaterDamage<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> DeltaTime<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n \n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">vector</span> TempVector;\n \n \n    <span class=\"co1\"\
      >// Don't drive up or down...</span>\n    TempVector <span class=\"sy0\">=</span>\
      \ <span class=\"kw5\">vector</span><span class=\"br0\">(</span><span class=\"\
      kw7\">Rotation</span><span class=\"br0\">)</span>;\n    TempVector.<span class=\"\
      me0\">Z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\
      \ \n \n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Throttle\
      \ <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\"\
      >)</span>\n        <span class=\"kw4\">KAddImpulse</span><span class=\"br0\"\
      >(</span>TempVector <span class=\"sy0\">*</span> Throttle <span class=\"sy0\"\
      >*</span> <span class=\"nu0\">500000.0</span> <span class=\"sy0\">*</span> DeltaTime,\
      \ <span class=\"kw7\">Location</span><span class=\"br0\">)</span>;\n \n \n \
      \   <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Steering <span\
      \ class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n\
      \        KAddAngularImpulse<span class=\"br0\">(</span><span class=\"br0\">(</span><span\
      \ class=\"kw3\">vect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&gt;&gt;</span> <span class=\"kw7\">Rotation</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> Steering <span class=\"\
      sy0\">*</span> Throttle <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span\
      \ class=\"sy0\">-</span><span class=\"nu0\">15.0</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> DeltaTime<span class=\"br0\">)</span>;\n \n \n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n \n    <span class=\"kw7\">Buoyancy</span><span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1.5</span>\n \n    UprightStiffness<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">500</span>\n    UprightDamping<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">500</span>\n \n    WaterSpeed<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1000.0</span>\n \n    WaterMovementState<span\
      \ class=\"sy0\">=</span>PlayerDriving\n \n \n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.030 seconds\nReal time\
      \ usage: 0.030 seconds\nPreprocessor visited node count: 4/1000000\nPreprocessor\
      \ generated node count: 24/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:518-0!*!*!*!*!*!* and timestamp\
      \ 20221118030010 and revision id 1618\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks:
  - "http://www.arclength.net/ut2004"
  sections: []
  displaytitle: "Legacy:Amphibious Vehicle"
  iwlinks: []
  wikitext:
    text: "By UT2004Addict\n\nhttp://www.arclength.net/ut2004\n\nBased off of the\
      \ Hellbender, here's the easiest way to make an Amphibious vehicle (that I've\
      \ found...)\n\n<uscript>\nclass Demo extends ONSPRV;\n\n\nvar float UprightStiffness,\
      \ UprightDamping;\n\n\n\nsimulated function PostBeginPlay()\n{\n\n    super.PostBeginPlay();\n\
      \n    // Make sure we float\n    KarmaParams(KParams).KBuoyancy = Buoyancy;\n\
      \n\n}\n\n\nsimulated function Tick(float DeltaTime)\n{\n\n\n    // Handle water\
      \ stuff\n    if (  PhysicsVolume.bWaterVolume\n    &&    (Vect(0,0,-1) >> Rotation)\
      \ dot PhysicsVolume.Gravity > 0    )\n    {\n        // Try to stay upright\
      \ if we're not flipped over already\n        KSetStayUpright(true, true);\n\
      \        KSetStayUprightParams(UprightStiffness, UprightDamping);\n    }\n \
      \   else\n    {\n        // Allow to flip\n        KSetStayUpright(false, false);\n\
      \        KSetStayUprightParams(0, 0);\n    }\n\n\n\n    super.Tick(DeltaTime);\n\
      \n}\n\n\n// Instead of using this to take damage,\n// we're going to use this\
      \ to keep\n// our vehicle afloat\nevent TakeWaterDamage(float DeltaTime)\n{\n\
      \n    local vector TempVector;\n\n\n    // Don't drive up or down...\n    TempVector\
      \ = vector(Rotation);\n    TempVector.Z = 0.0;\n\n\n    if (Throttle != 0)\n\
      \        KAddImpulse(TempVector * Throttle * 500000.0 * DeltaTime, Location);\n\
      \n\n    if (Steering != 0)\n        KAddAngularImpulse((vect(0,0,1) >> Rotation)\
      \ * Steering * Throttle * (-15.0) * DeltaTime);\n\n\n}\n\n\ndefaultproperties\n\
      {\n\n    Buoyancy=1.5\n\n    UprightStiffness=500\n    UprightDamping=500\n\n\
      \    WaterSpeed=1000.0\n\n    WaterMovementState=PlayerDriving\n\n\n}\n</uscript>"
  properties: []
  revId: 1618
name: "Legacy:Amphibious Vehicle"
revision:
  revid: 1618
  parentid: 1619
  user: "Ut2004addict"
  timestamp: 1194770303.000000000
  comment: "*"
timestamp: 1668786159.300174000
