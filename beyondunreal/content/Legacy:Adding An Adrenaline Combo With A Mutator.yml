---
parse:
  title: "Legacy:Adding An Adrenaline Combo With A Mutator"
  text:
    text: "<p>This tutorial will show how to create an adrenaline combo and add the\
      \ combo to all players through a mutator. The specific adrenaline combo that\
      \ we are making is called the Bullet Time combo. What this adrenaline combo\
      \ will allow us to do is once the combo is activated, gameplay speed will slowdown\
      \ allowing all players to enter into \"Bullet Time\" like in the matrix trilogies.</p>\n\
      <p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Getting_Started\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Getting Started</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Creating_Combo_Class\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">Creating Combo Class</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Mutator\"><span class=\"tocnumber\"\
      >3</span> <span class=\"toctext\">Mutator</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-4\"><a href=\"#Comments\"><span class=\"tocnumber\">4</span> <span\
      \ class=\"toctext\">Comments</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Getting_Started\">Getting Started</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator?section=1\"\
      \ title=\"Edit section: Getting Started\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>First off, we will need to create the directory structure\
      \ in the UT2004 directory. Create a folder named \"MutBulletTimeCombo\". Then\
      \ inside this folder, create another folder called \"Classes\". For more information\
      \ on the package structure, see <a href=\"/Legacy:Set_Up_Package_Folders\" title=\"\
      Legacy:Set Up Package Folders\">Set Up Package Folders</a>.</p>\n<p>We will\
      \ create our script files in the this directory. Next, go into the system directory\
      \ and locate the ut2004.ini file. Open up the file and do a search for Editor.EditorEngine.\
      \ In this section, you will see many \"EditPackages=X\" where X is a package\
      \ name. Our package is MutBulletTimeCombo, so at the end of that list, add the\
      \ line \"EditPackages=MutBulletTimeCombo\".</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Creating_Combo_Class\">Creating Combo Class</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator?section=2\"\
      \ title=\"Edit section: Creating Combo Class\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Create a new file in your preferred text editor and\
      \ save the file as ComboBulletTime.uc. Inside that file, create a class called\
      \ ComboBulletTime and have it extend the Combo class. This way, we gain access\
      \ to the Combo class's functions and member variables. These will help us in\
      \ creating our own adrenaline combo. Here is the code you will need:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> ComboBulletTime\
      \ <span class=\"kw1\">extends</span> <span class=\"kw9\">Combo</span>;\n \n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">float</span> fOrigGameSpeed;\n\
      \ \n<span class=\"coMULTI\">/*\nThis function will get called when right combination\
      \ is entered.\n*/</span>\n<span class=\"kw1\">function</span> StartEffect<span\
      \ class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n     fOrigGameSpeed <span class=\"\
      sy0\">=</span> <span class=\"kw7\">Level</span>.<span class=\"kw7\">Game</span>.<span\
      \ class=\"me0\">GameSpeed</span>;\n     <span class=\"kw7\">Level</span>.<span\
      \ class=\"kw7\">Game</span>.<span class=\"me0\">SetGameSpeed</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.05</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"coMULTI\">/*\nThis function\
      \ gets called when adrenaline is all gone.\n*/</span>\n<span class=\"kw1\">function</span>\
      \ StopEffect<span class=\"br0\">(</span><span class=\"kw9\">xPawn</span> P<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n     <span class=\"\
      kw7\">Level</span>.<span class=\"kw7\">Game</span>.<span class=\"me0\">SetGameSpeed</span><span\
      \ class=\"br0\">(</span>fOrigGameSpeed<span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"\
      br0\">{</span>\n     fOrigGameSpeed <span class=\"sy0\">=</span> <span class=\"\
      nu0\">1.0</span>;\n     Duration <span class=\"sy0\">=</span> <span class=\"\
      nu0\">3</span>;\n     ExecMessage <span class=\"sy0\">=</span> <span class=\"\
      st0\">\"Bullet Time!\"</span>\n     keys<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">1</span>;\n     keys<span class=\"br0\">[</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">2</span>;\n     keys<span class=\"br0\">[</span><span class=\"\
      nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">1</span>;\n     keys<span class=\"br0\">[</span><span class=\"\
      nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">2</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>The two functions called StartEffect and StopEffect both do exactly what\
      \ the name implies. The variable Level is an object of the LevelInfo class declared\
      \ in the Actor class. You have access to this variable because Combo extends\
      \ from the Info class which then extends from the Actor class. Inside the LevelInfo\
      \ class, there is a variable called Game which is an object of the GameInfo\
      \ class. Take a look at these classes to see what these contain. Inside the\
      \ GameInfo class, there is a function called SetGameSpeed that changes the value\
      \ of GameSpeed within that same class. Here, we will change the game speed to\
      \ be 0.05. The game speed is based on a percentage. A game speed of 1.0 means\
      \ the game speed will be at 100%. We want to slow the game down, so a game speed\
      \ of 5% will do the job. If you notice, we declared our own variable called\
      \ fOrigGameSpeed. This is used to get the current game speed setting, which\
      \ is usually 1.0, to set the speed back to once the adrenaline combo wears off.</p>\n\
      <p>The next thing to mention is the keys array in the default properties. These\
      \ are where the combination of keys are declared that the player must press\
      \ in order to get the combo activated. If you take a look at the Combo class,\
      \ there are numbers which go with the direction the player presses. 1 is up,\
      \ 2 is down, 4 is left, and 8 is right. In this example, the player must press\
      \ \"Up, Down, Up, Down\" in that order when the player has full adrenaline to\
      \ activate the combo.</p>\n<p>Also in the default properties, you will notice\
      \ the duration variable being declared to three. The reason for this is that\
      \ we have set the game speed to 5%. So, 3 seconds running at 5% game speed will\
      \ probably take like 60 seconds for the adrenaline to where off.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Mutator\">Mutator</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator?section=3\"\
      \ title=\"Edit section: Mutator\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Here, we will be adding a class called MutBulletTimeCombo,\
      \ so create a new file of the same name and the .uc extension. When declaring\
      \ the MutBulletTimeCombo class, have it extend Mutator. The code to add the\
      \ Adrenaline combo to every player is below:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">class</span> MutBulletTimeCombo <span\
      \ class=\"kw1\">extends</span> <span class=\"kw9\">Mutator</span>;\n \n<span\
      \ class=\"kw1\">var</span> <span class=\"kw9\">xPlayer</span> NotifyPlayer<span\
      \ class=\"br0\">[</span><span class=\"nu0\">32</span><span class=\"br0\">]</span>;\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw4\">Timer</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \     <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n \n\
      \     <span class=\"kw2\">for</span><span class=\"br0\">(</span>i <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">32</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n     <span class=\"br0\">{</span>\n          <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>NotifyPlayer<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n          <span class=\"br0\">{</span>\n         \
      \      NotifyPlayer<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">ClientReceiveCombo</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"MutBulletTimeCombo.ComboBulletTime\"</span><span class=\"br0\">)</span>;\n\
      \               NotifyPlayer<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span> <span class=\"sy0\">=</span> <span class=\"kw5\">None</span>;\n  \
      \        <span class=\"br0\">}</span>\n \n     <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span> <span class=\"\
      kw5\">bool</span> IsRelevant<span class=\"br0\">(</span><span class=\"kw9\"\
      >Actor</span> Other, <span class=\"kw1\">out</span> <span class=\"kw5\">byte</span>\
      \ bSuperRelevant<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \     <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n \n\
      \     <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"\
      kw9\">xPlayer</span><span class=\"br0\">(</span>Other<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span>\n     <span class=\"br0\">{</span>\n          <span class=\"\
      kw2\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\"\
      >16</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t \
      \ <span class=\"br0\">{</span>\n\t       <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span><span class=\"kw9\">xPlayer</span><span class=\"br0\"\
      >(</span>Other<span class=\"br0\">)</span>.<span class=\"me0\">ComboNameList</span><span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> ~<span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"MutBulletTimeCombo.ComboBulletTime\"</span><span class=\"\
      br0\">)</span>\n                    <span class=\"kw2\">break</span>;\n    \
      \           <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"kw9\">xPlayer</span><span class=\"br0\"\
      >(</span>Other<span class=\"br0\">)</span>.<span class=\"me0\">ComboNameList</span><span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span>\
      \ <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>\n            \
      \   <span class=\"br0\">{</span>\n                    <span class=\"kw9\">xPlayer</span><span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span>.<span class=\"me0\"\
      >ComboNameList</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"st0\">\"MutBulletTimeCombo.ComboBulletTime\"\
      </span>;\n\t\t    <span class=\"kw2\">break</span>;\n               <span class=\"\
      br0\">}</span>\n          <span class=\"br0\">}</span>\n          <span class=\"\
      kw2\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> <span class=\"nu0\"\
      >32</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n   \
      \       <span class=\"br0\">{</span>\n               <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>NotifyPlayer<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span> <span class=\"sy0\">==</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n               <span class=\"br0\">{</span>\n    \
      \                NotifyPlayer<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span> <span class=\"sy0\">=</span> <span class=\"kw9\">xPlayer</span><span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span>;\n               \
      \     <span class=\"kw4\">SetTimer</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0.5</span>, <span class=\"kw6\">false</span><span class=\"br0\">)</span>;\n\
      \                    <span class=\"kw2\">break</span>;\n               <span\
      \ class=\"br0\">}</span>\n          <span class=\"br0\">}</span>\n     <span\
      \ class=\"br0\">}</span>\n     <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>NextMutator <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n          <span class=\"kw2\">return</span> NextMutator.<span\
      \ class=\"me0\">IsRelevant</span><span class=\"br0\">(</span>Other, bSuperRelevant<span\
      \ class=\"br0\">)</span>;\n     <span class=\"kw2\">else</span>\n          <span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">true</span>;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"\
      br0\">{</span>\n    FriendlyName <span class=\"sy0\">=</span> <span class=\"\
      st0\">\"Bullet Time Combo\"</span>\n    Description <span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"Adds the bullet time combo (UDUD). The combo slows all\
      \ gameplay down, but allows players aim to be more accurate, as seen in the\
      \ Matrix trilogies.\"</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>The description and the FriendlyName will be shown in the mutator list. The\
      \ Timer function above will notify each player in the level about the new combo.\
      \ To access the combo, you need to put in the package name, followed by the\
      \ combo class. In this case, we add ComboBulletTime class in the MutBulletTimeCombo\
      \ package. Now every player is like Neo!</p>\n<p>ToDo: Add more description\
      \ about the IsRelavant Function.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Comments\">Comments</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator?section=4\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Mad:</b> I hope this tutorial helps you in understanding\
      \ how combos work and how it can be activated through a mutator. I recommend\
      \ grabbing the sniper rifle upon performing this combo and get your headshots\
      \ in. Feel free to leave any comments or make any suggestions about this tutorial.</p>\n\
      <p><b>Metal_Maniac:</b> I get the way it works, but what if you wanted to make\
      \ something similar to the berzerk combo, or you wanted to make a mutator that\
      \ gives you all the default weapons, and they all have infinite ammo, but for\
      \ a limited time, and at the end of that time limit, your character explodes\
      \ and dies, I'd call it \"KamiKaze Mania combo\", so if anyone has a suggestion\
      \ on how to make that, please reply.</p>\n<p><b>tornWolf:</b> Just from a best\
      \ practices point of view, it would likely be better to declare an int (const\
      \ if we could) MAX_PLAYERS so that if the game will allow a different number\
      \ than 32 players, that can be updated once in the code. I'm a noob so I may\
      \ be wrong, just thought I'd throw that in.</p>\n<p><b>Lord_Farin:</b> Nice\
      \ idea from Metal_Maniac (though this was abadoned long ago). I have coded it,\
      \ fairly easy job. Any interested people, leave a message on my talk page.</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.083 seconds\nReal time usage:\
      \ 0.108 seconds\nPreprocessor visited node count: 34/1000000\nPreprocessor generated\
      \ node count: 68/1000000\nPost‐expand include size: 41/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:507-0!*!0!!en!*!* and timestamp 20221118014841 and revision\
      \ id 34383\n -->\n"
  categories:
  - sortkey: "Adding An Adrenaline Combo With A Mutator"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Set Up Package Folders"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Getting Started"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator"
    byteoffset: 380
    anchor: "Getting_Started"
  - toclevel: 1
    level: "2"
    line: "Creating Combo Class"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator"
    byteoffset: 1074
    anchor: "Creating_Combo_Class"
  - toclevel: 1
    level: "2"
    line: "Mutator"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator"
    byteoffset: 3774
    anchor: "Mutator"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Adding_An_Adrenaline_Combo_With_A_Mutator"
    byteoffset: 5926
    anchor: "Comments"
  displaytitle: "Legacy:Adding An Adrenaline Combo With A Mutator"
  iwlinks: []
  wikitext:
    text: "This tutorial will show how to create an adrenaline combo and add the combo\
      \ to all players through a mutator. The specific adrenaline combo that we are\
      \ making is called the Bullet Time combo. What this adrenaline combo will allow\
      \ us to do is once the combo is activated, gameplay speed will slowdown allowing\
      \ all players to enter into \"Bullet Time\" like in the matrix trilogies.\n\n\
      ==Getting Started==\n\nFirst off, we will need to create the directory structure\
      \ in the UT2004 directory. Create a folder named \"MutBulletTimeCombo\". Then\
      \ inside this folder, create another folder called \"Classes\". For more information\
      \ on the package structure, see [[Legacy:Set Up Package Folders|Set Up Package\
      \ Folders]].\n\nWe will create our script files in the this directory. Next,\
      \ go into the system directory and locate the ut2004.ini file. Open up the file\
      \ and do a search for Editor.EditorEngine. In this section, you will see many\
      \ \"EditPackages=X\" where X is a package name. Our package is MutBulletTimeCombo,\
      \ so at the end of that list, add the line \"EditPackages=MutBulletTimeCombo\"\
      .\n\n==Creating Combo Class==\n\nCreate a new file in your preferred text editor\
      \ and save the file as ComboBulletTime.uc. Inside that file, create a class\
      \ called ComboBulletTime and have it extend the Combo class. This way, we gain\
      \ access to the Combo class's functions and member variables. These will help\
      \ us in creating our own adrenaline combo. Here is the code you will need:\n\
      \n<uscript>\nclass ComboBulletTime extends Combo;\n\nvar float fOrigGameSpeed;\n\
      \n/*\nThis function will get called when right combination is entered.\n*/\n\
      function StartEffect(xPawn P)\n{\n     fOrigGameSpeed = Level.Game.GameSpeed;\n\
      \     Level.Game.SetGameSpeed(0.05);\n}\n\n\n/*\nThis function gets called when\
      \ adrenaline is all gone.\n*/\nfunction StopEffect(xPawn P)\n{\n     Level.Game.SetGameSpeed(fOrigGameSpeed);\n\
      }\n\ndefaultproperties\n{\n     fOrigGameSpeed = 1.0;\n     Duration = 3;\n\
      \     ExecMessage = \"Bullet Time!\"\n     keys[0] = 1;\n     keys[1] = 2;\n\
      \     keys[2] = 1;\n     keys[3] = 2;\n}\n</uscript>\n\nThe two functions called\
      \ StartEffect and StopEffect both do exactly what the name implies. The variable\
      \ Level is an object of the LevelInfo class declared in the Actor class. You\
      \ have access to this variable because Combo extends from the Info class which\
      \ then extends from the Actor class. Inside the LevelInfo class, there is a\
      \ variable called Game which is an object of the GameInfo class. Take a look\
      \ at these classes to see what these contain. Inside the GameInfo class, there\
      \ is a function called SetGameSpeed that changes the value of GameSpeed within\
      \ that same class. Here, we will change the game speed to be 0.05. The game\
      \ speed is based on a percentage. A game speed of 1.0 means the game speed will\
      \ be at 100%. We want to slow the game down, so a game speed of 5% will do the\
      \ job. If you notice, we declared our own variable called fOrigGameSpeed. This\
      \ is used to get the current game speed setting, which is usually 1.0, to set\
      \ the speed back to once the adrenaline combo wears off.\n\nThe next thing to\
      \ mention is the keys array in the default properties. These are where the combination\
      \ of keys are declared that the player must press in order to get the combo\
      \ activated. If you take a look at the Combo class, there are numbers which\
      \ go with the direction the player presses. 1 is up, 2 is down, 4 is left, and\
      \ 8 is right. In this example, the player must press \"Up, Down, Up, Down\"\
      \ in that order when the player has full adrenaline to activate the combo.\n\
      \nAlso in the default properties, you will notice the duration variable being\
      \ declared to three. The reason for this is that we have set the game speed\
      \ to 5%. So, 3 seconds running at 5% game speed will probably take like 60 seconds\
      \ for the adrenaline to where off.\n\n==Mutator==\n\nHere, we will be adding\
      \ a class called MutBulletTimeCombo, so create a new file of the same name and\
      \ the .uc extension. When declaring the MutBulletTimeCombo class, have it extend\
      \ Mutator. The code to add the Adrenaline combo to every player is below:\n\n\
      <uscript>\nclass MutBulletTimeCombo extends Mutator;\n\nvar xPlayer NotifyPlayer[32];\n\
      \nfunction Timer()\n{\n     local int i;\n\n     for(i = 0; i < 32; i++)\n \
      \    {\n          if(NotifyPlayer[i] != None)\n          {\n               NotifyPlayer[i].ClientReceiveCombo(\"\
      MutBulletTimeCombo.ComboBulletTime\");\n               NotifyPlayer[i] = None;\n\
      \          }\n\n     }\n}\n\nfunction bool IsRelevant(Actor Other, out byte\
      \ bSuperRelevant)\n{\n     local int i;\n\n     if(xPlayer(Other) != None)\n\
      \     {\n          for(i=0; i<16; i++)\n\t  {\n\t       if (xPlayer(Other).ComboNameList[i]\
      \ ~= \"MutBulletTimeCombo.ComboBulletTime\")\n                    break;\n \
      \              else if(xPlayer(Other).ComboNameList[i] == \"\")\n          \
      \     {\n                    xPlayer(Other).ComboNameList[i] = \"MutBulletTimeCombo.ComboBulletTime\"\
      ;\n\t\t    break;\n               }\n          }\n          for(i = 0; i < 32;\
      \ i++)\n          {\n               if(NotifyPlayer[i] == None)\n          \
      \     {\n                    NotifyPlayer[i] = xPlayer(Other);\n           \
      \         SetTimer(0.5, false);\n                    break;\n              \
      \ }\n          }\n     }\n     if(NextMutator != None)\n          return NextMutator.IsRelevant(Other,\
      \ bSuperRelevant);\n     else\n          return true;\n}\n\ndefaultproperties\n\
      {\n    FriendlyName = \"Bullet Time Combo\"\n    Description = \"Adds the bullet\
      \ time combo (UDUD). The combo slows all gameplay down, but allows players aim\
      \ to be more accurate, as seen in the Matrix trilogies.\"\n}\n</uscript>\n\n\
      The description and the FriendlyName will be shown in the mutator list. The\
      \ Timer function above will notify each player in the level about the new combo.\
      \ To access the combo, you need to put in the package name, followed by the\
      \ combo class. In this case, we add ComboBulletTime class in the MutBulletTimeCombo\
      \ package. Now every player is like Neo!\n\nToDo: Add more description about\
      \ the IsRelavant Function.\n\n==Comments==\n\n'''Mad:''' I hope this tutorial\
      \ helps you in understanding how combos work and how it can be activated through\
      \ a mutator. I recommend grabbing the sniper rifle upon performing this combo\
      \ and get your headshots in. Feel free to leave any comments or make any suggestions\
      \ about this tutorial. \n\n'''Metal_Maniac:''' I get the way it works, but what\
      \ if you wanted to make something similar to the berzerk combo, or you wanted\
      \ to make a mutator that gives you all the default weapons, and they all have\
      \ infinite ammo, but for a limited time, and at the end of that time limit,\
      \ your character explodes and dies, I'd call it \"KamiKaze Mania combo\", so\
      \ if anyone has a suggestion on how to make that, please reply.\n\n'''tornWolf:'''\
      \ Just from a best practices point of view, it would likely be better to declare\
      \ an int (const if we could) MAX_PLAYERS so that if the game will allow a different\
      \ number than 32 players, that can be updated once in the code.  I'm a noob\
      \ so I may be wrong, just thought I'd throw that in.\n\n'''Lord_Farin:''' Nice\
      \ idea from Metal_Maniac (though this was abadoned long ago). I have coded it,\
      \ fairly easy job. Any interested people, leave a message on my talk page.\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 34383
name: "Legacy:Adding An Adrenaline Combo With A Mutator"
revision:
  revid: 34383
  parentid: 34381
  user: "Lord Farin"
  timestamp: 1241635462.000000000
  comment: ""
timestamp: 1668764203.968716000
