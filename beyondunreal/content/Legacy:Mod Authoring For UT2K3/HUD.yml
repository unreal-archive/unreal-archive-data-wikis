---
parse:
  title: "Legacy:Mod Authoring For UT2K3/HUD"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#What_is_a_HUD.3F\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">What is a HUD?</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Implementing_your_own_HUD\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">Implementing your\
      \ own HUD</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"\
      #Inside_the_belly_of_the_beast\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">Inside the belly of the beast</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-4\"><a href=\"#Tackling_the_NumericWidget_and_SpriteWidget\"><span\
      \ class=\"tocnumber\">3.1</span> <span class=\"toctext\">Tackling the NumericWidget\
      \ and SpriteWidget</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a\
      \ href=\"#SpriteWidget\"><span class=\"tocnumber\">3.2</span> <span class=\"\
      toctext\">SpriteWidget</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-6\"\
      ><a href=\"#TextureScale\"><span class=\"tocnumber\">3.2.1</span> <span class=\"\
      toctext\">TextureScale</span></a></li>\n<li class=\"toclevel-3 tocsection-7\"\
      ><a href=\"#ScaleMode\"><span class=\"tocnumber\">3.2.2</span> <span class=\"\
      toctext\">ScaleMode</span></a></li>\n<li class=\"toclevel-3 tocsection-8\"><a\
      \ href=\"#Scale\"><span class=\"tocnumber\">3.2.3</span> <span class=\"toctext\"\
      >Scale</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2 tocsection-9\"\
      ><a href=\"#Drawing_with_Numeric_and_Sprite_Widget.\"><span class=\"tocnumber\"\
      >3.3</span> <span class=\"toctext\">Drawing with Numeric and Sprite Widget.</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-10\"><a href=\"#Calculating_the_final_size_of_the_widget\"\
      ><span class=\"tocnumber\">3.4</span> <span class=\"toctext\">Calculating the\
      \ final size of the widget</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-11\"><a href=\"#Adding_a_Time_Display\"><span class=\"tocnumber\"\
      >4</span> <span class=\"toctext\">Adding a Time Display</span></a>\n<ul>\n<li\
      \ class=\"toclevel-2 tocsection-12\"><a href=\"#Writing_a_Function\"><span class=\"\
      tocnumber\">4.1</span> <span class=\"toctext\">Writing a Function</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-13\"><a href=\"#Calculating_Game_Time\"><span\
      \ class=\"tocnumber\">4.2</span> <span class=\"toctext\">Calculating Game Time</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-14\"><a href=\"#Getting_my_time_to_update\"\
      ><span class=\"tocnumber\">4.3</span> <span class=\"toctext\">Getting my time\
      \ to update</span></a></li>\n<li class=\"toclevel-2 tocsection-15\"><a href=\"\
      #Giving_my_Widgets_a_look_in_the_defaultproperties\"><span class=\"tocnumber\"\
      >4.4</span> <span class=\"toctext\">Giving my Widgets a look in the defaultproperties</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-16\"><a href=\"#Comments\"><span\
      \ class=\"tocnumber\">5</span> <span class=\"toctext\">Comments</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"What_is_a_HUD.3F\"\
      >What is a HUD?</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=1\" title=\"\
      Edit section: What is a HUD?\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The HUD is the graphical representation of information\
      \ that the user sees superimposed over the action during play. It shows their\
      \ health, weapons, armor, etc; anything relevant to the game at that time. If\
      \ you are implementing a whole new game type you may wish to build your own\
      \ HUD. However, if you wanted to add an element to the existing HUD, e.g. <i>time\
      \ remaining</i> in the match or perhaps a <i>radar</i> like in the <i>Invasion</i>\
      \ Gametype, you probably just want to create an <a href=\"/Legacy:Interaction\"\
      \ title=\"Legacy:Interaction\">Interaction</a>.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Implementing_your_own_HUD\">Implementing your own HUD</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=2\"\
      \ title=\"Edit section: Implementing your own HUD\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Implementing your own HUD is not that hard. Let's\
      \ start by simply copying an existing HUD and then making small changes to the\
      \ code. You can find the <b>HUD</b> class in the following class structure.</p>\n\
      <pre><a href=\"/Legacy:Object\" title=\"Legacy:Object\">Object</a>\n +-<a href=\"\
      /Legacy:Actor\" title=\"Legacy:Actor\">Actor</a>\n     +-<a href=\"/Legacy:HUD\"\
      \ title=\"Legacy:HUD\">HUD</a>  \n         +-<a href=\"/Legacy:CinematicHud\"\
      \ title=\"Legacy:CinematicHud\">CinematicHud</a>\n         +-<a href=\"/Legacy:HudBase\"\
      \ title=\"Legacy:HudBase\">HudBase</a>\n             +-<a href=\"/Legacy:HudBDeathMatch\"\
      \ title=\"Legacy:HudBDeathMatch\">HudBDeathMatch</a>\n                 +-<a\
      \ href=\"/Legacy:HudBTeamDeathMatch\" title=\"Legacy:HudBTeamDeathMatch\">HudBTeamDeathMatch</a>\n\
      \                 +-<a href=\"/Legacy:HudBBombingRun\" title=\"Legacy:HudBBombingRun\"\
      >HudBBombingRun</a>\n                 +-<a href=\"/Legacy:HudBCaptureTheFlag\"\
      \ title=\"Legacy:HudBCaptureTheFlag\">HudBCaptureTheFlag</a>\n             \
      \    +-<a href=\"/Legacy:HudBDoubleDomination\" title=\"Legacy:HudBDoubleDomination\"\
      >HudBDoubleDomination</a>\n</pre>\n<p>There are several HUD subclasses to choose\
      \ from. I looked at the one that matched my game type the most. <i>HudBDeathMatch</i>\
      \ is the class that I wanted to copy so I subclassed <i>HudBase</i>, saved the\
      \ file as <i>HudBMyNewHUDName</i> in my package and then copied the entire code\
      \ from <i>HudBDeathMatch</i>.</p>\n<p>Then I went into the <b>GameType</b> that\
      \ I created and added this line in my <a href=\"/Legacy:Default_Properties\"\
      \ title=\"Legacy:Default Properties\">default properties</a>:</p>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\">HUDType<span class=\"sy0\">=</span><span class=\"st0\"\
      >\"MyPackage.HUDMyNewHUDName\"</span></pre></div>\n</div>\n<ul>\n<li><i>MyPackage</i>\
      \ is simply the <a href=\"/Legacy:Package\" title=\"Legacy:Package\">package</a>\
      \ that you create and are saving your work.</li>\n<li><i>HUDMyNewHUDName</i>\
      \ is the actual name of your HUD class, I chose one that was very similar to\
      \ the existing HUD types.</li>\n</ul>\n<p>Compile the code and start your game\
      \ and if you handled the copy and paste work correctly then everything should\
      \ run and appear as normal correctly. The the hard part is trying to figure\
      \ out everything inside the HUD and how to edit it. So lets actually look at\
      \ the code.</p>\n<h2><span class=\"mw-headline\" id=\"Inside_the_belly_of_the_beast\"\
      >Inside the belly of the beast</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=3\"\
      \ title=\"Edit section: Inside the belly of the beast\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>This code below is taken from\
      \ the <b>HUDBase</b> class and talks about the multiple passes the class goes\
      \ through when drawing the HUD.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// Derived HUDs override UpdateHud to update variables\
      \ before rendering;</span>\n<span class=\"co1\">// NO draw code should be in\
      \ derived DrawHud's; they should instead override</span>\n<span class=\"co1\"\
      >// DrawHudPass[A-D] and call their base class' DrawHudPass[A-D] (This cuts</span>\n\
      <span class=\"co1\">// down on render state changes).</span>\n \n<span class=\"\
      kw1\">simulated</span> <span class=\"kw1\">function</span> UpdateHud<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> DrawHudPassA <span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> C<span class=\"br0\">)</span>; <span class=\"\
      co1\">// Alpha Pass</span>\n<span class=\"kw1\">simulated</span> <span class=\"\
      kw1\">function</span> DrawHudPassB <span class=\"br0\">(</span><span class=\"\
      kw8\">Canvas</span> C<span class=\"br0\">)</span>; <span class=\"co1\">// Additive\
      \ Pass</span>\n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ DrawHudPassC <span class=\"br0\">(</span><span class=\"kw8\">Canvas</span>\
      \ C<span class=\"br0\">)</span>; <span class=\"co1\">// Alpha Pass</span>\n\
      <span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> DrawHudPassD\
      \ <span class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C<span class=\"\
      br0\">)</span>; <span class=\"co1\">// Alternate Texture Pass</span></pre></div>\n\
      </div>\n<p>Each pass takes care of drawing a different aspect of the HUD. Now\
      \ looking specifically at the functions in our HUD we should note what happens\
      \ in each function as well as some other functions that are being used.</p>\n\
      <dl>\n<dt>DrawHudPassA&#160;</dt>\n<dd>seems to take care of most of the graphical\
      \ features of the HUD.</dd>\n<dt>ShowPointBarTop&#160;</dt>\n<dd>and &#160;:\
      \ ShowPointBarBottom&#160;: draw parts of the graphical HUD in DrawHudPassA.</dd>\n\
      <dt>DrawHudPassC&#160;</dt>\n<dd>seems to take care of most of the numbers and\
      \ strings that the user sees, like his health, adrenaline, crosshairs and other\
      \ personal information.</dd>\n<dt>DrawWeaponBar&#160;</dt>\n<dd>draws the weapon\
      \ bar</dd>\n</dl>\n<p>So this HUD class uses two of the four passes and then\
      \ uses three extra function to draw some of the HUD as well. But what is being\
      \ drawn when it draws the HUD, what are the elements of the HUD. Looking at\
      \ the element classes at the top of the class I find that there are types of\
      \ objects being drawn <i>NumericWidget</i>, which controlls all number values\
      \ (life,shield,ammo), and <i>SpriteWidget</i>, which is every other piece (borders,icons,pictures).</p>\n\
      <h3><span class=\"mw-headline\" id=\"Tackling_the_NumericWidget_and_SpriteWidget\"\
      >Tackling the NumericWidget and SpriteWidget</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=4\"\
      \ title=\"Edit section: Tackling the NumericWidget and SpriteWidget\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>In <b>defaultproperties</b>\
      \ the graphical look of both elements are set. I'm going to specifically look\
      \ at <b>ShieldCount</b> which is the total amount of shield points that a player\
      \ has in the game.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\">ShieldCount<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>RenderStyle<span class=\"\
      sy0\">=</span><span class=\"kw7\">STY_Alpha</span>,TextureScale<span class=\"\
      sy0\">=</span><span class=\"nu0\">0.100000</span>,DrawPivot<span class=\"sy0\"\
      >=</span>DP_LowerLeft,PosX<span class=\"sy0\">=</span><span class=\"nu0\">0.500000</span>,PosY<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.500000</span>,OffsetX<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>,OffsetY<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>,Tints<span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"\
      br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div>\n\
      </div>\n<p>Now, lets look specifically at what is being set here in detail and\
      \ go blow-by-blow at each of these attributes.</p>\n<dl>\n<dt>RenderStyle&#160;</dt>\n\
      <dd>RenderStyle is an ERenderStyle enumeration. It controls the type of <a href=\"\
      /Legacy:Color_Blending\" title=\"Legacy:Color Blending\">color blending</a>\
      \ or its effect on the other units that it lays over in the HUD.</dd>\n</dl>\n\
      <dl>\n<dt>TextureScale&#160;</dt>\n<dd>Texture Scale is the scale that is applied\
      \ to the texture, relative to a screen resolution of 640 x 480 pixels (that\
      \ means: at that screen resolution a sprite with TextureScale=1.0 will be drawn\
      \ one-to-one; at other screen resolutions it will be proportionally scaled up\
      \ or down).</dd>\n</dl>\n<dl>\n<dt>PosX, PosY, OffsetX, OffsetY&#160;</dt>\n\
      <dd></dd>\n</dl>\n<div class=\"center\">\n<div class=\"floatnone\"><a href=\"\
      /File:Legacy_ScreenPosition.gif\" class=\"image\"><img alt=\"Legacy ScreenPosition.gif\"\
      \ src=\"/w/images/Legacy_ScreenPosition.gif\" width=\"200\" height=\"200\" /></a></div>\n\
      </div>\n<p>The values of PosX and PosY are decimal values representing the position\
      \ on the screen. This frees the user from having to worry about the position\
      \ of their HUD items in relation to the screen resolution. So if you set the\
      \ PosX=0.5000000 and PosY=0.5000000 then you always get a position in the center\
      \ of the screen.</p>\n<p>OffsetX and OffsetY are in actual pixels. You might\
      \ be able to get to the point of the map that you want, but then you want to\
      \ shift it a specific number of pixels and this is where OffsetX and OffsetY\
      \ would come into play.</p>\n<p><br /></p>\n<dl>\n<dt>Drawpivot&#160;</dt>\n\
      <dd></dd>\n</dl>\n<p>Drawpivot is a point on the texture or numeric image.</p>\n\
      <pre> DP_UpperLeft\n DP_UpperMiddle\n DP_UpperRight\n DP_LowerLeft\n DP_LowerMiddle\n\
      \ DP_LowerRight\n DP_MiddleLeft\n DP_MiddleMiddle\n DP_MiddleRight\n</pre>\n\
      <p>The position and offset properties specify a single point on the screen.\
      \ Drawpivot specifies what part of the bitmap is to appear at that point. So\
      \ if you specified DP_UpperLeft, the bitmap would \"hang\" down and to the right\
      \ of the position specified.</p>\n<p><br /></p>\n<p><br /></p>\n<dl>\n<dt>Tints&#160;</dt>\n\
      <dd>This is the color of the mesh/text and can be dependant on the team (in\
      \ three color intensity format). Tint[0] is the first team and Tint[1] is the\
      \ second team. For armor it isn’t important to have the difference in color.\
      \ I would recommend using a graphical color chooser to find the Red-Green-Blue\
      \ (three-color intensity) you are looking for.</dd>\n</dl>\n<h3><span class=\"\
      mw-headline\" id=\"SpriteWidget\">SpriteWidget</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=5\"\
      \ title=\"Edit section: SpriteWidget\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>So here are the properties specific to the sprite\
      \ widget call. Up to this point a lot of them are already covered in the <b>NumericWidget</b>.</p>\n\
      <dl>\n<dt>WidgetTexture&#160;</dt>\n<dd></dd>\n</dl>\n<p>WidgetTexture loads\
      \ the texture from a texture pack for the SpriteWidget. You are able to view\
      \ all the textures that UT2K3 uses through UnrealEd 3.0. Here is an example\
      \ of the HUD Textures that are used.</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\">...<span class=\"me0\">WidgetTexture</span><span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'InterfaceContent.HUD.SkinA'</span>...</pre></div>\n\
      </div>\n<center>[[Image:Legacy_HUD_textures.gif|]]</center>\n<p>This texture\
      \ is not actual size.</p>\n<p><br /></p>\n<dl>\n<dt>TextureCoords&#160;</dt>\n\
      <dd>Textures usually come with several on the same sheet. So you often need\
      \ to specify the rectangle that surrounds the texture that you want. In this\
      \ case we just want to grab the shield from that texture pack, and so there\
      \ is a start point (x,y) and then a length in both directions.</dd>\n</dl>\n\
      <h4><span class=\"mw-headline\" id=\"TextureScale\">TextureScale</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=6\" title=\"Edit section:\
      \ TextureScale\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <center>[[Image:Legacy_textureScale.gif|]]</center>\n<p>The texture scale is\
      \ a percentage at which you want the texture to be displayed. This is useful\
      \ as the texture picture is usually larger than you want it to appear in your\
      \ HUD.</p>\n<h4><span class=\"mw-headline\" id=\"ScaleMode\">ScaleMode</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=7\" title=\"Edit section:\
      \ ScaleMode\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <pre> SM_None\n SM_Up\n SM_Down\n SM_Left\n SM_Right\n</pre>\n<p>This is the\
      \ side that it is scale from. This is used for the bars that adjust with your\
      \ health and ammo. Most of those start from the left side. But this is if you\
      \ plan to have your texture start to get chopped off through use.</p>\n<h4><span\
      \ class=\"mw-headline\" id=\"Scale\">Scale</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=8\"\
      \ title=\"Edit section: Scale\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<p>This is a float value that represents how much is\
      \ cut off from the direction specified above. So for ammo depletion they probably\
      \ calculate an amount appropriate based on the maximum and how much you are\
      \ firing off.</p>\n<h3><span class=\"mw-headline\" id=\"Drawing_with_Numeric_and_Sprite_Widget.\"\
      >Drawing with Numeric and Sprite Widget.</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=9\"\
      \ title=\"Edit section: Drawing with Numeric and Sprite Widget.\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>I noticed there\
      \ were a two function calls: DrawSpriteWidge and DrawNumericWidget.</p>\n<p>These\
      \ are native functions that take care of drawing the two widgets we defined\
      \ above.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n\
      <div class=\"uscript source-uscript\">\n<pre class=\"de1\">DrawSpriteWidget\
      \ <span class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C, <span class=\"\
      kw1\">out</span> SpriteWidget W<span class=\"br0\">)</span> <span class=\"br0\"\
      >[</span><span class=\"kw1\">simulated</span>, <span class=\"kw1\">final</span><span\
      \ class=\"br0\">]</span>\n<span class=\"co1\">// Draws the HUD element described\
      \ by the SpriteWidget W.</span>\n \nDrawNumericWidget <span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> C, <span class=\"kw1\">out</span> NumericWidget\
      \ W, <span class=\"kw1\">out</span> DigitSet D<span class=\"br0\">)</span> <span\
      \ class=\"br0\">[</span><span class=\"kw1\">simulated</span>, <span class=\"\
      kw1\">final</span><span class=\"br0\">]</span>\n<span class=\"co1\">// Draws\
      \ a number.</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\" id=\"\
      Calculating_the_final_size_of_the_widget\">Calculating the final size of the\
      \ widget</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=10\" title=\"\
      Edit section: Calculating the final size of the widget\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p>If your wanting to calculate\
      \ the final size of the widget, from my observations the formula for doing so\
      \ seems to be:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\">SpriteWidgetWidth\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>SpriteWidget.<span\
      \ class=\"me0\">TextureCoords</span>.<span class=\"me0\">X2</span> <span class=\"\
      sy0\">-</span> SpriteWidget.<span class=\"me0\">TextureCoords</span>.<span class=\"\
      me0\">X1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> SpriteWidget.<span\
      \ class=\"me0\">TextureScale</span> <span class=\"sy0\">*</span> C.<span class=\"\
      me0\">ClipX</span><span class=\"sy0\">/</span><span class=\"nu0\">640</span>\
      \ <span class=\"sy0\">*</span> MyHUD.<span class=\"me0\">HUDScale</span>;\n\
      SpriteWidgetHeight <span class=\"sy0\">=</span> <span class=\"br0\">(</span>SpriteWidget.<span\
      \ class=\"me0\">TextureCoords</span>.<span class=\"me0\">Y2</span> <span class=\"\
      sy0\">-</span> SpriteWidget.<span class=\"me0\">TextureCoords</span>.<span class=\"\
      me0\">Y1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> SpriteWidget.<span\
      \ class=\"me0\">TextureScale</span> <span class=\"sy0\">*</span> C.<span class=\"\
      me0\">ClipY</span><span class=\"sy0\">/</span><span class=\"nu0\">480</span>\
      \ <span class=\"sy0\">*</span> MyHUD.<span class=\"me0\">HUDScale</span>;</pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Adding_a_Time_Display\">Adding\
      \ a Time Display</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=11\" title=\"\
      Edit section: Adding a Time Display\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>So I wanted the user to be aware of the time in the\
      \ game. NOTE: I'm not sure if this is the players time in game or the lifetime\
      \ of the game. And so, by example I thought I would go through adding a time\
      \ display.</p>\n<h3><span class=\"mw-headline\" id=\"Writing_a_Function\">Writing\
      \ a Function</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=12\" title=\"\
      Edit section: Writing a Function\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> NumericWidget\
      \ myTime_seconds;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> NumericWidget myTime_minutes;\n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> NumericWidget\
      \ myTime_hours;</pre></div>\n</div>\n<p>I added these variables near the beginning\
      \ of the class where the other Widgets were being declared.</p>\n<h3><span class=\"\
      mw-headline\" id=\"Calculating_Game_Time\">Calculating Game Time</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=13\" title=\"Edit\
      \ section: Calculating Game Time\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>I wanted to calculate game time and as I previously\
      \ discussed I know that some of the information about the game and the players\
      \ were in it are carried in the <a href=\"/Legacy:GameReplicationInfo\" title=\"\
      Legacy:GameReplicationInfo\">GameReplicationInfo</a> and <a href=\"/Legacy:PlayerReplicationInfo\"\
      \ title=\"Legacy:PlayerReplicationInfo\">PlayerReplicationInfo</a> classes.</p>\n\
      <p><br />\nSo I created a function that would calculate game time.</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> CalculateGameTime<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>  <span class=\"br0\">{</span>\n \n    <span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> iElapsedTime;\n \n    iElapsedTime\
      \ <span class=\"sy0\">=</span> PlayerOwner.<span class=\"me0\">GameReplicationInfo</span>.<span\
      \ class=\"me0\">ElapsedTime</span>;\n \n    myTime_hours.<span class=\"me0\"\
      >Value</span> <span class=\"sy0\">=</span> iElapsedTime <span class=\"sy0\"\
      >/</span> <span class=\"nu0\">3600</span>;\n \n    iElapsedTime <span class=\"\
      sy0\">=</span> iElapsedTime <span class=\"sy0\">%</span> <span class=\"nu0\"\
      >3600</span>;\n    myTime_minutes.<span class=\"me0\">Value</span> <span class=\"\
      sy0\">=</span> iElapsedTime <span class=\"sy0\">/</span> <span class=\"nu0\"\
      >60</span>;\n \n    iElapsedTime <span class=\"sy0\">=</span> iElapsedTime <span\
      \ class=\"sy0\">%</span> <span class=\"nu0\">60</span>;\n    myTime_seconds.<span\
      \ class=\"me0\">Value</span> <span class=\"sy0\">=</span> iElapsedTime;\n \n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>This converts the game\
      \ time in seconds into hours, minutes, and seconds. I didn't want the player\
      \ to have to do the conversion in their head from the seconds. I imagine I could\
      \ have done this another way, but these seemed like a good idea at the time.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Getting_my_time_to_update\">Getting my\
      \ time to update</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=14\" title=\"\
      Edit section: Getting my time to update\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>So I created a way to update the game time but I needed\
      \ to figure out how to get it displayed. I again copied form that the other\
      \ widgets used. Inside a <b>DrawHudPassC</b> I added this code (replaced some\
      \ code with a ... for space reasons).</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ DrawHudPassC <span class=\"br0\">(</span><span class=\"kw8\">Canvas</span>\
      \ C<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"\
      kw1\">local</span> <span class=\"kw5\">float</span> PortraitWidth,PortraitHeight,\
      \ XL, YL, Abbrev;\n    <span class=\"kw1\">local</span> <span class=\"kw5\"\
      >string</span> PortraitString;\n \n    ...\n \n    <span class=\"co1\">// Screen</span>\n\
      \    <span class=\"kw2\">if</span><span class=\"br0\">(</span> bShowPersonalInfo\
      \ <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        …\n\
      \ \n       <span class=\"co1\">//time</span>\n       DrawNumericWidget<span\
      \ class=\"br0\">(</span> C, myTime_hours, DigitsBig <span class=\"br0\">)</span>;\n\
      \       DrawNumericWidget<span class=\"br0\">(</span> C, myTime_minutes, DigitsBig\
      \ <span class=\"br0\">)</span>;\n       DrawNumericWidget<span class=\"br0\"\
      >(</span> C, myTime_seconds, DigitsBig <span class=\"br0\">)</span>;\n    <span\
      \ class=\"br0\">}</span></pre></div>\n</div>\n<p><i>C</i> is the Canvas that\
      \ these Widgets are drawn on, the widgets that I'm drawing are what follow,\
      \ and the digits that I'm going to use are a set called DigitsBig previously\
      \ loaded in the defaultproperties.</p>\n<h3><span class=\"mw-headline\" id=\"\
      Giving_my_Widgets_a_look_in_the_defaultproperties\">Giving my Widgets a look\
      \ in the defaultproperties</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=15\"\
      \ title=\"Edit section: Giving my Widgets a look in the defaultproperties\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\">myTime_hours<span class=\"sy0\">=</span><span class=\"\
      br0\">(</span>RenderStyle<span class=\"sy0\">=</span><span class=\"kw7\">STY_Alpha</span>,TextureScale<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.100000</span>,DrawPivot<span class=\"\
      sy0\">=</span>DP_LowerMiddle,PosX<span class=\"sy0\">=</span><span class=\"\
      nu0\">0.450000</span>,PosY<span class=\"sy0\">=</span><span class=\"nu0\">0.500000</span>,OffsetX<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>,OffsetY<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\nmyTime_minutes<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>RenderStyle<span class=\"\
      sy0\">=</span><span class=\"kw7\">STY_Alpha</span>,TextureScale<span class=\"\
      sy0\">=</span><span class=\"nu0\">0.100000</span>,DrawPivot<span class=\"sy0\"\
      >=</span>DP_LowerMiddle,PosX<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0.470000</span>,PosY<span class=\"sy0\">=</span><span class=\"nu0\">0.500000</span>,OffsetX<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>,OffsetY<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\nmyTime_seconds<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>RenderStyle<span class=\"\
      sy0\">=</span><span class=\"kw7\">STY_Alpha</span>,TextureScale<span class=\"\
      sy0\">=</span><span class=\"nu0\">0.100000</span>,DrawPivot<span class=\"sy0\"\
      >=</span>DP_LowerMiddle,PosX<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0.490000</span>,PosY<span class=\"sy0\">=</span><span class=\"nu0\">0.500000</span>,OffsetX<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>,OffsetY<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span>,Tints<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span\
      \ class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,G<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span>,R<span class=\"sy0\"\
      >=</span><span class=\"nu0\">255</span>,A<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div>\n\
      </div>\n<p>This places them on the screen somewhere near the center next to\
      \ the cursor. The important thing is that they were displayed. I also need to\
      \ go back and give them more space and fill empty zeros.</p>\n<h2><span class=\"\
      mw-headline\" id=\"Comments\">Comments</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring_For_UT2K3/HUD?section=16\"\
      \ title=\"Edit section: Comments\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Burtlo</b>: I haven't tried creating/adding/editing\
      \ anything in the texture packs and need to read up on that so I can write more\
      \ for this tutorial. Also some help on formatting would be great. First time\
      \ really writing in a Wiki.</p>\n<p><b>Tarquin:</b> Can I move this to <a href=\"\
      /edit/Legacy:Working_With_The_HUD?redlink=1\" class=\"new\" title=\"Legacy:Working\
      \ With The HUD (page does not exist)\">Working with the HUD</a> maybe?</p>\n\
      <p><b>Burtlo:</b> I got to this page from the bottom of Making Mods. If you\
      \ think it would be more useful in a different category <a href=\"/edit/Legacy:Working_With_The_HUD?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Working With The HUD (page does not exist)\"\
      >Working with the HUD</a> then by all means go for it.</p>\n<p><b>Tarquin:</b>\
      \ It's not really about \"categories\", it's just about making page names easier\
      \ – subpages are not very easy to deal with or link to. And I would rather things\
      \ were a part of the whole wiki than being seen as part of a smaller work-in-progress\
      \ document.</p>\n<p><b>Nuleo:</b> Ok so I made a hud and it draws numeric widgets\
      \ fine but for some reason the sprtie widgets aren't showing up, anyone want\
      \ to do a tutorial on that?</p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.219 seconds\nReal time usage: 0.229 seconds\nPreprocessor visited node count:\
      \ 153/1000000\nPreprocessor generated node count: 276/1000000\nPost‐expand include\
      \ size: 27/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2060-0!*!0!!en!5!*\
      \ and timestamp 20221119212101 and revision id 5018\n -->\n"
  categories:
  - sortkey: "Mod Authoring For UT2K3/HUD"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Interaction"
  - ns: 100
    exists: true
    name: "Legacy:HUD"
  - ns: 100
    exists: true
    name: "Legacy:PlayerReplicationInfo"
  - ns: 100
    exists: true
    name: "Legacy:GameReplicationInfo"
  - ns: 100
    exists: false
    name: "Legacy:Working With The HUD"
  - ns: 100
    exists: true
    name: "Legacy:HudBCaptureTheFlag"
  - ns: 100
    exists: true
    name: "Legacy:Actor"
  - ns: 100
    exists: true
    name: "Legacy:Default Properties"
  - ns: 100
    exists: true
    name: "Legacy:HudBBombingRun"
  - ns: 100
    exists: true
    name: "Legacy:Package"
  - ns: 100
    exists: true
    name: "Legacy:HudBDoubleDomination"
  - ns: 100
    exists: true
    name: "Legacy:HudBase"
  - ns: 100
    exists: true
    name: "Legacy:CinematicHud"
  - ns: 100
    exists: true
    name: "Legacy:Object"
  - ns: 100
    exists: true
    name: "Legacy:HudBTeamDeathMatch"
  - ns: 100
    exists: true
    name: "Legacy:Color Blending"
  - ns: 100
    exists: true
    name: "Legacy:HudBDeathMatch"
  templates: []
  images:
  - "Legacy_ScreenPosition.gif"
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "What is a HUD?"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 0
    anchor: "What_is_a_HUD.3F"
  - toclevel: 1
    level: "2"
    line: "Implementing your own HUD"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 539
    anchor: "Implementing_your_own_HUD"
  - toclevel: 1
    level: "2"
    line: "Inside the belly of the beast"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 2254
    anchor: "Inside_the_belly_of_the_beast"
  - toclevel: 2
    level: "3"
    line: "Tackling the NumericWidget and SpriteWidget"
    number: "3.1"
    index: "4"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 4043
    anchor: "Tackling_the_NumericWidget_and_SpriteWidget"
  - toclevel: 2
    level: "3"
    line: "SpriteWidget"
    number: "3.2"
    index: "5"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 6578
    anchor: "SpriteWidget"
  - toclevel: 3
    level: "4"
    line: "TextureScale"
    number: "3.2.1"
    index: "6"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 7439
    anchor: "TextureScale"
  - toclevel: 3
    level: "4"
    line: "ScaleMode"
    number: "3.2.2"
    index: "7"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 7693
    anchor: "ScaleMode"
  - toclevel: 3
    level: "4"
    line: "Scale"
    number: "3.2.3"
    index: "8"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 7995
    anchor: "Scale"
  - toclevel: 2
    level: "3"
    line: "Drawing with Numeric and Sprite Widget."
    number: "3.3"
    index: "9"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 8228
    anchor: "Drawing_with_Numeric_and_Sprite_Widget."
  - toclevel: 2
    level: "3"
    line: "Calculating the final size of the widget"
    number: "3.4"
    index: "10"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 8698
    anchor: "Calculating_the_final_size_of_the_widget"
  - toclevel: 1
    level: "2"
    line: "Adding a Time Display"
    number: "4"
    index: "11"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 9176
    anchor: "Adding_a_Time_Display"
  - toclevel: 2
    level: "3"
    line: "Writing a Function"
    number: "4.1"
    index: "12"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 9418
    anchor: "Writing_a_Function"
  - toclevel: 2
    level: "3"
    line: "Calculating Game Time"
    number: "4.2"
    index: "13"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 9674
    anchor: "Calculating_Game_Time"
  - toclevel: 2
    level: "3"
    line: "Getting my time to update"
    number: "4.3"
    index: "14"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 10671
    anchor: "Getting_my_time_to_update"
  - toclevel: 2
    level: "3"
    line: "Giving my Widgets a look in the defaultproperties"
    number: "4.4"
    index: "15"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 11588
    anchor: "Giving_my_Widgets_a_look_in_the_defaultproperties"
  - toclevel: 1
    level: "2"
    line: "Comments"
    number: "5"
    index: "16"
    fromtitle: "Legacy:Mod_Authoring_For_UT2K3/HUD"
    byteoffset: 12476
    anchor: "Comments"
  displaytitle: "Legacy:Mod Authoring For UT2K3/HUD"
  iwlinks: []
  wikitext:
    text: "==What is a HUD?==\n\nThe HUD is the graphical representation of information\
      \ that the user sees superimposed over the action during play.  It shows their\
      \ health, weapons, armor, etc; anything relevant to the game at that time. \
      \ If you are implementing a whole new game type you may wish to build your own\
      \ HUD.  However, if you wanted to add an element to the existing HUD, e.g. ''time\
      \ remaining'' in the match or perhaps a ''radar'' like in the ''Invasion'' Gametype,\
      \ you probably just want to create an [[Legacy:Interaction|Interaction]].\n\n\
      ==Implementing your own HUD==\n\nImplementing your own HUD is not that hard.\
      \  Let's start by simply copying an existing HUD and then making small changes\
      \ to the code.  You can find the '''HUD''' class in the following class structure.\n\
      \n [[Legacy:Object|Object]]\n  +-[[Legacy:Actor|Actor]]\n      +-[[Legacy:HUD|HUD]]\
      \  \n          +-[[Legacy:CinematicHud|CinematicHud]]\n          +-[[Legacy:HudBase|HudBase]]\n\
      \              +-[[Legacy:HudBDeathMatch|HudBDeathMatch]]\n                \
      \  +-[[Legacy:HudBTeamDeathMatch|HudBTeamDeathMatch]]\n                  +-[[Legacy:HudBBombingRun|HudBBombingRun]]\n\
      \                  +-[[Legacy:HudBCaptureTheFlag|HudBCaptureTheFlag]]\n    \
      \              +-[[Legacy:HudBDoubleDomination|HudBDoubleDomination]]\n\nThere\
      \ are several HUD subclasses to choose from.  I looked at the one that matched\
      \ my game type the most.  ''HudBDeathMatch'' is the class that I wanted to copy\
      \ so I subclassed ''HudBase'', saved the file as ''HudBMyNewHUDName'' in my\
      \ package and then copied the entire code from ''HudBDeathMatch''.\n\nThen I\
      \ went into the '''GameType''' that I created and added this line in my [[Legacy:Default\
      \ Properties|default properties]]:\n\n<uscript>HUDType=\"MyPackage.HUDMyNewHUDName\"\
      </uscript>\n\n* ''MyPackage'' is simply the [[Legacy:Package|package]] that\
      \ you create and are saving your work.\n* ''HUDMyNewHUDName'' is the actual\
      \ name of your HUD class, I chose one that was very similar to the existing\
      \ HUD types.\n\nCompile the code and start your game and if you handled the\
      \ copy and paste work correctly then everything should run and appear as normal\
      \ correctly.  The the hard part is trying to figure out everything inside the\
      \ HUD and how to edit it.  So lets actually look at the code.\n\n==Inside the\
      \ belly of the beast==\n\nThis code below is taken from the '''HUDBase''' class\
      \ and talks about the multiple passes the class goes through when drawing the\
      \ HUD.\n\n<uscript>\n// Derived HUDs override UpdateHud to update variables\
      \ before rendering;\n// NO draw code should be in derived DrawHud's; they should\
      \ instead override\n// DrawHudPass[A-D] and call their base class' DrawHudPass[A-D]\
      \ (This cuts\n// down on render state changes).\n\nsimulated function UpdateHud();\n\
      \nsimulated function DrawHudPassA (Canvas C); // Alpha Pass\nsimulated function\
      \ DrawHudPassB (Canvas C); // Additive Pass\nsimulated function DrawHudPassC\
      \ (Canvas C); // Alpha Pass\nsimulated function DrawHudPassD (Canvas C); //\
      \ Alternate Texture Pass\n</uscript>\n\nEach pass takes care of drawing a different\
      \ aspect of the HUD.  Now looking specifically at the functions in our HUD we\
      \ should note what happens in each function as well as some other functions\
      \ that are being used.\n\n; DrawHudPassA :  seems to take care of most of the\
      \ graphical features of the HUD.\n; ShowPointBarTop :  and  : ShowPointBarBottom\
      \ :  draw parts of the graphical HUD in DrawHudPassA.\n; DrawHudPassC :  seems\
      \ to take care of most of the numbers and strings that the user sees, like his\
      \ health, adrenaline, crosshairs and other personal information.  \n; DrawWeaponBar\
      \ : draws the weapon bar\n\nSo this HUD class uses two of the four passes and\
      \ then uses three extra function to draw some of the HUD as well.  But what\
      \ is being drawn when it draws the HUD, what are the elements of the HUD.  Looking\
      \ at the element classes at the top of the class I find that there are types\
      \ of objects being drawn ''NumericWidget'', which controlls all number values\
      \ (life,shield,ammo), and ''SpriteWidget'', which is every other piece (borders,icons,pictures).\n\
      \n===Tackling the NumericWidget and SpriteWidget ===\n\nIn '''defaultproperties'''\
      \ the graphical look of both elements are set. I'm going to specifically look\
      \ at '''ShieldCount''' which is the total amount of shield points that a player\
      \ has in the game.  \n\n<uscript>ShieldCount=(RenderStyle=STY_Alpha,TextureScale=0.100000,DrawPivot=DP_LowerLeft,PosX=0.500000,PosY=0.500000,OffsetX=0,OffsetY=0,Tints[0]=(B=255,G=255,R=255,A=255),Tints[1]=(B=255,G=255,R=255,A=255))</uscript>\n\
      \nNow, lets look specifically at what is being set here in detail and go blow-by-blow\
      \ at each of these attributes.\n\n; RenderStyle :RenderStyle is an ERenderStyle\
      \ enumeration.  It controls the type of [[Legacy:Color Blending|color blending]]\
      \ or its effect on the other units that it lays over in the HUD.\n\n; TextureScale\
      \ : Texture Scale is the scale that is applied to the texture, relative to a\
      \ screen resolution of 640 x 480 pixels (that means: at that screen resolution\
      \ a sprite with TextureScale=1.0 will be drawn one-to-one; at other screen resolutions\
      \ it will be proportionally scaled up or down).\n\n; PosX, PosY, OffsetX, OffsetY\
      \ :\n[[Image:Legacy_ScreenPosition.gif|center|]]\n\nThe values of PosX and PosY\
      \ are decimal values representing the position on the screen.  This frees the\
      \ user from having to worry about the position of their HUD items in relation\
      \ to the screen resolution.  So if you set the PosX=0.5000000 and PosY=0.5000000\
      \ then you always get a position in the center of the screen.  \n\nOffsetX and\
      \ OffsetY are in actual pixels.  You might be able to get to the point of the\
      \ map that you want, but then you want to shift it a specific number of pixels\
      \ and this is where OffsetX and OffsetY would come into play.\n\n\n; Drawpivot\
      \ :\nDrawpivot is a point on the texture or numeric image.\n\n  DP_UpperLeft\n\
      \  DP_UpperMiddle\n  DP_UpperRight\n  DP_LowerLeft\n  DP_LowerMiddle\n  DP_LowerRight\n\
      \  DP_MiddleLeft\n  DP_MiddleMiddle\n  DP_MiddleRight\n\nThe position and offset\
      \ properties specify a single point on the screen.  Drawpivot specifies what\
      \ part of the bitmap is to appear at that point.  So if you specified DP_UpperLeft,\
      \ the bitmap would \"hang\" down and to the right of the position specified.\n\
      \n\n\n\n; Tints : This is the color of the mesh/text and can be dependant on\
      \ the team (in three color intensity format).  Tint[0] is the first team and\
      \ Tint[1] is the second team.  For armor it isn’t important to have the difference\
      \ in color.  I would recommend using a graphical color chooser to find the Red-Green-Blue\
      \ (three-color intensity) you are looking for.\n\n===SpriteWidget ===\n\nSo\
      \ here are the properties specific to the sprite widget call.  Up to this point\
      \ a lot of them are already covered in the '''NumericWidget'''.  \n\n;  WidgetTexture\
      \ : \nWidgetTexture loads the texture from a texture pack for the SpriteWidget.\
      \  You are able to view all the textures that UT2K3 uses through UnrealEd 3.0.\
      \  Here is an example of the HUD Textures that are used.\n\n<uscript>...WidgetTexture=Texture'InterfaceContent.HUD.SkinA'...</uscript>\n\
      \n<center>[[Image:Legacy_HUD_textures.gif|]]</center>\n\nThis texture is not\
      \ actual size.\n\n\n; TextureCoords : Textures usually come with several on\
      \ the same sheet.  So you often need to specify the rectangle that surrounds\
      \ the texture that you want.  In this case we just want to grab the shield from\
      \ that texture pack, and so there is a start point (x,y) and then a length in\
      \ both directions.\n\n====TextureScale====\n\n<center>[[Image:Legacy_textureScale.gif|]]</center>\n\
      \nThe texture scale is a percentage at which you want the texture to be displayed.\
      \  This is useful as the texture picture is usually larger than you want it\
      \ to appear in your HUD.\n\n====ScaleMode====\n\n  SM_None\n  SM_Up\n  SM_Down\n\
      \  SM_Left\n  SM_Right\n\nThis is the side that it is scale from.  This is used\
      \ for the bars that adjust with your health and ammo.  Most of those start from\
      \ the left side.  But this is if you plan to have your texture start to get\
      \ chopped off through use. \n\n====Scale====\n\nThis is a float value that represents\
      \ how much is cut off from the direction specified above.  So for ammo depletion\
      \ they probably calculate an amount appropriate based on the maximum and how\
      \ much you are firing off.\n\n===Drawing with Numeric and Sprite Widget.===\n\
      \nI noticed there were a two function calls: DrawSpriteWidge and DrawNumericWidget.\n\
      \nThese are native functions that take care of drawing the two widgets we defined\
      \ above.\n\n<uscript>\nDrawSpriteWidget (Canvas C, out SpriteWidget W) [simulated,\
      \ final]\n// Draws the HUD element described by the SpriteWidget W.\n\nDrawNumericWidget\
      \ (Canvas C, out NumericWidget W, out DigitSet D) [simulated, final]\n// Draws\
      \ a number.\n</uscript>\n\n===Calculating the final size of the widget===\n\n\
      If your wanting to calculate the final size of the widget, from my observations\
      \ the formula for doing so seems to be:\n\n<uscript>\nSpriteWidgetWidth = (SpriteWidget.TextureCoords.X2\
      \ - SpriteWidget.TextureCoords.X1) * SpriteWidget.TextureScale * C.ClipX/640\
      \ * MyHUD.HUDScale;\nSpriteWidgetHeight = (SpriteWidget.TextureCoords.Y2 - SpriteWidget.TextureCoords.Y1)\
      \ * SpriteWidget.TextureScale * C.ClipY/480 * MyHUD.HUDScale;\n</uscript>\n\n\
      ==Adding a Time Display==\n\nSo I wanted the user to be aware of the time in\
      \ the game. NOTE: I'm not sure if this is the players time in game or the lifetime\
      \ of the game.  And so, by example I thought I would go through adding a time\
      \ display.\n\n===Writing a Function===\n\n<uscript>\nvar() NumericWidget myTime_seconds;\n\
      var() NumericWidget myTime_minutes;\nvar() NumericWidget myTime_hours;\n</uscript>\n\
      \nI added these variables near the beginning of the class where the other Widgets\
      \ were being declared.\n\n===Calculating Game Time===\n\nI wanted to calculate\
      \ game time and as I previously discussed I know that some of the information\
      \ about the game and the players were in it are carried in the [[Legacy:GameReplicationInfo|GameReplicationInfo]]\
      \ and [[Legacy:PlayerReplicationInfo|PlayerReplicationInfo]] classes.\n \n\n\
      So I created a function that would calculate game time.\n\n<uscript>\nsimulated\
      \ function CalculateGameTime()  {\n\n    local int iElapsedTime;\n\n    iElapsedTime\
      \ = PlayerOwner.GameReplicationInfo.ElapsedTime;\n\n    myTime_hours.Value =\
      \ iElapsedTime / 3600;\n\n    iElapsedTime = iElapsedTime % 3600;\n    myTime_minutes.Value\
      \ = iElapsedTime / 60;\n\n    iElapsedTime = iElapsedTime % 60;\n    myTime_seconds.Value\
      \ = iElapsedTime;\n\n}\n</uscript>\n\nThis converts the game time in seconds\
      \ into hours, minutes, and seconds.  I didn't want the player to have to do\
      \ the conversion in their head from the seconds.  I imagine I could have done\
      \ this another way, but these seemed like a good idea at the time.\n\n===Getting\
      \ my time to update===\n\nSo I created a way to update the game time but I needed\
      \ to figure out how to get it displayed.  I again copied form that the other\
      \ widgets used.  Inside a '''DrawHudPassC''' I added this code (replaced some\
      \ code with a ... for space reasons). \n\n<uscript>\nsimulated function DrawHudPassC\
      \ (Canvas C)\n{\n    local float PortraitWidth,PortraitHeight, XL, YL, Abbrev;\n\
      \    local string PortraitString;\n    \n    ...\n\n    // Screen\n    if( bShowPersonalInfo\
      \ )\n    {\n        …\n    \n       //time\n       DrawNumericWidget( C, myTime_hours,\
      \ DigitsBig );\n       DrawNumericWidget( C, myTime_minutes, DigitsBig );\n\
      \       DrawNumericWidget( C, myTime_seconds, DigitsBig );\n    }\n</uscript>\n\
      \n''C'' is the Canvas that these Widgets are drawn on, the widgets that I'm\
      \ drawing are what follow, and the digits that I'm going to use are a set called\
      \ DigitsBig previously loaded in the defaultproperties.\n\n===Giving my Widgets\
      \ a look in the defaultproperties===\n\n<uscript>\nmyTime_hours=(RenderStyle=STY_Alpha,TextureScale=0.100000,DrawPivot=DP_LowerMiddle,PosX=0.450000,PosY=0.500000,OffsetX=0,OffsetY=0,Tints[0]=(B=255,G=255,R=255,A=255),Tints[1]=(B=255,G=255,R=255,A=255))\n\
      myTime_minutes=(RenderStyle=STY_Alpha,TextureScale=0.100000,DrawPivot=DP_LowerMiddle,PosX=0.470000,PosY=0.500000,OffsetX=0,OffsetY=0,Tints[0]=(B=255,G=255,R=255,A=255),Tints[1]=(B=255,G=255,R=255,A=255))\n\
      myTime_seconds=(RenderStyle=STY_Alpha,TextureScale=0.100000,DrawPivot=DP_LowerMiddle,PosX=0.490000,PosY=0.500000,OffsetX=0,OffsetY=0,Tints[0]=(B=255,G=255,R=255,A=255),Tints[1]=(B=255,G=255,R=255,A=255))\n\
      </uscript>\n\nThis places them on the screen somewhere near the center next\
      \ to the cursor.  The important thing is that they were displayed.  I also need\
      \ to go back and give them more space and fill empty zeros.\n\n==Comments==\n\
      \n'''Burtlo''': I haven't tried creating/adding/editing anything in the texture\
      \ packs and need to read up on that so I can write more for this tutorial. \
      \ Also some help on formatting would be great.  First time really writing in\
      \ a Wiki.\n\n'''Tarquin:''' Can I move this to [[Legacy:Working With The HUD|Working\
      \ with the HUD]] maybe?\n\n'''Burtlo:'''  I got to this page from the bottom\
      \ of Making Mods.  If you think it would be more useful in a different category\
      \ [[Legacy:Working With The HUD|Working with the HUD]] then by all means go\
      \ for it.\n\n'''Tarquin:''' It's not really about \"categories\", it's just\
      \ about making page names easier &ndash; subpages are not very easy to deal\
      \ with or link to. And I would rather things were a part of the whole wiki than\
      \ being seen as part of a smaller work-in-progress document.\n\n'''Nuleo:'''\
      \ Ok so I made a hud and it draws numeric widgets fine but for some reason the\
      \ sprtie widgets aren't showing up, anyone want to do a tutorial on that?\n\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 5018
name: "Legacy:Mod Authoring For UT2K3/HUD"
revision:
  revid: 5018
  parentid: 5020
  user: "Switch"
  timestamp: 1142349896.000000000
  comment: "Calculating the final size of the widget"
timestamp: 1668976109.308758000
