---
parse:
  title: "Legacy:Mod Authoring/The Three Mod Types"
  text:
    text: "<h3><span class=\"mw-headline\" id=\"Mutators\">Mutators</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring/The_Three_Mod_Types?section=1\"\
      \ title=\"Edit section: Mutators\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><a href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\"\
      >Mutators</a> are mini-mods. They have limited functionality as defined by the\
      \ Mutator class. Mutators should follow certain rules. If you can't follow these\
      \ rules, you should probably work on a <i>GameType</i> mod.</p>\n<p>The first\
      \ rule is that Mutators should be able to work with any other Mutator. If you\
      \ write a \"Vampire\" mutator that allows the player to drain life from an enemy\
      \ he shoots, the mutator should work well if combined with one of the <i>Arena</i>\
      \ mutators or the <i>No Powerups</i> mutator. This is one of the beneficial\
      \ features of the Mutator system. They slightly change (or mutate) gameplay,\
      \ allowing for interesting combinations.</p>\n<p>The second rule is that Mutators\
      \ should only change gameplay in a slight fashion. Although that's a vague way\
      \ of putting it, you need to try and restrict your Mutator behavior. Careful\
      \ mutator design will increase the chances of your mutator working with other\
      \ mods and will decrease your support effort.</p>\n<p>The third rule is that\
      \ Mutators should share resources with other Mutators. If your Mutator implements\
      \ the <code>ModifyPlayer</code> function, you need to call <code>NextMutator.ModifyPlayer</code>\
      \ somewhere inside your version of the function. This ensures that any Mutator\
      \ on the Mutator list after your mod gets a chance to deal with the function\
      \ call. Failing to do this is poor programming style.</p>\n<h3><span class=\"\
      mw-headline\" id=\"GameTypes\">GameTypes</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Mod_Authoring/The_Three_Mod_Types?section=2\"\
      \ title=\"Edit section: GameTypes\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>GameTypes are a much larger class of mod. They do\
      \ everything the <a href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\">Mutator</a>\
      \ can't and allow you access to a much larger range of functionality. If your\
      \ idea can't be implemented within a Mutator, you should work on a GameType.</p>\n\
      <p>The drawback of a GameType is that it cannot be mixed with other GameTypes.\
      \ For example, <a href=\"/Legacy:CTF\" title=\"Legacy:CTF\" class=\"mw-redirect\"\
      >Capture the Flag</a> is a GameType in Unreal Tournament. It is a wholly different\
      \ style of gameplay from <a href=\"/Legacy:AS\" title=\"Legacy:AS\" class=\"\
      mw-redirect\">Assault</a> (another GameType).</p>\n<p>GameTypes are implemented\
      \ as subclasses of the <a href=\"/Legacy:TournamentGameInfo\" title=\"Legacy:TournamentGameInfo\"\
      >TournamentGameInfo</a> class. There aren't any specific rules for GameTypes,\
      \ other than some client-server issues that you should be aware of (and that\
      \ we will discuss later).</p>\n<h3><span class=\"mw-headline\" id=\"Everything_Else\"\
      >Everything Else</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Mod_Authoring/The_Three_Mod_Types?section=3\"\
      \ title=\"Edit section: Everything Else\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>It is possible to write a mod that doesn't change\
      \ gameplay through the <a href=\"/Legacy:GameInfo_(UT)\" title=\"Legacy:GameInfo\
      \ (UT)\">GameInfo (UT)</a> or <a href=\"/Legacy:Mutator\" title=\"Legacy:Mutator\"\
      >Mutator</a> classes. These would include Player Plugin Models (PPM) or a new\
      \ weapon. We'll talk about a few prime examples like <a href=\"/Legacy:Weapon_(UT)\"\
      \ title=\"Legacy:Weapon (UT)\">Weapon (UT)s</a> and <a href=\"/Legacy:Pickup_(UT)\"\
      \ title=\"Legacy:Pickup (UT)\">Pickup (UT)s</a> later. GameTypes will often\
      \ include many new weapons, pickups, <a href=\"/Legacy:Artificial_Intelligence\"\
      \ title=\"Legacy:Artificial Intelligence\">AI</a> features, or special actors\
      \ that are separate from the game rules themselves.</p>\n<hr />\n<p>Prev Page:\
      \ <a href=\"/Legacy:Mod_Authoring/Some_Advice_To_Start_With\" title=\"Legacy:Mod\
      \ Authoring/Some Advice To Start With\">Legacy:Mod Authoring/Some Advice To\
      \ Start With</a> – <b>Section 3 of 12</b> – Next Page: <a href=\"/Legacy:Mod_Authoring/A_Few_Things_To_Watch_Out_For\"\
      \ title=\"Legacy:Mod Authoring/A Few Things To Watch Out For\">Legacy:Mod Authoring/A\
      \ Few Things To Watch Out For</a></p>\n\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.028 seconds\nReal time usage: 0.029 seconds\nPreprocessor visited\
      \ node count: 14/1000000\nPreprocessor generated node count: 48/1000000\nPost‐\
      expand include size: 38/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1798-0!*!0!!*!*!*\
      \ and timestamp 20221118155553 and revision id 4412\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:TournamentGameInfo"
  - ns: 100
    exists: true
    name: "Legacy:CTF"
  - ns: 100
    exists: true
    name: "Legacy:Mutator"
  - ns: 100
    exists: true
    name: "Legacy:GameInfo (UT)"
  - ns: 100
    exists: true
    name: "Legacy:AS"
  - ns: 100
    exists: true
    name: "Legacy:Mod Authoring/Some Advice To Start With"
  - ns: 100
    exists: true
    name: "Legacy:Weapon (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Pickup (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Artificial Intelligence"
  - ns: 100
    exists: true
    name: "Legacy:Mod Authoring/A Few Things To Watch Out For"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "3"
    line: "Mutators"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Mod_Authoring/The_Three_Mod_Types"
    byteoffset: 0
    anchor: "Mutators"
  - toclevel: 1
    level: "3"
    line: "GameTypes"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Mod_Authoring/The_Three_Mod_Types"
    byteoffset: 1381
    anchor: "GameTypes"
  - toclevel: 1
    level: "3"
    line: "Everything Else"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Mod_Authoring/The_Three_Mod_Types"
    byteoffset: 2141
    anchor: "Everything_Else"
  displaytitle: "Legacy:Mod Authoring/The Three Mod Types"
  iwlinks: []
  wikitext:
    text: "===Mutators ===\n\n[[Legacy:Mutator|Mutator]]s are mini-mods. They have\
      \ limited functionality as defined by the Mutator class. Mutators should follow\
      \ certain rules. If you can't follow these rules, you should probably work on\
      \ a ''GameType'' mod.\n\nThe first rule is that Mutators should be able to work\
      \ with any other Mutator. If you write a \"Vampire\" mutator that allows the\
      \ player to drain life from an enemy he shoots, the mutator should work well\
      \ if combined with one of the ''Arena'' mutators or the ''No Powerups'' mutator.\
      \ This is one of the beneficial features of the Mutator system. They slightly\
      \ change (or mutate) gameplay, allowing for interesting combinations.\n\nThe\
      \ second rule is that Mutators should only change gameplay in a slight fashion.\
      \ Although that's a vague way of putting it, you need to try and restrict your\
      \ Mutator behavior. Careful mutator design will increase the chances of your\
      \ mutator working with other mods and will decrease your support effort.\n\n\
      The third rule is that Mutators should share resources with other Mutators.\
      \ If your Mutator implements the <code>ModifyPlayer</code> function, you need\
      \ to call <code>NextMutator.ModifyPlayer</code> somewhere inside your version\
      \ of the function. This ensures that any Mutator on the Mutator list after your\
      \ mod gets a chance to deal with the function call. Failing to do this is poor\
      \ programming style.\n\n===GameTypes ===\n\nGameTypes are a much larger class\
      \ of mod. They do everything the [[Legacy:Mutator|Mutator]] can't and allow\
      \ you access to a much larger range of functionality. If your idea can't be\
      \ implemented within a Mutator, you should work on a GameType.\n\nThe drawback\
      \ of a GameType is that it cannot be mixed with other GameTypes. For example,\
      \ [[Legacy:CTF|Capture the Flag]] is a GameType in Unreal Tournament. It is\
      \ a wholly different style of gameplay from [[Legacy:AS|Assault]] (another GameType).\n\
      \nGameTypes are implemented as subclasses of the [[Legacy:TournamentGameInfo|TournamentGameInfo]]\
      \ class. There aren't any specific rules for GameTypes, other than some client-server\
      \ issues that you should be aware of (and that we will discuss later).\n\n===Everything\
      \ Else ===\n\nIt is possible to write a mod that doesn't change gameplay through\
      \ the [[Legacy:GameInfo (UT)|GameInfo (UT)]] or [[Legacy:Mutator|Mutator]] classes.\
      \ These would include Player Plugin Models (PPM) or a new weapon. We'll talk\
      \ about a few prime examples like [[Legacy:Weapon (UT)|Weapon (UT)]]s and [[Legacy:Pickup\
      \ (UT)|Pickup (UT)]]s later. GameTypes will often include many new weapons,\
      \ pickups, [[Legacy:Artificial Intelligence|AI]] features, or special actors\
      \ that are separate from the game rules themselves.\n\n----\n\nPrev Page:  [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Some\
      \ Advice To Start With]] &ndash; '''Section 3 of 12''' &ndash; Next Page:  [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/A\
      \ Few Things To Watch Out For]]"
  properties: []
  revId: 4412
name: "Legacy:Mod Authoring/The Three Mod Types"
revision:
  revid: 4412
  parentid: 4413
  user: "Mychaeel"
  timestamp: 1021374362.000000000
  comment: "*"
timestamp: 1668786877.307114000
