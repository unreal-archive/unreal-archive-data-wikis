---
parse:
  title: "Legacy:Manual Shift Car"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Breakdown\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Breakdown</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#The_Goods\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">The Goods</span></a>\n<ul>\n<li\
      \ class=\"toclevel-2 tocsection-3\"><a href=\"#To_start_the_class_off\"><span\
      \ class=\"tocnumber\">2.1</span> <span class=\"toctext\">To start the class\
      \ off</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Critical_variables\"\
      ><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">Critical variables</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-5\"><a href=\"#Not_so_critical_variables\"\
      ><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">Not so critical\
      \ variables</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-6\"><a href=\"\
      #Replication_.3D\"><span class=\"tocnumber\">2.3.1</span> <span class=\"toctext\"\
      >Replication =</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2 tocsection-7\"\
      ><a href=\"#Functions\"><span class=\"tocnumber\">2.4</span> <span class=\"\
      toctext\">Functions</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-8\"\
      ><a href=\"#Defaults\"><span class=\"tocnumber\">2.4.1</span> <span class=\"\
      toctext\">Defaults</span></a></li>\n<li class=\"toclevel-3 tocsection-9\"><a\
      \ href=\"#Notes\"><span class=\"tocnumber\">2.4.2</span> <span class=\"toctext\"\
      >Notes</span></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-10\"\
      ><a href=\"#Related_Topics\"><span class=\"tocnumber\">3</span> <span class=\"\
      toctext\">Related Topics</span></a></li>\n<li class=\"toclevel-1 tocsection-11\"\
      ><a href=\"#Discussion\"><span class=\"tocnumber\">4</span> <span class=\"toctext\"\
      >Discussion</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Breakdown\">Breakdown</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=1\"\
      \ title=\"Edit section: Breakdown\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This is a convertion of <a href=\"/Legacy:ONSWheeledCraft\"\
      \ title=\"Legacy:ONSWheeledCraft\">ONSWheeledCraft</a>. This class allows for\
      \ a stick shift or otherwise known as a manual transmission car. Why stick shift?</p>\n\
      <ul>\n<li>It doesn't cost much in terms of fps</li>\n<li>Lets you rev it in\
      \ neutral&#160;:)</li>\n<li>Fun to drive</li>\n<li>Will allow rear/front/all\
      \ wheel drive</li>\n<li>Holding the brake and the rear wheels keep spinning\
      \ (no rear brakes)</li>\n</ul>\n<ul>\n<li>I hope you can use what I (CIpen)\
      \ have created</li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"The_Goods\"\
      >The Goods</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=2\" title=\"Edit section:\
      \ The Goods\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"To_start_the_class_off\">To start the class\
      \ off</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=3\" title=\"Edit section:\
      \ To start the class off\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> WheeledClutch_Brake\
      \ <span class=\"kw1\">extends</span> <span class=\"kw9\">ONSVehicle</span>;</pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"Critical_variables\">Critical variables</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Manual_Shift_Car?section=4\" title=\"Edit section: Critical\
      \ variables\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \             WheelSoftness;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>     \
      \        WheelPenScale;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span>             WheelPenOffset;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>             WheelRestitution;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span>             WheelAdhesion;\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>             WheelInertia;   <span class=\"co1\"\
      >// I believe this is how much to resist change in motion</span>\n \n    <span\
      \ class=\"co1\">//I(CIpen) made these an array so we could have different slips\
      \ on each surface</span>\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> array<span class=\"sy0\">&lt;</span>float<span\
      \ class=\"sy0\">&gt;</span>         WheelLongSlip; <span class=\"co1\">// I\
      \ think this is so we can have the wheels slip when you take off</span>\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ array<span class=\"sy0\">&lt;</span>InterpCurve<span class=\"sy0\">&gt;</span>\
      \   WheelLongFrictionFunc;<span class=\"co1\">//this is the curve for how slippery\
      \ the wheels are allong the X axis(forwards slip)</span>\n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> array<span\
      \ class=\"sy0\">&lt;</span>InterpCurve<span class=\"sy0\">&gt;</span>   WheelLatSlipFunc;<span\
      \ class=\"co1\">//this is the curve for how slippery the wheels are allong the\
      \ Y axis(left/right slip)</span>\n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> array<span class=\"sy0\">&lt;</span>float<span\
      \ class=\"sy0\">&gt;</span>         WheelLongFrictionScale;  <span class=\"\
      co1\">// quick way to change the ammount of friction without having to draw\
      \ out</span>\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> array<span class=\"sy0\">&lt;</span>float<span class=\"\
      sy0\">&gt;</span>         WheelLatFrictionScale;   <span class=\"co1\">// a\
      \ new friction curve</span>\n \n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             WheelHandbrakeSlip;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             WheelHandbrakeFriction;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             WheelSuspensionTravel;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             WheelSuspensionOffset;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             WheelSuspensionMaxRenderTravel;   \n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             FTScale;\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             ChassisTorqueScale;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>                             MinBrakeFriction;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">InterpCurve</span>                       MaxSteerAngleCurve;\
      \ <span class=\"co1\">// degrees, this makes the wheels turn like real car wheels*</span>\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>                             GearRatios<span\
      \ class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span>;\
      \  <span class=\"co1\">// 0 is reverse, 1-4 f</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">int</span>\
      \                               NumForwardGears;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             TransRatio;   <span class=\"co1\">// Other(constant)gears\
      \  i.e. so we can have driveshaft ratio(if one applies)</span>\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             ChangeUpPoint;   <span\
      \ class=\"co1\">//EngineRPM that signals gear up change</span>\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             ChangeDownPoint; <span\
      \ class=\"co1\">//EngineRPM that signals gear down change</span>\n \n<span class=\"\
      kw1\">var</span>   <span class=\"kw5\">int</span>                          \
      \     bGearUp;\n<span class=\"kw1\">var</span>   <span class=\"kw5\">int</span>\
      \                               bGearDown;\n \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             LSDFactor;                                   \
      \                                                 \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             EngineBrakeFactor;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             EngineBrakeRPMScale;                         \
      \                                                            \n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             MaxBrakeTorque;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span>                             SteerSpeed; \
      \        <span class=\"co1\">// How fast it turns         </span>\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">float</span>                             TurnDamping;      \
      \                                                                          \
      \    \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> <span class=\"kw5\">float</span>                            \
      \ StopThreshold;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span>                  \
      \           HandbrakeThresh;                                               \
      \                                      \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             EngineInertia;     <span class=\"co1\">// Pre-gear\
      \ box engine (piston mass)</span>\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">bool</span>                              bClutching;        <span class=\"\
      co1\">// If holding the clutch</span>\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">bool</span>                              bOldClutching;  \n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>                             IdleRPM;\
      \              <span class=\"co1\">//RPM to idle at</span>\n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">float</span>                             EngineRPMSoundRange;   <span\
      \ class=\"co1\">//RPM sound range</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">name</span>\
      \                              SteerBoneName;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> EAxis                 \
      \            SteerBoneAxis;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>     \
      \                        SteerBoneMaxAngle; <span class=\"co1\">// degrees \
      \                                                                          \
      \          </span>\n \n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>                             OutputBrake;    <span class=\"co1\"\
      >//How much we are braking</span>\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>                             OutputGas;      <span class=\"\
      co1\">//How much are we giving gas</span>\n<span class=\"kw1\">var</span>  \
      \ <span class=\"kw5\">float</span>                             OutputPitch;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">bool</span>           \
      \                   OutputHandbrake;\n \n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">int</span>                               Gear;           <span\
      \ class=\"co1\">//What gear we are in</span>\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>                             ForwardVel;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">bool</span>           \
      \                   bIsInverted;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">bool</span>                              bIsDriving;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">float</span>                             NumPoweredWheels;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>          \
      \                   NeutralRPM;\n \n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">InterpCurve</span>                       RPMtoGas;           <span class=\"\
      co1\">// This is what I use to convert the current in gear RPM to the amount\
      \ of gas so the RPM doesn't go to zero when we hit the clutch</span>\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">InterpCurve</span>                       TorqueCurve;\
      \        <span class=\"co1\">// Engine output torque</span>\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">InterpCurve</span>                       EngineS;\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">InterpCurve</span>                       BrakeCurve;     <span\
      \ class=\"co1\">//This simulates more lifelike braking, where you apply braking</span>\n\
      \ \n<span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>      \
      \                       Gas, Gas2, hBrake;\n \n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>                             RPM2;    <span\
      \ class=\"co1\">//Neutral RPM</span>\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">float</span>                             RPM;     <span class=\"\
      co1\">//Neutral RPM</span>\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>                             NRPM;\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">bool</span>                              bBraking; \
      \  <span class=\"co1\">//if we are braking</span>\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">bool</span>                              bThrot, bNThrot,\
      \ bNoGas;\n<span class=\"kw1\">var</span>   <span class=\"kw5\">bool</span>\
      \                              bInGear;          <span class=\"co1\">//if we\
      \ are completly in gear</span>\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">bool</span>                              bRadians;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">float</span>                             TotalSpinVel;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>          \
      \                   EngineRPM;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>                             WheelRPM;<span class=\"co1\"\
      >// used to get the wheel RPM at anytime(so we don't change EngineRPM which\
      \ is what the engine sound is tied to)</span>\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>                             CarMPH;\n<span\
      \ class=\"kw1\">var</span>   <span class=\"kw5\">float</span>              \
      \               ETorque;\n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>                             ActualSteering;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">float</span>                             SteerBoneAngle;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>          \
      \                   EnginePitch;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">Vector</span>                            worldForward;\n<span class=\"\
      kw1\">var</span>   <span class=\"kw5\">Vector</span>                       \
      \     worldRight;\n<span class=\"kw1\">var</span>   <span class=\"kw5\">Vector</span>\
      \                            worldUp;\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">Matrix</span>                            carTM;\n<span class=\"\
      kw1\">var</span>   <span class=\"kw5\">Rotator</span>                      \
      \     SteerRot;\n<span class=\"kw1\">var</span>   <span class=\"kw5\">bool</span>\
      \                              bCurrentOnGround;\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>                             DeltaPitch;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>          \
      \                   DeltaHeading;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>                             DeltaRoll;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">float</span>                             VRate;\n\
      \ \n<span class=\"kw1\">var</span>   <span class=\"kw5\">vector</span>     \
      \                       one, two, three;\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">vector</span>                            Dist1, Dist2;     <span\
      \ class=\"co1\">// unused but this was for doing the daredevil stuff</span>\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>          \
      \                   Dist3;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">bool</span>                              bBrakeFrontWheelsOnly, bBrakeFrontWheels;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">Vector</span>         \
      \                   UDForce, UDTorque;\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">Vector</span>                            WForce, WTorque;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">Coords</span>         \
      \                   WheelCoords;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">Coords</span>                            OldCoords;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">Coords</span>                            <span\
      \ class=\"kw5\">Coords</span>;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">Vector</span>                            ForwardsInOldPlane;\n<span class=\"\
      kw1\">var</span>   <span class=\"kw9\">Pawn</span>                         \
      \     OldDriver;        \n \n<span class=\"kw1\">struct</span> <span class=\"\
      kw1\">native</span> SCarState\n<span class=\"br0\">{</span>\n    \t  <span class=\"\
      kw1\">var</span> <span class=\"kw5\">vector</span>                    ChassisPosition;\
      \                               \n    \t  <span class=\"kw1\">var</span> <span\
      \ class=\"kw5\">Quat</span>                      ChassisQuaternion;        \
      \                     \n    \t  <span class=\"kw1\">var</span> <span class=\"\
      kw5\">vector</span>                    ChassisLinVel;                      \
      \           \n    \t  <span class=\"kw1\">var</span> <span class=\"kw5\">vector</span>\
      \                    ChassisAngVel;                                 \n \n  \
      \  \t  <span class=\"kw1\">var</span> <span class=\"kw5\">byte</span>      \
      \                ServerHandbrake;                               \n    \t  <span\
      \ class=\"kw1\">var</span> <span class=\"kw5\">byte</span>                 \
      \     ServerBrake;                                   \n    \t  <span class=\"\
      kw1\">var</span> <span class=\"kw5\">byte</span>                      ServerGas;\
      \                                     \n    \t  <span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">byte</span>                      ServerGear;         \
      \                           \n    \t  <span class=\"kw1\">var</span> <span class=\"\
      kw5\">byte</span>                      ServerSteering;\n    \t  <span class=\"\
      kw1\">var</span> <span class=\"kw5\">int</span>                       ServerViewPitch;\n\
      \          <span class=\"kw1\">var</span> <span class=\"kw5\">int</span>   \
      \                    ServerViewYaw;\n<span class=\"br0\">}</span>;\n \n<span\
      \ class=\"kw1\">var</span>   <span class=\"kw5\">byte</span>               \
      \      FudgeByte;                                                          \
      \                           \n<span class=\"kw1\">var</span>   SCarState   \
      \             CarState;                                      \n<span class=\"\
      kw1\">var</span>   SCarState                OldCarState;\n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">KRigidBodyState</span>          ChassisState;\
      \                                  \n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">bool</span>                     bNewCarState;              \
      \                                                                      \n<span\
      \ class=\"kw1\">var</span>   <span class=\"kw5\">bool</span>               \
      \      bOldVehicleOnGround;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>                    TheDeltaTime;</pre></div>\n</div>\n<h3><span\
      \ class=\"mw-headline\" id=\"Not_so_critical_variables\">Not so critical variables</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Manual_Shift_Car?section=5\" title=\"Edit section: Not\
      \ so critical variables\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">var</span>   class<span\
      \ class=\"sy0\">&lt;</span>CameraEffect<span class=\"sy0\">&gt;</span>     \
      \      myBlur;\n<span class=\"kw1\">var</span>   myMotionBlur              \
      \    ClientMotionBlur;\n \n<span class=\"kw1\">var</span>   array<span class=\"\
      sy0\">&lt;</span>ONSDirtSlipEffect<span class=\"sy0\">&gt;</span>          Dust;\
      \ <span class=\"co1\">// FL, FR, RL, RR</span>\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             DustSlipRate;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \                             DustSlipThresh;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \                        RevMeterPosX;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \                        RevMeterPosY;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \                        RevMeterScale;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \                        RevMeterSizeY;\n \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">bool</span>\t\
      \t\t        bDoStuntInfo;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">bool</span>\t\t\t\
      \        bAllowAirControl;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">bool</span>\t\t\t\
      \        bAllowChargingJump;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">bool</span>\t\t\t        bAllowBigWheels;\n \n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">bool</span>\t\t                bPushDown; <span class=\"\
      co1\">//jump is being charged</span>\n<span class=\"kw1\">var</span>   <span\
      \ class=\"kw5\">bool</span>                          bOldPushDown;\n<span class=\"\
      kw1\">var</span>   <span class=\"kw5\">bool</span>                         \
      \ bAllWheelsOnGround;\n \n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\t\t\
      \        MaxJumpForce;\n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>                         JumpForce;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \t\t        MaxJumpSpin;\n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>                         JumpSpin;\n \n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \t\t        JumpChargeTime;\n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>\t\t\t        DesiredJumpForce; <span class=\"co1\">//used\
      \ by AI</span>\n<span class=\"kw1\">var</span>   <span class=\"kw5\">string</span>\t\
      \t\tJumpFeedbackForce;                             \n \n<span class=\"kw1\"\
      >var</span>   <span class=\"kw5\">sound</span>\t\t\t        JumpSound;\n \n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        JumpMeterOriginX;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>                         JumpMeterOriginY;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        JumpMeterWidth;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span>                         JumpMeterHeight;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>                         JumpMeterSpacing;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">color</span>\t\t\t        JumpMeterColor;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">color</span>                         SpinMeterColor;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">Texture</span>\t\t\tJumpMeterTexture;\
      \                              \n \n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\
      \t\t        AirTurnTorque;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\t\t\
      \        AirPitchTorque;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\t\t\
      \        AirPitchDamping;\n<span class=\"kw1\">var</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\t\t\
      \        AirRollTorque;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span>\t\t\t        AirRollDamping;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        MinAirControlDamping;\
      \                                                                          \
      \          \n<span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>\t\
      \t\t        FenderBenderSpeed;\n \n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">bool</span>\t\
      \                        bMakeBrakeLights;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">vector</span>\t\
      \                       BrakeLightOffset<span class=\"br0\">[</span><span class=\"\
      nu0\">2</span><span class=\"br0\">]</span>;                           \n<span\
      \ class=\"kw1\">var</span>   ONSBrakelightCorona\t        BrakeLight<span class=\"\
      br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>;    \
      \                             \n<span class=\"kw1\">var</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">Material</span>\t\
      \                      BrakeLightMaterial;                            \n \n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">Rotator</span>\t\t\tOldRotation;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">Vector</span>\t\t\tLastOnGroundLocation;\
      \                          \n<span class=\"kw1\">var</span>   <span class=\"\
      kw5\">float</span>\t\t\t        LastOnGroundTime;\n \n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>\t\t\t        InAirSpin; <span class=\"\
      co1\">// Degrees</span>\n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>\t\t\t        InAirPitch; <span class=\"co1\">// Degrees</span>\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">float</span>\t\t\t    \
      \    InAirRoll; <span class=\"co1\">// Degrees</span>\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>\t\t\t        InAirTime; <span class=\"\
      co1\">// Second</span>\n<span class=\"kw1\">var</span>   <span class=\"kw5\"\
      >float</span>\t\t\t        InAirDistance; <span class=\"co1\">// Meters</span>\n\
      <span class=\"kw1\">var</span>   <span class=\"kw5\">int</span>\t\t\t\tDaredevilPoints;\n\
      <span class=\"kw1\">var</span>   <span class=\"kw1\">config</span> <span class=\"\
      kw5\">int</span>                    IntSteerBoneAngle;\n \n<span class=\"kw1\"\
      >var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"\
      kw5\">float</span>\t\t\t        DaredevilThreshInAirSpin;                  \
      \    \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> <span class=\"kw5\">float</span>\t\t\t        DaredevilThreshInAirPitch;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        DaredevilThreshInAirRoll;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        DaredevilThreshInAirTime;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"kw5\">float</span>\t\t\t        DaredevilThreshInAirDistance;\n\
      <span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> class<span class=\"sy0\">&lt;</span>LocalMessage<span class=\"sy0\"\
      >&gt;</span>\t        DaredevilMessage<span class=\"re0\">Class</span>&lt; SEMI\
      \ &gt;</pre></div>\n</div>\n<h4><span class=\"mw-headline\" id=\"Replication_.3D\"\
      >Replication =</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=6\" title=\"Edit section:\
      \ Replication =\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">replication</span>\n\
      <span class=\"br0\">{</span>\n        <span class=\"kw1\">reliable</span> <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw7\">Role</span>\
      \ <span class=\"sy0\">==</span> <span class=\"kw7\">ROLE_Authority</span><span\
      \ class=\"br0\">)</span>\n                CarState, FudgeByte;             \
      \          <span class=\"co1\">// make sure we get what we need to the client</span>\n\
      \        <span class=\"kw1\">reliable</span> <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>bNetInitial <span class=\"sy0\">&amp;&amp;</span> <span\
      \ class=\"kw7\">Role</span> <span class=\"sy0\">==</span> <span class=\"kw7\"\
      >ROLE_Authority</span><span class=\"br0\">)</span>\n                bAllowAirControl,\
      \ bAllowChargingJump;        <span class=\"co1\">// showoff stuff</span>\n \
      \       <span class=\"kw1\">reliable</span> <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>bNetInitial <span class=\"sy0\">&amp;&amp;</span> bDoStuntInfo\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw7\">Role</span> <span\
      \ class=\"sy0\">==</span> <span class=\"kw7\">ROLE_Authority</span><span class=\"\
      br0\">)</span>\n                DaredevilThreshInAirDistance, DaredevilThreshInAirTime,\
      \ DaredevilThreshInAirSpin, DaredevilThreshInAirPitch, DaredevilThreshInAirRoll;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<h3><span class=\"mw-headline\"\
      \ id=\"Functions\">Functions</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=7\"\
      \ title=\"Edit section: Functions\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<dl>\n<dt>PostNetBeginPlay</dt>\n</dl>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> <span class=\"kw4\">PostNetBeginPlay</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n      \
      \  <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n \tNumPoweredWheels\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t<span class=\"\
      kw2\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;=</span><span class=\"nu0\"\
      >1</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t<span\
      \ class=\"br0\">{</span>\n\t\tNumPoweredWheels <span class=\"sy0\">+=</span>\
      \ <span class=\"nu0\">1.0</span>;\n\t<span class=\"br0\">}</span>\n       SVehicleUpdateParams<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n       <span class=\"\
      kw6\">Super</span>.<span class=\"kw4\">PostNetBeginPlay</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>PostNetReceive&#160;</dt>\n<dd>Here is were we deal with stuff\
      \ coming from the server.</dd>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw4\">PostNetReceive</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n \t<span class=\"kw6\">Super</span>.<span\
      \ class=\"kw4\">PostNetReceive</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n \n\t<span class=\"kw2\">if</span><span class=\"br0\">(</span>OldCarState.<span\
      \ class=\"me0\">ChassisPosition</span> <span class=\"sy0\">==</span> CarState.<span\
      \ class=\"me0\">ChassisPosition</span> <span class=\"sy0\">&amp;&amp;</span>\n\
      \t\tOldCarState.<span class=\"me0\">ChassisQuaternion</span>.<span class=\"\
      me0\">X</span> <span class=\"sy0\">==</span> CarState.<span class=\"me0\">ChassisQuaternion</span>.<span\
      \ class=\"me0\">X</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span\
      \ class=\"me0\">ChassisQuaternion</span>.<span class=\"me0\">Y</span> <span\
      \ class=\"sy0\">==</span> CarState.<span class=\"me0\">ChassisQuaternion</span>.<span\
      \ class=\"me0\">Y</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span\
      \ class=\"me0\">ChassisQuaternion</span>.<span class=\"me0\">Z</span> <span\
      \ class=\"sy0\">==</span> CarState.<span class=\"me0\">ChassisQuaternion</span>.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span\
      \ class=\"me0\">ChassisQuaternion</span>.<span class=\"me0\">W</span> <span\
      \ class=\"sy0\">==</span> CarState.<span class=\"me0\">ChassisQuaternion</span>.<span\
      \ class=\"me0\">W</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span\
      \ class=\"me0\">ChassisLinVel</span> <span class=\"sy0\">==</span> CarState.<span\
      \ class=\"me0\">ChassisLinVel</span> <span class=\"sy0\">&amp;&amp;</span>\n\
      \t\tOldCarState.<span class=\"me0\">ChassisAngVel</span> <span class=\"sy0\"\
      >==</span> CarState.<span class=\"me0\">ChassisAngVel</span> <span class=\"\
      sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span class=\"me0\">ServerHandbrake</span>\
      \ <span class=\"sy0\">==</span> CarState.<span class=\"me0\">ServerHandbrake</span>\
      \ <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span class=\"me0\"\
      >ServerBrake</span> <span class=\"sy0\">==</span> CarState.<span class=\"me0\"\
      >ServerBrake</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span\
      \ class=\"me0\">ServerGas</span> <span class=\"sy0\">==</span> CarState.<span\
      \ class=\"me0\">ServerGas</span> <span class=\"sy0\">&amp;&amp;</span>\n\t\t\
      OldCarState.<span class=\"me0\">ServerGear</span> <span class=\"sy0\">==</span>\
      \ CarState.<span class=\"me0\">ServerGear</span> <span class=\"sy0\">&amp;&amp;</span>\n\
      \t\tOldCarState.<span class=\"me0\">ServerSteering</span> <span class=\"sy0\"\
      >==</span> CarState.<span class=\"me0\">ServerSteering</span> <span class=\"\
      sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span class=\"me0\">ServerViewPitch</span>\
      \ <span class=\"sy0\">==</span> CarState.<span class=\"me0\">ServerViewPitch</span>\
      \ <span class=\"sy0\">&amp;&amp;</span>\n\t\tOldCarState.<span class=\"me0\"\
      >ServerViewYaw</span> <span class=\"sy0\">==</span> CarState.<span class=\"\
      me0\">ServerViewYaw</span><span class=\"br0\">)</span>\n\t\t<span class=\"kw2\"\
      >return</span>;\n \n\tChassisState.<span class=\"me0\">Position</span>.<span\
      \ class=\"me0\">X</span> <span class=\"sy0\">=</span> CarState.<span class=\"\
      me0\">ChassisPosition</span>.<span class=\"me0\">X</span>;\n\tChassisState.<span\
      \ class=\"me0\">Position</span>.<span class=\"me0\">Y</span> <span class=\"\
      sy0\">=</span> CarState.<span class=\"me0\">ChassisPosition</span>.<span class=\"\
      me0\">Y</span>;\n\tChassisState.<span class=\"me0\">Position</span>.<span class=\"\
      me0\">Z</span> <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ChassisPosition</span>.<span\
      \ class=\"me0\">Z</span>;\n \n\tChassisState.<span class=\"me0\">Quaternion</span>\
      \ <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ChassisQuaternion</span>;\n\
      \ \n\tChassisState.<span class=\"me0\">LinVel</span>.<span class=\"me0\">X</span>\
      \ <span class=\"sy0\">=</span> 0.1f <span class=\"sy0\">*</span> CarState.<span\
      \ class=\"me0\">ChassisLinVel</span>.<span class=\"me0\">X</span>;\n\tChassisState.<span\
      \ class=\"me0\">LinVel</span>.<span class=\"me0\">Y</span> <span class=\"sy0\"\
      >=</span> 0.1f <span class=\"sy0\">*</span> CarState.<span class=\"me0\">ChassisLinVel</span>.<span\
      \ class=\"me0\">Y</span>;\n\tChassisState.<span class=\"me0\">LinVel</span>.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">=</span> 0.1f <span class=\"sy0\"\
      >*</span> CarState.<span class=\"me0\">ChassisLinVel</span>.<span class=\"me0\"\
      >Z</span>;\n \n\tChassisState.<span class=\"me0\">AngVel</span>.<span class=\"\
      me0\">X</span> <span class=\"sy0\">=</span> 0.001f <span class=\"sy0\">*</span>\
      \ CarState.<span class=\"me0\">ChassisAngVel</span>.<span class=\"me0\">X</span>;\n\
      \tChassisState.<span class=\"me0\">AngVel</span>.<span class=\"me0\">Y</span>\
      \ <span class=\"sy0\">=</span> 0.001f <span class=\"sy0\">*</span> CarState.<span\
      \ class=\"me0\">ChassisAngVel</span>.<span class=\"me0\">Y</span>;\n\tChassisState.<span\
      \ class=\"me0\">AngVel</span>.<span class=\"me0\">Z</span> <span class=\"sy0\"\
      >=</span> 0.001f <span class=\"sy0\">*</span> CarState.<span class=\"me0\">ChassisAngVel</span>.<span\
      \ class=\"me0\">Z</span>;\n \n\tbNewCarState <span class=\"sy0\">=</span> <span\
      \ class=\"kw6\">true</span>;\n\tOldCarState.<span class=\"me0\">ChassisPosition</span>\
      \ <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ChassisPosition</span>;\n\
      \tOldCarState.<span class=\"me0\">ChassisQuaternion</span> <span class=\"sy0\"\
      >=</span> CarState.<span class=\"me0\">ChassisQuaternion</span>;\n\tOldCarState.<span\
      \ class=\"me0\">ChassisLinVel</span> <span class=\"sy0\">=</span> CarState.<span\
      \ class=\"me0\">ChassisLinVel</span>;\n\tOldCarState.<span class=\"me0\">ChassisAngVel</span>\
      \ <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ChassisAngVel</span>;\n\
      \tOldCarState.<span class=\"me0\">ServerHandbrake</span> <span class=\"sy0\"\
      >=</span> CarState.<span class=\"me0\">ServerHandbrake</span>;\n\tOldCarState.<span\
      \ class=\"me0\">ServerBrake</span> <span class=\"sy0\">=</span> CarState.<span\
      \ class=\"me0\">ServerBrake</span>;\n\tOldCarState.<span class=\"me0\">ServerGas</span>\
      \ <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ServerGas</span>;\n\
      \tOldCarState.<span class=\"me0\">ServerGear</span> <span class=\"sy0\">=</span>\
      \ CarState.<span class=\"me0\">ServerGear</span>;\n\tOldCarState.<span class=\"\
      me0\">ServerSteering</span> <span class=\"sy0\">=</span> CarState.<span class=\"\
      me0\">ServerSteering</span>;\n\tOldCarState.<span class=\"me0\">ServerViewPitch</span>\
      \ <span class=\"sy0\">=</span> CarState.<span class=\"me0\">ServerViewPitch</span>;\n\
      \tOldCarState.<span class=\"me0\">ServerViewYaw</span> <span class=\"sy0\">=</span>\
      \ CarState.<span class=\"me0\">ServerViewYaw</span>;\n \n\tOutputPitch <span\
      \ class=\"sy0\">=</span> RangeByteToFloat<span class=\"br0\">(</span>CarState.<span\
      \ class=\"me0\">ServerHandbrake</span><span class=\"br0\">)</span>;\n\tOutputHandbrake\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>OutputPitch <span\
      \ class=\"sy0\">&gt;</span> <span class=\"nu0\">0.01</span><span class=\"br0\"\
      >)</span>;\n\tOutputBrake <span class=\"sy0\">=</span> RangeByteToFloat<span\
      \ class=\"br0\">(</span>CarState.<span class=\"me0\">ServerBrake</span><span\
      \ class=\"br0\">)</span>;\n\tOutputGas <span class=\"sy0\">=</span> RangeByteToFloat<span\
      \ class=\"br0\">(</span>CarState.<span class=\"me0\">ServerGas</span><span class=\"\
      br0\">)</span>;\n\tGear <span class=\"sy0\">=</span> CarState.<span class=\"\
      me0\">ServerGear</span>;\n\tSteering <span class=\"sy0\">=</span> RangeByteToFloat<span\
      \ class=\"br0\">(</span>CarState.<span class=\"me0\">ServerSteering</span><span\
      \ class=\"br0\">)</span>;\n\tDriverViewPitch <span class=\"sy0\">=</span> CarState.<span\
      \ class=\"me0\">ServerViewPitch</span>;\n\tDriverViewYaw <span class=\"sy0\"\
      >=</span> CarState.<span class=\"me0\">ServerViewYaw</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>PrecacheAnnouncer</dt>\n</dl>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> PrecacheAnnouncer<span class=\"br0\">(</span>AnnouncerVoice\
      \ V, <span class=\"kw5\">bool</span> bRewardSounds<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n \n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>bRewardSounds <span class=\"sy0\">&amp;&amp;</span> <span class=\"\
      sy0\">!</span>bSoundsPrecached<span class=\"br0\">)</span>\n\t\tV.<span class=\"\
      me0\">PrecacheSound</span><span class=\"br0\">(</span><span class=\"st0\">'fender_bender'</span><span\
      \ class=\"br0\">)</span>;\n \n\t<span class=\"kw6\">Super</span>.<span class=\"\
      me0\">PrecacheAnnouncer</span><span class=\"br0\">(</span>V, bRewardSounds<span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <dl>\n<dt>KUpdateState&#160;</dt>\n<dd>This function tells when we should update.</dd>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">event</span>\
      \ <span class=\"kw5\">bool</span> KUpdateState<span class=\"br0\">(</span><span\
      \ class=\"kw1\">out</span> <span class=\"kw5\">KRigidBodyState</span> newState<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span><span class=\"kw7\">Role</span> <span\
      \ class=\"sy0\">==</span> <span class=\"kw7\">ROLE_Authority</span> <span class=\"\
      sy0\">||</span> <span class=\"sy0\">!</span>bNewCarState<span class=\"br0\"\
      >)</span>\n\t\t<span class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n\
      \ \n\tnewState <span class=\"sy0\">=</span> ChassisState;\n\tbNewCarState <span\
      \ class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\t<span class=\"\
      kw2\">return</span> <span class=\"kw6\">true</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>SVehicleUpdateParams</dt>\n</dl>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">event</span> SVehicleUpdateParams<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n \n\t\
      <span class=\"kw6\">Super</span>.<span class=\"me0\">SVehicleUpdateParams</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n \n\t<span class=\"kw2\"\
      >for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"\
      nu0\">0</span>; i<span class=\"sy0\">&lt;</span>Wheels.<span class=\"me0\">Length</span>;\
      \ i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t<span class=\"\
      br0\">{</span>\n\t\tWheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Softness</span> <span class=\"sy0\">=</span> WheelSoftness;\n\
      \t\tWheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">PenScale</span> <span class=\"sy0\">=</span> WheelPenScale;\n\t\tWheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">PenOffset</span>\
      \ <span class=\"sy0\">=</span> WheelPenOffset;\n\t\tWheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LongSlip</span> <span\
      \ class=\"sy0\">=</span> WheelLongSlip<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span>;\n\t\tWheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">LatSlipFunc</span> <span class=\"\
      sy0\">=</span> WheelLatSlipFunc<span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span>;\n\t\tWheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Restitution</span> <span class=\"\
      sy0\">=</span> WheelRestitution;\n\t\tWheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Adhesion</span> <span class=\"\
      sy0\">=</span> WheelAdhesion;\n\t\tWheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">WheelInertia</span> <span class=\"\
      sy0\">=</span> WheelInertia;\n\t\tWheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">LongFrictionFunc</span> <span class=\"sy0\"\
      >=</span> WheelLongFrictionFunc<span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span>;\n\t\tWheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">HandbrakeFrictionFactor</span>\
      \ <span class=\"sy0\">=</span> WheelHandbrakeFriction;\n\t\tWheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">HandbrakeSlipFactor</span>\
      \ <span class=\"sy0\">=</span> WheelHandbrakeSlip;\n\t\tWheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SuspensionTravel</span>\
      \ <span class=\"sy0\">=</span> WheelSuspensionTravel;\n\t\tWheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SuspensionOffset</span>\
      \ <span class=\"sy0\">=</span> WheelSuspensionOffset;\n\t\tWheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SuspensionMaxRenderTravel</span>\
      \ <span class=\"sy0\">=</span> WheelSuspensionMaxRenderTravel;\n\t<span class=\"\
      br0\">}</span>\n\t<span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"kw7\">Level</span>.<span class=\"me0\">NetMode</span> <span class=\"\
      sy0\">!=</span> NM_DedicatedServer <span class=\"sy0\">&amp;&amp;</span> bMakeBrakeLights<span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\t<span class=\"\
      kw2\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\"\
      >2</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t\t\
      <span class=\"br0\">{</span>\n                     <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>BrakeLight<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n                     <span class=\"br0\">{</span>\n\
      \t\t\t\tBrakeLight<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"kw4\">SetBase</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >None</span><span class=\"br0\">)</span>;\n\t\t\t\tBrakeLight<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"kw4\">SetLocation</span><span\
      \ class=\"br0\">(</span> <span class=\"kw7\">Location</span> <span class=\"\
      sy0\">+</span> <span class=\"br0\">(</span>BrakelightOffset<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;</span> <span\
      \ class=\"kw7\">Rotation</span><span class=\"br0\">)</span> <span class=\"br0\"\
      >)</span>;\n\t\t\t\tBrakeLight<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"kw4\">SetBase</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n\t\t\t\tBrakeLight<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"kw4\">SetRelativeRotation</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">rot</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">32768</span>,<span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t\t\t\t\
      BrakeLight<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      kw7\">Skins</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> BrakeLightMaterial;\n\t\
      \t      <span class=\"br0\">}</span>\n\t\t<span class=\"br0\">}</span>\n\t<span\
      \ class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <dl>\n<dt>UpdateVehicle&#160;</dt>\n<dd>This is the function were everything\
      \ happens</dd>\n</dl>\n<pre>          <i>Also see </i><a href=\"/edit/Legacy:Manual_Shift_Car/C%2B%2B_Version?redlink=1\"\
      \ class=\"new\" title=\"Legacy:Manual Shift Car/C++ Version (page does not exist)\"\
      >Manual Shift Car/C++ Version</a>\n</pre>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">function</span> UpdateVehicle<span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> DeltaTime<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n        <span class=\"kw1\">local</span> <span class=\"kw5\"\
      >Matrix</span> carTM;\n        <span class=\"kw1\">local</span> <span class=\"\
      kw5\">Vector</span> worldUp, worldRight, worldForward;\n \n        <span class=\"\
      kw1\">local</span> <span class=\"kw8\">KarmaParams</span> KP;\n        <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">KRigidBodyState</span> rbState;\n\
      \        <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>   i;\n\
      \        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span> maxSteerAngle,\
      \ maxSteer, deltaSteer;\n        <span class=\"kw1\">local</span> <span class=\"\
      kw5\">float</span> DriveTorque, GripTorque, EngineTorque, EngineBraking, EngineWheelRatio;\n\
      \        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span> BrakeTorque;\n\
      \        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span> NewTotalSpinVel,\
      \ LSDSplit, EvenSplit, UseSplit;\n        <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">float</span> TransInertia;\n        <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> LimitBrakeTorque;\n        <span class=\"\
      kw1\">local</span> <span class=\"kw5\">float</span> WheelTorque, VehicleForce,\
      \ TransAcc;\n        <span class=\"kw1\">local</span> <span class=\"kw5\">float</span>\
      \ TurnAngVel, DampingScale, TurnDampingMag;\n        <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> PitchAngVel, RollAngVel, PitchDampingMag,\
      \ RollDampingMag;\n \n        <span class=\"kw1\">local</span> <span class=\"\
      kw5\">Vector</span> AirControlTorque, AngVel;\n        <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span>  VRate;\n        <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">Vector</span> Force, Torque;\n        <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">int</span> z;\n \n        WForce <span class=\"\
      sy0\">=</span> <span class=\"kw3\">vect</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>;\n\tWTorque <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">vect</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>;\n \n\t<span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>KIsAwake<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n\t\t<span class=\"kw2\"\
      >return</span>;\n        KP <span class=\"sy0\">=</span> <span class=\"kw8\"\
      >KarmaParams</span><span class=\"br0\">(</span>KParams<span class=\"br0\">)</span>;\n\
      \        <span class=\"kw2\">if</span><span class=\"br0\">(</span>KP <span class=\"\
      sy0\">==</span> <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n\
      \t\t<span class=\"kw2\">return</span>;\n \n        <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"kw9\">Controller</span> <span class=\"\
      sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t      <span class=\"co1\">//Calc up (z), right(y)\
      \ and forward (x) vectors</span>\n\t      <span class=\"kw3\">GetAxes</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Rotation</span>, worldRight, worldForward,\
      \ worldUp<span class=\"br0\">)</span>;\n \n\t      <span class=\"co1\">///////////\
      \ STEERING ///////////</span>\n\t      maxSteerAngle <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">InterpCurveEval</span><span class=\"br0\">(</span>MaxSteerAngleCurve,\
      \ VRate<span class=\"br0\">)</span>;\n\t      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>maxSteerAngle<span class=\"sy0\">==</span><span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>\n                    maxSteer <span\
      \ class=\"sy0\">=</span> DeltaTime <span class=\"sy0\">*</span> SteerSpeed <span\
      \ class=\"sy0\">*</span> maxSteerAngle;\n              <span class=\"kw2\">else</span>\n\
      \t            maxSteer <span class=\"sy0\">=</span> DeltaTime <span class=\"\
      sy0\">*</span> SteerSpeed;\n \n\t      deltaSteer <span class=\"sy0\">=</span>\
      \ <span class=\"br0\">(</span><span class=\"sy0\">-</span>Steering <span class=\"\
      sy0\">*</span> maxSteerAngle<span class=\"br0\">)</span> <span class=\"sy0\"\
      >-</span> ActualSteering; <span class=\"co1\">// Amount we want to move (target\
      \ - current)</span>\n\t      deltaSteer <span class=\"sy0\">=</span> <span class=\"\
      kw3\">Clamp</span><span class=\"br0\">(</span>deltaSteer, <span class=\"sy0\"\
      >-</span>maxSteer, maxSteer<span class=\"br0\">)</span>;\n\t      ActualSteering\
      \ <span class=\"sy0\">+=</span> deltaSteer;\n \n\t      <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>bAuto<span class=\"sy0\">==</span><span\
      \ class=\"kw6\">True</span><span class=\"br0\">)</span>\n              <span\
      \ class=\"br0\">{</span>\n\t      \t      EngineTorque <span class=\"sy0\">=</span>\
      \ OutputGas <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>TorqueCurve, EngineRPM<span class=\"br0\">)</span>;\n\
      \t      \t      EngineBraking <span class=\"sy0\">=</span> <span class=\"br0\"\
      >(</span>1.0f <span class=\"sy0\">-</span> OutputGas<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> <span class=\"br0\">(</span>EngineBrakeRPMScale<span\
      \ class=\"sy0\">*</span>EngineRPM <span class=\"sy0\">*</span> EngineBrakeRPMScale<span\
      \ class=\"sy0\">*</span>EngineRPM <span class=\"sy0\">*</span> EngineBrakeFactor<span\
      \ class=\"br0\">)</span>;\n\t      \t      EngineTorque <span class=\"sy0\"\
      >-=</span> EngineBraking;\n\t      \t      EngineWheelRatio <span class=\"sy0\"\
      >=</span> GearRatios<span class=\"br0\">[</span>Gear<span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> TransRatio;\n\t      \t      NewTotalSpinVel<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.0</span>;\n\t      \t      EngineRPM\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t      \t \
      \     <span class=\"kw2\">for</span><span class=\"br0\">(</span>i<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>Wheels.<span\
      \ class=\"me0\">length</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n\t      \t      <span class=\"br0\">{</span>\n\t\t      \t \
      \     EvenSplit <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span\
      \ class=\"sy0\">/</span>NumPoweredWheels;\n\t\t      \t      <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>TotalSpinVel <span class=\"sy0\"\
      >&gt;</span> <span class=\"nu0\">0.1</span><span class=\"br0\">)</span>\n\t\t\
      \t      \t      LSDSplit <span class=\"sy0\">=</span> <span class=\"br0\">(</span>TotalSpinVel\
      \ <span class=\"sy0\">-</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">SpinVel</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"br0\">(</span>NumPoweredWheels<span\
      \ class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> TotalSpinVel<span class=\"br0\">)</span>;\n\t\
      \t      \t      <span class=\"kw2\">else</span>\n\t\t\t      \t      LSDSplit\
      \ <span class=\"sy0\">=</span> EvenSplit;\n\t\t      \t      UseSplit <span\
      \ class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">1</span><span class=\"sy0\">-</span>LSDFactor<span class=\"\
      br0\">)</span> <span class=\"sy0\">*</span> EvenSplit<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">+</span> <span class=\"br0\">(</span>LSDFactor <span class=\"\
      sy0\">*</span> LSDSplit<span class=\"br0\">)</span>;\n\t\t      \t      DriveTorque\
      \ <span class=\"sy0\">=</span> UseSplit <span class=\"sy0\">*</span> <span class=\"\
      br0\">(</span>EngineTorque <span class=\"sy0\">/</span> EngineWheelRatio<span\
      \ class=\"br0\">)</span>;\n\t\t      \t      GripTorque <span class=\"sy0\"\
      >=</span> FTScale <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">WheelRadius</span> <span class=\"\
      sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">TireLoad</span> <span class=\"sy0\">*</span> WheelLongFrictionScale<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LongFrictionFunc</span>, <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SlipVel</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n\t\t      \t      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SlipVel</span> <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\t      \t\
      \      GripTorque <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1.0</span>;\n\t\t      \t      TransInertia <span class=\"sy0\"\
      >=</span> <span class=\"br0\">(</span>EngineInertia <span class=\"sy0\">/</span>\
      \ <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>GearRatios<span\
      \ class=\"br0\">[</span>Gear<span class=\"br0\">]</span> <span class=\"sy0\"\
      >*</span> TransRatio<span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">+</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelInertia</span>;\n\t\t      \t      <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span> <span\
      \ class=\"sy0\">&gt;</span> <span class=\"nu0\">0.0</span><span class=\"br0\"\
      >)</span>\n\t\t              \t      BrakeTorque <span class=\"sy0\">=</span>\
      \ <span class=\"sy0\">-</span>OutputBrake <span class=\"sy0\">*</span> MaxBrakeTorque;\n\
      \                      \t      <span class=\"kw2\">else</span>\n           \
      \                   \t      BrakeTorque <span class=\"sy0\">=</span> OutputBrake\
      \ <span class=\"sy0\">*</span> MaxBrakeTorque;\n \n\t\t      \t      LimitBrakeTorque\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\"\
      >Abs</span><span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">*</span> TransInertia <span class=\"br0\">)</span>\
      \ <span class=\"sy0\">/</span> TheDeltaTime; <span class=\"co1\">// Size of\
      \ torque needed to completely stop wheel spinning.</span>\n\t\t      \t    \
      \  BrakeTorque <span class=\"sy0\">=</span> <span class=\"kw3\">Clamp</span><span\
      \ class=\"br0\">(</span>BrakeTorque, <span class=\"sy0\">-</span>LimitBrakeTorque,\
      \ LimitBrakeTorque<span class=\"br0\">)</span>; <span class=\"co1\">// Never\
      \ apply more than this!</span>\n\t\t      \t      WheelTorque <span class=\"\
      sy0\">=</span> DriveTorque <span class=\"sy0\">+</span> BrakeTorque <span class=\"\
      sy0\">-</span> GripTorque;\n\t\t      \t      VehicleForce <span class=\"sy0\"\
      >=</span> GripTorque <span class=\"sy0\">/</span> <span class=\"br0\">(</span>FTScale\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelRadius</span><span class=\"br0\">)</span>;\n\
      \t\t      \t      <span class=\"kw2\">if</span><span class=\"br0\">(</span>\
      \ OutputBrake <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.0</span>\
      \ <span class=\"sy0\">||</span>  <span class=\"br0\">(</span>DriveTorque <span\
      \ class=\"sy0\">+</span> BrakeTorque<span class=\"br0\">)</span> <span class=\"\
      sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SpinVel</span> <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t      \t      <span class=\"\
      br0\">{</span>\n\t\t\t      \t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">DriveForce</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t\t\t      \t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LongFriction</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Abs</span><span class=\"\
      br0\">(</span>VehicleForce<span class=\"br0\">)</span> <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span>OutputBrake <span class=\"sy0\">*</span> MinBrakeFriction<span\
      \ class=\"br0\">)</span>;\n\t\t      \t      <span class=\"br0\">}</span>\n\t\
      \t      \t      <span class=\"kw2\">else</span>\n\t\t      \t      <span class=\"\
      br0\">{</span>\n\t\t\t      \t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">DriveForce</span> <span class=\"\
      sy0\">=</span> VehicleForce;\n\t\t\t      \t      Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LongFriction</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t\t      \t\
      \      <span class=\"br0\">}</span>\n\t\t      \t      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">bWheelOnGround</span><span class=\"br0\"\
      >)</span>\n\t\t\t      \t      Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">ChassisTorque</span> <span class=\"sy0\"\
      >=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span> <span class=\"\
      sy0\">*</span> <span class=\"br0\">(</span>DriveTorque <span class=\"sy0\">+</span>\
      \ BrakeTorque<span class=\"br0\">)</span> <span class=\"sy0\">*</span> ChassisTorqueScale;\n\
      \t\t     \t       <span class=\"kw2\">else</span>\n\t\t\t      \t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">ChassisTorque</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t\t      \t\
      \      TransAcc <span class=\"sy0\">=</span> WheelTorque <span class=\"sy0\"\
      >/</span> TransInertia;\n\t\t      \t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\"\
      >+=</span> TransAcc <span class=\"sy0\">*</span> DeltaTime;\n\t\t      \t  \
      \    <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gear <span class=\"\
      sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">SpinVel</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.0</span><span\
      \ class=\"br0\">)</span>\n\t\t\t      \t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0.0</span>;\n\t\t      \t      <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gear\
      \ <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"\
      sy0\">&amp;&amp;</span> Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\t      \t\
      \      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SpinVel</span> <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >0.0</span>;\n\t\t      \t      NewTotalSpinVel <span class=\"sy0\">+=</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">SpinVel</span>;\n\t\t      \t      EngineRPM <span class=\"sy0\">+=</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">SpinVel</span> <span class=\"sy0\">/</span> EngineWheelRatio;\n\t\t  \
      \    \t      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LatFriction</span> <span class=\"sy0\">=</span> WheelLatFrictionScale<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">TireLoad</span>;\n\t\t      \t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LatSlip</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LatSlipFunc</span>, Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SlipAngle</span><span\
      \ class=\"br0\">)</span>;\n\t\t      \t      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>OutputHandbrake <span class=\"sy0\">&amp;&amp;</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">bHandbrakeWheel</span><span class=\"br0\">)</span>\n\t\t      \t     \
      \ <span class=\"br0\">{</span>\n\t\t\t      \t      Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LatFriction</span>\
      \ <span class=\"sy0\">*=</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">HandbrakeFrictionFactor</span>;\n\t\t\t \
      \     \t      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LatSlip</span> <span class=\"sy0\">*=</span> Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">HandbrakeSlipFactor</span>;\n\
      \                              <span class=\"br0\">}</span>\n\t\t      \t  \
      \    <span class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SteerType</span>\
      \ <span class=\"sy0\">==</span> VST_Steered<span class=\"br0\">)</span>\n\t\t\
      \t      \t      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Steer</span> <span class=\"sy0\">=</span> ActualSteering;\n\t\
      \t      \t      <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SteerType</span> <span class=\"sy0\">==</span>\
      \ VST_Inverted<span class=\"br0\">)</span>\n\t\t\t      \t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">Steer</span>\
      \ <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>ActualSteering;\n\
      \t\t      \t      <span class=\"kw2\">else</span>\n\t\t\t      \t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">Steer</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t      \t \
      \     <span class=\"br0\">}</span>\n\t      \t      EngineRPM <span class=\"\
      sy0\">/=</span> NumPoweredWheels;\n\t      \t      EngineRPM <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Max</span><span class=\"br0\">(</span>EngineRPM,\
      \ <span class=\"nu0\">0.01</span><span class=\"br0\">)</span>; <span class=\"\
      co1\">// ensure always positive!</span>\n\t      \t      TotalSpinVel <span\
      \ class=\"sy0\">=</span> NewTotalSpinVel;\n\t      <span class=\"br0\">}</span>\n\
      <span class=\"co1\">///////////////STICK SHIFT///////////////////////////////</span>\n\
      \t      <span class=\"kw2\">else</span>\n\t      <span class=\"br0\">{</span>\n\
      \                   <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span\
      \ class=\"br0\">)</span>\n                   <span class=\"br0\">{</span>\n\
      \                        EngineTorque <span class=\"sy0\">=</span> <span class=\"\
      kw3\">InterpCurveEval</span><span class=\"br0\">(</span>TorqueCurve, EngineRPM<span\
      \ class=\"br0\">)</span>;\n                   <span class=\"br0\">}</span>\n\
      \                   <span class=\"kw2\">else</span>\n                   <span\
      \ class=\"br0\">{</span>\n                        EngineTorque <span class=\"\
      sy0\">=</span> <span class=\"kw3\">InterpCurveEval</span><span class=\"br0\"\
      >(</span>TorqueCurve, EngineRPM<span class=\"br0\">)</span>;\n             \
      \           <span class=\"kw2\">if</span><span class=\"br0\">(</span>EngineTorque\
      \ <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"\
      br0\">)</span>\n                        <span class=\"br0\">{</span>\n     \
      \                   \t   <span class=\"co1\">// Calculate torque at output of\
      \ engine. Combination of throttle, current RPM and engine braking.</span>\n\t\
      \                        EngineTorque <span class=\"sy0\">=</span> OutputGas\
      \ <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>TorqueCurve, EngineRPM<span class=\"br0\">)</span>;\n\
      \                        <span class=\"br0\">}</span>\n                    \
      \    <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>EngineTorque <span class=\"sy0\">&lt;</span> <span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>\n                        <span class=\"\
      br0\">{</span>\n                                EngineTorque <span class=\"\
      sy0\">=</span> <span class=\"kw3\">InterpCurveEval</span><span class=\"br0\"\
      >(</span>TorqueCurve, EngineRPM<span class=\"br0\">)</span>;\n             \
      \           <span class=\"br0\">}</span>\n \n\t                EngineBraking\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>1.0f <span class=\"\
      sy0\">-</span> OutputGas<span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ <span class=\"br0\">(</span>EngineBrakeRPMScale<span class=\"sy0\">*</span>EngineRPM\
      \ <span class=\"sy0\">*</span> EngineBrakeRPMScale<span class=\"sy0\">*</span>EngineRPM\
      \ <span class=\"sy0\">*</span> EngineBrakeFactor<span class=\"br0\">)</span>;\n\
      \t           <span class=\"br0\">}</span>\n \n                  <span class=\"\
      co1\">// EngineRPM = OutputGas * InterpCurveEval(RPMCurve, EngineTorque);</span>\n\
      \ \n\t           EngineTorque <span class=\"sy0\">-=</span> EngineBraking;\n\
      \                   ETorque <span class=\"sy0\">=</span> EngineTorque;\n\t \
      \          <span class=\"co1\">//DebugInfo = FString::Printf(TEXT(\"OutputBrake:\
      \ %f\tEngineRPM: %f    EngineTorque: %f\"), OutputBrake, EngineRPM, EngineTorque);</span>\n\
      \ \n\t           <span class=\"co1\">// Total gear ratio between engine and\
      \ differential (ie before being split between wheels).</span>\n\t          \
      \ <span class=\"co1\">// A higher gear ratio and the torque at the wheels is\
      \ reduced.</span>\n\t           EngineWheelRatio <span class=\"sy0\">=</span>\
      \ GearRatios<span class=\"br0\">[</span>Gear<span class=\"br0\">]</span> <span\
      \ class=\"sy0\">*</span> TransRatio;\n \n                   <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>bClutching<span class=\"br0\">)</span>\n\
      \                   <span class=\"br0\">{</span>\n                        <span\
      \ class=\"co1\">//EngineRPM = 0.0;</span>\n                        WheelRPM\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n           \
      \        <span class=\"br0\">}</span>\n                   <span class=\"kw2\"\
      >else</span>\n                   <span class=\"br0\">{</span>\n            \
      \            <span class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span\
      \ class=\"br0\">)</span>\n                        <span class=\"br0\">{</span>\n\
      \t                     <span class=\"co1\">// Reset engine RPM. We calculate\
      \ this by adding the component of each wheel spinning.</span>\n\t          \
      \           NewTotalSpinVel<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span>;\n\
      \t                     <span class=\"kw2\">if</span><span class=\"br0\">(</span>bInGear<span\
      \ class=\"br0\">)</span>\n\t                     <span class=\"br0\">{</span>\n\
      \t                           WheelRPM <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0.0</span>;\n\t                           EngineRPM <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0.0</span>;\n\t                     <span class=\"\
      br0\">}</span>\n\t                     <span class=\"kw2\">else</span> <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>bInGear<span\
      \ class=\"br0\">)</span>\n\t                           WheelRPM <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t                <span class=\"\
      br0\">}</span>\n\t           <span class=\"br0\">}</span>\n \n\t      <span\
      \ class=\"co1\">// Do model for each wheel.</span>\n\t      <span class=\"co1\"\
      >//  Okay this needs to be fixed because the way this is, all the wheels get\
      \ power</span>\n \n\t           <span class=\"kw2\">for</span><span class=\"\
      br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>;i<span\
      \ class=\"sy0\">&lt;</span>Wheels.<span class=\"me0\">length</span>; i<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t           <span class=\"\
      br0\">{</span>\n\t     \t      <span class=\"co1\">//Wheels[i];</span>\n\t\t\
      \      <span class=\"co1\">/////////// DRIVE ///////////</span>\n\t\t      <span\
      \ class=\"co1\">// Heuristic to divide torque up so that the wheels that are\
      \ spinning slower get more of it.</span>\n\t\t      <span class=\"co1\">// Sum\
      \ of LSDFactor across all wheels should be 1.</span>\n\t\t      <span class=\"\
      co1\">// JTODO: Do we need to handle the case of vehicles with different size\
      \ wheels?</span>\n \n\t\t      EvenSplit <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">1</span><span class=\"sy0\">/</span>NumPoweredWheels;\n \n\t\
      \t      <span class=\"co1\">// If no wheels are spinning, just do an even split.</span>\n\
      \t\t      <span class=\"kw2\">if</span><span class=\"br0\">(</span>TotalSpinVel\
      \ <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.1</span><span class=\"\
      br0\">)</span>\n\t\t\t      LSDSplit <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span>TotalSpinVel <span class=\"sy0\">-</span> Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span><span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>NumPoweredWheels<span class=\"sy0\">-</span><span class=\"\
      nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> TotalSpinVel<span\
      \ class=\"br0\">)</span>;\n\t\t      <span class=\"kw2\">else</span>\n\t\t\t\
      \      LSDSplit <span class=\"sy0\">=</span> EvenSplit;\n \n\t\t      UseSplit\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>LSDFactor<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> EvenSplit<span class=\"\
      br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>LSDFactor\
      \ <span class=\"sy0\">*</span> LSDSplit<span class=\"br0\">)</span>;\n \n  \
      \                    <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \                           EngineRPM <span class=\"sy0\">=</span> RPM;\n \n\
      \                           <span class=\"co1\">//DriveTorque = UseSplit * (EngineTorque\
      \ / EngineWheelRatio);</span>\n                      <span class=\"br0\">}</span>\n\
      \                      <span class=\"kw2\">else</span>\n                   \
      \   <span class=\"br0\">{</span>\n                           <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span class=\"\
      br0\">)</span>\n                           <span class=\"br0\">{</span>\n  \
      \                              <span class=\"co1\">//EngineRPM = RPM;</span>\n\
      \ \n                                <span class=\"co1\">// Calculate Drive Torque\
      \ : applied at wheels (ie after gearbox and differential)</span>\n\t\t     \
      \           <span class=\"co1\">// This is an 'open differential' ie. equal\
      \ torque to each wheel</span>\n\t\t                DriveTorque <span class=\"\
      sy0\">=</span> UseSplit <span class=\"sy0\">*</span> <span class=\"br0\">(</span>EngineTorque\
      \ <span class=\"sy0\">/</span> EngineWheelRatio<span class=\"br0\">)</span>;\n\
      \t\t           <span class=\"br0\">}</span>\n\t\t      <span class=\"br0\">}</span>\n\
      \ \n\t\t      <span class=\"co1\">/////////// LONGITUDINAL ///////////</span>\n\
      \t\t      <span class=\"co1\">// Calculate Grip Torque : longitudinal force\
      \ against ground * distance of action (radius of tyre)</span>\n\t\t      <span\
      \ class=\"co1\">// LongFrictionFunc is assumed to be reflected for negative\
      \ Slip Ratio</span>\n\t\t      GripTorque <span class=\"sy0\">=</span> FTScale\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelRadius</span> <span class=\"sy0\">*</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">TireLoad</span> <span class=\"sy0\">*</span> WheelLongFrictionScale<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LongFrictionFunc</span>, <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SlipVel</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n \n\t\t      <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SlipVel</span> <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\t      GripTorque <span class=\"\
      sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>;\n\
      \ \n                      <span class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \                           <span class=\"co1\">// GripTorque can't be more\
      \ than the torque needed to invert slip ratio.</span>\n\t\t           TransInertia\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>EngineInertia <span\
      \ class=\"sy0\">/</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>GearRatios<span\
      \ class=\"br0\">[</span>Gear<span class=\"br0\">]</span> <span class=\"sy0\"\
      >*</span> TransRatio<span class=\"br0\">)</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">+</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelInertia</span>;\n                  \
      \    <span class=\"br0\">}</span>\n \n\t\t      <span class=\"co1\">//FLOAT\
      \ SlipAngVel = Wheels[i].SlipVel/Wheels[i].WheelRadius;</span>\n \n        \
      \              <span class=\"kw2\">if</span><span class=\"br0\">(</span>bBraking<span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \t\t           <span class=\"co1\">// Brake torque acts to stop wheels (ie against\
      \ direction of motion)</span>\n\t\t           BrakeTorque <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0.0</span>;\n\t\t           <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\"\
      >&gt;</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\
      \                BrakeTorque <span class=\"sy0\">=</span> <span class=\"sy0\"\
      >-</span>OutputBrake <span class=\"sy0\">*</span> MaxBrakeTorque;\n        \
      \                  <span class=\"kw2\">else</span>\n                       \
      \         BrakeTorque <span class=\"sy0\">=</span> OutputBrake <span class=\"\
      sy0\">*</span> MaxBrakeTorque;\n \n\t\t           LimitBrakeTorque <span class=\"\
      sy0\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SpinVel</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">*</span> TransInertia <span class=\"br0\">)</span> <span class=\"\
      sy0\">/</span> TheDeltaTime; <span class=\"co1\">// Size of torque needed to\
      \ completely stop wheel spinning.</span>\n\t\t           BrakeTorque <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Clamp</span><span class=\"br0\">(</span>BrakeTorque,\
      \ <span class=\"sy0\">-</span>LimitBrakeTorque, LimitBrakeTorque<span class=\"\
      br0\">)</span>; <span class=\"co1\">// Never apply more than this!</span>\n\t\
      \t           mBrakeTorque <span class=\"sy0\">=</span> BrakeTorque;\n      \
      \                <span class=\"br0\">}</span>\n                      <span class=\"\
      kw2\">else</span>\n                      <span class=\"br0\">{</span>\n    \
      \                       BrakeTorque <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>;\n                           mBrakeTorque <span class=\"sy0\"\
      >=</span> BrakeTorque;\n                      <span class=\"br0\">}</span>\n\
      <span class=\"co1\">//_____________________________________________</span>\n\
      \ \n                      <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \                              WheelTorque <span class=\"sy0\">=</span> GripTorque;\n\
      \                              <span class=\"co1\">//Log(\"GripTorque\");</span>\n\
      \                              <span class=\"co1\">//Log(GripTorque);</span>\n\
      \                      <span class=\"br0\">}</span>\n                      <span\
      \ class=\"kw2\">else</span>     <span class=\"co1\">// we are in full gear</span>\n\
      \                      <span class=\"br0\">{</span>\n                      \
      \     <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bPoweredWheel</span><span class=\"br0\">)</span>\n         \
      \                  <span class=\"br0\">{</span>\n                          \
      \    <span class=\"co1\">//Don't do this if 4 wheel drive!!!!</span>\n     \
      \                         WheelTorque <span class=\"sy0\">=</span> GripTorque\
      \ <span class=\"sy0\">*</span> <span class=\"nu0\">2</span>;\n             \
      \              <span class=\"br0\">}</span>\n                           <span\
      \ class=\"kw2\">else</span>\n                           <span class=\"br0\"\
      >{</span>\n                              <span class=\"co1\">// Resultant torque\
      \ at wheel : torque applied from engine + brakes + equal-and-opposite from tire-road\
      \ interaction.</span>\n\t\t              WheelTorque <span class=\"sy0\">=</span>\
      \ DriveTorque <span class=\"sy0\">+</span> BrakeTorque <span class=\"sy0\">-</span>\
      \ GripTorque;\n\t\t          <span class=\"coMULTI\">/*    Log(\"WheelTorque\"\
      );\n                              Log(WheelTorque);\n                      \
      \        Log(\"GripTorque\");\n                              Log(GripTorque);\
      \      */</span>\n\t\t           <span class=\"br0\">}</span>\n            \
      \          <span class=\"br0\">}</span>\n<span class=\"co1\">//____________________________________________</span>\n\
      \ \n\t\t      <span class=\"co1\">// Resultant linear force applied to car.\
      \ (GripTorque applied at road)</span>\n\t\t      VehicleForce <span class=\"\
      sy0\">=</span> GripTorque <span class=\"sy0\">/</span> <span class=\"br0\">(</span>FTScale\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelRadius</span><span class=\"br0\">)</span>;\n\
      \ \n\t\t      <span class=\"co1\">// If the wheel torque is opposing the direction\
      \ of spin (ie braking) we use friction to apply it.</span>\n\t\t      <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span> OutputBrake <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ bBraking<span class=\"br0\">)</span><span class=\"co1\">//  || (DriveTorque\
      \ + BrakeTorque) * Wheels[i].SpinVel &lt; 0.0</span>\n\t\t      <span class=\"\
      br0\">{</span>\n\t\t\t      Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">DriveForce</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0.0</span>;\n\t\t\t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">LongFriction</span> <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>VehicleForce<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>OutputBrake\
      \ <span class=\"sy0\">*</span> MinBrakeFriction<span class=\"br0\">)</span>;\n\
      \t\t      <span class=\"br0\">}</span>\n\t\t      <span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span class=\"\
      br0\">)</span>\n\t\t      <span class=\"br0\">{</span>\n\t\t              Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">DriveForce</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n           \
      \                   Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LongFriction</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0.0</span>;\n\t\t      <span class=\"br0\">}</span>\n\t\t      <span class=\"\
      kw2\">else</span>\n\t\t      <span class=\"br0\">{</span>\n\t\t            \
      \  <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"sy0\"\
      >!</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bPoweredWheel</span><span class=\"br0\">)</span>\n\t\t     \
      \         <span class=\"br0\">{</span>\n\t\t                     Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">DriveForce</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n           \
      \                          Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">LongFriction</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0.0</span>;\n\t\t              <span class=\"br0\">}</span>\n\
      \t\t              <span class=\"kw2\">else</span>\n\t\t              <span class=\"\
      br0\">{</span>\n\t\t\t           Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">DriveForce</span> <span class=\"sy0\">=</span>\
      \ VehicleForce;\n                                   Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LongFriction</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t\t\t     \
      \      <span class=\"co1\">//Wheels[i].LongFriction = 0.0;</span>\n\t\t\t  \
      \    <span class=\"br0\">}</span>\n\t\t      <span class=\"br0\">}</span>\n\
      \ \n \n                      <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bPoweredWheel</span><span class=\"br0\">)</span>\n         \
      \             <span class=\"br0\">{</span>\n\t\t           <span class=\"co1\"\
      >// Calculate torque applied back to chassis if wheel is on the ground</span>\n\
      \t\t           <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">bWheelOnGround</span><span\
      \ class=\"br0\">)</span>\n\t\t\t      Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">ChassisTorque</span> <span class=\"\
      sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span> <span\
      \ class=\"sy0\">*</span> <span class=\"br0\">(</span>DriveTorque <span class=\"\
      sy0\">+</span> BrakeTorque<span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ ChassisTorqueScale;\n\t\t           <span class=\"kw2\">else</span>\n\t\t\t\
      \      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">ChassisTorque</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0.0</span>;\n                      <span class=\"br0\">}</span>\n \n\t\
      \t      <span class=\"co1\">// Calculate new wheel speed.</span>\n\t\t     \
      \ <span class=\"co1\">// The lower the gear ratio, the harder it is to accelerate\
      \ the engine.</span>\n \n\t\t      <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>bClutching<span class=\"br0\">)</span>\n\t\t      <span class=\"\
      br0\">{</span>\n\t\t             TransAcc <span class=\"sy0\">=</span> WheelTorque\
      \ <span class=\"sy0\">/</span> <span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span>;\n\t\t             Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\">+=</span>\
      \ TransAcc <span class=\"sy0\">*</span> DeltaTime;\n\t\t      <span class=\"\
      br0\">}</span>\n\t\t      <span class=\"kw2\">else</span>\n\t\t      <span class=\"\
      br0\">{</span>\n\t\t             <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span class=\"\
      br0\">)</span>\n\t\t             <span class=\"br0\">{</span>\n\t\t        \
      \           TransAcc <span class=\"sy0\">=</span> WheelTorque <span class=\"\
      sy0\">/</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;\n\t\
      \t                   Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\">+=</span> TransAcc\
      \ <span class=\"sy0\">*</span> DeltaTime;\n\t\t             <span class=\"br0\"\
      >}</span>\n\t\t             <span class=\"kw2\">else</span>\n\t\t          \
      \   <span class=\"br0\">{</span>\n\t\t                   TransAcc <span class=\"\
      sy0\">=</span> WheelTorque <span class=\"sy0\">/</span> TransInertia;\n\t\t\
      \                   Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SpinVel</span> <span class=\"sy0\">+=</span> TransAcc <span\
      \ class=\"sy0\">*</span> DeltaTime;\n\t\t             <span class=\"br0\">}</span>\n\
      \                      <span class=\"br0\">}</span>\n \n<span class=\"co1\"\
      >//  -----this is were the engine needs to be slowly put into gear-----</span>\n\
      \ \n                      <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \ \n                          WheelRPM <span class=\"sy0\">+=</span> <span class=\"\
      br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SpinVel</span> <span class=\"sy0\">/</span> EngineWheelRatio<span\
      \ class=\"br0\">)</span>;\n                          <span class=\"co1\">//TorqueConverter();</span>\n\
      \                      <span class=\"br0\">}</span>\n                      <span\
      \ class=\"kw2\">else</span>   <span class=\"co1\">// we are in full gear</span>\n\
      \                      <span class=\"br0\">{</span>\n                      \
      \    <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bPoweredWheel</span><span class=\"br0\">)</span>\n         \
      \                 <span class=\"br0\">{</span>\n                           \
      \    WheelRPM <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span>\
      \ <span class=\"sy0\">/</span> EngineWheelRatio<span class=\"br0\">)</span>;\n\
      \                          <span class=\"br0\">}</span>\n                  \
      \        <span class=\"kw2\">else</span>\n                          <span class=\"\
      br0\">{</span>\n                      \t       <span class=\"co1\">// Accumulate\
      \ wheel spin speeds to find engine RPM.</span>\n\t\t               <span class=\"\
      co1\">// The lower the gear ratio, the faster the engine spins for a given wheel\
      \ speed.</span>\n\t\t               NewTotalSpinVel <span class=\"sy0\">+=</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">SpinVel</span>;\n                               <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bInGear<span class=\"br0\"\
      >)</span>\n                               <span class=\"br0\">{</span>\n<span\
      \ class=\"co1\">//                                  EngineRPM += (Wheels[i].SpinVel\
      \ / EngineWheelRatio);</span>\n                                    WheelRPM\
      \ <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span>\
      \ <span class=\"sy0\">/</span> EngineWheelRatio<span class=\"br0\">)</span>;\n\
      \                                    TorqueConverter<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n \n                               <span class=\"\
      br0\">}</span>\n                               <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>bInGear<span class=\"br0\">)</span>\n              \
      \                 <span class=\"br0\">{</span>\n                           \
      \         WheelRPM <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span>\
      \ <span class=\"sy0\">/</span> EngineWheelRatio<span class=\"br0\">)</span>;\n\
      \                                    EngineRPM <span class=\"sy0\">+=</span>\
      \ <span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\">/</span>\
      \ EngineWheelRatio<span class=\"br0\">)</span>;\n                          \
      \     <span class=\"br0\">}</span>\n                          <span class=\"\
      br0\">}</span>\n \n                      <span class=\"br0\">}</span>\n<span\
      \ class=\"co1\">//  ---------------------------------------------------------------</span>\n\
      \ \n\t\t      <span class=\"co1\">// Make sure the wheel can't spin in the wrong\
      \ direction for the current gear.</span>\n\t\t      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>bClutching<span class=\"br0\">)</span>\n\t\t      <span\
      \ class=\"br0\">{</span>\n\t\t      <span class=\"br0\">}</span>\n\t\t     \
      \ <span class=\"kw2\">else</span>\n\t\t      <span class=\"br0\">{</span>\n\t\
      \t           <span class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span\
      \ class=\"br0\">)</span>\n\t\t           <span class=\"br0\">{</span>\n\t\t\
      \                  <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gear\
      \ <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"\
      sy0\">&amp;&amp;</span> Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\t       \
      \        Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">SpinVel</span> <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >0.0</span>;\n\t\t                  <span class=\"kw2\">else</span> <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>Gear <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span>\
      \ <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.0</span><span class=\"\
      br0\">)</span>\n\t\t\t               Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">SpinVel</span> <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0.0</span>;\n\t\t\t   <span class=\"br0\">}</span>\n\
      \t\t      <span class=\"br0\">}</span>\n \n\t\t      <span class=\"co1\">///////////\
      \ LATERAL ///////////</span>\n                      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">bPoweredWheel</span><span\
      \ class=\"br0\">)</span>\n                      <span class=\"br0\">{</span>\n\
      \t\t           Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LatFriction</span> <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span>WheelLatFrictionScale<span class=\"br0\">[</span><span class=\"\
      nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span\
      \ class=\"nu0\">1.5</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">TireLoad</span> ;\n\t\t           Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">LatSlip</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">InterpCurveEval</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LatSlipFunc</span>,\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">SlipAngle</span><span class=\"br0\">)</span>;\n                      <span\
      \ class=\"br0\">}</span>\n                      <span class=\"kw2\">else</span>\n\
      \                      <span class=\"br0\">{</span>\n                      \
      \     Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LatFriction</span> <span class=\"sy0\">=</span> WheelLatFrictionScale<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">TireLoad</span>;\n\t\t           Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LatSlip</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LatSlipFunc</span>, Wheels<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SlipAngle</span><span\
      \ class=\"br0\">)</span>;\n                      <span class=\"br0\">}</span>\n\
      \ \n\t\t      <span class=\"kw2\">if</span><span class=\"br0\">(</span>OutputHandbrake\
      \ <span class=\"sy0\">&amp;&amp;</span> Wheels<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bHandbrakeWheel</span><span class=\"\
      br0\">)</span>\n\t\t      <span class=\"br0\">{</span>\n\t\t\t      Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LatFriction</span>\
      \ <span class=\"sy0\">*=</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">HandbrakeFrictionFactor</span>;\n\t\t\t \
      \     Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">LatSlip</span> <span class=\"sy0\">*=</span> Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">HandbrakeSlipFactor</span>;\n\
      \t\t      <span class=\"br0\">}</span>\n \n\t\t      <span class=\"co1\">///////////\
      \ STEERING  ///////////</span>\n \n\t\t      <span class=\"co1\">// Pass on\
      \ steering to wheels that want it.</span>\n\t\t      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SteerType</span> <span class=\"sy0\">==</span>\
      \ VST_Steered<span class=\"br0\">)</span>\n\t\t\t      Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">Steer</span>\
      \ <span class=\"sy0\">=</span> ActualSteering;\n\t\t      <span class=\"kw2\"\
      >else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SteerType</span>\
      \ <span class=\"sy0\">==</span> VST_Inverted<span class=\"br0\">)</span>\n\t\
      \t\t      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Steer</span> <span class=\"sy0\">=</span> <span class=\"sy0\"\
      >-</span>ActualSteering;\n\t\t      <span class=\"kw2\">else</span>\n\t\t\t\
      \      Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Steer</span> <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >0.0</span>;\n\t         <span class=\"br0\">}</span>\n              <span class=\"\
      br0\">}</span>\n              <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>bClutching<span class=\"br0\">)</span>\n              <span class=\"\
      br0\">{</span>\n              <span class=\"br0\">}</span>\n              <span\
      \ class=\"kw2\">else</span>\n              <span class=\"br0\">{</span>\n  \
      \                 <span class=\"co1\">// EngineRPM is in radians per second,\
      \ want in revolutions per minute</span>\n\t           EngineRPM <span class=\"\
      sy0\">/=</span> <span class=\"nu0\">4</span>;\n<span class=\"co1\">//\t    \
      \       EngineRPM /= 2.0 * PI; // revs per sec</span>\n<span class=\"co1\">//\t\
      \           EngineRPM *= 60;</span>\n\t           EngineRPM <span class=\"sy0\"\
      >=</span> <span class=\"kw3\">Max</span><span class=\"br0\">(</span>EngineRPM,\
      \ <span class=\"nu0\">0.00</span><span class=\"br0\">)</span>; <span class=\"\
      co1\">// ensure always positive!</span>\n \n\t           RPM <span class=\"\
      sy0\">/=</span> NumPoweredWheels;\n<span class=\"co1\">//\t           RPM /=\
      \ 2.0 * PI; // revs per sec</span>\n<span class=\"co1\">//\t           RPM *=\
      \ 60;</span>\n\t           RPM <span class=\"sy0\">=</span> <span class=\"kw3\"\
      >Max</span><span class=\"br0\">(</span>EngineRPM, <span class=\"nu0\">0.00</span><span\
      \ class=\"br0\">)</span>; <span class=\"co1\">// ensure always positive!</span>\n\
      \              <span class=\"br0\">}</span>\n \n              <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>bClutching<span\
      \ class=\"br0\">)</span>\n              <span class=\"br0\">{</span>\n\t   \
      \        <span class=\"co1\">// Update total wheel spin vel</span>\n\t     \
      \      TotalSpinVel <span class=\"sy0\">=</span> NewTotalSpinVel;\n\t      <span\
      \ class=\"br0\">}</span>\n \n\t      <span class=\"co1\">// Turn (yaw) damping.</span>\n\
      \t      carTM <span class=\"sy0\">=</span> CachedLocalToWorld;  <span class=\"\
      co1\">// was  carTM = LocalToWorld()</span>\n\t      <span class=\"co1\">//worldUp(carTM.M[2][0],\
      \ carTM.M[2][1], carTM.M[2][2]);</span>\n\t      <span class=\"co1\">//worldRight(carTM.M[1][0],\
      \ carTM.M[1][1], carTM.M[1][2]);</span>\n\t      <span class=\"co1\">//worldForward(carTM.M[0][0],\
      \ carTM.M[0][1], carTM.M[0][2]);</span>\n \n            <span class=\"co1\"\
      >//  KGetRigidBodyState(rbState);</span>\n\t    <span class=\"co1\">//  AngVel\
      \ = KRBVecToVector(rbState.AngVel);</span>\n\t      AngVel.<span class=\"me0\"\
      >X</span> <span class=\"sy0\">=</span> rbState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">X</span>;\n              AngVel.<span class=\"me0\">Y</span>\
      \ <span class=\"sy0\">=</span> rbState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">Y</span>;\n              AngVel.<span class=\"me0\">Z</span>\
      \ <span class=\"sy0\">=</span> rbState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">Z</span>;\n\t      TurnAngVel <span class=\"sy0\">=</span> AngVel\
      \ dot worldUp;\n \n\t      DampingScale <span class=\"sy0\">=</span> <span class=\"\
      nu0\">1.0</span> <span class=\"sy0\">-</span> MinAirControlDamping;\n\t    \
      \  <span class=\"kw2\">if</span><span class=\"br0\">(</span>bAllowAirControl\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>bVehicleOnGround<span\
      \ class=\"br0\">)</span>\n\t      <span class=\"br0\">{</span>\n\t  <span class=\"\
      co1\">//            Log(\"bVehicleOnGround\");</span>\n          <span class=\"\
      co1\">//            Log(bVehicleOnGround);</span>\n\t\t      TurnDampingMag\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\"\
      >1.0</span> <span class=\"sy0\">-</span> DampingScale<span class=\"sy0\">*</span><span\
      \ class=\"kw3\">Abs</span><span class=\"br0\">(</span>Steering<span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> TurnDamping\
      \ <span class=\"sy0\">*</span> TurnAngVel;\n\t\t      <span class=\"co1\">//KAddImpulse(\
      \ WForce, -TurnDampingMag * worldUp );</span>\n\t\t      Force <span class=\"\
      sy0\">+=</span> <span class=\"br0\">(</span>WForce <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span> <span class=\"sy0\">*</span> TurnDampingMag<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> worldUp<span class=\"br0\">)</span>;\n\t    \
      \  <span class=\"br0\">}</span>\n \n\t      <span class=\"kw2\">else</span>\n\
      \t      <span class=\"br0\">{</span>\n\t\t      TurnDampingMag <span class=\"\
      sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1.0</span> <span\
      \ class=\"sy0\">-</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>ActualSteering<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ TurnDamping <span class=\"sy0\">*</span> TurnAngVel;\n\t\t      <span class=\"\
      co1\">//KAddImpulse( WForce, -TurnDampingMag * worldUp );</span>\n\t\t     \
      \ Force <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>WForce <span\
      \ class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1</span> <span class=\"sy0\">+</span> TurnDampingMag<span class=\"\
      br0\">)</span> <span class=\"sy0\">*</span> worldUp<span class=\"br0\">)</span>;\n\
      \t      <span class=\"br0\">}</span>\n \n\t      <span class=\"co1\">// If vehicle\
      \ is in the air and we are allowing air control...</span>\n\t      <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>bVehicleOnGround<span\
      \ class=\"br0\">)</span>\n\t      <span class=\"br0\">{</span>\n\t\t      PitchAngVel\
      \ <span class=\"sy0\">=</span> AngVel dot worldRight;\n\t\t      RollAngVel\
      \ <span class=\"sy0\">=</span> AngVel dot worldForward;\n \n\t\t      <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>bAllowAirControl<span class=\"\
      br0\">)</span>\n\t\t      <span class=\"br0\">{</span>\n\t\t\t      AirControlTorque\
      \ <span class=\"sy0\">=</span> worldRight <span class=\"sy0\">*</span> OutputPitch\
      \ <span class=\"sy0\">*</span> <span class=\"sy0\">-</span>AirPitchTorque;\n\
      \ \n\t\t\t      <span class=\"kw2\">if</span><span class=\"br0\">(</span>bIsWalking<span\
      \ class=\"br0\">)</span>\n\t\t\t      <span class=\"br0\">{</span>\n\t<span\
      \ class=\"co1\">//\t\t              Log(\"bIsWalking\");</span>\n\t<span class=\"\
      co1\">//\t\t              Log(bIsWalking);</span>\n\t\t\t\t      AirControlTorque\
      \ <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>worldForward <span\
      \ class=\"sy0\">*</span> Steering <span class=\"sy0\">*</span> <span class=\"\
      sy0\">-</span>AirRollTorque<span class=\"br0\">)</span>;\n\t\t\t\t      <span\
      \ class=\"br0\">}</span>\n\t\t\t      <span class=\"kw2\">else</span>\n\t\t\t\
      \      <span class=\"br0\">{</span>\n\t\t\t\t      AirControlTorque <span class=\"\
      sy0\">+=</span> <span class=\"br0\">(</span>worldUp <span class=\"sy0\">*</span>\
      \ Steering <span class=\"sy0\">*</span> <span class=\"sy0\">-</span>AirTurnTorque<span\
      \ class=\"br0\">)</span>;\n\t\t\t      <span class=\"br0\">}</span>\n      \
      \                        <span class=\"co1\">//KAddImpulse( WForce, AirControlTorque\
      \ );</span>\n\t\t\t      Force <span class=\"sy0\">+=</span> AirControlTorque;\n\
      \ \n\t\t\t      <span class=\"co1\">// Damping forces</span>\n\t\t\t      PitchDampingMag\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\"\
      >1.0</span> <span class=\"sy0\">-</span> DampingScale<span class=\"sy0\">*</span><span\
      \ class=\"kw3\">Abs</span><span class=\"br0\">(</span>OutputPitch<span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> AirPitchDamping\
      \ <span class=\"sy0\">*</span> PitchAngVel;\n\t\t\t      RollDampingMag <span\
      \ class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1.0</span>\
      \ <span class=\"sy0\">-</span> DampingScale<span class=\"sy0\">*</span><span\
      \ class=\"kw3\">Abs</span><span class=\"br0\">(</span>Steering<span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> AirRollDamping\
      \ <span class=\"sy0\">*</span> RollAngVel;\n \n                            \
      \  <span class=\"co1\">//KAddImpulse( WForce, (-PitchDampingMag * worldRight)\
      \ + (-RollDampingMag * worldForward) );</span>\n\t\t\t      Force <span class=\"\
      sy0\">+=</span> <span class=\"br0\">(</span>WForce <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\"\
      >-</span><span class=\"nu0\">1</span> <span class=\"sy0\">+</span> PitchDampingMag<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> worldRight<span class=\"\
      br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>\
      \ <span class=\"sy0\">+</span> RollDampingMag<span class=\"br0\">)</span> <span\
      \ class=\"sy0\">*</span> worldForward<span class=\"br0\">)</span><span class=\"\
      br0\">)</span>;\n \n\t\t\t      UDForce <span class=\"sy0\">=</span> Force;\n\
      \t\t\t      UDTorque <span class=\"sy0\">=</span> Torque;\n\t\t      <span class=\"\
      br0\">}</span>\n\t\t      <span class=\"kw2\">else</span>\n\t\t      <span class=\"\
      br0\">{</span>\n\t\t\t PitchDampingMag <span class=\"sy0\">=</span> AirPitchDamping\
      \ <span class=\"sy0\">*</span> PitchAngVel;\n\t\t\t <span class=\"co1\">//KAddImpulse(\
      \ WForce, -PitchDampingMag * worldRight );</span>\n\t\t\t Force <span class=\"\
      sy0\">+=</span> <span class=\"br0\">(</span>WForce <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span> <span class=\"sy0\">+</span> PitchDampingMag<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> worldRight<span class=\"br0\">)</span>;\n\t\t\
      \      <span class=\"br0\">}</span>\n              <span class=\"br0\">}</span>\n\
      \              <span class=\"kw2\">else</span>\n              <span class=\"\
      br0\">{</span>\n                   UDForce <span class=\"sy0\">=</span> Force;\n\
      \                   UDTorque <span class=\"sy0\">=</span> Torque;\n        \
      \      <span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Engine</dt>\n</dl>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> <span class=\"kw8\"\
      >Engine</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n     Gas <span class=\"sy0\">=</span> Gas2;\n    \
      \ RPM <span class=\"sy0\">=</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>EngineS, Gas<span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>StoptheCar</dt>\n</dl>\n<ul>\n\
      <li>This function allows for slower, more real life like breaking</li>\n</ul>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ StoptheCar<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n   <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>bBraking<span class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n\
      \      <span class=\"kw2\">if</span><span class=\"br0\">(</span>hBrake<span\
      \ class=\"sy0\">&lt;=</span><span class=\"nu0\">21</span> <span class=\"sy0\"\
      >&amp;&amp;</span> hBrake<span class=\"sy0\">&gt;=</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n\
      \           hBrake <span class=\"sy0\">+=</span> <span class=\"nu0\">0.5</span>;\n\
      \      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>hBrake<span class=\"sy0\">&gt;</span><span class=\"\
      nu0\">21</span><span class=\"br0\">)</span>\n             hBrake <span class=\"\
      sy0\">=</span> <span class=\"nu0\">21</span>;\n   <span class=\"br0\">}</span>\n\
      \   <span class=\"kw2\">if</span><span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>bBraking<span class=\"br0\">)</span>\n   <span class=\"br0\">{</span>\n\
      \           <span class=\"kw2\">if</span><span class=\"br0\">(</span>hBrake<span\
      \ class=\"sy0\">&lt;=</span><span class=\"nu0\">21</span> <span class=\"sy0\"\
      >&amp;&amp;</span> hBrake<span class=\"sy0\">&gt;=</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span>\n           <span class=\"br0\">{</span>\n\
      \                hBrake <span class=\"sy0\">-=</span> <span class=\"nu0\">0.5</span>;\n\
      \           <span class=\"br0\">}</span>\n           <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>hBrake<span class=\"sy0\">&lt;</span><span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>\n                hBrake <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n   <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>TorqueConverter</dt>\n\
      </dl>\n<ul>\n<li>This function should prolly have a different name, I named\
      \ it this thinking I would need to accually have a torque converter for the\
      \ tranny but I turned out making it a function that eases into gear and fixes\
      \ the rpm to equal that of the engine rpm when the clutch is pressed.</li>\n\
      </ul>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ TorqueConverter<span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span>  <span class=\"\
      kw5\">float</span>    rpmDifference;\n    <span class=\"kw1\">local</span> \
      \ <span class=\"kw5\">float</span>    myRPM;\n    rpmDifference <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0.0</span>;\n    myRPM <span class=\"sy0\"\
      >=</span> WheelRPM;\n    myRPM <span class=\"sy0\">*=</span> <span class=\"\
      nu0\">6.28</span>; <span class=\"co1\">// convert to radians per sec</span>\n\
      \    myRPM <span class=\"sy0\">/=</span> <span class=\"nu0\">60</span>;\n  \
      \       <span class=\"kw2\">if</span><span class=\"br0\">(</span>EngineRPM <span\
      \ class=\"sy0\">==</span> myRPM<span class=\"br0\">)</span>\n              bInGear\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n         <span\
      \ class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>EngineRPM <span class=\"sy0\">&gt;</span> myRPM<span class=\"br0\"\
      >)</span>\n         <span class=\"br0\">{</span>\n              <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>myRPM <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n               \
      \     rpmDifference <span class=\"sy0\">=</span> EngineRPM <span class=\"sy0\"\
      >-</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"\
      sy0\">*</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>myRPM<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;\n \n              <span\
      \ class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>myRPM <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n                    rpmDifference <span class=\"sy0\"\
      >=</span> EngineRPM <span class=\"sy0\">-</span> myRPM;\n              <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>rpmDifference <span class=\"\
      sy0\">&lt;=</span> <span class=\"nu0\">200.0</span><span class=\"br0\">)</span>\n\
      \              <span class=\"br0\">{</span>\n                   bInGear <span\
      \ class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n              <span\
      \ class=\"br0\">}</span>\n              <span class=\"kw2\">else</span> <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>rpmDifference <span class=\"\
      sy0\">&gt;</span> <span class=\"nu0\">200.0</span><span class=\"br0\">)</span>\n\
      \              <span class=\"br0\">{</span>\n                   bInGear <span\
      \ class=\"sy0\">=</span> <span class=\"kw6\">False</span>;\n               \
      \    rpmDifference <span class=\"sy0\">=</span> rpmDifference <span class=\"\
      sy0\">*</span> <span class=\"nu0\">0.2</span>;\n                   EngineRPM\
      \ <span class=\"sy0\">-=</span> rpmDifference;\n                   bRadians\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n          \
      \    <span class=\"br0\">}</span>\n         <span class=\"br0\">}</span>\n \
      \        <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>EngineRPM <span class=\"sy0\">&lt;</span> myRPM<span\
      \ class=\"br0\">)</span>\n         <span class=\"br0\">{</span>\n          \
      \    rpmDifference <span class=\"sy0\">=</span> myRPM <span class=\"sy0\">-</span>\
      \ EngineRPM;\n              <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>rpmDifference <span class=\"sy0\">&lt;=</span> <span class=\"nu0\"\
      >200.0</span><span class=\"br0\">)</span>\n              <span class=\"br0\"\
      >{</span>\n                   bInGear <span class=\"sy0\">=</span> <span class=\"\
      kw6\">True</span>;\n              <span class=\"br0\">}</span>\n           \
      \   <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>rpmDifference <span class=\"sy0\">&gt;</span> <span class=\"nu0\"\
      >200.0</span><span class=\"br0\">)</span>\n              <span class=\"br0\"\
      >{</span>\n                   bInGear <span class=\"sy0\">=</span> <span class=\"\
      kw6\">False</span>;\n                   rpmDifference <span class=\"sy0\">=</span>\
      \ rpmDifference <span class=\"sy0\">*</span> <span class=\"nu0\">0.2</span>;\n\
      \                   EngineRPM <span class=\"sy0\">-=</span> rpmDifference;\n\
      \                   bRadians <span class=\"sy0\">=</span> <span class=\"kw6\"\
      >True</span>;\n              <span class=\"br0\">}</span>\n         <span class=\"\
      br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>KApplyForce</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">KApplyForce</span><span class=\"br0\">(</span><span class=\"\
      kw1\">out</span> <span class=\"kw5\">vector</span> Force, <span class=\"kw1\"\
      >out</span> <span class=\"kw5\">vector</span> Torque<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw6\">Super</span>.<span class=\"\
      kw4\">KApplyForce</span><span class=\"br0\">(</span>Force, Torque<span class=\"\
      br0\">)</span>;\n    Force <span class=\"sy0\">+=</span> UDForce;\n    Torque\
      \ <span class=\"sy0\">+=</span> UDTorque;\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>bBoosting <span class=\"sy0\">==</span> <span\
      \ class=\"kw6\">true</span> <span class=\"sy0\">&amp;&amp;</span> bVehicleOnGround\
      \ <span class=\"sy0\">==</span> <span class=\"kw6\">true</span><span class=\"\
      br0\">)</span>\n        Force <span class=\"sy0\">+=</span> <span class=\"kw5\"\
      >vector</span><span class=\"br0\">(</span><span class=\"kw7\">Rotation</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> SpeedBoost;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>KImpact</dt>\n</dl>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">event</span> <span class=\"kw4\">KImpact</span><span\
      \ class=\"br0\">(</span><span class=\"kw9\">Actor</span> Other, <span class=\"\
      kw5\">vector</span> Pos, <span class=\"kw5\">vector</span> ImpactVel, <span\
      \ class=\"kw5\">vector</span> ImpactNorm<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span><span class=\"kw7\">Role</span> <span class=\"sy0\">==</span> <span\
      \ class=\"kw7\">ROLE_Authority</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n \n        ImpactInfo.<span class=\"me0\">Other</span>\
      \ <span class=\"sy0\">=</span> Other;\n        ImpactInfo.<span class=\"me0\"\
      >Pos</span> <span class=\"sy0\">=</span> Pos;\n        ImpactInfo.<span class=\"\
      me0\">ImpactVel</span> <span class=\"sy0\">=</span> ImpactVel;\n        ImpactInfo.<span\
      \ class=\"me0\">ImpactNorm</span> <span class=\"sy0\">=</span> ImpactNorm;\n\
      \        ImpactInfo.<span class=\"me0\">ImpactAccel</span> <span class=\"sy0\"\
      >=</span> KParams.<span class=\"me0\">KAcceleration</span>;\n        ImpactTicksLeft\
      \ <span class=\"sy0\">=</span> ImpactDamageTicks;\n    <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>DrivingStatusChanged</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">event</span>\
      \ DrivingStatusChanged<span class=\"br0\">(</span><span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> i;\n\t<span class=\"kw6\">Super</span>.<span class=\"me0\"\
      >DrivingStatusChanged</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>bDriving\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw7\">Level</span>.<span\
      \ class=\"me0\">NetMode</span> <span class=\"sy0\">!=</span> NM_DedicatedServer\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>bDropDetail<span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n        Dust.<span\
      \ class=\"me0\">length</span> <span class=\"sy0\">=</span> Wheels.<span class=\"\
      me0\">length</span>;\n        <span class=\"kw2\">for</span><span class=\"br0\"\
      >(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"\
      sy0\">&lt;</span>Wheels.<span class=\"me0\">Length</span>; i<span class=\"sy0\"\
      >++</span><span class=\"br0\">)</span>\n            <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Dust<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span> <span class=\"sy0\">==</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n            <span class=\"br0\">{</span>\n       \
      \ \t\t<span class=\"co1\">// Create wheel dust emitters.</span>\n        \t\t\
      WheelCoords <span class=\"sy0\">=</span> <span class=\"kw4\">GetBoneCoords</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">BoneName</span><span class=\"br0\">)</span>;\n\
      \        \t\tDust<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span\
      \ class=\"sy0\">=</span> <span class=\"kw4\">spawn</span><span class=\"br0\"\
      >(</span><span class=\"kw1\">class</span><span class=\"st0\">'ONSDirtSlipEffect'</span>,\
      \ <span class=\"kw6\">self</span>,, WheelCoords.<span class=\"me0\">Origin</span>\
      \ <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"br0\"\
      >(</span><span class=\"kw3\">vect</span><span class=\"br0\">(</span><span class=\"\
      nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span>\
      \ Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"\
      me0\">WheelRadius</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;&gt;</span>\
      \ <span class=\"kw7\">Rotation</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span>;\n        \t\tDust<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"kw4\">SetBase</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n\t\t\t    Dust<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SetDirtColor</span><span\
      \ class=\"br0\">(</span> <span class=\"kw7\">Level</span>.<span class=\"me0\"\
      >DustColor</span> <span class=\"br0\">)</span>;\n        \t<span class=\"br0\"\
      >}</span>\n\t\t<span class=\"kw2\">if</span><span class=\"br0\">(</span>bMakeBrakeLights<span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\t<span class=\"\
      kw2\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\"\
      >2</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n    \t\
      \t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>BrakeLight<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n    \t\t\t<span\
      \ class=\"br0\">{</span>\n    \t\t\t\tBrakeLight<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw4\">spawn</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">class</span><span class=\"st0\"\
      >'ONSBrakelightCorona'</span>, <span class=\"kw6\">self</span>,, <span class=\"\
      kw7\">Location</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>BrakeLightOffset<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;</span>\
      \ <span class=\"kw7\">Rotation</span><span class=\"br0\">)</span> <span class=\"\
      br0\">)</span>;\n    \t\t\t\tBrakeLight<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"kw4\">SetBase</span><span class=\"br0\">(</span><span\
      \ class=\"kw6\">self</span><span class=\"br0\">)</span>;\n    \t\t\t\tBrakeLight<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"kw4\">SetRelativeRotation</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">rot</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">32768</span>,<span class=\"nu0\"\
      >0</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>; <span class=\"\
      co1\">// Point lights backwards.</span>\n    \t\t\t\tBrakeLight<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"kw7\">Skins</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> BrakeLightMaterial;\n    \t\t\t<span class=\"\
      br0\">}</span>\n\t\t<span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n\
      \    <span class=\"kw2\">else</span>\n    <span class=\"br0\">{</span>\n   \
      \     <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      kw7\">Level</span>.<span class=\"me0\">NetMode</span> <span class=\"sy0\">!=</span>\
      \ NM_DedicatedServer<span class=\"br0\">)</span>\n    \t<span class=\"br0\"\
      >{</span>\n            <span class=\"kw2\">for</span><span class=\"br0\">(</span>i<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>Dust.<span\
      \ class=\"me0\">Length</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n                Dust<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n \n            Dust.<span class=\"me0\">Length</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n \n          \
      \  <span class=\"kw2\">if</span><span class=\"br0\">(</span>bMakeBrakeLights<span\
      \ class=\"br0\">)</span>\n            <span class=\"br0\">{</span>\n       \
      \     \t<span class=\"kw2\">for</span><span class=\"br0\">(</span>i<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span\
      \ class=\"nu0\">2</span>; i<span class=\"sy0\">++</span><span class=\"br0\"\
      >)</span>\n                    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>BrakeLight<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span>\n                        BrakeLight<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"kw4\">Destroy</span><span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>;\n            <span class=\"br0\">}</span>\n\
      \        <span class=\"br0\">}</span>\n        TurnDamping <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0.0</span>;\n    <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>KDriverEnter</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ KDriverEnter<span class=\"br0\">(</span><span class=\"kw9\">Pawn</span> P<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n        <span class=\"\
      kw6\">Super</span>.<span class=\"me0\">KDriverEnter</span><span class=\"br0\"\
      >(</span>P<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>ClientKDriverLeave</dt>\n</dl>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> ClientKDriverLeave<span class=\"br0\">(</span><span class=\"\
      kw9\">PlayerController</span> PC<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw6\">Super</span>.<span class=\"me0\">ClientKDriverLeave</span><span\
      \ class=\"br0\">(</span>PC<span class=\"br0\">)</span>;\n \n\tbWeaponIsAltFiring\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\tPC.<span\
      \ class=\"me0\">EndZoom</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>SpecialCalcFirstPersonView</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> SpecialCalcFirstPersonView<span class=\"\
      br0\">(</span><span class=\"kw9\">PlayerController</span> PC, <span class=\"\
      kw1\">out</span> <span class=\"kw9\">actor</span> ViewActor, <span class=\"\
      kw1\">out</span> <span class=\"kw5\">vector</span> CameraLocation, <span class=\"\
      kw1\">out</span> <span class=\"kw5\">rotator</span> CameraRotation <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\tViewActor <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">self</span>;\n\tCameraLocation <span class=\"\
      sy0\">=</span> <span class=\"kw7\">Location</span> <span class=\"sy0\">+</span>\
      \ <span class=\"br0\">(</span>FPCamPos <span class=\"sy0\">&gt;&gt;</span> <span\
      \ class=\"kw7\">Rotation</span><span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Fire</dt>\n</dl>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> Fire<span class=\"\
      br0\">(</span><span class=\"kw1\">optional</span> <span class=\"kw5\">float</span>\
      \ F<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n       VehicleFire<span\
      \ class=\"br0\">(</span><span class=\"kw6\">False</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>AltFire</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ AltFire<span class=\"br0\">(</span><span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">float</span> F<span class=\"br0\">)</span>\n<span class=\"br0\"\
      >{</span>\n \n        VehicleFire<span class=\"br0\">(</span><span class=\"\
      kw6\">true</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>VehicleFire</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">function</span> VehicleFire<span class=\"br0\">(</span><span\
      \ class=\"kw5\">bool</span> bWasAltFire<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n         <span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>bWasAltFire<span class=\"br0\">)</span>\n         <span\
      \ class=\"br0\">{</span>\n                 bGearUp <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>;\n                 ChangeGear<span class=\"br0\"\
      >(</span>bGearUp<span class=\"br0\">)</span>;\n         <span class=\"br0\"\
      >}</span>\n \n         <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>bWasAltFire<span class=\"br0\">)</span>\n         <span\
      \ class=\"br0\">{</span>\n                 bGearDown <span class=\"sy0\">=</span>\
      \ <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;\n              \
      \   ChangeGear<span class=\"br0\">(</span>bGearDown<span class=\"br0\">)</span>;\n\
      \         <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>VehicleCeaseFire</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">function</span> VehicleCeaseFire<span class=\"br0\"\
      >(</span><span class=\"kw5\">bool</span> bWasAltFire<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n         <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>bWasAltFire<span class=\"br0\">)</span>\n\
      \         <span class=\"br0\">{</span>\n                 bGearUp <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n                 ChangeGear<span\
      \ class=\"br0\">(</span>bGearUp<span class=\"br0\">)</span>;\n         <span\
      \ class=\"br0\">}</span>\n         <span class=\"kw2\">else</span> <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>bWasAltFire<span class=\"br0\">)</span>\n\
      \         <span class=\"br0\">{</span>\n                 bGearDown <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n                 ChangeGear<span\
      \ class=\"br0\">(</span>bGearDown<span class=\"br0\">)</span>;\n         <span\
      \ class=\"br0\">}</span>\n    <span class=\"kw6\">Super</span>.<span class=\"\
      me0\">VehicleCeaseFire</span><span class=\"br0\">(</span>bWasAltFire<span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>ClientVehicleCeaseFire</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> ClientVehicleCeaseFire<span class=\"br0\"\
      >(</span><span class=\"kw5\">bool</span> bWasAltFire<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw6\">Super</span>.<span class=\"\
      me0\">ClientVehicleCeaseFire</span><span class=\"br0\">(</span>bWasAltFire<span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <dl>\n<dt>Tick</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">function</span> <span class=\"kw4\">Tick</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> DT<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \               i, x;\n    <span class=\"kw1\">local</span> <span class=\"kw5\"\
      >bool</span>              lostTraction;\n    <span class=\"kw1\">local</span>\
      \ <span class=\"kw8\">KarmaParams</span>       KP;\n    <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">KRigidBodyState</span>   BodyState;\n \n \
      \   TheDeltaTime <span class=\"sy0\">=</span> DT;\n    <span class=\"kw6\">Super</span>.<span\
      \ class=\"kw4\">Tick</span><span class=\"br0\">(</span>DT<span class=\"br0\"\
      >)</span>;\n \n    VRate <span class=\"sy0\">=</span> <span class=\"kw3\">VSize</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Velocity</span><span class=\"br0\"\
      >)</span>;\n    KP <span class=\"sy0\">=</span> <span class=\"kw8\">KarmaParams</span><span\
      \ class=\"br0\">(</span>KParams<span class=\"br0\">)</span>;\n    KGetRigidBodyState<span\
      \ class=\"br0\">(</span>BodyState<span class=\"br0\">)</span>;\n \n    SteerBoneAxis\
      \ <span class=\"sy0\">=</span> AXIS_Z;\n    KWake<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span><span class=\"kw7\">Role</span> <span class=\"sy0\">==</span> <span\
      \ class=\"kw7\">ROLE_Authority</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"br0\">{</span>\n        <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span>bDriving<span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\
      \t    <span class=\"co1\">// Update ForwardVel, CarMPH and bIsInverted on both\
      \ server and client.</span>\n            <span class=\"kw3\">GetAxes</span><span\
      \ class=\"br0\">(</span><span class=\"kw7\">Rotation</span>, worldForward, worldRight,\
      \ worldUp<span class=\"br0\">)</span>;\n \n  \t    ForwardVel <span class=\"\
      sy0\">=</span> <span class=\"kw7\">Velocity</span> dot worldForward;\n\t   \
      \ CarMPH <span class=\"sy0\">=</span> <span class=\"kw3\">Abs</span><span class=\"\
      br0\">(</span><span class=\"br0\">(</span>ForwardVel <span class=\"sy0\">*</span>\
      \ <span class=\"nu0\">3600.0</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">/</span> <span class=\"nu0\">140800.0</span><span class=\"br0\">)</span>;\
      \ <span class=\"co1\">// Convert from units per sec to miles per hour.</span>\n\
      \ \n\t    bIsInverted <span class=\"sy0\">=</span> worldUp.<span class=\"me0\"\
      >Z</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.2</span>;\n\
      \ \n\t    <span class=\"co1\">// Update engine sound pitch</span>\n\t    EnginePitch\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">255.0</span> <span class=\"\
      sy0\">*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>EngineRPM<span\
      \ class=\"sy0\">+</span>IdleRPM<span class=\"br0\">)</span><span class=\"sy0\"\
      >/</span>EngineRPMSoundRange<span class=\"br0\">)</span>;\n\t    EnginePitch\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Clamp</span><span class=\"\
      br0\">(</span>EnginePitch, <span class=\"nu0\">0.0</span>, <span class=\"nu0\"\
      >255.0</span><span class=\"br0\">)</span>;\n\t    <span class=\"kw7\">SoundPitch</span>\
      \ <span class=\"sy0\">=</span> EnginePitch;\n \n            SteerBoneAngle <span\
      \ class=\"sy0\">=</span> <span class=\"br0\">(</span>ActualSteering<span class=\"\
      sy0\">/</span><span class=\"kw3\">InterpCurveEval</span><span class=\"br0\"\
      >(</span>MaxSteerAngleCurve, VRate<span class=\"br0\">)</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">*</span> SteerBoneMaxAngle <span class=\"\
      sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">65535.0</span><span\
      \ class=\"sy0\">/</span><span class=\"nu0\">360.0</span><span class=\"br0\"\
      >)</span>;\n \n            one.<span class=\"me0\">X</span> <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0</span>;\n            one.<span class=\"me0\"\
      >Y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n     \
      \       one.<span class=\"me0\">Z</span> <span class=\"sy0\">=</span> SteerBoneAngle;\n\
      \ \n            two.<span class=\"me0\">X</span> <span class=\"sy0\">=</span>\
      \ SteerBoneAngle;\n            two.<span class=\"me0\">Y</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n            two.<span class=\"\
      me0\">Z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \ \n            three.<span class=\"me0\">X</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n            three.<span class=\"me0\">Y</span>\
      \ <span class=\"sy0\">=</span> SteerBoneAngle;\n            three.<span class=\"\
      me0\">Z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \ \n \n            <span class=\"kw2\">if</span><span class=\"br0\">(</span>SteerBoneAxis\
      \ <span class=\"sy0\">==</span> AXIS_X<span class=\"br0\">)</span>\n       \
      \          <span class=\"co1\">//SteerRot = Rotator(0, 0, SteerBoneAngle);</span>\n\
      \                 SteerRot <span class=\"sy0\">=</span> <span class=\"kw5\"\
      >Rotator</span><span class=\"br0\">(</span>one<span class=\"br0\">)</span>;\n\
      \ \n            <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>SteerBoneAxis <span class=\"sy0\">==</span> AXIS_Y<span\
      \ class=\"br0\">)</span>\n                 <span class=\"co1\">//SteerRot =\
      \ Rotator(SteerBoneAngle, 0, 0);</span>\n                 SteerRot <span class=\"\
      sy0\">=</span> <span class=\"kw5\">Rotator</span><span class=\"br0\">(</span>two<span\
      \ class=\"br0\">)</span>;\n \n            <span class=\"kw2\">else</span>\n\
      \                 <span class=\"co1\">//SteerRot = Rotator(0, SteerBoneAngle,\
      \ 0);</span>\n                 SteerRot <span class=\"sy0\">=</span> <span class=\"\
      kw5\">Rotator</span><span class=\"br0\">(</span>three<span class=\"br0\">)</span>;\n\
      \ \n            SetBoneDirection<span class=\"br0\">(</span>SteerBoneName, SteerRot,\
      \ WForce, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><span class=\"\
      br0\">)</span>;\n        <span class=\"br0\">}</span>\n    <span class=\"br0\"\
      >}</span>\n    \t<span class=\"co1\">// Update any stunt variables.</span>\n\
      \t<span class=\"kw2\">if</span><span class=\"br0\">(</span>bDoStuntInfo<span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\tForwardsInOldPlane\
      \ <span class=\"sy0\">=</span> <span class=\"kw5\">Coords</span>.<span class=\"\
      me0\">XAxis</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span\
      \ class=\"kw5\">Coords</span>.<span class=\"me0\">XAxis</span> dot OldCoords.<span\
      \ class=\"me0\">ZAxis</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >*</span> OldCoords.<span class=\"me0\">ZAxis</span>;\n\t\t<span class=\"co1\"\
      >//ForwardsInOldPlane = SafeNormal(ForwardsInOldPlane);</span>\n\t\tDeltaHeading\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Acos</span><span class=\"\
      br0\">(</span> <span class=\"kw3\">Clamp</span><span class=\"br0\">(</span>\
      \ ForwardsInOldPlane dot OldCoords.<span class=\"me0\">XAxis</span>, <span class=\"\
      sy0\">-</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">1.0</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t\t<span class=\"\
      kw2\">if</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>ForwardsInOldPlane\
      \ dot OldCoords.<span class=\"me0\">YAxis</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.0</span><span class=\"\
      br0\">)</span>\n\t\t\tDeltaHeading <span class=\"sy0\">*=</span> <span class=\"\
      sy0\">-</span><span class=\"nu0\">1.0</span>;\n\t\tDeltaPitch <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Asin</span><span class=\"br0\">(</span> <span\
      \ class=\"kw3\">Clamp</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >Coords</span>.<span class=\"me0\">XAxis</span> dot OldCoords.<span class=\"\
      me0\">ZAxis</span>, <span class=\"sy0\">-</span>1.0f, <span class=\"nu0\">1.0</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t\tDeltaRoll <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Asin</span><span class=\"br0\"\
      >(</span> <span class=\"kw3\">Clamp</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">Coords</span>.<span class=\"me0\">YAxis</span> dot OldCoords.<span\
      \ class=\"me0\">ZAxis</span>, <span class=\"sy0\">-</span>1.0f, <span class=\"\
      nu0\">1.0</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\
      \t\t<span class=\"co1\">//debugf( TEXT(\"DR:%f DP:%f\"), DeltaRoll, DeltaPitch\
      \ );</span>\n \n\t\tbCurrentOnGround <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span>bVehicleOnGround <span class=\"sy0\">||</span> KP.<span class=\"\
      me0\">bContactingLevel</span><span class=\"br0\">)</span>;\n\t\tDaredevilPoints\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n \n\t\t<span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>bCurrentOnGround<span class=\"br0\"\
      >)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\t<span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bOldVehicleOnGround<span\
      \ class=\"br0\">)</span>\n\t\t\t<span class=\"br0\">{</span>\n\t\t\t\t<span\
      \ class=\"co1\">// We just landed - see if we should display Daredevil 'message'</span>\n\
      \t\t\t\tInAirTime <span class=\"sy0\">=</span> <span class=\"kw7\">Level</span>.<span\
      \ class=\"me0\">TimeSeconds</span> <span class=\"sy0\">-</span> LastOnGroundTime;\n\
      \ \n                                Dist1 <span class=\"sy0\">=</span> <span\
      \ class=\"kw7\">Location</span>;\n                                Dist2 <span\
      \ class=\"sy0\">=</span> LastOnGroundLocation;\n                           \
      \     <span class=\"kw3\">Vect</span>  <span class=\"sy0\">=</span> Dist1 <span\
      \ class=\"sy0\">-</span> Dist2;\n                                Dist3 <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Vect</span>.<span class=\"me0\"\
      >X</span> <span class=\"sy0\">*</span> <span class=\"kw3\">Vect</span>.<span\
      \ class=\"me0\">X</span> <span class=\"sy0\">-</span> <span class=\"kw3\">Vect</span>.<span\
      \ class=\"me0\">Y</span> <span class=\"sy0\">*</span> <span class=\"kw3\">Vect</span>.<span\
      \ class=\"me0\">Y</span>;\n                                Dist3 <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Sqrt</span><span class=\"br0\">(</span>Dist3<span\
      \ class=\"br0\">)</span>;\n \n\t\t\t\tDaredevilPoints <span class=\"sy0\">+=</span>\
      \ <span class=\"kw3\">Max</span><span class=\"br0\">(</span> <span class=\"\
      kw3\">Ceil</span><span class=\"br0\">(</span> <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>InAirSpin<span class=\"br0\">)</span><span class=\"\
      sy0\">/</span><span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span\
      \ class=\"sy0\">*</span>DaredevilThreshInAirSpin<span class=\"br0\">)</span>\
      \ <span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\"\
      >1</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span>;\n\t\t\t\
      \tDaredevilPoints <span class=\"sy0\">+=</span> <span class=\"kw3\">Max</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">Ceil</span><span class=\"br0\"\
      >(</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>InAirPitch<span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.5</span><span class=\"sy0\">*</span>DaredevilThreshInAirPitch<span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span> <span class=\"\
      br0\">)</span>;\n\t\t\t\tDaredevilPoints <span class=\"sy0\">+=</span> <span\
      \ class=\"kw3\">Max</span><span class=\"br0\">(</span> <span class=\"kw3\">Ceil</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>InAirRoll<span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.5</span><span class=\"sy0\">*</span>DaredevilThreshInAirRoll<span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span> <span class=\"\
      br0\">)</span>;\n\t\t\t\tDaredevilPoints <span class=\"sy0\">+=</span> <span\
      \ class=\"kw3\">Max</span><span class=\"br0\">(</span> <span class=\"kw3\">Ceil</span><span\
      \ class=\"br0\">(</span> InAirTime<span class=\"sy0\">/</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">*</span>DaredevilThreshInAirTime<span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span> <span class=\"\
      br0\">)</span>;\n\t\t\t\tDaredevilPoints <span class=\"sy0\">+=</span> <span\
      \ class=\"kw3\">Max</span><span class=\"br0\">(</span> <span class=\"kw3\">Ceil</span><span\
      \ class=\"br0\">(</span> InAirDistance<span class=\"sy0\">/</span><span class=\"\
      br0\">(</span>0.5f<span class=\"sy0\">*</span>DaredevilThreshInAirDistance<span\
      \ class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">-</span>\
      \ <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span> <span class=\"\
      br0\">)</span>;\n\t\t\t\tDaredevilPoints <span class=\"sy0\">*=</span> <span\
      \ class=\"nu0\">10</span>;\n \n\t\t\t\t<span class=\"co1\">// A wheel must be\
      \ touching the ground on landing to get a daredevil</span>\n\t\t\t\t<span class=\"\
      kw2\">if</span><span class=\"br0\">(</span> bVehicleOnGround <span class=\"\
      sy0\">&amp;&amp;</span> DaredevilPoints <span class=\"sy0\">&gt;</span> <span\
      \ class=\"nu0\">0</span> <span class=\"br0\">)</span>\n\t\t\t\t<span class=\"\
      br0\">{</span>\n\t\t\t\t\tOnDaredevil<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n\t\t\t\t<span class=\"br0\">}</span>\n\t\t\t<span class=\"\
      br0\">}</span>\n \n \n\t\t\tLastOnGroundLocation <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Location</span>;\n\t\t\tLastOnGroundTime <span class=\"\
      sy0\">=</span> <span class=\"kw7\">Level</span>.<span class=\"me0\">TimeSeconds</span>;\n\
      \t\t\tInAirSpin <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\
      \t\t\tInAirPitch <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\
      \t\t\tInAirRoll <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\
      \t\t<span class=\"br0\">}</span>\n\t\t<span class=\"kw2\">else</span>\n\t\t\
      <span class=\"br0\">{</span>\n\t\t\tInAirSpin <span class=\"sy0\">+=</span>\
      \ <span class=\"br0\">(</span><span class=\"nu0\">180.0</span><span class=\"\
      sy0\">/</span><span class=\"kw6\">PI</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">*</span> DeltaHeading;\n\t\t\tInAirPitch <span class=\"sy0\"\
      >+=</span> <span class=\"br0\">(</span><span class=\"nu0\">180.0</span><span\
      \ class=\"sy0\">/</span><span class=\"kw6\">PI</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> DeltaPitch;\n\t\t\tInAirRoll <span class=\"sy0\"\
      >+=</span> <span class=\"br0\">(</span><span class=\"nu0\">180.0</span><span\
      \ class=\"sy0\">/</span><span class=\"kw6\">PI</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> DeltaRoll;\n\t\t<span class=\"br0\">}</span>\n\
      \ \n\t\tOldRotation <span class=\"sy0\">=</span> <span class=\"kw7\">Rotation</span>;\n\
      \t\tbOldVehicleOnGround <span class=\"sy0\">=</span> bCurrentOnGround;\n\t<span\
      \ class=\"br0\">}</span>\n \n\t<span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span><span class=\"sy0\">!</span>bDriving<span class=\"br0\">)</span>\n\t\
      <span class=\"br0\">{</span>\n\t\tbOldVehicleOnGround <span class=\"sy0\">=</span>\
      \ <span class=\"kw6\">true</span>; <span class=\"co1\">// If no-one is in the\
      \ vehicle, dont consider it for daredevil status.</span>\n\t<span class=\"br0\"\
      >}</span>\n \n\t<span class=\"kw2\">if</span><span class=\"br0\">(</span>bAllowChargingJump<span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\t<span class=\"\
      co1\">// Check if all wheels are on the ground.</span>\n\t\t<span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span>bAllWheelsOnGround <span class=\"sy0\"\
      >==</span> <span class=\"kw6\">true</span><span class=\"br0\">)</span>\n\t\t\
      <span class=\"br0\">{</span>\n\t\t     <span class=\"kw2\">for</span><span class=\"\
      br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; x<span\
      \ class=\"sy0\">&lt;</span>Wheels.<span class=\"me0\">Length</span>; x<span\
      \ class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t\t     <span class=\"\
      br0\">{</span>\n\t\t\t <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me0\">bWheelOnGround</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw6\">false</span><span class=\"\
      br0\">)</span>\n\t\t\t\tbAllWheelsOnGround <span class=\"sy0\">=</span> <span\
      \ class=\"kw6\">false</span>;\n\t\t     <span class=\"br0\">}</span>\n\t\t<span\
      \ class=\"br0\">}</span>\n\t\t<span class=\"kw2\">else</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t     <span class=\"co1\">// If any wheels are off the ground\
      \ - we can just reset everything.</span>\n\t\t     <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bVehicleOnGround<span class=\"\
      br0\">)</span>\n\t\t     <span class=\"br0\">{</span>\n\t\t          JumpForce\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\t\t       \
      \   JumpSpin <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;\n\
      <span class=\"co1\">//                          bPushDown = false;</span>\n\t\
      \t     <span class=\"br0\">}</span>\n \n\t\t<span class=\"br0\">}</span>\n\t\
      <span class=\"br0\">}</span>\n      <span class=\"co1\">//Engine(Throttle);</span>\n\
      \     <span class=\"co1\">// If on the server - we work out OutputGas, OutputBrake\
      \ etc, and pack them to be sent to the client.</span>\n     <span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>bClutching<span\
      \ class=\"br0\">)</span>\n           Gas2 <span class=\"sy0\">=</span> <span\
      \ class=\"kw3\">InterpCurveEval</span><span class=\"br0\">(</span>RPMtoGas,\
      \ EngineRPM<span class=\"br0\">)</span>;\n     ProcessCarInput<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n     PackState<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>ProcessCarInput</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">function</span> ProcessCarInput<span class=\"br0\"\
      >(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n      \
      \  <span class=\"kw1\">local</span> <span class=\"kw5\">bool</span>     bReverse;\n\
      \ \n\tbReverse <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\
      \t<span class=\"kw2\">if</span><span class=\"br0\">(</span>Driver <span class=\"\
      sy0\">==</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\tOutputBrake <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1.0</span>;\n\t\tOutputGas <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0.0</span>;\n\t<span class=\"br0\">}</span>\n\t<span class=\"\
      kw2\">else</span>\n\t<span class=\"br0\">{</span>\n\t\t<span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>Throttle <span class=\"sy0\">&gt;=</span> <span class=\"\
      nu0\">0</span><span class=\"br0\">)</span> <span class=\"co1\">// pressing forwards</span>\n\
      \t\t<span class=\"br0\">{</span>\n                        OutputGas <span class=\"\
      sy0\">=</span> <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>Throttle<span\
      \ class=\"br0\">)</span>;\n                        OutputBrake <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0.0</span>;\n                        <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span class=\"\
      br0\">)</span>\n                        <span class=\"br0\">{</span>\n     \
      \                        <span class=\"kw2\">if</span><span class=\"br0\">(</span>Throttle\
      \ <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\"\
      >)</span>\n                             <span class=\"br0\">{</span>\n     \
      \                             <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>Gas2<span class=\"sy0\">&lt;=</span><span class=\"nu0\">21</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> Gas2<span class=\"sy0\">&gt;=</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>\n                     \
      \             <span class=\"br0\">{</span>\n                               \
      \         Gas2 <span class=\"sy0\">-=</span> <span class=\"nu0\">0.5</span>;\n\
      \                                  <span class=\"br0\">}</span>\n          \
      \                        <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gas2<span\
      \ class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>\n\
      \                                        Gas2 <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">0</span>;\n                             <span class=\"br0\"\
      >}</span>\n                             <span class=\"kw2\">else</span>\n  \
      \                           <span class=\"br0\">{</span>\n                 \
      \                 <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gas2<span\
      \ class=\"sy0\">&lt;=</span><span class=\"nu0\">21</span> <span class=\"sy0\"\
      >&amp;&amp;</span> Gas2<span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n                                  <span class=\"br0\"\
      >{</span>\n                                         Gas2 <span class=\"sy0\"\
      >+=</span> <span class=\"nu0\">0.5</span>;\n                               \
      \   <span class=\"br0\">}</span>\n                                  <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>Gas2<span class=\"sy0\">&gt;</span><span\
      \ class=\"nu0\">21</span><span class=\"br0\">)</span>\n                    \
      \                     Gas2 <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >21</span>;\n                             <span class=\"br0\">}</span>\n   \
      \                          <span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span>Gas2 <span class=\"sy0\">&gt;=</span><span class=\"nu0\">21</span><span\
      \ class=\"br0\">)</span>\n                                  Gas2 <span class=\"\
      sy0\">=</span> <span class=\"nu0\">21</span>;\n                         <span\
      \ class=\"br0\">}</span>\n                         <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bClutching<span class=\"\
      br0\">)</span>\n \n                 <span class=\"br0\">}</span>\n \n      \
      \ StoptheCar<span class=\"br0\">(</span><span class=\"br0\">)</span>;\n    \
      \   OutputBrake <span class=\"sy0\">=</span> <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span><span class=\"kw3\">InterpCurveEval</span><span class=\"\
      br0\">(</span>BrakeCurve, hBrake<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n \n\tOutputPitch <span class=\"sy0\">=</span> Rise;\n\t<span class=\"\
      br0\">}</span>\n\t<span class=\"kw8\">Engine</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n\tKWake<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Clutch</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">exec</span>\
      \ <span class=\"kw1\">function</span> Clutch<span class=\"br0\">(</span><span\
      \ class=\"kw5\">bool</span> bEnabled<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n       <span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>bEnabled<span class=\"br0\">)</span>\n       <span class=\"\
      br0\">{</span>\n           bClutching <span class=\"sy0\">=</span> <span class=\"\
      kw6\">False</span>;\n           bInGear <span class=\"sy0\">=</span> <span class=\"\
      kw6\">False</span>;\n       <span class=\"br0\">}</span>\n \n       <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>bEnabled<span\
      \ class=\"br0\">)</span>\n       <span class=\"br0\">{</span>\n           bClutching\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n \n       \
      \    RPM <span class=\"sy0\">=</span> EngineRPM;\n       <span class=\"br0\"\
      >}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Brake</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">exec</span>\
      \ <span class=\"kw1\">function</span> Brake<span class=\"br0\">(</span><span\
      \ class=\"kw5\">bool</span> bEnabled<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n      <span class=\"kw2\">if</span><span class=\"br0\">(</span>bEnabled<span\
      \ class=\"br0\">)</span>\n      <span class=\"br0\">{</span>\n           bBraking\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n          \
      \ OutputHandbrake <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n\
      \      <span class=\"br0\">}</span>\n      <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bEnabled<span class=\"br0\"\
      >)</span>\n      <span class=\"br0\">{</span>\n           bBraking <span class=\"\
      sy0\">=</span> <span class=\"kw6\">false</span>;\n           OutputHandbrake\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n      <span\
      \ class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <dl>\n<dt>ChangeGear</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">function</span> ChangeGear<span class=\"br0\">(</span><span\
      \ class=\"kw5\">int</span> GearChoice<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n      <span class=\"kw2\">if</span><span class=\"br0\">(</span>bClutching<span\
      \ class=\"br0\">)</span><span class=\"br0\">{</span>\n        <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>Gear <span class=\"sy0\">&gt;=</span>\
      \ <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> Gear <span\
      \ class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span><span class=\"br0\"\
      >)</span>\n        <span class=\"br0\">{</span>\n             <span class=\"\
      kw2\">if</span><span class=\"br0\">(</span>GearChoice <span class=\"sy0\">==</span>\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span>\n             <span\
      \ class=\"br0\">{</span>\n                  Gear<span class=\"sy0\">++</span>;\n\
      \                  bGearUp <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >0</span>;\n             <span class=\"br0\">}</span>\n             <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>GearChoice\
      \ <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">)</span>\n             <span class=\"br0\">{</span>\n\
      \                  Gear<span class=\"sy0\">--</span>;\n                  bGearDown\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n             <span\
      \ class=\"br0\">}</span>\n             <span class=\"kw2\">else</span> <span\
      \ class=\"kw2\">if</span><span class=\"br0\">(</span>GearChoice <span class=\"\
      sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n \
      \            <span class=\"br0\">{</span>\n \n             <span class=\"br0\"\
      >}</span>\n        <span class=\"br0\">}</span>\n        <span class=\"kw2\"\
      >else</span> <span class=\"kw2\">if</span><span class=\"br0\">(</span>Gear <span\
      \ class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\
      \ GearChoice <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>\n        <span class=\"br0\">{</span>\n           \
      \   Gear<span class=\"sy0\">++</span>;\n              bGearUp <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n        <span class=\"br0\">}</span>\n\
      \        <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span>Gear <span class=\"sy0\">==</span> <span class=\"nu0\"\
      >8</span> <span class=\"sy0\">&amp;&amp;</span> GearChoice <span class=\"sy0\"\
      >==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"\
      br0\">)</span>\n        <span class=\"br0\">{</span>\n              Gear<span\
      \ class=\"sy0\">--</span>;\n              bGearDown <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n        <span class=\"br0\">}</span>\n    \
      \    <span class=\"kw2\">else</span>\n        <span class=\"br0\">{</span>\n\
      \             bGearUp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \             bGearDown <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \        <span class=\"br0\">}</span>\n      <span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>PackState</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ PackState<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"kw5\">KRigidBodyState</span>\
      \   RBState;\n\t<span class=\"kw1\">local</span> <span class=\"kw5\">rotator</span>\
      \           ViewRot;\n\t<span class=\"kw2\">if</span><span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>KIsAwake<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>\n\t\t<span class=\"kw2\">return</span>;\n\
      \tKGetRigidBodyState<span class=\"br0\">(</span>RBState<span class=\"br0\">)</span>;\n\
      \        CActiveWeapon<span class=\"sy0\">=</span>SActiveWeapon;\n\tCarState.<span\
      \ class=\"me0\">ChassisPosition</span>.<span class=\"me0\">X</span> <span class=\"\
      sy0\">=</span> RBState.<span class=\"me0\">Position</span>.<span class=\"me0\"\
      >X</span>;\n\tCarState.<span class=\"me0\">ChassisPosition</span>.<span class=\"\
      me0\">Y</span> <span class=\"sy0\">=</span> RBState.<span class=\"me0\">Position</span>.<span\
      \ class=\"me0\">Y</span>;\n\tCarState.<span class=\"me0\">ChassisPosition</span>.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">=</span> RBState.<span class=\"\
      me0\">Position</span>.<span class=\"me0\">Z</span>;\n\tCarState.<span class=\"\
      me0\">ChassisQuaternion</span> <span class=\"sy0\">=</span> RBState.<span class=\"\
      me0\">Quaternion</span>;\n\tCarState.<span class=\"me0\">ChassisLinVel</span>.<span\
      \ class=\"me0\">X</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">LinVel</span>.<span\
      \ class=\"me0\">X</span>;\n\tCarState.<span class=\"me0\">ChassisLinVel</span>.<span\
      \ class=\"me0\">Y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">LinVel</span>.<span\
      \ class=\"me0\">Y</span>;\n\tCarState.<span class=\"me0\">ChassisLinVel</span>.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">LinVel</span>.<span\
      \ class=\"me0\">Z</span>;\n\tCarState.<span class=\"me0\">ChassisAngVel</span>.<span\
      \ class=\"me0\">X</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1000.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">X</span>;\n\tCarState.<span class=\"me0\">ChassisAngVel</span>.<span\
      \ class=\"me0\">Y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1000.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">Y</span>;\n\tCarState.<span class=\"me0\">ChassisAngVel</span>.<span\
      \ class=\"me0\">Z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1000.0</span>\
      \ <span class=\"sy0\">*</span> RBState.<span class=\"me0\">AngVel</span>.<span\
      \ class=\"me0\">Z</span>;\n        CarState.<span class=\"me0\">ServerHandbrake</span>\
      \ <span class=\"sy0\">=</span> FloatToRangeByte<span class=\"br0\">(</span>OutputPitch<span\
      \ class=\"br0\">)</span>;\n\tCarState.<span class=\"me0\">ServerBrake</span>\
      \ <span class=\"sy0\">=</span> FloatToRangeByte<span class=\"br0\">(</span>OutputBrake<span\
      \ class=\"br0\">)</span>;\n\tCarState.<span class=\"me0\">ServerGas</span> <span\
      \ class=\"sy0\">=</span> FloatToRangeByte<span class=\"br0\">(</span>OutputGas<span\
      \ class=\"br0\">)</span>;\n\tCarState.<span class=\"me0\">ServerGear</span>\
      \ <span class=\"sy0\">=</span> Gear;\n\tCarState.<span class=\"me0\">ServerSteering</span>\
      \ <span class=\"sy0\">=</span> FloatToRangeByte<span class=\"br0\">(</span>Steering<span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw2\">if</span><span class=\"br0\"\
      >(</span><span class=\"kw9\">Controller</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n\t<span class=\"\
      br0\">{</span>\n\t\t<span class=\"kw2\">if</span><span class=\"br0\">(</span>IsHumanControlled<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \t\t<span class=\"br0\">{</span>\n\t\t\tDriverViewPitch <span class=\"sy0\"\
      >=</span> <span class=\"kw9\">Controller</span>.<span class=\"kw7\">Rotation</span>.<span\
      \ class=\"me0\">Pitch</span>;\n\t\t\tDriverViewYaw <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">Controller</span>.<span class=\"kw7\">Rotation</span>.<span\
      \ class=\"me0\">Yaw</span>;\n\t\t<span class=\"br0\">}</span>\n\t\t<span class=\"\
      kw2\">else</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\tViewRot <span class=\"\
      sy0\">=</span> <span class=\"kw5\">rotator</span><span class=\"br0\">(</span><span\
      \ class=\"kw9\">Controller</span>.<span class=\"me0\">FocalPoint</span> <span\
      \ class=\"sy0\">-</span> <span class=\"kw7\">Location</span><span class=\"br0\"\
      >)</span>;\n\t\t\tDriverViewPitch <span class=\"sy0\">=</span> ViewRot.<span\
      \ class=\"me0\">Pitch</span>;\n\t\t\tDriverViewYaw <span class=\"sy0\">=</span>\
      \ ViewRot.<span class=\"me0\">Yaw</span>;\n\t\t<span class=\"br0\">}</span>\n\
      \t<span class=\"br0\">}</span>\n\t<span class=\"kw2\">else</span>\n\t<span class=\"\
      br0\">{</span>\n\t\tDriverViewPitch <span class=\"sy0\">=</span> <span class=\"\
      kw7\">Rotation</span>.<span class=\"me0\">Pitch</span>;\n\t\tDriverViewYaw <span\
      \ class=\"sy0\">=</span> <span class=\"kw7\">Rotation</span>.<span class=\"\
      me0\">Yaw</span>;\n\t<span class=\"br0\">}</span>\n\tCarState.<span class=\"\
      me0\">ServerViewPitch</span> <span class=\"sy0\">=</span> DriverViewPitch;\n\
      \tCarState.<span class=\"me0\">ServerViewYaw</span> <span class=\"sy0\">=</span>\
      \ DriverViewYaw;\n\tFudgeByte<span class=\"sy0\">++</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Motion Blur (still in the works)</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ addblur<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n      <span class=\"kw1\">local</span> <span class=\"kw9\">PlayerController</span>\
      \ PC;\n \n      PC <span class=\"sy0\">=</span> <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span>;\n \n      PC.<span class=\"me0\">AddCameraEffect</span><span\
      \ class=\"br0\">(</span><span class=\"kw1\">new</span> myBlur<span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>LimitPitch</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">int</span> LimitPitch<span class=\"br0\">(</span><span\
      \ class=\"kw5\">int</span> pitch<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>bAllowAirControl\
      \ <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>bVehicleOnGround<span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"kw2\">return</span> pitch;\n\t<span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">Super</span>.<span class=\"\
      me0\">LimitPitch</span><span class=\"br0\">(</span>pitch<span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Destroyed</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw4\">Destroyed</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>LeftTrail <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"br0\"\
      >)</span>\n        LeftTrail.<span class=\"kw4\">Destroy</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>RightTrail <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span>\n        RightTrail.<span\
      \ class=\"kw4\">Destroy</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n \n    <span class=\"kw6\">Super</span>.<span class=\"kw4\">Destroyed</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<dl>\n<dt>TakeImpactDamage</dt>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">event</span> TakeImpactDamage<span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> AccelMag<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \ Damage;\n        Damage <span class=\"sy0\">=</span> <span class=\"kw5\">int</span><span\
      \ class=\"br0\">(</span><span class=\"kw3\">VSize</span><span class=\"br0\"\
      >(</span>ImpactInfo.<span class=\"me0\">Other</span>.<span class=\"kw7\">Velocity</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">20</span>\
      \ <span class=\"sy0\">*</span> ImpactDamageModifier<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;\n    <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span><span class=\"kw9\">Vehicle</span><span\
      \ class=\"br0\">(</span>ImpactInfo.<span class=\"me0\">Other</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span>\n        <span class=\"kw4\">TakeDamage</span><span\
      \ class=\"br0\">(</span>Damage, <span class=\"kw9\">Vehicle</span><span class=\"\
      br0\">(</span>ImpactInfo.<span class=\"me0\">Other</span><span class=\"br0\"\
      >)</span>, ImpactInfo.<span class=\"me0\">Pos</span>, <span class=\"kw3\">vect</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>, <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'DamType'</span><span class=\"br0\">)</span>;\n    <span class=\"\
      kw2\">else</span>\n        <span class=\"kw4\">TakeDamage</span><span class=\"\
      br0\">(</span><span class=\"kw5\">int</span><span class=\"br0\">(</span>AccelMag\
      \ <span class=\"sy0\">*</span> ImpactDamageModifier<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>\
      \ WallCollisionResistance , <span class=\"kw6\">Self</span>, ImpactInfo.<span\
      \ class=\"me0\">Pos</span>, <span class=\"kw3\">vect</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>, <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'DamType'</span><span class=\"br0\">)</span>;\n \n    <span\
      \ class=\"co1\">//FIXME - scale sound volume to damage amount</span>\n    <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>ImpactDamageSounds.<span\
      \ class=\"me0\">Length</span> <span class=\"sy0\">&gt;</span> <span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>        <span class=\"kw4\">PlaySound</span><span\
      \ class=\"br0\">(</span>ImpactDamageSounds<span class=\"br0\">[</span><span\
      \ class=\"kw3\">Rand</span><span class=\"br0\">(</span>ImpactDamageSounds.<span\
      \ class=\"me0\">Length</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">)</span><span class=\"br0\">]</span>,,<span class=\"\
      kw7\">TransientSoundVolume</span><span class=\"sy0\">*</span><span class=\"\
      nu0\">2.5</span><span class=\"br0\">)</span>;\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Health <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span\
      \ class=\"kw7\">Level</span>.<span class=\"me0\">TimeSeconds</span> <span class=\"\
      sy0\">-</span> LastImpactExplosionTime<span class=\"br0\">)</span> <span class=\"\
      sy0\">&gt;</span> TimeBetweenImpactExplosions<span class=\"br0\">)</span>\n\
      \    <span class=\"br0\">{</span>\n        VehicleExplosion<span class=\"br0\"\
      >(</span><span class=\"kw3\">Normal</span><span class=\"br0\">(</span>ImpactInfo.<span\
      \ class=\"me0\">ImpactNorm</span><span class=\"br0\">)</span>, <span class=\"\
      nu0\">0.5</span><span class=\"br0\">)</span>;\n        LastImpactExplosionTime\
      \ <span class=\"sy0\">=</span> <span class=\"kw7\">Level</span>.<span class=\"\
      me0\">TimeSeconds</span>;\n    <span class=\"br0\">}</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>Died</dt>\n</dl>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">function</span> Died<span class=\"\
      br0\">(</span><span class=\"kw9\">Controller</span> Killer, class<span class=\"\
      sy0\">&lt;</span>DamageType<span class=\"sy0\">&gt;</span> <span class=\"kw9\"\
      >damageType</span>, <span class=\"kw5\">vector</span> HitLocation<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw9\">damageType</span> <span class=\"\
      sy0\">==</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n\
      \       <span class=\"kw2\">return</span>;\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Killer <span class=\"sy0\">!=</span> <span class=\"\
      kw5\">None</span><span class=\"br0\">)</span>        <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span>Killer<span class=\"br0\">)</span>.<span class=\"me0\"\
      >ReceiveLocalizedMessage</span><span class=\"br0\">(</span><span class=\"kw1\"\
      >class</span><span class=\"st0\">'VehicleKillMessage'</span>, <span class=\"\
      nu0\">7</span><span class=\"br0\">)</span>;\n    <span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">Died</span><span class=\"br0\">(</span>Killer, <span class=\"\
      kw9\">damageType</span>, HitLocation<span class=\"br0\">)</span>;\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>FloatToRangeByte</dt>\n</dl>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">byte</span> FloatToRangeByte<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> f<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\tf<span class=\"sy0\">=</span> <span\
      \ class=\"kw3\">FClamp</span><span class=\"br0\">(</span>f, <span class=\"nu0\"\
      >0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\tf <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Round</span><span class=\"br0\"\
      >(</span>f <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><span\
      \ class=\"br0\">)</span>;\n\t<span class=\"kw2\">return</span> <span class=\"\
      kw5\">byte</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<dl>\n<dt>RangeByteToFloat</dt>\n\
      </dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"co1\">//The opposite\
      \ of the above function.</span>\n<span class=\"kw1\">simulated</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">float</span> RangeByteToFloat<span\
      \ class=\"br0\">(</span><span class=\"kw5\">byte</span> b<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> f;\n\tf <span class=\"sy0\">=</span> b;\n\
      \tf <span class=\"sy0\">/=</span> <span class=\"nu0\">255</span>;\n\t<span class=\"\
      kw2\">return</span> f;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<h4><span\
      \ class=\"mw-headline\" id=\"Defaults\">Defaults</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Manual_Shift_Car?section=8\"\
      \ title=\"Edit section: Defaults\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n     myBlur<span\
      \ class=\"sy0\">=</span><span class=\"kw1\">Class</span><span class=\"st0\"\
      >'WhatEverPackage.myMotionBlur'</span>\n \n     NumForwardGears<span class=\"\
      sy0\">=</span><span class=\"nu0\">7</span>\n \n     DustSlipRate<span class=\"\
      sy0\">=</span><span class=\"nu0\">2.800000</span>\n     DustSlipThresh<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">50.000000</span>\n     DaredevilThreshInAirSpin<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">100.000000</span>\n     DaredevilThreshInAirPitch<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">300.000000</span>\n     DaredevilThreshInAirRoll<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">300.000000</span>\n     DaredevilThreshInAirTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1.500000</span>\n     DaredevilThreshInAirDistance<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">17.000000</span>\n     DaredevilMessageClass<span\
      \ class=\"sy0\">=</span><span class=\"kw1\">Class</span><span class=\"st0\"\
      >'Onslaught.ONSDaredevilMessage'</span>\n     bOldVehicleOnGround<span class=\"\
      sy0\">=</span><span class=\"kw6\">True</span>\n     MaxJumpSpin<span class=\"\
      sy0\">=</span><span class=\"nu0\">30000.000000</span>\n     JumpChargeTime<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1.000000</span>\n     JumpFeedbackForce<span\
      \ class=\"sy0\">=</span><span class=\"st0\">\"HoverBikeJump\"</span>\n     JumpSound<span\
      \ class=\"sy0\">=</span><span class=\"kw5\">Sound</span><span class=\"st0\"\
      >'ONSVehicleSounds-S.Hydraulics.Hydraulic10'</span>\n     JumpMeterOriginX<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.275000</span>\n     JumpMeterOriginY<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.943000</span>\n     JumpMeterWidth<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.136000</span>\n     JumpMeterHeight<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.057000</span>\n     JumpMeterSpacing<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.010000</span>\n     JumpMeterColor<span\
      \ class=\"sy0\">=</span><span class=\"br0\">(</span>R<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">215</span>,A<span class=\"sy0\">=</span><span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>\n     SpinMeterColor<span class=\"sy0\"\
      >=</span><span class=\"br0\">(</span>B<span class=\"sy0\">=</span><span class=\"\
      nu0\">215</span>,G<span class=\"sy0\">=</span><span class=\"nu0\">100</span>,A<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\
      \     JumpMeterTexture<span class=\"sy0\">=</span><span class=\"kw5\">Texture</span><span\
      \ class=\"st0\">'Engine.WhiteTexture'</span>\n     MinAirControlDamping<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.100000</span>\n     bBrakeFrontWheelsOnly<span\
      \ class=\"sy0\">=</span><span class=\"kw6\">False</span>\n     ChangeUpPoint<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">2800</span>\n     StopThreshold<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.2</span>\n     CrosshairHitFeedbackTex<span\
      \ class=\"sy0\">=</span><span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'ONSInterface-TX.tankBarrelAligned'</span>\n     DefaultCrosshair<span class=\"\
      sy0\">=</span><span class=\"kw5\">Material</span><span class=\"st0\">'InterfaceContent.Hud.fbBombFocus'</span>\n\
      \     CrosshairScale<span class=\"sy0\">=</span><span class=\"nu0\">0.125</span>\n\
      \     bTeamLocked<span class=\"sy0\">=</span><span class=\"kw6\">false</span>\n\
      \     bGearUp<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\n \
      \    bInGear<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\n  \
      \   bEjectPassengersWhenFlipped<span class=\"sy0\">=</span><span class=\"kw6\"\
      >False</span>\n     bCanFlip<span class=\"sy0\">=</span><span class=\"kw6\"\
      >true</span>\n     DisintegrationHealth<span class=\"sy0\">=</span><span class=\"\
      nu0\">0.0</span>\n     bShowChargingBar <span class=\"sy0\">=</span> <span class=\"\
      kw6\">false</span>;\n     <span class=\"co1\">// Damages</span>\n     WallCollisionResistance\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">5</span> <span class=\"co1\"\
      >// Collision resistance: the bigger it is, the less damage taken</span>\n \
      \    ExplosionDamage<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span>\n\
      \     DriverDamageMult<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\n\
      \     CenterSpringRangePitch<span class=\"sy0\">=</span><span class=\"nu0\"\
      >5000</span>\n     CenterSpringRangeRoll<span class=\"sy0\">=</span><span class=\"\
      nu0\">5000</span>\n     StolenAnnouncement<span class=\"sy0\">=</span><span\
      \ class=\"st0\">\"Play\"</span>\n \n     bNetNotify<span class=\"sy0\">=</span><span\
      \ class=\"kw6\">true</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <ul>\n<li>Global variables that would need to be added to the above uscript:</li>\n\
      </ul>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">enum</span>\
      \ ETextAnchor\n<span class=\"br0\">{</span>\n    TA_Left,\n    TA_Right,\n \
      \   TA_Middle\n<span class=\"br0\">}</span>;\n<span class=\"kw1\">var</span>\
      \   <span class=\"kw5\">float</span>                         ScaleX, ScaleY;</pre></div>\n\
      </div>\n<p><b>CIpen:</b> Here is some simple code you can add to print data\
      \ on the screen to avoid logging 24/7. This is what I used to check numbers\
      \ such as RPM, Gas, EngineRPM, and whatever else I could fit on 1024x768 resolution.\
      \ I've found it to be most handy. I'm sure you can find this elsewhere but I'm\
      \ saving you the effort of looking.</p>\n<ul>\n<li>And here is the DrawHUD function\
      \ that we must have to draw on the screen when a player has possesion of the\
      \ vehicle:</li>\n</ul>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">simulated</span> <span class=\"kw1\">function</span> DrawHUD<span class=\"\
      br0\">(</span><span class=\"kw8\">Canvas</span> C<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n    <span class=\"kw1\">local</span> <span class=\"\
      kw9\">PlayerController</span> PC;\n \n \n    PC <span class=\"sy0\">=</span>\
      \ <span class=\"kw9\">PlayerController</span><span class=\"br0\">(</span><span\
      \ class=\"kw9\">Controller</span><span class=\"br0\">)</span>;\n \n    ScaleX\
      \ <span class=\"sy0\">=</span> C.<span class=\"me0\">ClipX</span><span class=\"\
      sy0\">/</span><span class=\"nu0\">1024</span>;\n    ScaleY <span class=\"sy0\"\
      >=</span> C.<span class=\"me0\">ClipY</span><span class=\"sy0\">/</span><span\
      \ class=\"nu0\">768</span>;\n \n    C.<span class=\"kw7\">Style</span> <span\
      \ class=\"sy0\">=</span> ERenderStyle.<span class=\"kw7\">STY_Additive</span>;\n\
      \    C.<span class=\"me0\">Font</span> <span class=\"sy0\">=</span> PC.<span\
      \ class=\"me0\">MyHUD</span>.<span class=\"me0\">GetFontSizeIndex</span><span\
      \ class=\"br0\">(</span>C, <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span\
      \ class=\"br0\">)</span>;\n    C.<span class=\"me0\">DrawColor</span> <span\
      \ class=\"sy0\">=</span> C.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>;\n \n    DrawEngineStuff<span\
      \ class=\"br0\">(</span>C<span class=\"br0\">)</span>;\n<span class=\"br0\"\
      >}</span></pre></div>\n</div>\n<ul>\n<li>Here is the DrawEngineStuff(C) which\
      \ is isn't a required function but is there to organize:</li>\n</ul>\n<div dir=\"\
      ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\"\
      >function</span> DrawEngineStuff<span class=\"br0\">(</span><span class=\"kw8\"\
      >Canvas</span> C<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    C.<span class=\"me0\">Font</span> <span class=\"sy0\">=</span> C.<span\
      \ class=\"me0\">TinyFont</span>;\n \n    C.<span class=\"me0\">SetPos</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"sy0\">*</span>ScaleX,\
      \ <span class=\"nu0\">150</span><span class=\"sy0\">*</span>ScaleY<span class=\"\
      br0\">)</span>;\n    C.<span class=\"me0\">DrawText</span><span class=\"br0\"\
      >(</span><span class=\"st0\">\"Engine stuff\"</span><span class=\"br0\">)</span>;\n\
      \ \n    C.<span class=\"me0\">SetPos</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">40</span><span class=\"sy0\">*</span>ScaleX, <span class=\"\
      nu0\">160</span><span class=\"sy0\">*</span>ScaleY<span class=\"br0\">)</span>;\n\
      \    C.<span class=\"me0\">DrawText</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"Engine RPM: \"</span> <span class=\"sy0\">@</span> EngineRPM<span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>40*ScaleX sets the vertical starting position, and 150*ScaleY sets the horizontal\
      \ starting position.</p>\n<h4><span class=\"mw-headline\" id=\"Notes\">Notes</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Manual_Shift_Car?section=9\" title=\"Edit section: Notes\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n<p>If\
      \ you are to subclass, you need to know that the engine rpm is in radians per\
      \ min. This means that if you were to create a torque curve and wanted the rpm\
      \ range to be from 500 to 7000, you would need to convert all the points from\
      \ revolutions per min to radians per sec. Take the rpm(real life engine rpm)\
      \ of 7000, divide by 60, then multiply by 2 PI. Like so:</p>\n<p>(7000/60)*6.2831853</p>\n\
      <p>this yields 733.038285 as the correct rpm</p>\n<p>bNetNotify=true is prolly\
      \ the most critical thing needed for this class to work online/lan</p>\n<p>I've\
      \ got a lot of changes that need to be made to this class, so be patient. Additions\
      \ include, properly calculating wheel torque if the wheel is powered or not,\
      \ better collisions with walls(currently if you hit a wall flat at 300 mph the\
      \ vehicle just stops and takes no damage), available auto transmision, ...</p>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Manual_Shift_Car?section=10\" title=\"Edit section: Related\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <ul>\n<li><a href=\"/Legacy:Vehicles\" title=\"Legacy:Vehicles\">Vehicles</a>\
      \ – Main topics for Vehicles.</li>\n<li><a href=\"/Legacy:Vehicle\" title=\"\
      Legacy:Vehicle\">Vehicle</a> – Parent class for all vehicles and turrets.\n\
      <ul>\n<li><a href=\"/Legacy:SVehicle\" title=\"Legacy:SVehicle\">SVehicle</a>\n\
      <ul>\n<li><a href=\"/Legacy:ONSVehicle\" title=\"Legacy:ONSVehicle\">ONSVehicle</a>\n\
      <ul>\n<li><a href=\"/Legacy:ONSWheeledCraft\" title=\"Legacy:ONSWheeledCraft\"\
      >ONSWheeledCraft</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a\
      \ href=\"/Legacy:Making_Mods\" title=\"Legacy:Making Mods\">Making Mods</a></li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Manual_Shift_Car?section=11\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Graphik:</b>\
      \ Very nice idea, but a bit unsuited for an FPS, more for a racing game like\
      \ UnWheel. It seems to me that Epic made sure that the vehicles were as \"dumbed\
      \ down\" as possible to keep the focus on fragging people with a vehicle rather\
      \ than the minutia of driving one. I recommend sending this in to <a rel=\"\
      nofollow\" class=\"external text\" href=\"http://unwheel.beyondunreal.com/\"\
      >UnWheel</a> when you're done. If they don't actually use it I'm sure they'd\
      \ at the very least find it interesting.</p>\n<p><b>CIpen:</b> Accually I got\
      \ a thumbs up on that at the same time I created this page. The bounds of this\
      \ script is almost limitless, as it would be easy to have say the tire blow\
      \ out when shot. As soon as I get a free day I'll update this page with all\
      \ the new additions (infact that might be something good to do tonight). The\
      \ big change is that I added the option for auto or stick control and the the\
      \ power is ditributed over the wheels that are powered.</p>\n<p><b>Foxpaw:</b>\
      \ Why do you divide by 60 when converting rotations per minute to radians per\
      \ minute? The radians per minute should be greater than the roatations per minute,\
      \ as there's more than one radian per rotation. Or is that supposed to say,\
      \ radians per second?</p>\n<p><b>CIpen:</b> Yes, you pointed out a typo&#160;:D.\
      \ Yes, it should say radians per second. Yet your own message has typos, it's\
      \ not rotations per minute, but revolutions per minute.&#160;:)</p>\n<p><b>Foxpaw:</b>\
      \ Err, ehm, well, I guess that depends on where you measure it from. I'd measure\
      \ it from the flywheel which definately rotates. I suppose some parts of the\
      \ crankshaft do revolve though, so either could be correct.</p>\n<hr />\n<p><b>Zxanphorian:</b>\
      \ WOW, that is a lot of scriptage there! I have an idea, to make it randomly\
      \ stall&#160;:B</p>\n<hr />\n<p><b>CIpen:</b> Ya, there are a lot of cool possibilities\
      \ with this class. You could attach a model to the wheel bone, add another bone\
      \ for disk brakes (to attach a disk brake mesh to that turns when the wheels\
      \ turn), make the engine blow up if you downgear and the engine rpm goes to\
      \ high, have an axle break, have more wheel slip functions for different traction\
      \ of different surfaces... any number of things....</p>\n<p><b>OlympusMons:</b>\
      \ I would have to agree CIpen. Has anyone given any thought to making a proper\
      \ automatic car you know the manual automatic ones.&#160;:S Like what mafia\
      \ did. I havent really had time to look through all this code although I'd like\
      \ to, I was just wondering if all of this is actually needed to make a manual\
      \ shift car or if there are other features which have been added through all\
      \ of this script. Actually another cool thing to do would be to make a proper\
      \ 4wd manual shift. Hmm!</p>\n<p><b>CIpen:</b> Good! Lets get to the meat! The\
      \ first thing you need to know is that the function UpdateVehicle() is somehow\
      \ tied to native code. To see this all you need to do is log the DeltaTime from\
      \ inside the Tick() function and from inside UpdateVehicle() function. You should\
      \ see that UpdateVehicle() always has the same DeltaTime so matter what your\
      \ FPS is (at least this is what I remember it being when I tested it).</p>\n\
      <p>The next serious thing is that, unless you do your own wheel calculations,\
      \ you'll have to build around the SVehicleWheel variables that are calculated\
      \ each frame. It's both good and bad I guess. Take a minute to thing about this:\
      \ below is the line that calculates the GripTorque.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\">GripTorque <span class=\"sy0\">=</span> FTScale <span class=\"\
      sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">WheelRadius</span> <span class=\"sy0\">*</span> Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">TireLoad</span>\
      \ <span class=\"sy0\">*</span> WheelLongFrictionScale<span class=\"br0\">[</span><span\
      \ class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span>\
      \ <span class=\"kw3\">InterpCurveEval</span><span class=\"br0\">(</span>Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LongFrictionFunc</span>,\
      \ <span class=\"kw3\">Abs</span><span class=\"br0\">(</span>Wheels<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">SlipVel</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;</pre></div>\n</div>\n\
      <p>Now, lets say we want to be the biggest uscript hot shot around, you might\
      \ change this line to look like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw2\">if</span><span class=\"br0\">(</span>bPlayerIsOnHood<span\
      \ class=\"br0\">)</span>\n     GripTorque <span class=\"sy0\">=</span> FTScale\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">WheelRadius</span> <span class=\"sy0\">*</span>\
      \ <span class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">TireLoad</span> <span class=\"sy0\">+</span>\
      \ PlayerMass<span class=\"br0\">)</span> <span class=\"sy0\">*</span> WheelLongFrictionScale<span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LongFrictionFunc</span>, <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SlipVel</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"kw2\">else</span>\n     GripTorque\
      \ <span class=\"sy0\">=</span> FTScale <span class=\"sy0\">*</span> Wheels<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">WheelRadius</span>\
      \ <span class=\"sy0\">*</span> Wheels<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">TireLoad</span> <span class=\"sy0\">*</span>\
      \ WheelLongFrictionScale<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"kw3\">InterpCurveEval</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LongFrictionFunc</span>, <span class=\"kw3\">Abs</span><span\
      \ class=\"br0\">(</span>Wheels<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">SlipVel</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;</pre></div>\n</div>\n<p>Thus simulating player weight\
      \ on the car(more or less). That is after you do some stuff to get if the player\
      \ is on the vehicle or not.</p>\n<p>btw I just updated it UpdateVehicle() because\
      \ it was far behind.</p>\n<p><b>Tarquin:</b> I moved this back to its original\
      \ name, as the class name didn't seem very descriptive.</p>\n<p><b>WinterHummer:</b>\
      \ Can someong give me a good scorpion subclass of this for me and other lazy\
      \ people?</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 1.271 seconds\n\
      Real time usage: 1.571 seconds\nPreprocessor visited node count: 418/1000000\n\
      Preprocessor generated node count: 916/1000000\nPost‐expand include size: 16/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:2192-0!*!0!!en!*!*\
      \ and timestamp 20221118015959 and revision id 5316\n -->\n"
  categories:
  - sortkey: "Manual Shift Car"
    name: "Legacy_Tutorial"
  links:
  - ns: 100
    exists: true
    name: "Legacy:ONSVehicle"
  - ns: 100
    exists: true
    name: "Legacy:Making Mods"
  - ns: 100
    exists: true
    name: "Legacy:Vehicle"
  - ns: 100
    exists: true
    name: "Legacy:SVehicle"
  - ns: 100
    exists: false
    name: "Legacy:Manual Shift Car/C++ Version"
  - ns: 100
    exists: true
    name: "Legacy:Vehicles"
  - ns: 100
    exists: true
    name: "Legacy:ONSWheeledCraft"
  templates: []
  images: []
  externallinks:
  - "http://unwheel.beyondunreal.com/"
  sections:
  - toclevel: 1
    level: "2"
    line: "Breakdown"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 0
    anchor: "Breakdown"
  - toclevel: 1
    level: "2"
    line: "The Goods"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 435
    anchor: "The_Goods"
  - toclevel: 2
    level: "3"
    line: "To start the class off"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 451
    anchor: "To_start_the_class_off"
  - toclevel: 2
    level: "3"
    line: "Critical variables"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 551
    anchor: "Critical_variables"
  - toclevel: 2
    level: "3"
    line: "Not so critical variables"
    number: "2.3"
    index: "5"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 9117
    anchor: "Not_so_critical_variables"
  - toclevel: 3
    level: "4"
    line: "Replication ="
    number: "2.3.1"
    index: "6"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 12819
    anchor: "Replication_.3D"
  - toclevel: 2
    level: "3"
    line: "Functions"
    number: "2.4"
    index: "7"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 13397
    anchor: "Functions"
  - toclevel: 3
    level: "4"
    line: "Defaults"
    number: "2.4.1"
    index: "8"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 56593
    anchor: "Defaults"
  - toclevel: 3
    level: "4"
    line: "Notes"
    number: "2.4.2"
    index: "9"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 59715
    anchor: "Notes"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "3"
    index: "10"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 60567
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "4"
    index: "11"
    fromtitle: "Legacy:Manual_Shift_Car"
    byteoffset: 60886
    anchor: "Discussion"
  displaytitle: "Legacy:Manual Shift Car"
  iwlinks: []
  wikitext:
    text: "==Breakdown ==\n\nThis is a convertion of [[Legacy:ONSWheeledCraft|ONSWheeledCraft]].\
      \ This class allows for a stick shift or otherwise known as a manual transmission\
      \ car.  Why stick shift?\n* It doesn't cost much in terms of fps\n* Lets you\
      \ rev it in neutral :)\n* Fun to drive\n* Will allow rear/front/all wheel drive\n\
      * Holding the brake and the rear wheels keep spinning (no rear brakes)\n\n*\
      \ I hope you can use what I (CIpen) have created\n\n==The Goods ==\n\n===To\
      \ start the class off ===\n\n<uscript>\nclass WheeledClutch_Brake extends ONSVehicle;\n\
      \n</uscript>\n\n===Critical variables ===\n\n<uscript>\nvar() float        \
      \     WheelSoftness;\nvar() float             WheelPenScale;\nvar() float  \
      \           WheelPenOffset;\nvar() float             WheelRestitution;\nvar()\
      \ float             WheelAdhesion;\nvar() float             WheelInertia;  \
      \ // I believe this is how much to resist change in motion\n\n    //I(CIpen)\
      \ made these an array so we could have different slips on each surface\nvar()\
      \ array<float>         WheelLongSlip; // I think this is so we can have the\
      \ wheels slip when you take off\nvar() array<InterpCurve>   WheelLongFrictionFunc;//this\
      \ is the curve for how slippery the wheels are allong the X axis(forwards slip)\n\
      var() array<InterpCurve>   WheelLatSlipFunc;//this is the curve for how slippery\
      \ the wheels are allong the Y axis(left/right slip)\nvar() array<float>    \
      \     WheelLongFrictionScale;  // quick way to change the ammount of friction\
      \ without having to draw out\nvar() array<float>         WheelLatFrictionScale;\
      \   // a new friction curve\n\nvar() float                             WheelHandbrakeSlip;\n\
      var() float                             WheelHandbrakeFriction;\nvar() float\
      \                             WheelSuspensionTravel;\nvar() float          \
      \                   WheelSuspensionOffset;\nvar() float                    \
      \         WheelSuspensionMaxRenderTravel;   \nvar() float                  \
      \           FTScale;\nvar() float                             ChassisTorqueScale;\n\
      var() float                             MinBrakeFriction;\nvar() InterpCurve\
      \                       MaxSteerAngleCurve; // degrees, this makes the wheels\
      \ turn like real car wheels*\nvar() float                             GearRatios[8];\
      \  // 0 is reverse, 1-4 f\nvar() int                               NumForwardGears;\n\
      var() float                             TransRatio;   // Other(constant)gears\
      \  i.e. so we can have driveshaft ratio(if one applies)\nvar() float       \
      \                      ChangeUpPoint;   //EngineRPM that signals gear up change\n\
      var() float                             ChangeDownPoint; //EngineRPM that signals\
      \ gear down change\n\nvar   int                               bGearUp;\nvar\
      \   int                               bGearDown;\n\nvar() float            \
      \                 LSDFactor;                                               \
      \                                     \nvar() float                        \
      \     EngineBrakeFactor;\nvar() float                             EngineBrakeRPMScale;\
      \                                                                          \
      \           \nvar() float                             MaxBrakeTorque;\nvar()\
      \ float                             SteerSpeed;         // How fast it turns\
      \         \nvar() float                             TurnDamping;           \
      \                                                                         \n\
      var() float                             StopThreshold;\nvar() float        \
      \                     HandbrakeThresh;                                     \
      \                                                \nvar() float             \
      \                EngineInertia;     // Pre-gear box engine (piston mass)\nvar\
      \   bool                              bClutching;        // If holding the clutch\n\
      var   bool                              bOldClutching;  \nvar() float      \
      \                       IdleRPM;              //RPM to idle at\nvar() float\
      \                             EngineRPMSoundRange;   //RPM sound range\nvar()\
      \ name                              SteerBoneName;\nvar() EAxis            \
      \                 SteerBoneAxis;\nvar() float                             SteerBoneMaxAngle;\
      \ // degrees                                                               \
      \                      \n\nvar   float                             OutputBrake;\
      \    //How much we are braking\nvar   float                             OutputGas;\
      \      //How much are we giving gas\nvar   float                           \
      \  OutputPitch;\nvar   bool                              OutputHandbrake;\n\n\
      var   int                               Gear;           //What gear we are in\n\
      var   float                             ForwardVel;\nvar   bool            \
      \                  bIsInverted;\nvar   bool                              bIsDriving;\n\
      var   float                             NumPoweredWheels;\nvar   float     \
      \                        NeutralRPM;\n\nvar   InterpCurve                  \
      \     RPMtoGas;           // This is what I use to convert the current in gear\
      \ RPM to the amount of gas so the RPM doesn't go to zero when we hit the clutch\n\
      var() InterpCurve                       TorqueCurve;        // Engine output\
      \ torque\nvar() InterpCurve                       EngineS;\nvar() InterpCurve\
      \                       BrakeCurve;     //This simulates more lifelike braking,\
      \ where you apply braking\n\nvar   float                             Gas, Gas2,\
      \ hBrake;\n\nvar   float                             RPM2;    //Neutral RPM\n\
      var   float                             RPM;     //Neutral RPM\nvar   float\
      \                             NRPM;\nvar   bool                            \
      \  bBraking;   //if we are braking\nvar   bool                             \
      \ bThrot, bNThrot, bNoGas;\nvar   bool                              bInGear;\
      \          //if we are completly in gear\nvar   bool                       \
      \       bRadians;\nvar   float                             TotalSpinVel;\nvar\
      \   float                             EngineRPM;\nvar   float              \
      \               WheelRPM;// used to get the wheel RPM at anytime(so we don't\
      \ change EngineRPM which is what the engine sound is tied to)\nvar   float \
      \                            CarMPH;\nvar   float                          \
      \   ETorque;\nvar   float                             ActualSteering;\nvar \
      \  float                             SteerBoneAngle;\nvar   float          \
      \                   EnginePitch;\nvar   Vector                            worldForward;\n\
      var   Vector                            worldRight;\nvar   Vector          \
      \                  worldUp;\nvar   Matrix                            carTM;\n\
      var   Rotator                           SteerRot;\nvar   bool              \
      \                bCurrentOnGround;\nvar   float                            \
      \ DeltaPitch;\nvar   float                             DeltaHeading;\nvar  \
      \ float                             DeltaRoll;\nvar   float                \
      \             VRate;\n\nvar   vector                            one, two, three;\n\
      var   vector                            Dist1, Dist2;     // unused but this\
      \ was for doing the daredevil stuff\nvar   float                           \
      \  Dist3;\nvar   bool                              bBrakeFrontWheelsOnly, bBrakeFrontWheels;\n\
      var   Vector                            UDForce, UDTorque;\nvar   Vector   \
      \                         WForce, WTorque;\nvar   Coords                   \
      \         WheelCoords;\nvar   Coords                            OldCoords;\n\
      var   Coords                            Coords;\nvar   Vector              \
      \              ForwardsInOldPlane;\nvar   Pawn                             \
      \ OldDriver;        \n\nstruct native SCarState\n{\n    \t  var vector     \
      \               ChassisPosition;                               \n    \t  var\
      \ Quat                      ChassisQuaternion;                             \n\
      \    \t  var vector                    ChassisLinVel;                      \
      \           \n    \t  var vector                    ChassisAngVel;         \
      \                        \n                                                \
      \                                     \n    \t  var byte                   \
      \   ServerHandbrake;                               \n    \t  var byte      \
      \                ServerBrake;                                   \n    \t  var\
      \ byte                      ServerGas;                                     \n\
      \    \t  var byte                      ServerGear;                         \
      \           \n    \t  var byte                      ServerSteering;\n    \t\
      \  var int                       ServerViewPitch;\n          var int       \
      \                ServerViewYaw;\n};\n                                      \
      \                                         \nvar   byte                     FudgeByte;\
      \                                                                          \
      \           \nvar   SCarState                CarState;                     \
      \                 \nvar   SCarState                OldCarState;\nvar   KRigidBodyState\
      \          ChassisState;                                  \nvar   bool     \
      \                bNewCarState;                                             \
      \                                       \nvar   bool                     bOldVehicleOnGround;\n\
      var   float                    TheDeltaTime;\n</uscript>\n\n===Not so critical\
      \ variables ===\n\n<uscript>\nvar   class<CameraEffect>           myBlur;\n\
      var   myMotionBlur                  ClientMotionBlur;\n\nvar   array<ONSDirtSlipEffect>\
      \          Dust; // FL, FR, RL, RR\nvar() float                            \
      \ DustSlipRate;\nvar() float                             DustSlipThresh;\nvar()\
      \ float\t                        RevMeterPosX;\nvar() float\t              \
      \          RevMeterPosY;\nvar() float\t                        RevMeterScale;\n\
      var() float\t                        RevMeterSizeY;\n\nvar() bool\t\t\t    \
      \    bDoStuntInfo;\nvar() bool\t\t\t        bAllowAirControl;\nvar() bool\t\t\
      \t        bAllowChargingJump;\nvar   bool\t\t\t        bAllowBigWheels;\n  \
      \                                                                          \
      \         \nvar   bool\t\t                bPushDown; //jump is being charged\n\
      var   bool                          bOldPushDown;\nvar   bool              \
      \            bAllWheelsOnGround;\n                                         \
      \                                            \nvar() float\t\t\t        MaxJumpForce;\n\
      var   float                         JumpForce;\nvar() float\t\t\t        MaxJumpSpin;\n\
      var   float                         JumpSpin;\n\nvar() float\t\t\t        JumpChargeTime;\n\
      var   float\t\t\t        DesiredJumpForce; //used by AI\nvar   string\t\t\t\
      JumpFeedbackForce;                             \n                          \
      \                                                           \nvar   sound\t\t\
      \t        JumpSound;\n                                                     \
      \                              \nvar() float\t\t\t        JumpMeterOriginX;\n\
      var() float                         JumpMeterOriginY;\nvar() float\t\t\t   \
      \     JumpMeterWidth;\nvar() float                         JumpMeterHeight;\n\
      var() float                         JumpMeterSpacing;\nvar() color\t\t\t   \
      \     JumpMeterColor;\nvar() color                         SpinMeterColor;\n\
      var   Texture\t\t\tJumpMeterTexture;                              \n       \
      \                                                                          \
      \  \nvar() float\t\t\t        AirTurnTorque;\nvar() float\t\t\t        AirPitchTorque;\n\
      var() float\t\t\t        AirPitchDamping;\nvar() float\t\t\t        AirRollTorque;\n\
      var() float\t\t\t        AirRollDamping;\nvar() float\t\t\t        MinAirControlDamping;\
      \                                                                          \
      \          \nvar   float\t\t\t        FenderBenderSpeed;\n                 \
      \                                                           \nvar() bool\t \
      \                       bMakeBrakeLights;\nvar() vector\t                  \
      \     BrakeLightOffset[2];                           \nvar   ONSBrakelightCorona\t\
      \        BrakeLight[2];                                 \nvar() Material\t \
      \                     BrakeLightMaterial;                            \n    \
      \                                                                          \
      \       \nvar   Rotator\t\t\tOldRotation;\nvar   Vector\t\t\tLastOnGroundLocation;\
      \                          \nvar   float\t\t\t        LastOnGroundTime;\n  \
      \                                                                          \
      \         \nvar   float\t\t\t        InAirSpin; // Degrees\nvar   float\t\t\t\
      \        InAirPitch; // Degrees\nvar   float\t\t\t        InAirRoll; // Degrees\n\
      var   float\t\t\t        InAirTime; // Second\nvar   float\t\t\t        InAirDistance;\
      \ // Meters\nvar   int\t\t\t\tDaredevilPoints;\nvar   config int           \
      \         IntSteerBoneAngle;\n\nvar() float\t\t\t        DaredevilThreshInAirSpin;\
      \                      \nvar() float\t\t\t        DaredevilThreshInAirPitch;\n\
      var() float\t\t\t        DaredevilThreshInAirRoll;\nvar() float\t\t\t      \
      \  DaredevilThreshInAirTime;\nvar() float\t\t\t        DaredevilThreshInAirDistance;\n\
      var() class<LocalMessage>\t        DaredevilMessageClass;\n\n</uscript>\n\n\
      ==== Replication =====\n\n<uscript>\nreplication\n{\n        reliable if (Role\
      \ == ROLE_Authority)\n                CarState, FudgeByte;                 \
      \      // make sure we get what we need to the client\n        reliable if (bNetInitial\
      \ && Role == ROLE_Authority)\n                bAllowAirControl, bAllowChargingJump;\
      \        // showoff stuff\n        reliable if (bNetInitial && bDoStuntInfo\
      \ && Role == ROLE_Authority)\n                DaredevilThreshInAirDistance,\
      \ DaredevilThreshInAirTime, DaredevilThreshInAirSpin, DaredevilThreshInAirPitch,\
      \ DaredevilThreshInAirRoll;\n}\n</uscript>\n\n===Functions ===\n\n;PostNetBeginPlay\n\
      \n<uscript>\nsimulated function PostNetBeginPlay()\n{\n        local int i;\n\
      \ \tNumPoweredWheels = 0.0;\n\tfor(i=0; i<=1; i++)\n\t{\n\t\tNumPoweredWheels\
      \ += 1.0;\n\t}\n       SVehicleUpdateParams();\n       Super.PostNetBeginPlay();\n\
      }\n</uscript>\n\n;PostNetReceive : Here is were we deal with stuff coming from\
      \ the server.\n\n<uscript>\nsimulated function PostNetReceive()\n{\n \tSuper.PostNetReceive();\n\
      \n\tif(OldCarState.ChassisPosition == CarState.ChassisPosition &&\n\t\tOldCarState.ChassisQuaternion.X\
      \ == CarState.ChassisQuaternion.X &&\n\t\tOldCarState.ChassisQuaternion.Y ==\
      \ CarState.ChassisQuaternion.Y &&\n\t\tOldCarState.ChassisQuaternion.Z == CarState.ChassisQuaternion.Z\
      \ &&\n\t\tOldCarState.ChassisQuaternion.W == CarState.ChassisQuaternion.W &&\n\
      \t\tOldCarState.ChassisLinVel == CarState.ChassisLinVel &&\n\t\tOldCarState.ChassisAngVel\
      \ == CarState.ChassisAngVel &&\n\t\tOldCarState.ServerHandbrake == CarState.ServerHandbrake\
      \ &&\n\t\tOldCarState.ServerBrake == CarState.ServerBrake &&\n\t\tOldCarState.ServerGas\
      \ == CarState.ServerGas &&\n\t\tOldCarState.ServerGear == CarState.ServerGear\
      \ &&\n\t\tOldCarState.ServerSteering == CarState.ServerSteering &&\n\t\tOldCarState.ServerViewPitch\
      \ == CarState.ServerViewPitch &&\n\t\tOldCarState.ServerViewYaw == CarState.ServerViewYaw)\n\
      \t\treturn;\n\n\tChassisState.Position.X = CarState.ChassisPosition.X;\n\tChassisState.Position.Y\
      \ = CarState.ChassisPosition.Y;\n\tChassisState.Position.Z = CarState.ChassisPosition.Z;\n\
      \n\tChassisState.Quaternion = CarState.ChassisQuaternion;\n\n\tChassisState.LinVel.X\
      \ = 0.1f * CarState.ChassisLinVel.X;\n\tChassisState.LinVel.Y = 0.1f * CarState.ChassisLinVel.Y;\n\
      \tChassisState.LinVel.Z = 0.1f * CarState.ChassisLinVel.Z;\n\n\tChassisState.AngVel.X\
      \ = 0.001f * CarState.ChassisAngVel.X;\n\tChassisState.AngVel.Y = 0.001f * CarState.ChassisAngVel.Y;\n\
      \tChassisState.AngVel.Z = 0.001f * CarState.ChassisAngVel.Z;\n\n\tbNewCarState\
      \ = true;\n\tOldCarState.ChassisPosition = CarState.ChassisPosition;\n\tOldCarState.ChassisQuaternion\
      \ = CarState.ChassisQuaternion;\n\tOldCarState.ChassisLinVel = CarState.ChassisLinVel;\n\
      \tOldCarState.ChassisAngVel = CarState.ChassisAngVel;\n\tOldCarState.ServerHandbrake\
      \ = CarState.ServerHandbrake;\n\tOldCarState.ServerBrake = CarState.ServerBrake;\n\
      \tOldCarState.ServerGas = CarState.ServerGas;\n\tOldCarState.ServerGear = CarState.ServerGear;\n\
      \tOldCarState.ServerSteering = CarState.ServerSteering;\n\tOldCarState.ServerViewPitch\
      \ = CarState.ServerViewPitch;\n\tOldCarState.ServerViewYaw = CarState.ServerViewYaw;\n\
      \n\tOutputPitch = RangeByteToFloat(CarState.ServerHandbrake);\n\tOutputHandbrake\
      \ = (OutputPitch > 0.01);\n\tOutputBrake = RangeByteToFloat(CarState.ServerBrake);\n\
      \tOutputGas = RangeByteToFloat(CarState.ServerGas);\n\tGear = CarState.ServerGear;\n\
      \tSteering = RangeByteToFloat(CarState.ServerSteering);\n\tDriverViewPitch =\
      \ CarState.ServerViewPitch;\n\tDriverViewYaw = CarState.ServerViewYaw;\n}\n\n\
      </uscript>\n\n;PrecacheAnnouncer\n\n<uscript>\nsimulated function PrecacheAnnouncer(AnnouncerVoice\
      \ V, bool bRewardSounds)\n{\n\n\tif (bRewardSounds && !bSoundsPrecached)\n\t\
      \tV.PrecacheSound('fender_bender');\n\n\tSuper.PrecacheAnnouncer(V, bRewardSounds);\n\
      }\n</uscript>\n\n;KUpdateState : This function tells when we should update.\n\
      \n<uscript>\nevent bool KUpdateState(out KRigidBodyState newState)\n{\n\tif(Role\
      \ == ROLE_Authority || !bNewCarState)\n\t\treturn false;\n\n\tnewState = ChassisState;\n\
      \tbNewCarState = false;\n\treturn true;\n}\n</uscript>\n\n;SVehicleUpdateParams\n\
      \n<uscript>\nevent SVehicleUpdateParams()\n{\n\tlocal int i;\n\n\tSuper.SVehicleUpdateParams();\n\
      \n\tfor(i=0; i<Wheels.Length; i++)\n\t{\n\t\tWheels[i].Softness = WheelSoftness;\n\
      \t\tWheels[i].PenScale = WheelPenScale;\n\t\tWheels[i].PenOffset = WheelPenOffset;\n\
      \t\tWheels[i].LongSlip = WheelLongSlip[0];\n\t\tWheels[i].LatSlipFunc = WheelLatSlipFunc[0];\n\
      \t\tWheels[i].Restitution = WheelRestitution;\n\t\tWheels[i].Adhesion = WheelAdhesion;\n\
      \t\tWheels[i].WheelInertia = WheelInertia;\n\t\tWheels[i].LongFrictionFunc =\
      \ WheelLongFrictionFunc[0];\n\t\tWheels[i].HandbrakeFrictionFactor = WheelHandbrakeFriction;\n\
      \t\tWheels[i].HandbrakeSlipFactor = WheelHandbrakeSlip;\n\t\tWheels[i].SuspensionTravel\
      \ = WheelSuspensionTravel;\n\t\tWheels[i].SuspensionOffset = WheelSuspensionOffset;\n\
      \t\tWheels[i].SuspensionMaxRenderTravel = WheelSuspensionMaxRenderTravel;\n\t\
      }\n\tif(Level.NetMode != NM_DedicatedServer && bMakeBrakeLights)\n\t{\n\t\t\
      for(i=0; i<2; i++)\n\t\t{\n                     if (BrakeLight[i] != None)\n\
      \                     {\n\t\t\t\tBrakeLight[i].SetBase(None);\n\t\t\t\tBrakeLight[i].SetLocation(\
      \ Location + (BrakelightOffset[i] >> Rotation) );\n\t\t\t\tBrakeLight[i].SetBase(self);\n\
      \t\t\t\tBrakeLight[i].SetRelativeRotation( rot(0,32768,0) );\n\t\t\t\tBrakeLight[i].Skins[0]\
      \ = BrakeLightMaterial;\n\t\t      }\n\t\t}\n\t}\n}\n</uscript>\n\n;UpdateVehicle\
      \ : This is the function were everything happens\n           <i>Also see </i>[[Legacy:Manual\
      \ Shift Car/C++ Version|Manual Shift Car/C++ Version]]\n\n<uscript>\nfunction\
      \ UpdateVehicle(float DeltaTime)\n{\n        local Matrix carTM;\n        local\
      \ Vector worldUp, worldRight, worldForward;\n\n        local KarmaParams KP;\n\
      \        local KRigidBodyState rbState;\n        local int   i;\n        local\
      \ float maxSteerAngle, maxSteer, deltaSteer;\n        local float DriveTorque,\
      \ GripTorque, EngineTorque, EngineBraking, EngineWheelRatio;\n        local\
      \ float BrakeTorque;\n        local float NewTotalSpinVel, LSDSplit, EvenSplit,\
      \ UseSplit;\n        local float TransInertia;\n        local float LimitBrakeTorque;\n\
      \        local float WheelTorque, VehicleForce, TransAcc;\n        local float\
      \ TurnAngVel, DampingScale, TurnDampingMag;\n        local float PitchAngVel,\
      \ RollAngVel, PitchDampingMag, RollDampingMag;\n\n        local Vector AirControlTorque,\
      \ AngVel;\n        local float  VRate;\n        local Vector Force, Torque;\n\
      \        local int z;\n\n        WForce = vect(0, 0, 0);\n\tWTorque = vect(0,\
      \ 0, 0);\n\n\tif(!KIsAwake())\n\t\treturn;\n        KP = KarmaParams(KParams);\n\
      \        if(KP == None)\n\t\treturn;\n\n        if(Controller != None)\n\t{\n\
      \t      //Calc up (z), right(y) and forward (x) vectors\n\t      GetAxes(Rotation,\
      \ worldRight, worldForward, worldUp);\n\n\t      /////////// STEERING ///////////\n\
      \t      maxSteerAngle = InterpCurveEval(MaxSteerAngleCurve, VRate);\n\t    \
      \  if(maxSteerAngle==0)\n                    maxSteer = DeltaTime * SteerSpeed\
      \ * maxSteerAngle;\n              else\n\t            maxSteer = DeltaTime *\
      \ SteerSpeed;\n\n\t      deltaSteer = (-Steering * maxSteerAngle) - ActualSteering;\
      \ // Amount we want to move (target - current)\n\t      deltaSteer = Clamp(deltaSteer,\
      \ -maxSteer, maxSteer);\n\t      ActualSteering += deltaSteer;\n\n\t      if(bAuto==True)\n\
      \              {\n\t      \t      EngineTorque = OutputGas * InterpCurveEval(TorqueCurve,\
      \ EngineRPM);\n\t      \t      EngineBraking = (1.0f - OutputGas) * (EngineBrakeRPMScale*EngineRPM\
      \ * EngineBrakeRPMScale*EngineRPM * EngineBrakeFactor);\n\t      \t      EngineTorque\
      \ -= EngineBraking;\n\t      \t      EngineWheelRatio = GearRatios[Gear] * TransRatio;\n\
      \t      \t      NewTotalSpinVel=0.0;\n\t      \t      EngineRPM = 0.0;\n\t \
      \     \t      for(i=0; i<Wheels.length; i++)\n\t      \t      {\n\t\t      \t\
      \      EvenSplit = 1/NumPoweredWheels;\n\t\t      \t      if(TotalSpinVel >\
      \ 0.1)\n\t\t\t      \t      LSDSplit = (TotalSpinVel - Wheels[i].SpinVel)/((NumPoweredWheels-1)\
      \ * TotalSpinVel);\n\t\t      \t      else\n\t\t\t      \t      LSDSplit = EvenSplit;\n\
      \t\t      \t      UseSplit = ((1-LSDFactor) * EvenSplit) + (LSDFactor * LSDSplit);\n\
      \t\t      \t      DriveTorque = UseSplit * (EngineTorque / EngineWheelRatio);\n\
      \t\t      \t      GripTorque = FTScale * Wheels[i].WheelRadius * Wheels[i].TireLoad\
      \ * WheelLongFrictionScale[0] * InterpCurveEval(Wheels[i].LongFrictionFunc,\
      \ Abs(Wheels[i].SlipVel));\n\t\t      \t      if(Wheels[i].SlipVel < 0.0)\n\t\
      \t\t      \t      GripTorque *= -1.0;\n\t\t      \t      TransInertia = (EngineInertia\
      \ / Abs(GearRatios[Gear] * TransRatio)) + Wheels[i].WheelInertia;\n\t\t    \
      \  \t      if(Wheels[i].SpinVel > 0.0)\n\t\t              \t      BrakeTorque\
      \ = -OutputBrake * MaxBrakeTorque;\n                      \t      else\n   \
      \                           \t      BrakeTorque = OutputBrake * MaxBrakeTorque;\n\
      \n\t\t      \t      LimitBrakeTorque = ( Abs(Wheels[i].SpinVel) * TransInertia\
      \ ) / TheDeltaTime; // Size of torque needed to completely stop wheel spinning.\n\
      \t\t      \t      BrakeTorque = Clamp(BrakeTorque, -LimitBrakeTorque, LimitBrakeTorque);\
      \ // Never apply more than this!\n\t\t      \t      WheelTorque = DriveTorque\
      \ + BrakeTorque - GripTorque;\n\t\t      \t      VehicleForce = GripTorque /\
      \ (FTScale * Wheels[i].WheelRadius);\n\t\t      \t      if( OutputBrake > 0.0\
      \ ||  (DriveTorque + BrakeTorque) * Wheels[i].SpinVel < 0.0)\n\t\t      \t \
      \     {\n\t\t\t      \t      Wheels[i].DriveForce = 0.0;\n\t\t\t      \t   \
      \   Wheels[i].LongFriction = Abs(VehicleForce) + (OutputBrake * MinBrakeFriction);\n\
      \t\t      \t      }\n\t\t      \t      else\n\t\t      \t      {\n\t\t\t   \
      \   \t      Wheels[i].DriveForce = VehicleForce;\n\t\t\t      \t      Wheels[i].LongFriction\
      \ = 0.0;\n\t\t      \t      }\n\t\t      \t      if (Wheels[i].bWheelOnGround)\n\
      \t\t\t      \t      Wheels[i].ChassisTorque = -1.0 * (DriveTorque + BrakeTorque)\
      \ * ChassisTorqueScale;\n\t\t     \t       else\n\t\t\t      \t      Wheels[i].ChassisTorque\
      \ = 0.0;\n\t\t      \t      TransAcc = WheelTorque / TransInertia;\n\t\t   \
      \   \t      Wheels[i].SpinVel += TransAcc * DeltaTime;\n\t\t      \t      if(Gear\
      \ == 0 && Wheels[i].SpinVel > 0.0)\n\t\t\t      \t      Wheels[i].SpinVel =\
      \ 0.0;\n\t\t      \t      else if(Gear > 0 && Wheels[i].SpinVel < 0.0)\n\t\t\
      \t      \t      Wheels[i].SpinVel = 0.0;\n\t\t      \t      NewTotalSpinVel\
      \ += Wheels[i].SpinVel;\n\t\t      \t      EngineRPM += Wheels[i].SpinVel /\
      \ EngineWheelRatio;\n\t\t      \t      Wheels[i].LatFriction = WheelLatFrictionScale[0]\
      \ * Wheels[i].TireLoad;\n\t\t      \t      Wheels[i].LatSlip = InterpCurveEval(Wheels[i].LatSlipFunc,\
      \ Wheels[i].SlipAngle);\n\t\t      \t      if(OutputHandbrake && Wheels[i].bHandbrakeWheel)\n\
      \t\t      \t      {\n\t\t\t      \t      Wheels[i].LatFriction *= Wheels[i].HandbrakeFrictionFactor;\n\
      \t\t\t      \t      Wheels[i].LatSlip *= Wheels[i].HandbrakeSlipFactor;\n  \
      \                            }\n\t\t      \t      if(Wheels[i].SteerType ==\
      \ VST_Steered)\n\t\t\t      \t      Wheels[i].Steer = ActualSteering;\n\t\t\
      \      \t      else if(Wheels[i].SteerType == VST_Inverted)\n\t\t\t      \t\
      \      Wheels[i].Steer = -ActualSteering;\n\t\t      \t      else\n\t\t\t  \
      \    \t      Wheels[i].Steer = 0.0;\n\t      \t      }\n\t      \t      EngineRPM\
      \ /= NumPoweredWheels;\n\t      \t      EngineRPM = Max(EngineRPM, 0.01); //\
      \ ensure always positive!\n\t      \t      TotalSpinVel = NewTotalSpinVel;\n\
      \t      }\n///////////////STICK SHIFT///////////////////////////////\n\t   \
      \   else\n\t      {\n                   if(bClutching)\n                   {\n\
      \                        EngineTorque = InterpCurveEval(TorqueCurve, EngineRPM);\n\
      \                   }\n                   else\n                   {\n     \
      \                   EngineTorque = InterpCurveEval(TorqueCurve, EngineRPM);\n\
      \                        if(EngineTorque >= 0)\n                        {\n\
      \                        \t   // Calculate torque at output of engine. Combination\
      \ of throttle, current RPM and engine braking.\n\t                        EngineTorque\
      \ = OutputGas * InterpCurveEval(TorqueCurve, EngineRPM);\n                 \
      \       }\n                        else if(EngineTorque < 0)\n             \
      \           {\n                                EngineTorque = InterpCurveEval(TorqueCurve,\
      \ EngineRPM);\n                        }\n\n\t                EngineBraking\
      \ = (1.0f - OutputGas) * (EngineBrakeRPMScale*EngineRPM * EngineBrakeRPMScale*EngineRPM\
      \ * EngineBrakeFactor);\n\t           }\n\n                  // EngineRPM =\
      \ OutputGas * InterpCurveEval(RPMCurve, EngineTorque);\n\n\t           EngineTorque\
      \ -= EngineBraking;\n                   ETorque = EngineTorque;\n\t        \
      \   //DebugInfo = FString::Printf(TEXT(\"OutputBrake: %f\tEngineRPM: %f    EngineTorque:\
      \ %f\"), OutputBrake, EngineRPM, EngineTorque);\n\n\t           // Total gear\
      \ ratio between engine and differential (ie before being split between wheels).\n\
      \t           // A higher gear ratio and the torque at the wheels is reduced.\n\
      \t           EngineWheelRatio = GearRatios[Gear] * TransRatio;\n\n         \
      \          if(bClutching)\n                   {\n                        //EngineRPM\
      \ = 0.0;\n                        WheelRPM = 0.0;\n                   }\n  \
      \                 else\n                   {\n                        if(Wheels[i].bPoweredWheel)\n\
      \                        {\n\t                     // Reset engine RPM. We calculate\
      \ this by adding the component of each wheel spinning.\n\t                 \
      \    NewTotalSpinVel=0.0;\n\t                     if(bInGear)\n\t          \
      \           {\n\t                           WheelRPM = 0.0;\n\t            \
      \               EngineRPM = 0.0;\n\t                     }\n\t             \
      \        else if(!bInGear)\n\t                           WheelRPM = 0.0;\n\t\
      \                }\n\t           }\n\n\t      // Do model for each wheel.\n\t\
      \      //  Okay this needs to be fixed because the way this is, all the wheels\
      \ get power\n\n\t           for(i=0;i<Wheels.length; i++)\n\t           {\n\t\
      \     \t      //Wheels[i];\n\t\t      /////////// DRIVE ///////////\n\t\t  \
      \    // Heuristic to divide torque up so that the wheels that are spinning slower\
      \ get more of it.\n\t\t      // Sum of LSDFactor across all wheels should be\
      \ 1.\n\t\t      // JTODO: Do we need to handle the case of vehicles with different\
      \ size wheels?\n\n\t\t      EvenSplit = 1/NumPoweredWheels;\n\n\t\t      //\
      \ If no wheels are spinning, just do an even split.\n\t\t      if(TotalSpinVel\
      \ > 0.1)\n\t\t\t      LSDSplit = (TotalSpinVel - Wheels[i].SpinVel)/((NumPoweredWheels-1)\
      \ * TotalSpinVel);\n\t\t      else\n\t\t\t      LSDSplit = EvenSplit;\n\n\t\t\
      \      UseSplit = ((1-LSDFactor) * EvenSplit) + (LSDFactor * LSDSplit);\n\n\
      \                      if(bClutching)\n                      {\n           \
      \                EngineRPM = RPM;\n\n                           //DriveTorque\
      \ = UseSplit * (EngineTorque / EngineWheelRatio);\n                      }\n\
      \                      else\n                      {\n                     \
      \      if(Wheels[i].bPoweredWheel)\n                           {\n         \
      \                       //EngineRPM = RPM;\n\n                             \
      \   // Calculate Drive Torque : applied at wheels (ie after gearbox and differential)\n\
      \t\t                // This is an 'open differential' ie. equal torque to each\
      \ wheel\n\t\t                DriveTorque = UseSplit * (EngineTorque / EngineWheelRatio);\n\
      \t\t           }\n\t\t      }\n\n\t\t      /////////// LONGITUDINAL ///////////\n\
      \t\t      // Calculate Grip Torque : longitudinal force against ground * distance\
      \ of action (radius of tyre)\n\t\t      // LongFrictionFunc is assumed to be\
      \ reflected for negative Slip Ratio\n\t\t      GripTorque = FTScale * Wheels[i].WheelRadius\
      \ * Wheels[i].TireLoad * WheelLongFrictionScale[0] * InterpCurveEval(Wheels[i].LongFrictionFunc,\
      \ Abs(Wheels[i].SlipVel));\n\n\t\t      if(Wheels[i].SlipVel < 0.0)\n\t\t\t\
      \      GripTorque *= -1.0;\n\n                      if(Wheels[i].bPoweredWheel)\n\
      \                      {\n                           // GripTorque can't be\
      \ more than the torque needed to invert slip ratio.\n\t\t           TransInertia\
      \ = (EngineInertia / Abs(GearRatios[Gear] * TransRatio)) + Wheels[i].WheelInertia;\n\
      \                      }\n\n\t\t      //FLOAT SlipAngVel = Wheels[i].SlipVel/Wheels[i].WheelRadius;\n\
      \n                      if(bBraking)\n                      {\n\t\t        \
      \   // Brake torque acts to stop wheels (ie against direction of motion)\n\t\
      \t           BrakeTorque = 0.0;\n\t\t           if(Wheels[i].SpinVel > 0.0)\n\
      \t\t                BrakeTorque = -OutputBrake * MaxBrakeTorque;\n         \
      \                 else\n                                BrakeTorque = OutputBrake\
      \ * MaxBrakeTorque;\n\n\t\t           LimitBrakeTorque = ( Abs(Wheels[i].SpinVel)\
      \ * TransInertia ) / TheDeltaTime; // Size of torque needed to completely stop\
      \ wheel spinning.\n\t\t           BrakeTorque = Clamp(BrakeTorque, -LimitBrakeTorque,\
      \ LimitBrakeTorque); // Never apply more than this!\n\t\t           mBrakeTorque\
      \ = BrakeTorque;\n                      }\n                      else\n    \
      \                  {\n                           BrakeTorque = 0;\n        \
      \                   mBrakeTorque = BrakeTorque;\n                      }\n//_____________________________________________\n\
      \n                      if(bClutching)\n                      {\n          \
      \                    WheelTorque = GripTorque;\n                           \
      \   //Log(\"GripTorque\");\n                              //Log(GripTorque);\n\
      \                      }\n                      else     // we are in full gear\n\
      \                      {\n                           if(!Wheels[i].bPoweredWheel)\n\
      \                           {\n                              //Don't do this\
      \ if 4 wheel drive!!!!\n                              WheelTorque = GripTorque\
      \ * 2;\n                           }\n                           else\n    \
      \                       {\n                              // Resultant torque\
      \ at wheel : torque applied from engine + brakes + equal-and-opposite from tire-road\
      \ interaction.\n\t\t              WheelTorque = DriveTorque + BrakeTorque -\
      \ GripTorque;\n\t\t          /*    Log(\"WheelTorque\");\n                 \
      \             Log(WheelTorque);\n                              Log(\"GripTorque\"\
      );\n                              Log(GripTorque);      */\n\t\t           }\n\
      \                      }\n//____________________________________________\n\n\
      \t\t      // Resultant linear force applied to car. (GripTorque applied at road)\n\
      \t\t      VehicleForce = GripTorque / (FTScale * Wheels[i].WheelRadius);\n\n\
      \t\t      // If the wheel torque is opposing the direction of spin (ie braking)\
      \ we use friction to apply it.\n\t\t      if( OutputBrake > 0 && bBraking)//\
      \  || (DriveTorque + BrakeTorque) * Wheels[i].SpinVel < 0.0\n\t\t      {\n\t\
      \t\t      Wheels[i].DriveForce = 0.0;\n\t\t\t      Wheels[i].LongFriction =\
      \ Abs(VehicleForce) + (OutputBrake * MinBrakeFriction);\n\t\t      }\n\t\t \
      \     else if(bClutching)\n\t\t      {\n\t\t              Wheels[i].DriveForce\
      \ = 0.0;\n                              Wheels[i].LongFriction = 0.0;\n\t\t\
      \      }\n\t\t      else\n\t\t      {\n\t\t              if(!Wheels[i].bPoweredWheel)\n\
      \t\t              {\n\t\t                     Wheels[i].DriveForce = 0.0;\n\
      \                                     Wheels[i].LongFriction = 0.0;\n\t\t  \
      \            }\n\t\t              else\n\t\t              {\n\t\t\t        \
      \   Wheels[i].DriveForce = VehicleForce;\n                                 \
      \  Wheels[i].LongFriction = 0.0;\n\t\t\t           //Wheels[i].LongFriction\
      \ = 0.0;\n\t\t\t      }\n\t\t      }\n\n\n                      if(Wheels[i].bPoweredWheel)\n\
      \                      {\n\t\t           // Calculate torque applied back to\
      \ chassis if wheel is on the ground\n\t\t           if (Wheels[i].bWheelOnGround)\n\
      \t\t\t      Wheels[i].ChassisTorque = -1.0 * (DriveTorque + BrakeTorque) * ChassisTorqueScale;\n\
      \t\t           else\n\t\t\t      Wheels[i].ChassisTorque = 0.0;\n          \
      \            }\n\n\t\t      // Calculate new wheel speed.\n\t\t      // The\
      \ lower the gear ratio, the harder it is to accelerate the engine.\n\n\t\t \
      \     if(bClutching)\n\t\t      {\n\t\t             TransAcc = WheelTorque /\
      \ -1;\n\t\t             Wheels[i].SpinVel += TransAcc * DeltaTime;\n\t\t   \
      \   }\n\t\t      else\n\t\t      {\n\t\t             if(!Wheels[i].bPoweredWheel)\n\
      \t\t             {\n\t\t                   TransAcc = WheelTorque / -1;\n\t\t\
      \                   Wheels[i].SpinVel += TransAcc * DeltaTime;\n\t\t       \
      \      }\n\t\t             else\n\t\t             {\n\t\t                  \
      \ TransAcc = WheelTorque / TransInertia;\n\t\t                   Wheels[i].SpinVel\
      \ += TransAcc * DeltaTime;\n\t\t             }\n                      }\n\n\
      //  -----this is were the engine needs to be slowly put into gear-----\n\n \
      \                     if(bClutching)\n                      {\n\n          \
      \                WheelRPM += (Wheels[i].SpinVel / EngineWheelRatio);\n     \
      \                     //TorqueConverter();\n                      }\n      \
      \                else   // we are in full gear\n                      {\n  \
      \                        if(!Wheels[i].bPoweredWheel)\n                    \
      \      {\n                               WheelRPM += (Wheels[i].SpinVel / EngineWheelRatio);\n\
      \                          }\n                          else\n             \
      \             {\n                      \t       // Accumulate wheel spin speeds\
      \ to find engine RPM.\n\t\t               // The lower the gear ratio, the faster\
      \ the engine spins for a given wheel speed.\n\t\t               NewTotalSpinVel\
      \ += Wheels[i].SpinVel;\n                               if(!bInGear)\n     \
      \                          {\n//                                  EngineRPM\
      \ += (Wheels[i].SpinVel / EngineWheelRatio);\n                             \
      \       WheelRPM += (Wheels[i].SpinVel / EngineWheelRatio);\n              \
      \                      TorqueConverter();\n\n                              \
      \ }\n                               if(bInGear)\n                          \
      \     {\n                                    WheelRPM += (Wheels[i].SpinVel\
      \ / EngineWheelRatio);\n                                    EngineRPM += (Wheels[i].SpinVel\
      \ / EngineWheelRatio);\n                               }\n                 \
      \         }\n\n                      }\n//  ---------------------------------------------------------------\n\
      \n\t\t      // Make sure the wheel can't spin in the wrong direction for the\
      \ current gear.\n\t\t      if(bClutching)\n\t\t      {\n\t\t      }\n\t\t  \
      \    else\n\t\t      {\n\t\t           if(Wheels[i].bPoweredWheel)\n\t\t   \
      \        {\n\t\t                  if(Gear == 0 && Wheels[i].SpinVel > 0.0)\n\
      \t\t\t               Wheels[i].SpinVel = 0.0;\n\t\t                  else if(Gear\
      \ > 0 && Wheels[i].SpinVel < 0.0)\n\t\t\t               Wheels[i].SpinVel =\
      \ 0.0;\n\t\t\t   }\n\t\t      }\n\n\t\t      /////////// LATERAL ///////////\n\
      \                      if(!Wheels[i].bPoweredWheel)\n                      {\n\
      \t\t           Wheels[i].LatFriction = (WheelLatFrictionScale[0] * 1.5) * Wheels[i].TireLoad\
      \ ;\n\t\t           Wheels[i].LatSlip = InterpCurveEval(Wheels[i].LatSlipFunc,\
      \ Wheels[i].SlipAngle);\n                      }\n                      else\n\
      \                      {\n                           Wheels[i].LatFriction =\
      \ WheelLatFrictionScale[0] * Wheels[i].TireLoad;\n\t\t           Wheels[i].LatSlip\
      \ = InterpCurveEval(Wheels[i].LatSlipFunc, Wheels[i].SlipAngle);\n         \
      \             }\n\n\t\t      if(OutputHandbrake && Wheels[i].bHandbrakeWheel)\n\
      \t\t      {\n\t\t\t      Wheels[i].LatFriction *= Wheels[i].HandbrakeFrictionFactor;\n\
      \t\t\t      Wheels[i].LatSlip *= Wheels[i].HandbrakeSlipFactor;\n\t\t      }\n\
      \n\t\t      /////////// STEERING  ///////////\n\n\t\t      // Pass on steering\
      \ to wheels that want it.\n\t\t      if(Wheels[i].SteerType == VST_Steered)\n\
      \t\t\t      Wheels[i].Steer = ActualSteering;\n\t\t      else if(Wheels[i].SteerType\
      \ == VST_Inverted)\n\t\t\t      Wheels[i].Steer = -ActualSteering;\n\t\t   \
      \   else\n\t\t\t      Wheels[i].Steer = 0.0;\n\t         }\n              }\n\
      \              if(bClutching)\n              {\n              }\n          \
      \    else\n              {\n                   // EngineRPM is in radians per\
      \ second, want in revolutions per minute\n\t           EngineRPM /= 4;\n//\t\
      \           EngineRPM /= 2.0 * PI; // revs per sec\n//\t           EngineRPM\
      \ *= 60;\n\t           EngineRPM = Max(EngineRPM, 0.00); // ensure always positive!\n\
      \n\t           RPM /= NumPoweredWheels;\n//\t           RPM /= 2.0 * PI; //\
      \ revs per sec\n//\t           RPM *= 60;\n\t           RPM = Max(EngineRPM,\
      \ 0.00); // ensure always positive!\n              }\n\n              if(!bClutching)\n\
      \              {\n\t           // Update total wheel spin vel\n\t          \
      \ TotalSpinVel = NewTotalSpinVel;\n\t      }\n\n\t      // Turn (yaw) damping.\n\
      \t      carTM = CachedLocalToWorld;  // was  carTM = LocalToWorld()\n\t    \
      \  //worldUp(carTM.M[2][0], carTM.M[2][1], carTM.M[2][2]);\n\t      //worldRight(carTM.M[1][0],\
      \ carTM.M[1][1], carTM.M[1][2]);\n\t      //worldForward(carTM.M[0][0], carTM.M[0][1],\
      \ carTM.M[0][2]);\n\n            //  KGetRigidBodyState(rbState);\n\t    //\
      \  AngVel = KRBVecToVector(rbState.AngVel);\n\t      AngVel.X = rbState.AngVel.X;\n\
      \              AngVel.Y = rbState.AngVel.Y;\n              AngVel.Z = rbState.AngVel.Z;\n\
      \t      TurnAngVel = AngVel dot worldUp;\n\n\t      DampingScale = 1.0 - MinAirControlDamping;\n\
      \t      if(bAllowAirControl && !bVehicleOnGround)\n\t      {\n\t  //       \
      \     Log(\"bVehicleOnGround\");\n          //            Log(bVehicleOnGround);\n\
      \t\t      TurnDampingMag = (1.0 - DampingScale*Abs(Steering)) * TurnDamping\
      \ * TurnAngVel;\n\t\t      //KAddImpulse( WForce, -TurnDampingMag * worldUp\
      \ );\n\t\t      Force += (WForce + (-1 * TurnDampingMag) * worldUp);\n\t   \
      \   }\n\n\t      else\n\t      {\n\t\t      TurnDampingMag = (1.0 - Abs(ActualSteering))\
      \ * TurnDamping * TurnAngVel;\n\t\t      //KAddImpulse( WForce, -TurnDampingMag\
      \ * worldUp );\n\t\t      Force += (WForce + (-1 + TurnDampingMag) * worldUp);\n\
      \t      }\n\n\t      // If vehicle is in the air and we are allowing air control...\n\
      \t      if(!bVehicleOnGround)\n\t      {\n\t\t      PitchAngVel = AngVel dot\
      \ worldRight;\n\t\t      RollAngVel = AngVel dot worldForward;\n\n\t\t     \
      \ if(bAllowAirControl)\n\t\t      {\n\t\t\t      AirControlTorque = worldRight\
      \ * OutputPitch * -AirPitchTorque;\n\n\t\t\t      if(bIsWalking)\n\t\t\t   \
      \   {\n\t//\t\t              Log(\"bIsWalking\");\n\t//\t\t              Log(bIsWalking);\n\
      \t\t\t\t      AirControlTorque += (worldForward * Steering * -AirRollTorque);\n\
      \t\t\t\t      }\n\t\t\t      else\n\t\t\t      {\n\t\t\t\t      AirControlTorque\
      \ += (worldUp * Steering * -AirTurnTorque);\n\t\t\t      }\n               \
      \               //KAddImpulse( WForce, AirControlTorque );\n\t\t\t      Force\
      \ += AirControlTorque;\n\n\t\t\t      // Damping forces\n\t\t\t      PitchDampingMag\
      \ = (1.0 - DampingScale*Abs(OutputPitch)) * AirPitchDamping * PitchAngVel;\n\
      \t\t\t      RollDampingMag = (1.0 - DampingScale*Abs(Steering)) * AirRollDamping\
      \ * RollAngVel;\n\n                              //KAddImpulse( WForce, (-PitchDampingMag\
      \ * worldRight) + (-RollDampingMag * worldForward) );\n\t\t\t      Force +=\
      \ (WForce + ((-1 + PitchDampingMag) * worldRight) + ((-1 + RollDampingMag) *\
      \ worldForward));\n\t\t\t      \n\t\t\t      UDForce = Force;\n\t\t\t      UDTorque\
      \ = Torque;\n\t\t      }\n\t\t      else\n\t\t      {\n\t\t\t PitchDampingMag\
      \ = AirPitchDamping * PitchAngVel;\n\t\t\t //KAddImpulse( WForce, -PitchDampingMag\
      \ * worldRight );\n\t\t\t Force += (WForce + (-1 + PitchDampingMag) * worldRight);\n\
      \t\t      }\n              }\n              else\n              {\n        \
      \           UDForce = Force;\n                   UDTorque = Torque;\n      \
      \        }\n\t}\n}\n</uscript>\n;Engine\n\n<uscript>\nfunction Engine()\n{\n\
      \     Gas = Gas2;\n     RPM = InterpCurveEval(EngineS, Gas);\n}\n</uscript>\n\
      ;StoptheCar\n*This function allows for slower, more real life like breaking\n\
      \n<uscript>\nfunction StoptheCar()\n{\n   if(bBraking)\n   {\n      if(hBrake<=21\
      \ && hBrake>=0)\n      {\n           hBrake += 0.5;\n      }\n      if(hBrake>21)\n\
      \             hBrake = 21;\n   }\n   if(!bBraking)\n   {\n           if(hBrake<=21\
      \ && hBrake>=0)\n           {\n                hBrake -= 0.5;\n           }\n\
      \           if(hBrake<0)\n                hBrake = 0;\n   }\n}\n</uscript>\n\
      ;TorqueConverter\n*This function should prolly have a different name, I named\
      \ it this thinking I would need to accually have a torque converter for the\
      \ tranny but I turned out making it a function that eases into gear and fixes\
      \ the rpm to equal that of the engine rpm when the clutch is pressed.\n\n<uscript>\n\
      function TorqueConverter()\n{\n    local  float    rpmDifference;\n    local\
      \  float    myRPM;\n    rpmDifference = 0.0;\n    myRPM = WheelRPM;\n    myRPM\
      \ *= 6.28; // convert to radians per sec\n    myRPM /= 60;\n         if(EngineRPM\
      \ == myRPM)\n              bInGear = True;\n         else if(EngineRPM > myRPM)\n\
      \         {\n              if(myRPM < 0)\n                    rpmDifference\
      \ = EngineRPM - (2 * Abs(myRPM));\n\n              else if(myRPM >= 0)\n   \
      \                 rpmDifference = EngineRPM - myRPM;\n              if(rpmDifference\
      \ <= 200.0)\n              {\n                   bInGear = True;\n         \
      \     }\n              else if(rpmDifference > 200.0)\n              {\n   \
      \                bInGear = False;\n                   rpmDifference = rpmDifference\
      \ * 0.2;\n                   EngineRPM -= rpmDifference;\n                 \
      \  bRadians = True;\n              }\n         }\n         else if(EngineRPM\
      \ < myRPM)\n         {\n              rpmDifference = myRPM - EngineRPM;\n \
      \             if(rpmDifference <= 200.0)\n              {\n                \
      \   bInGear = True;\n              }\n              else if(rpmDifference >\
      \ 200.0)\n              {\n                   bInGear = False;\n           \
      \        rpmDifference = rpmDifference * 0.2;\n                   EngineRPM\
      \ -= rpmDifference;\n                   bRadians = True;\n              }\n\
      \         }\n}\n</uscript>\n\n;KApplyForce\n\n<uscript>\nfunction KApplyForce(out\
      \ vector Force, out vector Torque)\n{\n    Super.KApplyForce(Force, Torque);\n\
      \    Force += UDForce;\n    Torque += UDTorque;\n    if (bBoosting == true &&\
      \ bVehicleOnGround == true)\n        Force += vector(Rotation) * SpeedBoost;\n\
      }\n</uscript>\n\n;KImpact\n\n<uscript>\nevent KImpact(Actor Other, vector Pos,\
      \ vector ImpactVel, vector ImpactNorm)\n{\n    if (Role == ROLE_Authority)\n\
      \    {\n\n        ImpactInfo.Other = Other;\n        ImpactInfo.Pos = Pos;\n\
      \        ImpactInfo.ImpactVel = ImpactVel;\n        ImpactInfo.ImpactNorm =\
      \ ImpactNorm;\n        ImpactInfo.ImpactAccel = KParams.KAcceleration;\n   \
      \     ImpactTicksLeft = ImpactDamageTicks;\n    }\n}\n</uscript>\n\n;DrivingStatusChanged\n\
      \n<uscript>\nevent DrivingStatusChanged()\n{\n\tlocal int i;\n\tSuper.DrivingStatusChanged();\n\
      \    if (bDriving && Level.NetMode != NM_DedicatedServer && !bDropDetail)\n\t\
      {\n        Dust.length = Wheels.length;\n        for(i=0; i<Wheels.Length; i++)\n\
      \            if (Dust[i] == None)\n            {\n        \t\t// Create wheel\
      \ dust emitters.\n        \t\tWheelCoords = GetBoneCoords(Wheels[i].BoneName);\n\
      \        \t\tDust[i] = spawn(class'ONSDirtSlipEffect', self,, WheelCoords.Origin\
      \ + ((vect(0,0,-1) * Wheels[i].WheelRadius) >> Rotation));\n        \t\tDust[i].SetBase(self);\n\
      \t\t\t    Dust[i].SetDirtColor( Level.DustColor );\n        \t}\n\t\tif(bMakeBrakeLights)\n\
      \t\t{\n\t\t\tfor(i=0; i<2; i++)\n    \t\t\tif (BrakeLight[i] == None)\n    \t\
      \t\t{\n    \t\t\t\tBrakeLight[i] = spawn(class'ONSBrakelightCorona', self,,\
      \ Location + (BrakeLightOffset[i] >> Rotation) );\n    \t\t\t\tBrakeLight[i].SetBase(self);\n\
      \    \t\t\t\tBrakeLight[i].SetRelativeRotation( rot(0,32768,0) ); // Point lights\
      \ backwards.\n    \t\t\t\tBrakeLight[i].Skins[0] = BrakeLightMaterial;\n   \
      \ \t\t\t}\n\t\t}\n\t}\n    else\n    {\n        if (Level.NetMode != NM_DedicatedServer)\n\
      \    \t{\n            for(i=0; i<Dust.Length; i++)\n                Dust[i].Destroy();\n\
      \n            Dust.Length = 0;\n\n            if(bMakeBrakeLights)\n       \
      \     {\n            \tfor(i=0; i<2; i++)\n                    if (BrakeLight[i]\
      \ != None)\n                        BrakeLight[i].Destroy();\n            }\n\
      \        }\n        TurnDamping = 0.0;\n    }\n}\n</uscript>\n\n;KDriverEnter\n\
      \n<uscript>\nfunction KDriverEnter(Pawn P)\n{\n        Super.KDriverEnter(P);\n\
      }\n</uscript>\n\n;ClientKDriverLeave\n\n<uscript>\nsimulated function ClientKDriverLeave(PlayerController\
      \ PC)\n{\n\tSuper.ClientKDriverLeave(PC);\n\n\tbWeaponIsAltFiring = false;\n\
      \tPC.EndZoom();\n}\n\n</uscript>\n\n;SpecialCalcFirstPersonView\n\n<uscript>\n\
      simulated function SpecialCalcFirstPersonView(PlayerController PC, out actor\
      \ ViewActor, out vector CameraLocation, out rotator CameraRotation )\n{\n\t\
      ViewActor = self;\n\tCameraLocation = Location + (FPCamPos >> Rotation);\n}\n\
      </uscript>\n\n;Fire\n\n<uscript>\nfunction Fire(optional float F)\n{\n     \
      \  VehicleFire(False);\n}\n</uscript>\n\n;AltFire\n\n<uscript>\nfunction AltFire(optional\
      \ float F)\n{\n\n        VehicleFire(true);\n}\n</uscript>\n\n;VehicleFire\n\
      \n<uscript>\nfunction VehicleFire(bool bWasAltFire)\n{\n         if(!bWasAltFire)\n\
      \         {\n                 bGearUp = 1;\n                 ChangeGear(bGearUp);\n\
      \         }\n\n         else if(bWasAltFire)\n         {\n                 bGearDown\
      \ = -1;\n                 ChangeGear(bGearDown);\n         }\n}\n</uscript>\n\
      \n;VehicleCeaseFire\n\n<uscript>\nfunction VehicleCeaseFire(bool bWasAltFire)\n\
      {\n         if(!bWasAltFire)\n         {\n                 bGearUp = 0;\n  \
      \               ChangeGear(bGearUp);\n         }\n         else if(bWasAltFire)\n\
      \         {\n                 bGearDown = 0;\n                 ChangeGear(bGearDown);\n\
      \         }\n    Super.VehicleCeaseFire(bWasAltFire);\n}\n</uscript>\n\n;ClientVehicleCeaseFire\n\
      \n<uscript>\nsimulated function ClientVehicleCeaseFire(bool bWasAltFire)\n{\n\
      \    Super.ClientVehicleCeaseFire(bWasAltFire);\n}\n</uscript>\n\n;Tick\n\n\
      <uscript>\nfunction Tick(float DT)\n{\n    local int               i, x;\n \
      \   local bool              lostTraction;\n    local KarmaParams       KP;\n\
      \    local KRigidBodyState   BodyState;\n\n    TheDeltaTime = DT;\n    Super.Tick(DT);\n\
      \n    VRate = VSize(Velocity);\n    KP = KarmaParams(KParams);\n    KGetRigidBodyState(BodyState);\n\
      \n    SteerBoneAxis = AXIS_Z;\n    KWake();\n    if(Role == ROLE_Authority)\n\
      \    {\n        if(bDriving)\n\t{\n\t    // Update ForwardVel, CarMPH and bIsInverted\
      \ on both server and client.\n            GetAxes(Rotation, worldForward, worldRight,\
      \ worldUp);\n\n  \t    ForwardVel = Velocity dot worldForward;\n\t    CarMPH\
      \ = Abs((ForwardVel * 3600.0) / 140800.0); // Convert from units per sec to\
      \ miles per hour.\n\n\t    bIsInverted = worldUp.Z < 0.2;\n\n\t    // Update\
      \ engine sound pitch\n\t    EnginePitch = 255.0 * ((EngineRPM+IdleRPM)/EngineRPMSoundRange);\n\
      \t    EnginePitch = Clamp(EnginePitch, 0.0, 255.0);\n\t    SoundPitch = EnginePitch;\n\
      \n            SteerBoneAngle = (ActualSteering/InterpCurveEval(MaxSteerAngleCurve,\
      \ VRate)) * SteerBoneMaxAngle * (65535.0/360.0);\n\n            one.X = 0;\n\
      \            one.Y = 0;\n            one.Z = SteerBoneAngle;\n\n           \
      \ two.X = SteerBoneAngle;\n            two.Y = 0;\n            two.Z = 0;\n\n\
      \            three.X = 0;\n            three.Y = SteerBoneAngle;\n         \
      \   three.Z = 0;\n\n\n            if(SteerBoneAxis == AXIS_X)\n            \
      \     //SteerRot = Rotator(0, 0, SteerBoneAngle);\n                 SteerRot\
      \ = Rotator(one);\n\n            else if(SteerBoneAxis == AXIS_Y)\n        \
      \         //SteerRot = Rotator(SteerBoneAngle, 0, 0);\n                 SteerRot\
      \ = Rotator(two);\n\n            else\n                 //SteerRot = Rotator(0,\
      \ SteerBoneAngle, 0);\n                 SteerRot = Rotator(three);\n\n     \
      \       SetBoneDirection(SteerBoneName, SteerRot, WForce, 1, 0);\n        }\n\
      \    }\n    \t// Update any stunt variables.\n\tif(bDoStuntInfo)\n\t{\n\t\t\
      ForwardsInOldPlane = Coords.XAxis - (Coords.XAxis dot OldCoords.ZAxis) * OldCoords.ZAxis;\n\
      \t\t//ForwardsInOldPlane = SafeNormal(ForwardsInOldPlane);\n\t\tDeltaHeading\
      \ = Acos( Clamp( ForwardsInOldPlane dot OldCoords.XAxis, -1.0, 1.0 ) );\n\t\t\
      if( (ForwardsInOldPlane dot OldCoords.YAxis) < 0.0)\n\t\t\tDeltaHeading *= -1.0;\n\
      \t\tDeltaPitch = Asin( Clamp(Coords.XAxis dot OldCoords.ZAxis, -1.0f, 1.0) );\n\
      \t\tDeltaRoll = Asin( Clamp(Coords.YAxis dot OldCoords.ZAxis, -1.0f, 1.0) );\n\
      \t\t//debugf( TEXT(\"DR:%f DP:%f\"), DeltaRoll, DeltaPitch );\n\n\t\tbCurrentOnGround\
      \ = (bVehicleOnGround || KP.bContactingLevel);\n\t\tDaredevilPoints = 0;\n\n\
      \t\tif(bCurrentOnGround)\n\t\t{\n\t\t\tif(!bOldVehicleOnGround)\n\t\t\t{\n\t\
      \t\t\t// We just landed - see if we should display Daredevil 'message'\n\t\t\
      \t\tInAirTime = Level.TimeSeconds - LastOnGroundTime;\n\n                  \
      \              Dist1 = Location;\n                                Dist2 = LastOnGroundLocation;\n\
      \                                Vect  = Dist1 - Dist2;\n                  \
      \              Dist3 = Vect.X * Vect.X - Vect.Y * Vect.Y;\n                \
      \                Dist3 = Sqrt(Dist3);\n\n\t\t\t\tDaredevilPoints += Max( Ceil(\
      \ Abs(InAirSpin)/(0.5*DaredevilThreshInAirSpin) ) - 1, 0 );\n\t\t\t\tDaredevilPoints\
      \ += Max( Ceil( Abs(InAirPitch)/(0.5*DaredevilThreshInAirPitch) ) - 1, 0 );\n\
      \t\t\t\tDaredevilPoints += Max( Ceil( Abs(InAirRoll)/(0.5*DaredevilThreshInAirRoll)\
      \ ) - 1, 0 );\n\t\t\t\tDaredevilPoints += Max( Ceil( InAirTime/(0.5*DaredevilThreshInAirTime)\
      \ ) - 1, 0 );\n\t\t\t\tDaredevilPoints += Max( Ceil( InAirDistance/(0.5f*DaredevilThreshInAirDistance)\
      \ ) - 1, 0 );\n\t\t\t\tDaredevilPoints *= 10;\n\n\t\t\t\t// A wheel must be\
      \ touching the ground on landing to get a daredevil\n\t\t\t\tif( bVehicleOnGround\
      \ && DaredevilPoints > 0 )\n\t\t\t\t{\n\t\t\t\t\tOnDaredevil();\n\t\t\t\t}\n\
      \t\t\t}\n\n\n\t\t\tLastOnGroundLocation = Location;\n\t\t\tLastOnGroundTime\
      \ = Level.TimeSeconds;\n\t\t\tInAirSpin = 0.0;\n\t\t\tInAirPitch = 0.0;\n\t\t\
      \tInAirRoll = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tInAirSpin += (180.0/PI) *\
      \ DeltaHeading;\n\t\t\tInAirPitch += (180.0/PI) * DeltaPitch;\n\t\t\tInAirRoll\
      \ += (180.0/PI) * DeltaRoll;\n\t\t}\n\n\t\tOldRotation = Rotation;\n\t\tbOldVehicleOnGround\
      \ = bCurrentOnGround;\n\t}\n\n\tif(!bDriving)\n\t{\n\t\tbOldVehicleOnGround\
      \ = true; // If no-one is in the vehicle, dont consider it for daredevil status.\n\
      \t}\n\n\tif(bAllowChargingJump)\n\t{\n\t\t// Check if all wheels are on the\
      \ ground.\n\t\tif(bAllWheelsOnGround == true)\n\t\t{\n\t\t     for(x = 0; x<Wheels.Length;\
      \ x++)\n\t\t     {\n\t\t\t if (Wheels[x].bWheelOnGround != false)\n\t\t\t\t\
      bAllWheelsOnGround = false;\n\t\t     }\n\t\t}\n\t\telse\n\t\t{\n\t\t     //\
      \ If any wheels are off the ground - we can just reset everything.\n\t\t   \
      \  if(!bVehicleOnGround)\n\t\t     {\n\t\t          JumpForce = 0.0;\n\t\t \
      \         JumpSpin = 0.0;\n//                          bPushDown = false;\n\t\
      \t     }\n\n\t\t}\n\t}\n      //Engine(Throttle);\n     // If on the server\
      \ - we work out OutputGas, OutputBrake etc, and pack them to be sent to the\
      \ client.\n     if(!bClutching)\n           Gas2 = InterpCurveEval(RPMtoGas,\
      \ EngineRPM);\n     ProcessCarInput();\n     PackState();\n}\n</uscript>\n\n\
      ;ProcessCarInput\n\n<uscript>\nfunction ProcessCarInput()\n{\n        local\
      \ bool     bReverse;\n\n\tbReverse = false;\n\tif(Driver == none)\n\t{\n\t\t\
      OutputBrake = 1.0;\n\t\tOutputGas = 0.0;\n\t}\n\telse\n\t{\n\t\tif(Throttle\
      \ >= 0) // pressing forwards\n\t\t{\n                        OutputGas = Abs(Throttle);\n\
      \                        OutputBrake = 0.0;\n                        if(bClutching)\n\
      \                        {\n                             if(Throttle == 0)\n\
      \                             {\n                                  if(Gas2<=21\
      \ && Gas2>=0)\n                                  {\n                       \
      \                 Gas2 -= 0.5;\n                                  }\n      \
      \                            if(Gas2<0)\n                                  \
      \      Gas2 = 0;\n                             }\n                         \
      \    else\n                             {\n                                \
      \  if(Gas2<=21 && Gas2>=0)\n                                  {\n          \
      \                               Gas2 += 0.5;\n                             \
      \     }\n                                  if(Gas2>21)\n                   \
      \                      Gas2 = 21;\n                             }\n        \
      \                     if(Gas2 >=21)\n                                  Gas2\
      \ = 21;\n                         }\n                         if(!bClutching)\n\
      \n                 }\n\n       StoptheCar();\n       OutputBrake = Abs(InterpCurveEval(BrakeCurve,\
      \ hBrake));\n\n\tOutputPitch = Rise;\n\t}\n\tEngine();\n\tKWake();\n}\n</uscript>\n\
      \n;Clutch\n\n<uscript>\nexec function Clutch(bool bEnabled)\n{\n       if(!bEnabled)\n\
      \       {\n           bClutching = False;\n           bInGear = False;\n   \
      \    }\n\n       else if(bEnabled)\n       {\n           bClutching = True;\n\
      \n           RPM = EngineRPM;\n       }\n}\n</uscript>\n\n;Brake\n\n<uscript>\n\
      exec function Brake(bool bEnabled)\n{\n      if(bEnabled)\n      {\n       \
      \    bBraking = True;\n           OutputHandbrake = true;\n      }\n      if(!bEnabled)\n\
      \      {\n           bBraking = false;\n           OutputHandbrake = false;\n\
      \      }\n}\n</uscript>\n\n;ChangeGear\n\n<uscript>\nfunction ChangeGear(int\
      \ GearChoice)\n{\n      if(bClutching){\n        if(Gear >= 1 && Gear <= 7)\n\
      \        {\n             if(GearChoice == 1)\n             {\n             \
      \     Gear++;\n                  bGearUp = 0;\n             }\n            \
      \ else if(GearChoice == -1)\n             {\n                  Gear--;\n   \
      \               bGearDown = 0;\n             }\n             else if(GearChoice\
      \ == 0)\n             {\n\n             }\n        }\n        else if(Gear ==\
      \ 0 && GearChoice == 1)\n        {\n              Gear++;\n              bGearUp\
      \ = 0;\n        }\n        else if(Gear == 8 && GearChoice == -1)\n        {\n\
      \              Gear--;\n              bGearDown = 0;\n        }\n        else\n\
      \        {\n             bGearUp = 0;\n             bGearDown = 0;\n       \
      \ }\n      }\n}\n</uscript>\n\n;PackState\n\n<uscript>\nfunction PackState()\n\
      {\n\tlocal KRigidBodyState   RBState;\n\tlocal rotator           ViewRot;\n\t\
      if(!KIsAwake())\n\t\treturn;\n\tKGetRigidBodyState(RBState);\n        CActiveWeapon=SActiveWeapon;\n\
      \tCarState.ChassisPosition.X = RBState.Position.X;\n\tCarState.ChassisPosition.Y\
      \ = RBState.Position.Y;\n\tCarState.ChassisPosition.Z = RBState.Position.Z;\n\
      \tCarState.ChassisQuaternion = RBState.Quaternion;\n\tCarState.ChassisLinVel.X\
      \ = 10.0 * RBState.LinVel.X;\n\tCarState.ChassisLinVel.Y = 10.0 * RBState.LinVel.Y;\n\
      \tCarState.ChassisLinVel.Z = 10.0 * RBState.LinVel.Z;\n\tCarState.ChassisAngVel.X\
      \ = 1000.0 * RBState.AngVel.X;\n\tCarState.ChassisAngVel.Y = 1000.0 * RBState.AngVel.Y;\n\
      \tCarState.ChassisAngVel.Z = 1000.0 * RBState.AngVel.Z;\n        CarState.ServerHandbrake\
      \ = FloatToRangeByte(OutputPitch);\n\tCarState.ServerBrake = FloatToRangeByte(OutputBrake);\n\
      \tCarState.ServerGas = FloatToRangeByte(OutputGas);\n\tCarState.ServerGear =\
      \ Gear;\n\tCarState.ServerSteering = FloatToRangeByte(Steering);\n\tif(Controller\
      \ != None)\n\t{\n\t\tif(IsHumanControlled())\n\t\t{\n\t\t\tDriverViewPitch =\
      \ Controller.Rotation.Pitch;\n\t\t\tDriverViewYaw = Controller.Rotation.Yaw;\n\
      \t\t}\n\t\telse\n\t\t{\n\t\t\tViewRot = rotator(Controller.FocalPoint - Location);\n\
      \t\t\tDriverViewPitch = ViewRot.Pitch;\n\t\t\tDriverViewYaw = ViewRot.Yaw;\n\
      \t\t}\n\t}\n\telse\n\t{\n\t\tDriverViewPitch = Rotation.Pitch;\n\t\tDriverViewYaw\
      \ = Rotation.Yaw;\n\t}\n\tCarState.ServerViewPitch = DriverViewPitch;\n\tCarState.ServerViewYaw\
      \ = DriverViewYaw;\n\tFudgeByte++;\n}\n</uscript>\n\n;Motion Blur (still in\
      \ the works)\n\n<uscript>\nfunction addblur()\n{\n      local PlayerController\
      \ PC;\n      \n      PC = PlayerController(Controller);\n      \n      PC.AddCameraEffect(new\
      \ myBlur);\n}\n</uscript>\n\n;LimitPitch\n\n<uscript>\nfunction int LimitPitch(int\
      \ pitch)\n{\n\tif (bAllowAirControl && !bVehicleOnGround)\n\t\treturn pitch;\n\
      \treturn Super.LimitPitch(pitch);\n}\n</uscript>\n\n;Destroyed\n\n<uscript>\n\
      simulated function Destroyed()\n{\n    if (LeftTrail != None)\n        LeftTrail.Destroy();\n\
      \n    if (RightTrail != None)\n        RightTrail.Destroy();\n\n    Super.Destroyed();\n\
      }\n</uscript>\n\n;TakeImpactDamage\n\n<uscript>\nevent TakeImpactDamage(float\
      \ AccelMag)\n{\n    local int Damage;\n        Damage = int(VSize(ImpactInfo.Other.Velocity)\
      \ * 20 * ImpactDamageModifier());\n    if (Vehicle(ImpactInfo.Other) != None)\n\
      \        TakeDamage(Damage, Vehicle(ImpactInfo.Other), ImpactInfo.Pos, vect(0,0,0),\
      \ class'DamType');\n    else\n        TakeDamage(int(AccelMag * ImpactDamageModifier())/\
      \ WallCollisionResistance , Self, ImpactInfo.Pos, vect(0,0,0), class'DamType');\n\
      \n    //FIXME - scale sound volume to damage amount\n    if (ImpactDamageSounds.Length\
      \ > 0)        PlaySound(ImpactDamageSounds[Rand(ImpactDamageSounds.Length-1)],,TransientSoundVolume*2.5);\n\
      \    if (Health < 0 && (Level.TimeSeconds - LastImpactExplosionTime) > TimeBetweenImpactExplosions)\n\
      \    {\n        VehicleExplosion(Normal(ImpactInfo.ImpactNorm), 0.5);\n    \
      \    LastImpactExplosionTime = Level.TimeSeconds;\n    }\n}\n</uscript>\n\n\
      ;Died\n\n<uscript>\nfunction Died(Controller Killer, class<DamageType> damageType,\
      \ vector HitLocation)\n{\n    if (damageType == none)\n       return;\n    if\
      \ (Killer != None)        PlayerController(Killer).ReceiveLocalizedMessage(class'VehicleKillMessage',\
      \ 7);\n    Super.Died(Killer, damageType, HitLocation);\n}\n</uscript>\n\n;FloatToRangeByte\n\
      \n<uscript>\nsimulated function byte FloatToRangeByte(float f)\n{\n\tf= FClamp(f,\
      \ 0, 1);\n\tf = Round(f * 255);\n\treturn byte(f);\n}\n</uscript>\n\n;RangeByteToFloat\n\
      \n<uscript>\n//The opposite of the above function.\nsimulated function float\
      \ RangeByteToFloat(byte b)\n{\n\tlocal float f;\n\tf = b;\n\tf /= 255;\n\treturn\
      \ f;\n}\n</uscript>\n\n====Defaults ====\n\n<uscript>\ndefaultproperties\n{\n\
      \     myBlur=Class'WhatEverPackage.myMotionBlur'\n\n     NumForwardGears=7\n\
      \n     DustSlipRate=2.800000\n     DustSlipThresh=50.000000\n     DaredevilThreshInAirSpin=100.000000\n\
      \     DaredevilThreshInAirPitch=300.000000\n     DaredevilThreshInAirRoll=300.000000\n\
      \     DaredevilThreshInAirTime=1.500000\n     DaredevilThreshInAirDistance=17.000000\n\
      \     DaredevilMessageClass=Class'Onslaught.ONSDaredevilMessage'\n     bOldVehicleOnGround=True\n\
      \     MaxJumpSpin=30000.000000\n     JumpChargeTime=1.000000\n     JumpFeedbackForce=\"\
      HoverBikeJump\"\n     JumpSound=Sound'ONSVehicleSounds-S.Hydraulics.Hydraulic10'\n\
      \     JumpMeterOriginX=0.275000\n     JumpMeterOriginY=0.943000\n     JumpMeterWidth=0.136000\n\
      \     JumpMeterHeight=0.057000\n     JumpMeterSpacing=0.010000\n     JumpMeterColor=(R=215,A=255)\n\
      \     SpinMeterColor=(B=215,G=100,A=255)\n     JumpMeterTexture=Texture'Engine.WhiteTexture'\n\
      \     MinAirControlDamping=0.100000\n     bBrakeFrontWheelsOnly=False\n    \
      \ ChangeUpPoint=2800\n     StopThreshold=0.2\n     CrosshairHitFeedbackTex=Texture'ONSInterface-TX.tankBarrelAligned'\n\
      \     DefaultCrosshair=Material'InterfaceContent.Hud.fbBombFocus'\n     CrosshairScale=0.125\n\
      \     bTeamLocked=false\n     bGearUp=True\n     bInGear=True\n     bEjectPassengersWhenFlipped=False\n\
      \     bCanFlip=true\n     DisintegrationHealth=0.0\n     bShowChargingBar =\
      \ false;\n     // Damages\n     WallCollisionResistance = 5 // Collision resistance:\
      \ the bigger it is, the less damage taken\n     ExplosionDamage=0.0\n     DriverDamageMult=0\n\
      \     CenterSpringRangePitch=5000\n     CenterSpringRangeRoll=5000\n     StolenAnnouncement=\"\
      Play\"\n\n     bNetNotify=true\n}\n</uscript>\n*Global variables that would\
      \ need to be added to the above uscript:\n\n<uscript>\nenum ETextAnchor\n{\n\
      \    TA_Left,\n    TA_Right,\n    TA_Middle\n};\nvar   float               \
      \          ScaleX, ScaleY;\n</uscript>\n\n'''CIpen:'''  Here is some simple\
      \ code you can add to print data on the screen to avoid logging 24/7.  This\
      \ is what I used to check numbers such as RPM, Gas, EngineRPM, and whatever\
      \ else I could fit on 1024x768 resolution.  I've found it to be most handy.\
      \  I'm sure you can find this elsewhere but I'm saving you the effort of looking.\n\
      \n*And here is the DrawHUD function that we must have to draw on the screen\
      \ when a player has possesion of the vehicle:\n\n<uscript>\nsimulated function\
      \ DrawHUD(Canvas C)\n{\n    local PlayerController PC;\n\n\n    PC = PlayerController(Controller);\n\
      \n    ScaleX = C.ClipX/1024;\n    ScaleY = C.ClipY/768;\n\n    C.Style = ERenderStyle.STY_Additive;\n\
      \    C.Font = PC.MyHUD.GetFontSizeIndex(C, -2);\n    C.DrawColor = C.MakeColor(255,255,255);\n\
      \n    DrawEngineStuff(C);\n}\n</uscript>\n\n*Here is the DrawEngineStuff(C)\
      \ which is isn't a required function but is there to organize:\n\n<uscript>\n\
      simulated function DrawEngineStuff(Canvas C)\n{\n    C.Font = C.TinyFont;\n\n\
      \    C.SetPos(40*ScaleX, 150*ScaleY);\n    C.DrawText(\"Engine stuff\");\n\n\
      \    C.SetPos(40*ScaleX, 160*ScaleY);\n    C.DrawText(\"Engine RPM: \" @ EngineRPM);\n\
      }\n</uscript>\n\n40*ScaleX sets the vertical starting position, and 150*ScaleY\
      \ sets the horizontal starting position.\n\n====Notes ====\n\nIf you are to\
      \ subclass, you need to know that the engine rpm is in radians per min.  This\
      \ means that if you were to create a torque curve and wanted the rpm range to\
      \ be from 500 to 7000, you would need to convert all the points from revolutions\
      \ per min to radians per sec.  Take the rpm(real life engine rpm) of 7000, divide\
      \ by 60, then multiply by 2 PI.  Like so:\n\n(7000/60)*6.2831853\n\nthis yields\
      \ 733.038285 as the correct rpm\n\nbNetNotify=true is prolly the most critical\
      \ thing needed for this class to work online/lan\n\nI've got a lot of changes\
      \ that need to be made to this class, so be patient.  Additions include, properly\
      \ calculating wheel torque if the wheel is powered or not, better collisions\
      \ with walls(currently if you hit a wall flat at 300 mph the vehicle just stops\
      \ and takes no damage), available auto transmision, ...\n\n==Related Topics==\n\
      * [[Legacy:Vehicles|Vehicles]] &ndash; Main topics for Vehicles.\n* [[Legacy:Vehicle|Vehicle]]\
      \ &ndash; Parent class for all vehicles and turrets.\n** [[Legacy:SVehicle|SVehicle]]\n\
      *** [[Legacy:ONSVehicle|ONSVehicle]]\n**** [[Legacy:ONSWheeledCraft|ONSWheeledCraft]]\n\
      * [[Legacy:Making Mods|Making Mods]]\n\n==Discussion==\n\n'''Graphik:''' Very\
      \ nice idea, but a bit unsuited for an FPS, more for a racing game like UnWheel.\
      \ It seems to me that Epic made sure that the vehicles were as \"dumbed down\"\
      \ as possible to keep the focus on fragging people with a vehicle rather than\
      \ the minutia of driving one. I recommend sending this in to [http://unwheel.beyondunreal.com/\
      \ UnWheel] when you're done. If they don't actually use it I'm sure they'd at\
      \ the very least find it interesting.\n\n'''CIpen:''' Accually I got a thumbs\
      \ up on that at the same time I created this page.  The bounds of this script\
      \ is almost limitless, as it would be easy to have say the tire blow out when\
      \ shot.  As soon as I get a free day I'll update this page with all the new\
      \ additions (infact that might be something good to do tonight).  The big change\
      \ is that I added the option for auto or stick control and the the power is\
      \ ditributed over the wheels that are powered.\n\n'''Foxpaw:''' Why do you divide\
      \ by 60 when converting rotations per minute to radians per minute? The radians\
      \ per minute should be greater than the roatations per minute, as there's more\
      \ than one radian per rotation. Or is that supposed to say, radians per second?\n\
      \n'''CIpen:''' Yes, you pointed out a typo :D.  Yes, it should say radians per\
      \ second.  Yet your own message has typos, it's not rotations per minute, but\
      \ revolutions per minute. :)\n\n'''Foxpaw:''' Err, ehm, well, I guess that depends\
      \ on where you measure it from. I'd measure it from the flywheel which definately\
      \ rotates. I suppose some parts of the crankshaft do revolve though, so either\
      \ could be correct.\n\n----\n\n'''Zxanphorian:''' WOW, that is a lot of scriptage\
      \ there! I have an idea, to make it randomly stall :B\n\n----\n\n'''CIpen:'''\
      \  Ya, there are a lot of cool possibilities with this class.  You could attach\
      \ a model to the wheel bone, add another bone for disk brakes (to attach a disk\
      \ brake mesh to that turns when the wheels turn), make the engine blow up if\
      \ you downgear and the engine rpm goes to high, have an axle break, have more\
      \ wheel slip functions for different traction of different surfaces...     any\
      \ number of things....\n\n'''OlympusMons:''' I would have to agree CIpen. Has\
      \ anyone given any thought to making a proper automatic car you know the manual\
      \ automatic ones. :S Like what mafia did. I havent really had time to look through\
      \ all this code although I'd like to, I was just wondering if all of this is\
      \ actually needed to make a manual shift car or if there are other features\
      \ which have been added through all of this script. Actually another cool thing\
      \ to do would be to make a proper 4wd manual shift. Hmm!\n\n'''CIpen:'''  Good!\
      \ Lets get to the meat!  The first thing you need to know is that the function\
      \ UpdateVehicle() is somehow tied to native code.  To see this all you need\
      \ to do is log the DeltaTime from inside the Tick() function and from inside\
      \ UpdateVehicle() function.  You should see that UpdateVehicle() always has\
      \ the same DeltaTime so matter what your FPS is (at least this is what I remember\
      \ it being when I tested it).\n\nThe next serious thing is that, unless you\
      \ do your own wheel calculations, you'll have to build around the SVehicleWheel\
      \ variables that are calculated each frame.  It's both good and bad I guess.\
      \  Take a minute to thing about this:  below is the line that calculates the\
      \ GripTorque.\n\n<uscript>\nGripTorque = FTScale * Wheels[i].WheelRadius * Wheels[i].TireLoad\
      \ * WheelLongFrictionScale[0] * InterpCurveEval(Wheels[i].LongFrictionFunc,\
      \ Abs(Wheels[i].SlipVel));\n\n</uscript>\n\nNow, lets say we want to be the\
      \ biggest uscript hot shot around, you might change this line to look like this:\n\
      \n<uscript>\n\nif(bPlayerIsOnHood)\n     GripTorque = FTScale * Wheels[i].WheelRadius\
      \ * (Wheels[i].TireLoad + PlayerMass) * WheelLongFrictionScale[0] * InterpCurveEval(Wheels[i].LongFrictionFunc,\
      \ Abs(Wheels[i].SlipVel));\nelse\n     GripTorque = FTScale * Wheels[i].WheelRadius\
      \ * Wheels[i].TireLoad * WheelLongFrictionScale[0] * InterpCurveEval(Wheels[i].LongFrictionFunc,\
      \ Abs(Wheels[i].SlipVel));\n\n</uscript>\n\nThus simulating player weight on\
      \ the car(more or less).  That is after you do some stuff to get if the player\
      \ is on the vehicle or not.\n\nbtw I just updated it UpdateVehicle() because\
      \ it was far behind.\n\n'''Tarquin:''' I moved this back to its original name,\
      \ as the class name didn't seem very descriptive.\n\n'''WinterHummer:''' Can\
      \ someong give me a good scorpion subclass of this for me and other lazy people?\n\
      \n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 5316
name: "Legacy:Manual Shift Car"
revision:
  revid: 5316
  parentid: 5318
  user: "WinterHummer"
  timestamp: 1148080704.000000000
  comment: "Asked a question"
timestamp: 1668786126.361528000
