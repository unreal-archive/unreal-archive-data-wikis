---
parse:
  title: "Legacy:UTExporter"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Download\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Download</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Description\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Description</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-3\"><a href=\"#HowTo\"><span class=\"tocnumber\"\
      >3</span> <span class=\"toctext\">HowTo</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-4\"><a href=\"#Downside_:.28\"><span class=\"tocnumber\">4</span>\
      \ <span class=\"toctext\">Downside&#160;:(</span></a></li>\n</ul>\n</div>\n\
      <p></p>\n<h2><span class=\"mw-headline\" id=\"Download\">Download</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UTExporter?section=1\" title=\"Edit section: Download\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li><a rel=\"nofollow\" class=\"external text\" href=\"http://dl.fileplanet.com/dl/dl.asp?planetunreal/unreal-x/utilities/utexporter.zip\"\
      >3DSMax 3 Exporter plugin for UT</a></li>\n</ul>\n<h2><span class=\"mw-headline\"\
      \ id=\"Description\">Description</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UTExporter?section=2\"\
      \ title=\"Edit section: Description\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This <a href=\"/Legacy:3D_Studio_Max\" title=\"Legacy:3D\
      \ Studio Max\">3D Studio Max</a> 3 plugin allows you to export an animated max\
      \ file into the unreal _d.3d and _a.3d format for import into the game</p>\n\
      <h2><span class=\"mw-headline\" id=\"HowTo\">HowTo</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UTExporter?section=3\"\
      \ title=\"Edit section: HowTo\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Having used the 3ds2unr utility for generating first\
      \ person models of animated weapons it became quite a tedious task to create\
      \ the snapshots of each frame necessary. My first person weapon models contain\
      \ hands and to animate them I use bones and keep the hands and gun as seperate\
      \ max objects. After creating the snaphots of each animation frame I had to\
      \ go through each frame and attach all the objects together into a single mesh\
      \ before being able to export to 3ds format for 3ds2unr to process.</p>\n<p>This\
      \ plugin takes away all that (as long as you follow a few simple requirements\
      \ for the scene).</p>\n<p>From the animated max file I was able to simply export\
      \ a definable number of frames to a _d.3d file. The plugin creates the _a.3d\
      \ file automatically. It is also possible to append animation frames, so you\
      \ can have a seperate max file for each animation and export to the same _d.3d\
      \ file.</p>\n<p>The pre-requirements for the max file are:</p>\n<ul>\n<li>all\
      \ objects that should not be exported should be prefixed with an&#160;! (i.e.\
      \ bones, any dummy objects etc. Only the meshes are required.)</li>\n<li>there\
      \ should be only 1 Multi/Sub Object material for the scene named \"skin\". Each\
      \ sub-material required on this should be named \"skin0\" through to \"skin9\"\
      .</li>\n<li>each seperate object that has a unique skin should have a matching\
      \ material ID for all it's faces (e.g. my meshes have 2 arms and a gun. Each\
      \ arm has the same material, the gun has a second. Therefore my Multi material\
      \ has 2 sub-materials one for the arms the second for the gun. My meshes are\
      \ then set up so that both arms have a material ID of 1 and the gun is set to\
      \ 2.) Polys assigned an ID named \"skinN\" would translate to whatever \"NUM=N\"\
      \ represents in the \"MESHMAP SETTEXTURE\" #exec statement during import, and\
      \ MultiSkins[N] in script. Note that UT can only support up to 8 MultiSkins.</li>\n\
      <li>thats it&#160;:)</li>\n</ul>\n<p>The plugin creates all the snapshot frames\
      \ for you and combines all objects to export into a single mesh.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Downside_:.28\">Downside&#160;:(</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UTExporter?section=4\"\
      \ title=\"Edit section: Downside\_:(\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The only minor problem I have found is that the plugin\
      \ does not generate any uscript. So you do have to know a bit about the #exec\
      \ statements</p>\n<p>The main tricky one is:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co2\">#exec MESHMAP SCALE MESHMAP=mymeshmap\
      \  X=0.05 Y=0.05 Z=0.1</span></pre></div>\n</div>\n<p>I don't know what affects\
      \ the values that should be used here. The way around it I found is:</p>\n<p>I\
      \ have created a 2 hands template with the players hands set up complete with\
      \ bones and ready to go. I also have each modelled weapon in it's own max file.\
      \ I then use 3ds2unr to create the 3rd person and pickup view mesh from the\
      \ static max weapon scene. This generates a uc file with the correct values.\
      \ I then create a new max file for the first person view merging the two hand\
      \ template and weapon together for animating. Finally I can then grab the values\
      \ from the earlier uc file generated by 3ds2unr to use for the first person\
      \ view weapon code.</p>\n<p>There is a downside to this in that the first person\
      \ view of the weapon can be a lot more complex than the third person since unseen\
      \ polys can be deleted so sometimes you may have different models for first\
      \ person and 3rd person views.</p>\n<p>For static scenes 3ds2unr is dead easy\
      \ to use so it shouldn't pose too much of a problem to use it on the high detail\
      \ weapon model just to get the script values.</p>\n<p><b>Wang:</b> This is a\
      \ first rambling draft. When I find the time I'll write it up properly with\
      \ some piccies where they would be helpful</p>\n<p><b>Wang:</b> Well, I've now\
      \ had time to push this exporter a little harder. My next first person weapon\
      \ model had more parts (for animation and texture effects) in the scene. UTExporter\
      \ barfed. It might have been a problem with the scene but due to no error messages\
      \ or any sign of a failure I don't know. It appeared to work fine but the output\
      \ produced all manner of errors when imported into a script file. Missing meshmaps,\
      \ missing sequences and so on. So I went down the manual route of using 3ds2unr.\
      \ It took a few hours but from the same scene I achieved the finished product.</p>\n\
      <p>So basically, UTExporter can be a great help but there are times when good\
      \ old 3ds2unr has to come to the rescue.(<a href=\"/Legacy:3D_Studio_Max_Weapon_Modeling_And_Import\"\
      \ title=\"Legacy:3D Studio Max Weapon Modeling And Import\">3D Studio Max Weapon\
      \ Modeling And Import</a>)</p>\n<p><b>dushnok:</b> UTExporter doesn't work under\
      \ max5... I found the attach process after the capture being the most tedious\
      \ task, but a script can do it . You could try to get the AttachSelection.ms\
      \ script, it's in the zip <a rel=\"nofollow\" class=\"external free\" href=\"\
      http://www.blur.com/Tech/zip/bspack_r42.zip\">http://www.blur.com/Tech/zip/bspack_r42.zip</a>\
      \ then open and add those lines at the start of the script</p>\n<pre>for i=0\
      \ to 99 do\n(\nv=i as string\nvv=\"$*\"+v\nif i&lt;10 then vv=\"$*0\"+v\nnono=vv\
      \ as string\nobj=execute(nono)\nselect obj\n</pre>\n<p>also add a ) at the end\
      \ (the loop englobes the whole script) . The modified script will attach the\
      \ mesh sharing a same suffix (from 00 to 99)</p>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.040 seconds\nReal time usage: 0.095 seconds\nPreprocessor\
      \ visited node count: 17/1000000\nPreprocessor generated node count: 40/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3343-0!*!0!!en!*!*\
      \ and timestamp 20221118154640 and revision id 8634\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:3D Studio Max Weapon Modeling And Import"
  - ns: 100
    exists: true
    name: "Legacy:3D Studio Max"
  templates: []
  images: []
  externallinks:
  - "http://dl.fileplanet.com/dl/dl.asp?planetunreal/unreal-x/utilities/utexporter.zip"
  - "http://www.blur.com/Tech/zip/bspack_r42.zip"
  sections:
  - toclevel: 1
    level: "2"
    line: "Download"
    number: "1"
    index: "1"
    fromtitle: "Legacy:UTExporter"
    byteoffset: 0
    anchor: "Download"
  - toclevel: 1
    level: "2"
    line: "Description"
    number: "2"
    index: "2"
    fromtitle: "Legacy:UTExporter"
    byteoffset: 133
    anchor: "Description"
  - toclevel: 1
    level: "2"
    line: "HowTo"
    number: "3"
    index: "3"
    fromtitle: "Legacy:UTExporter"
    byteoffset: 311
    anchor: "HowTo"
  - toclevel: 1
    level: "2"
    line: "Downside :("
    number: "4"
    index: "4"
    fromtitle: "Legacy:UTExporter"
    byteoffset: 2269
    anchor: "Downside_:.28"
  displaytitle: "Legacy:UTExporter"
  iwlinks: []
  wikitext:
    text: "==Download ==\n* [http://dl.fileplanet.com/dl/dl.asp?planetunreal/unreal-x/utilities/utexporter.zip\
      \ 3DSMax 3 Exporter plugin for UT]\n\n==Description ==\n\nThis [[Legacy:3D Studio\
      \ Max|3D Studio Max]] 3 plugin allows you to export an animated max file into\
      \ the unreal _d.3d and _a.3d format for import into the game\n\n==HowTo ==\n\
      \nHaving used the 3ds2unr utility for generating first person models of animated\
      \ weapons it became quite a tedious task to create the snapshots of each frame\
      \ necessary. My first person weapon models contain hands and to animate them\
      \ I use bones and keep the hands and gun as seperate max objects. After creating\
      \ the snaphots of each animation frame I had to go through each frame and attach\
      \ all the objects together into a single mesh before being able to export to\
      \ 3ds format for 3ds2unr to process.\n\nThis plugin takes away all that (as\
      \ long as you follow a few simple requirements for the scene).\n\nFrom the animated\
      \ max file I was able to simply export a definable number of frames to a _d.3d\
      \ file. The plugin creates the _a.3d file automatically. It is also possible\
      \ to append animation frames, so you can have a seperate max file for each animation\
      \ and export to the same _d.3d file.\n\nThe pre-requirements for the max file\
      \ are:\n* all objects that should not be exported should be prefixed with an\
      \ ! (i.e. bones, any dummy objects etc. Only the meshes are required.)\n* there\
      \ should be only 1 Multi/Sub Object material for the scene named \"skin\". Each\
      \ sub-material required on this should be named \"skin0\" through to \"skin9\"\
      .\n* each seperate object that has a unique skin should have a matching material\
      \ ID for all it's faces (e.g. my meshes have 2 arms and a gun. Each arm has\
      \ the same material, the gun has a second. Therefore my Multi material has 2\
      \ sub-materials one for the arms the second for the gun. My meshes are then\
      \ set up so that both arms have a material ID of 1 and the gun is set to 2.)\
      \  Polys assigned an ID named \"skinN\" would translate to whatever \"NUM=N\"\
      \ represents in the \"MESHMAP SETTEXTURE\" #exec statement during import, and\
      \ MultiSkins[N] in script.  Note that UT can only support up to 8 MultiSkins.\n\
      * thats it :)\n\nThe plugin creates all the snapshot frames for you and combines\
      \ all objects to export into a single mesh.\n\n==Downside :( ==\n\nThe only\
      \ minor problem I have found is that the plugin does not generate any uscript.\
      \ So you do have to know a bit about the #exec statements\n\nThe main tricky\
      \ one is:\n\n<uscript>\n#exec MESHMAP SCALE MESHMAP=mymeshmap  X=0.05 Y=0.05\
      \ Z=0.1\n</uscript>\n\nI don't know what affects the values that should be used\
      \ here. The way around it I found is:\n\nI have created a 2 hands template with\
      \ the players hands set up complete with bones and ready to go. I also have\
      \ each modelled weapon in it's own max file. I then use 3ds2unr to create the\
      \ 3rd person and pickup view mesh from the static max weapon scene. This generates\
      \ a uc file with the correct values. I then create a new max file for the first\
      \ person view merging the two hand template and weapon together for animating.\
      \ Finally I can then grab the values from the earlier uc file generated by 3ds2unr\
      \ to use for the first person view weapon code.\n\nThere is a downside to this\
      \ in that the first person view of the weapon can be a lot more complex than\
      \ the third person since unseen polys can be deleted so sometimes you may have\
      \ different models for first person and 3rd person views.\n\nFor static scenes\
      \ 3ds2unr is dead easy to use so it shouldn't pose too much of a problem to\
      \ use it on the high detail weapon model just to get the script values.\n\n\
      '''Wang:'''  This is a first rambling draft. When I find the time I'll write\
      \ it up properly with some piccies where they would be helpful\n\n'''Wang:'''\
      \  Well, I've now had time to push this exporter a little harder. My next first\
      \ person weapon model had more parts (for animation and texture effects) in\
      \ the scene. UTExporter barfed. It might have been a problem with the scene\
      \ but due to no error messages or any sign of a failure I don't know. It appeared\
      \ to work fine but the output produced all manner of errors when imported into\
      \ a script file. Missing meshmaps, missing sequences and so on. So I went down\
      \ the manual route of using 3ds2unr. It took a few hours but from the same scene\
      \ I achieved the finished product.\n\nSo basically, UTExporter can be a great\
      \ help but there are times when good old 3ds2unr has to come to the rescue.([[Legacy:3D\
      \ Studio Max Weapon Modeling And Import|3D Studio Max Weapon Modeling And Import]])\n\
      \n'''dushnok:''' UTExporter doesn't work under max5... I found the attach process\
      \ after the capture being the most tedious task, but a script can do it . You\
      \ could try to get the AttachSelection.ms script, it's in the zip http://www.blur.com/Tech/zip/bspack_r42.zip\
      \ then open and add those lines at the start of the script\n for i=0 to 99 do\n\
      \ (\n v=i as string\n vv=\"$*\"+v\n if i<10 then vv=\"$*0\"+v\n nono=vv as string\n\
      \ obj=execute(nono)\n select obj\n\nalso add a ) at the end (the loop englobes\
      \ the whole script) . The modified script will attach the mesh sharing a same\
      \ suffix (from 00 to 99)"
  properties: []
  revId: 8634
name: "Legacy:UTExporter"
revision:
  revid: 8634
  parentid: 8635
  user: "Dushnok"
  timestamp: 1076023803.000000000
  comment: "*"
timestamp: 1668786324.532074000
