---
parse:
  title: "Legacy:Event Triggers"
  text:
    text: "<p>There is some low-level link between the key bindings and the UI events.\
      \ For example, in User.ini, under [Engine.input], we have the following line:</p>\n\
      <pre>Escape=SendEvent ShowMenus\n</pre>\n<p>This states that pressing escape\
      \ will trigger ShowMenus. This relates to the following in U2Menus.ui</p>\n\
      <pre>[Root]\nClass=MultiStateComponent\nState=NonMain\nState=Main\nTransition=ResetMenus,0,0,0,NULL\n\
      <b>Transition=ShowMenus,1,1,0,NULL</b>\nTriggerEvent=0,0.0,CodeMonkey,UnPause\n\
      TriggerEvent=1,0.0,CodeMonkey,Pause\nTriggerEvent=1,0.0,Event,MenuBackgroundBlurry.FadeOut\n\
      TriggerEvent=1,0.0,Event,MainMenuBackgroundLarge.Grow\nTriggerEvent=1,0.0,Event,MainMenuBackgroundSmall.Show\n\
      DrawOrder=99\nLocalize=true\n</pre>\n<p>The line:</p>\n<pre>Transition=ShowMenus,1,1,0,NULL\n\
      </pre>\n<p>defines this particular event.</p>\n<p>I tested this by creating\
      \ a useless event, which does the same thing as notifying you of a new objective.\
      \ In U2HUD.ui, this defines the ObjectiveNotify component:</p>\n<pre>[ObjectiveNotify]\n\
      Class=MultiStateComponent\nState=NULL\nState=ObjectiveNotifyText\nTransition=NewObjective,1,0,4.0,ObjectiveNotifyText:NewObjective\n\
      <b>Transition=Honestly,1,0,4.0,ObjectiveNotifyText:Honestly</b>\nTransition=ObjectiveCompleted,1,0,4.0,ObjectiveNotifyText:ObjectiveCompleted\n\
      Transition=ObjectiveFailed,1,0,4.0,ObjectiveNotifyText:ObjectiveFailed\nTweenLocation=false\n\
      TweenAlpha=true\nDrawOrder=1\n</pre>\n<p>I added the line in bold here. Then,\
      \ I entered the corresponding keybinding in User.ini:</p>\n<pre>F3=SendEvent\
      \ Honestly\n</pre>\n<p>Finally, in U2HUD.int, the text is defined:</p>\n<pre>[General]\n\
      AutoTurret=Auto Turret\nRocketTurret=Rocket Turret\nFieldGenerator=Field Generator\n\
      ProximitySensor=Proximity Sensor\nXMP_Unknown=Unknown\nObjectives=OBJECTIVES\n\
      NewObjective=F4 - New Objective\n<b>Honestly=Honestly!</b>\nObjectiveCompleted=F4\
      \ - Objective Completed\nObjectiveFailed=F4 - Objective Failed\nEndGame_LoadMenu=Load\
      \ menu\nEndGame_QuickLoad=Quick load\nEndGame_RestartLevel=Restart\nEndGame_Quit=QUIT\n\
      Confirmation_Ok=Ok\nConfirmation_Cancel=Cancel\nConfirmation_QuickLoad=REALLY\
      \ LOAD?\n</pre>\n<p>Thus, when I press F3 during the game, \"Honestly!\" appears\
      \ in the bottom left corner of the screen.</p>\n<p>Normally, Objective notify\
      \ events will be triggered from UnrealScript - the U2GameInfo class, in function\
      \ UpdateObjective()</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw2\">switch</span><span class=\"br0\">(</span>Status<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n  <span class=\"kw2\">case</span> OBJECTIVE_Incomplete:\
      \ <span class=\"kw1\">class</span><span class=\"st0\">'UIConsole'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">SendEvent</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"NewObjective\"</span><span class=\"br0\"\
      >)</span>; <span class=\"kw2\">break</span>;\n  <span class=\"kw2\">case</span>\
      \ OBJECTIVE_Completed: <span class=\"kw1\">class</span><span class=\"st0\">'UIConsole'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">SendEvent</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"ObjectiveCompleted\"</span><span class=\"\
      br0\">)</span>; <span class=\"kw2\">break</span>;\n  <span class=\"kw2\">case</span>\
      \ OBJECTIVE_Failed: <span class=\"kw1\">class</span><span class=\"st0\">'UIConsole'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">SendEvent</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"ObjectiveFailed\"</span><span class=\"br0\"\
      >)</span>; <span class=\"kw2\">break</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>This acheives exactly the same result, and the same native function\
      \ must be called, if not from UnrealScript, in the first case I described.</p>\n\
      <p><b>MythOpus:</b> I believe <a href=\"/edit/Legacy:EventTriggers?redlink=1\"\
      \ class=\"new\" title=\"Legacy:EventTriggers (page does not exist)\">EventTriggers</a>\
      \ are only used in Unreal 2 am I right?</p>\n\n<!-- \nNewPP limit report\nCPU\
      \ time usage: 0.036 seconds\nReal time usage: 0.037 seconds\nPreprocessor visited\
      \ node count: 4/1000000\nPreprocessor generated node count: 24/1000000\nPost‐\
      expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1163-0!*!0!*!*!*!*\
      \ and timestamp 20221118192503 and revision id 3043\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: false
    name: "Legacy:EventTriggers"
  templates: []
  images: []
  externallinks: []
  sections: []
  displaytitle: "Legacy:Event Triggers"
  iwlinks: []
  wikitext:
    text: "There is some low-level link between the key bindings and the UI events.\
      \ For example, in User.ini, under [Engine.input], we have the following line:\n\
      \n Escape=SendEvent ShowMenus\n\nThis states that pressing escape will trigger\
      \ ShowMenus. This relates to the following in U2Menus.ui\n\n [Root]\n Class=MultiStateComponent\n\
      \ State=NonMain\n State=Main\n Transition=ResetMenus,0,0,0,NULL\n '''Transition=ShowMenus,1,1,0,NULL'''\n\
      \ TriggerEvent=0,0.0,CodeMonkey,UnPause\n TriggerEvent=1,0.0,CodeMonkey,Pause\n\
      \ TriggerEvent=1,0.0,Event,MenuBackgroundBlurry.FadeOut\n TriggerEvent=1,0.0,Event,MainMenuBackgroundLarge.Grow\n\
      \ TriggerEvent=1,0.0,Event,MainMenuBackgroundSmall.Show\n DrawOrder=99\n Localize=true\n\
      \nThe line:\n\n Transition=ShowMenus,1,1,0,NULL\n\ndefines this particular event.\n\
      \nI tested this by creating a useless event, which does the same thing as notifying\
      \ you of a new objective. In U2HUD.ui, this defines the ObjectiveNotify component:\n\
      \n [ObjectiveNotify]\n Class=MultiStateComponent\n State=NULL\n State=ObjectiveNotifyText\n\
      \ Transition=NewObjective,1,0,4.0,ObjectiveNotifyText:NewObjective\n '''Transition=Honestly,1,0,4.0,ObjectiveNotifyText:Honestly'''\n\
      \ Transition=ObjectiveCompleted,1,0,4.0,ObjectiveNotifyText:ObjectiveCompleted\n\
      \ Transition=ObjectiveFailed,1,0,4.0,ObjectiveNotifyText:ObjectiveFailed\n TweenLocation=false\n\
      \ TweenAlpha=true\n DrawOrder=1\n\nI added the line in bold here. Then, I entered\
      \ the corresponding keybinding in User.ini:\n\n F3=SendEvent Honestly\n\nFinally,\
      \ in U2HUD.int, the text is defined:\n\n [General]\n AutoTurret=Auto Turret\n\
      \ RocketTurret=Rocket Turret\n FieldGenerator=Field Generator\n ProximitySensor=Proximity\
      \ Sensor\n XMP_Unknown=Unknown\n Objectives=OBJECTIVES\n NewObjective=F4 - New\
      \ Objective\n '''Honestly=Honestly!'''\n ObjectiveCompleted=F4 - Objective Completed\n\
      \ ObjectiveFailed=F4 - Objective Failed\n EndGame_LoadMenu=Load menu\n EndGame_QuickLoad=Quick\
      \ load\n EndGame_RestartLevel=Restart\n EndGame_Quit=QUIT\n Confirmation_Ok=Ok\n\
      \ Confirmation_Cancel=Cancel\n Confirmation_QuickLoad=REALLY LOAD?\n\nThus,\
      \ when I press F3 during the game, \"Honestly!\" appears in the bottom left\
      \ corner of the screen.\n\nNormally, Objective notify events will be triggered\
      \ from UnrealScript - the U2GameInfo class, in function UpdateObjective()\n\n\
      <uscript>\nswitch(Status)\n{\n  case OBJECTIVE_Incomplete: class'UIConsole'.static.SendEvent(\"\
      NewObjective\"); break;\n  case OBJECTIVE_Completed: class'UIConsole'.static.SendEvent(\"\
      ObjectiveCompleted\"); break;\n  case OBJECTIVE_Failed: class'UIConsole'.static.SendEvent(\"\
      ObjectiveFailed\"); break;\n}\n</uscript>\n\nThis acheives exactly the same\
      \ result, and the same native function must be called, if not from UnrealScript,\
      \ in the first case I described.\n\n'''MythOpus:''' I believe [[Legacy:EventTriggers|EventTriggers]]\
      \ are only used in Unreal 2 am I right?"
  properties: []
  revId: 3043
name: "Legacy:Event Triggers"
revision:
  revid: 3043
  parentid: 3044
  user: "MythOpus"
  timestamp: 1063802657.000000000
  comment: "U2"
timestamp: 1668799282.594098000
