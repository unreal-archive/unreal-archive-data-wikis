---
parse:
  title: "Talk:Types"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Strings_and_replication\">Strings\
      \ and replication</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Talk:Types?section=1\" title=\"Edit section: Strings\
      \ and replication\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>I have just done some testing in UT2004 (ie Unreal Engine 2.5) concerning\
      \ Strings and replication. My test included a server to client replicated string\
      \ variable I filled on the server in PostBeginPlay and replicated (reliably)\
      \ if bNetInitial. I output its length client-side in PostNetBeginPlay and each\
      \ Tick.</p>\n<p>Strings longer than 390 characters took one Tick before they\
      \ were replicated completely, ie at PostNetBeginPlay, the client-side length\
      \ was still zero, in the first Tick it had the correct length.</p>\n<p>Strings\
      \ longer than 496 characters did not get replicated at all, not even truncated.\
      \ The client-side length remained zero.</p>\n<p>If anybody can confirm or clarify\
      \ this, this might be useful information in the String section.</p>\n<p>--<a\
      \ href=\"/User:Pd\" title=\"User:Pd\">Pd</a> 06:36, 5 May 2011 (UTC)</p>\n<dl>\n\
      <dd>Strings with a length greater than 255 can not be replicated. --<a href=\"\
      /User:Eliot\" title=\"User:Eliot\">Eliot</a> 10:19, 5 May 2011 (UTC)\n<dl>\n\
      <dd>I expected something like that, but string up to 384 to 390 worked very\
      \ well for me, so that can't really be true. Or is that just the official statement\
      \ (similar to <i>UE3 doesn't support dynamic bool arrays</i> while in fact it\
      \ does)? --<a href=\"/User:Pd\" title=\"User:Pd\">Pd</a> 16:05, 5 May 2011 (UTC)</dd>\n\
      </dl>\n</dd>\n</dl>\n<dl>\n<dd>The reason for the observed behavior is that\
      \ any replicated variable (especially long strings and large structs) must fit\
      \ into a single packet in order to be replicated. UE does not split replication\
      \ bunches across packets. Either it fits or it won't replicate. The delay for\
      \ the 390 chars string is caused by the string not fitting into the initial\
      \ packet along with the other replicated data. It is replicated later in a separate\
      \ packet. That 496 chars string not being replicated at all is caused by the\
      \ same issue: The string won't even fit in a packet if nothing else is added\
      \ to it. The maximum packet size depends on <a href=\"http://en.wikipedia.org/wiki/Maximum_transmission_unit\"\
      \ class=\"extiw\" title=\"wp:Maximum transmission unit\">MTU</a> settings along\
      \ the route from your computer to the game server. The maximum Ethernet MTU\
      \ is 1500, but IPv4 typically operates on 576. That's the raw payload size of\
      \ the IP packet, i.e. UDP header, UE networking header data and the actual replicated\
      \ variable value need to fit into that. Note that there's actually no built-in\
      \ size limit for replicated values in the Unreal Engine. If MTU is large enough,\
      \ you could even replicate 1k char strings —<a href=\"/User:Wormbo\" title=\"\
      User:Wormbo\">Wormbo</a> 16:40, 5 May 2011 (UTC)</dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"hint_to_concatenate_strings\">hint to concatenate strings</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Talk:Types?section=2\" title=\"Edit section: hint to concatenate\
      \ strings\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Of course there may be more possibilities to concatenate strings than '@',\
      \ but please allow then a link to a page where handling of strings is described.\
      \ I was searching for the name of this operator (I know similar from other programming\
      \ languages) and started my search of course with \"string\". So at least a\
      \ link to string operations would be useful there. --<a href=\"/User:SeriousBarbie\"\
      \ title=\"User:SeriousBarbie\">SeriousBarbie</a> (<a href=\"/User_talk:SeriousBarbie\"\
      \ title=\"User talk:SeriousBarbie\">talk</a>) 11:13, 29 August 2015 (EDT)</p>\n\
      <p>Well, there is a dedicated <a href=\"/Operators\" title=\"Operators\">Operators</a>\
      \ page, and it is linked in the navigation box at the bottom of every UnrealScript\
      \ reference page. However, I agree that searching for \"string\" or \"string\
      \ operators\" should bring up more results than just the short string type description.\
      \ —<a href=\"/User:Wormbo\" title=\"User:Wormbo\">Wormbo</a> 14:22, 29 August\
      \ 2015 (EDT)</p>\n<dl>\n<dd><a rel=\"nofollow\" class=\"external text\" href=\"\
      http://wiki.beyondunreal.com/String?curid=5092&amp;diff=46203&amp;oldid=11776\"\
      >That</a> was the info I was looking for, thanks.&#160;:D --<a href=\"/User:SeriousBarbie\"\
      \ title=\"User:SeriousBarbie\">SeriousBarbie</a> (<a href=\"/User_talk:SeriousBarbie\"\
      \ title=\"User talk:SeriousBarbie\">talk</a>) 22:08, 30 August 2015 (EDT)</dd>\n\
      </dl>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.031 seconds\nReal time\
      \ usage: 0.032 seconds\nPreprocessor visited node count: 6/1000000\nPreprocessor\
      \ generated node count: 12/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:29260-0!*!0!!*!*!* and timestamp\
      \ 20221207061609 and revision id 46204\n -->\n"
  categories: []
  links:
  - ns: 3
    exists: true
    name: "User talk:SeriousBarbie"
  - ns: 2
    exists: true
    name: "User:Pd"
  - ns: 2
    exists: true
    name: "User:Wormbo"
  - ns: 2
    exists: true
    name: "User:Eliot"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 2
    exists: true
    name: "User:SeriousBarbie"
  templates: []
  images: []
  externallinks:
  - "http://wiki.beyondunreal.com/String?curid=5092&diff=46203&oldid=11776"
  sections:
  - toclevel: 1
    level: "2"
    line: "Strings and replication"
    number: "1"
    index: "1"
    fromtitle: "Talk:Types"
    byteoffset: 0
    anchor: "Strings_and_replication"
  - toclevel: 1
    level: "2"
    line: "hint to concatenate strings"
    number: "2"
    index: "2"
    fromtitle: "Talk:Types"
    byteoffset: 2346
    anchor: "hint_to_concatenate_strings"
  displaytitle: "Talk:Types"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Maximum_transmission_unit"
    name: "wp:Maximum transmission unit"
  wikitext:
    text: "==Strings and replication==\nI have just done some testing in UT2004 (ie\
      \ Unreal Engine 2.5) concerning Strings and replication. My test included a\
      \ server to client replicated string variable I filled on the server in PostBeginPlay\
      \ and replicated (reliably) if bNetInitial. I output its length client-side\
      \ in PostNetBeginPlay and each Tick.\n\nStrings longer than 390 characters took\
      \ one Tick before they were replicated completely, ie at PostNetBeginPlay, the\
      \ client-side length was still zero, in the first Tick it had the correct length.\n\
      \nStrings longer than 496 characters did not get replicated at all, not even\
      \ truncated. The client-side length remained zero.\n\nIf anybody can confirm\
      \ or clarify this, this might be useful information in the String section.\n\
      \n--[[User:Pd|Pd]] 06:36, 5 May 2011 (UTC)\n:Strings with a length greater than\
      \ 255 can not be replicated. --[[User:Eliot|Eliot]] 10:19, 5 May 2011 (UTC)\n\
      ::I expected something like that, but string up to 384 to 390 worked very well\
      \ for me, so that can't really be true. Or is that just the official statement\
      \ (similar to ''UE3 doesn't support dynamic bool arrays'' while in fact it does)?\
      \ --[[User:Pd|Pd]] 16:05, 5 May 2011 (UTC)\n\n:The reason for the observed behavior\
      \ is that any replicated variable (especially long strings and large structs)\
      \ must fit into a single packet in order to be replicated. UE does not split\
      \ replication bunches across packets. Either it fits or it won't replicate.\
      \ The delay for the 390 chars string is caused by the string not fitting into\
      \ the initial packet along with the other replicated data. It is replicated\
      \ later in a separate packet. That 496 chars string not being replicated at\
      \ all is caused by the same issue: The string won't even fit in a packet if\
      \ nothing else is added to it. The maximum packet size depends on [[wp:Maximum\
      \ transmission unit|MTU]] settings along the route from your computer to the\
      \ game server. The maximum Ethernet MTU is 1500, but IPv4 typically operates\
      \ on 576. That's the raw payload size of the IP packet, i.e. UDP header, UE\
      \ networking header data and the actual replicated variable value need to fit\
      \ into that. Note that there's actually no built-in size limit for replicated\
      \ values in the Unreal Engine. If MTU is large enough, you could even replicate\
      \ 1k char strings —[[User:Wormbo|Wormbo]] 16:40, 5 May 2011 (UTC)\n\n== hint\
      \ to concatenate strings ==\nOf course there may be more possibilities to concatenate\
      \ strings than '@', but please allow then a link to a page where handling of\
      \ strings is described. I was searching for the name of this operator (I know\
      \ similar from other programming languages) and started my search of course\
      \ with \"string\". So at least a link to string operations would be useful there.\
      \ --[[User:SeriousBarbie|SeriousBarbie]] ([[User talk:SeriousBarbie|talk]])\
      \ 11:13, 29 August 2015 (EDT)\n\nWell, there is a dedicated [[Operators]] page,\
      \ and it is linked in the navigation box at the bottom of every UnrealScript\
      \ reference page. However, I agree that searching for \"string\" or \"string\
      \ operators\" should bring up more results than just the short string type description.\
      \ —[[User:Wormbo|Wormbo]] 14:22, 29 August 2015 (EDT)\n:[http://wiki.beyondunreal.com/String?curid=5092&diff=46203&oldid=11776\
      \ That] was the info I was looking for, thanks. :D --[[User:SeriousBarbie|SeriousBarbie]]\
      \ ([[User talk:SeriousBarbie|talk]]) 22:08, 30 August 2015 (EDT)"
  properties: []
  revId: 46204
name: "Talk:Types"
revision:
  revid: 46204
  parentid: 46199
  user: "SeriousBarbie"
  timestamp: 1440986897.000000000
  comment: "hint to concatenate strings"
timestamp: 1670393770.056451000
