---
parse:
  title: "Legacy:Trilinear Filtering"
  text:
    text: "<p>Trilinear texture filtering is a technique used when applying different\
      \ <a href=\"http://en.wikipedia.org/wiki/mipmap\" class=\"extiw\" title=\"wikipedia:mipmap\"\
      >Wikipedia:mipmap</a> levels to a surface in a 3d world. When <a href=\"/Legacy:Bilinear_Filtering\"\
      \ title=\"Legacy:Bilinear Filtering\">Bilinear Filtering</a> is used, this only\
      \ filters within each mip level itself, not between them, as shown in the following\
      \ image:</p>\n<div class=\"center\">\n<div class=\"floatnone\"><a href=\"/File:Legacy_bilinear_mip_example.png\"\
      \ class=\"image\" title=\"Each mip level is displayed as a solid colour.  Bilinear\
      \ filtering does not filter between different mip levels, which results in noticable\
      \ lines where the mip level changes.\"><img alt=\"Each mip level is displayed\
      \ as a solid colour.  Bilinear filtering does not filter between different mip\
      \ levels, which results in noticable lines where the mip level changes.\" src=\"\
      /w/images/Legacy_bilinear_mip_example.png\" width=\"200\" height=\"200\" /></a></div>\n\
      </div>\n<p>This effect becomes vicious when the viewpoint moves, as these lines\
      \ remain a fixed distance away from the viewpoint - they appear to \"move\"\
      \ as you move.</p>\n<p>The solution? Simly apply a linear filter between the\
      \ mip levels after they have been applied, and you have trilinear filtering.\
      \ The lines are gone, as now the mips blend smoothly together:</p>\n<div class=\"\
      center\">\n<div class=\"floatnone\"><a href=\"/File:Legacy_trilinear_mip_example.png\"\
      \ class=\"image\" title=\"Trilinear filtering eliminates the lines between mip\
      \ levels resulting in a smooth transition.\"><img alt=\"Trilinear filtering\
      \ eliminates the lines between mip levels resulting in a smooth transition.\"\
      \ src=\"/w/images/Legacy_trilinear_mip_example.png\" width=\"200\" height=\"\
      200\" /></a></div>\n</div>\n<hr />\n<p><b>Draconx:</b> The images suck I know...\
      \ just created them in a few seconds with photoshop. Hopefully they make enough\
      \ sense.</p>\n<p><b>Tarquin:</b> I wonder whether it might be better to create\
      \ articles on Wikipedia for concepts that aren't specific to the Unreal Engine?\
      \ See <a href=\"http://en.wikipedia.org/wiki/Trilinear_filtering\" class=\"\
      extiw\" title=\"wikipedia:Trilinear filtering\">Wikipedia:Trilinear filtering</a>\
      \ – perhaps you'd like to incorporate your material into that article and upload\
      \ your images there? We can easily link to Wikipedia with Interwiki links, and\
      \ you'd get a wider audience&#160;:) The pictures seem pretty clear to me, by\
      \ the way, though the black lines confused me, since it's not those that are\
      \ the problem. Even better would be a screenshots from a 3d game that's open\
      \ source (for the purposes of Wikipedia)</p>\n<p><b>Draconx:</b> True. I was\
      \ just adding some content for pages that I saw links to but didnt exist yet.\
      \ Wikipedia already has most if not all of the stuff I talked about (except\
      \ the images). And those black lines on the images are *supposed* to make it\
      \ look kinda eye-of-the-beholder style 1st person... but they probably fail.</p>\n\
      <p><b>Tarquin:</b> Actually, I see what you mean – without those black lines,\
      \ it would look 2-dimensional, like some concentric squares.</p>\n<p><b>Switch`:</b>\
      \ The <i>firstcoloredmip &lt;param&gt;</i> console command will render each\
      \ mipmap with it's own color. To enable use non-negative number as param, to\
      \ disable use the command alone. It may not work in OpenGL.</p>\n<p>[[Image:Legacy_TRILINEAR_Off.png|]]\
      \ @inline@TRILINEAR_On</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.088\
      \ seconds\nReal time usage: 0.283 seconds\nPreprocessor visited node count:\
      \ 2/1000000\nPreprocessor generated node count: 12/1000000\nPost‐expand include\
      \ size: 19/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3255-0!*!0!*!*!5!*\
      \ and timestamp 20221118154851 and revision id 8446\n -->\n"
  categories:
  - sortkey: "Trilinear Filtering"
    name: "Legacy_Refactor_Me"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Bilinear Filtering"
  templates: []
  images:
  - "Legacy_bilinear_mip_example.png"
  - "Legacy_trilinear_mip_example.png"
  externallinks: []
  sections: []
  displaytitle: "Legacy:Trilinear Filtering"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/mipmap"
    name: "wikipedia:mipmap"
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/Trilinear_filtering"
    name: "wikipedia:Trilinear filtering"
  wikitext:
    text: "Trilinear texture filtering is a technique used when applying different\
      \ [[Wikipedia:mipmap]] levels to a surface in a 3d world.  When [[Legacy:Bilinear\
      \ Filtering|Bilinear Filtering]] is used, this only filters within each mip\
      \ level itself, not between them, as shown in the following image:\n\n[[Image:Legacy_bilinear_mip_example.png|center|Each\
      \ mip level is displayed as a solid colour.  Bilinear filtering does not filter\
      \ between different mip levels, which results in noticable lines where the mip\
      \ level changes.]]\n\nThis effect becomes vicious when the viewpoint moves,\
      \ as these lines remain a fixed distance away from the viewpoint - they appear\
      \ to \"move\" as you move.\n\nThe solution?  Simly apply a linear filter between\
      \ the mip levels after they have been applied, and you have trilinear filtering.\
      \  The lines are gone, as now the mips blend smoothly together:\n\n[[Image:Legacy_trilinear_mip_example.png|center|Trilinear\
      \ filtering eliminates the lines between mip levels resulting in a smooth transition.]]\n\
      \n----\n\n'''Draconx:''' The images suck I know... just created them in a few\
      \ seconds with photoshop.  Hopefully they make enough sense.\n\n'''Tarquin:'''\
      \ I wonder whether it might be better to create articles on Wikipedia for concepts\
      \ that aren't specific to the Unreal Engine? See [[Wikipedia:Trilinear filtering]]\
      \ &ndash; perhaps you'd like to incorporate your material into that article\
      \ and upload your images there? We can easily link to Wikipedia with Interwiki\
      \ links, and you'd get a wider audience :) The pictures seem pretty clear to\
      \ me, by the way, though the black lines confused me, since it's not those that\
      \ are the problem. Even better would be a screenshots from a 3d game that's\
      \ open source (for the purposes of Wikipedia)\n\n'''Draconx:''' True.  I was\
      \ just adding some content for pages that I saw links to but didnt exist yet.\
      \  Wikipedia already has most if not all of the stuff I talked about (except\
      \ the images).  And those black lines on the images are *supposed* to make it\
      \ look kinda eye-of-the-beholder style 1st person... but they probably fail.\n\
      \n'''Tarquin:''' Actually, I see what you mean &ndash; without those black lines,\
      \ it would look 2-dimensional, like some concentric squares.\n\n'''Switch`:'''\
      \ The ''firstcoloredmip <param>'' console command will render each mipmap with\
      \ it's own color. To enable use non-negative number as param, to disable use\
      \ the command alone. It may not work in OpenGL.\n\n[[Image:Legacy_TRILINEAR_Off.png|]]\
      \ @inline@TRILINEAR_On\n[[Category:Legacy Refactor Me|{{PAGENAME}}]]"
  properties: []
  revId: 8446
name: "Legacy:Trilinear Filtering"
revision:
  revid: 8446
  parentid: 8447
  user: "Dial-6096.wroclaw.dialog.net.pl"
  timestamp: 1119275651.000000000
  comment: "Example pics from UT2004"
timestamp: 1668786454.834876000
