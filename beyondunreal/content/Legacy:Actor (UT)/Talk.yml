---
parse:
  title: "Legacy:Actor (UT)/Talk"
  text:
    text: "<h4><span class=\"mw-headline\" id=\"subpages\">subpages</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Actor_(UT)/Talk?section=1\"\
      \ title=\"Edit section: subpages\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<dl>\n<dd>The principal groups in the Properties window\
      \ are not \"Actor Properties\" as in \"properties of all actors\", they are\
      \ properties of the class \"Actor\" which get inherited by all subclasses. This\
      \ is why they were subpages of \"Actor\". I realise this is coder mumbo-jumbo\
      \ and may be confusing to the mapper, and in fact is really of no interest to\
      \ the mapper, who just wants to look up what the properties mean.</dd>\n<dd>I'll\
      \ try and think of a way that uses logical page-names, but is also clear to\
      \ non-coders.</dd>\n</dl>\n<h4><span class=\"mw-headline\" id=\".22actor_classes.22_etc\"\
      >\"actor classes\" etc</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Actor_(UT)/Talk?section=2\" title=\"Edit section:\
      \ &quot;actor classes&quot; etc\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h4>\n<dl>\n<dd>\"Actor Classes\" was, I think, originally\
      \ meant to cover the browser window itself (details about saving stuff, importing,\
      \ etc). I used that name because (I think) that's what its title bar says in\
      \ UnrealEd, although in saying that I'm wide open for shooting because of \"\
      Surface Properties Window\".... urg.... Likewise, it's probably that if I made\
      \ an \"Actor Properties\" link it was meant to cover usage of that window itself,\
      \ explain how it works, etc. – <i>Tarquin</i></dd>\n<dd><i>If a title has multiple\
      \ logical subjects, I'm all for turning it into a summary page with links to\
      \ the various subjects</i> – <i>Aedis</i></dd>\n</dl>\n<hr />\n<p><i>Tarquin</i>:\
      \ OK, here's what I suggest:</p>\n<ul>\n<li>We put the property subpages back\
      \ under Actor, as technically they do belong there.</li>\n<li>Change \"Actor/Working\
      \ with Actors\" to \"Actors Overview\" so it shows up in the search list nicely.</li>\n\
      <li>On this \"Actors Overview\" page, we put a list of all the property groups,\
      \ and comment them, eg\n<ul>\n<li>\"Display: these properties relate to blah\
      \ blah\" (<i>Makes sense to me!</i> – <i>Aedis</i>)</li>\n</ul>\n</li>\n<li>Link\
      \ back to \"Actors Overview\" from all the properties subpages.</li>\n<li>Net\
      \ result: we get the Actor tech spec page and the \"Actor Overview\" page that's\
      \ more mapper- and n00b-oriented, both effectively working in parallel.</li>\n\
      </ul>\n<p><i>Mychaeel:</i> That sounds reasonable to me.</p>\n<dl>\n<dd><i>Indeed\
      \ I am confused by the above logic, but that doesn't bother me. It sounds like\
      \ there are different schools of thought at work here. One method is to organize\
      \ according to topic. Another method is to organize according to Unreal conventions.\
      \ I personally prefer topical organization, because it serves the material and\
      \ the learner as opposed to the tool that is being taught. For example, Tarquin's\
      \ statement above, \"as technically they do belong there\" sounds focused on\
      \ emulating the structure of UnrealScript instead of being focused on what is\
      \ most useful to a novice. Of course, links are only links – the way info is\
      \ organized on the pages has a much larger impact on the reader.</i> - <i>Aedis</i></dd>\n\
      <dd>Topical organization is best. The reason we want subpages for the properties\
      \ is that, to match all the other class technical pages, they should ALL be\
      \ on the page \"Actor\". Clearly, that's too much, so we're following a convention\
      \ that excessively long pages can get chopped into subpages.</dd>\n<dd>The site's\
      \ organization isn't created by page names, it's created by links. If we have\
      \ a page \"Actor Overview\", that's likely to be where novices go if they see\
      \ it in search results. We can also give it prominence in topic pages. I've\
      \ just realised I don't know which topic page should get a link to \"Actor Overview\"\
      . Hmmm... I really think we should resurrect <a href=\"/Legacy:Beginner_Topics\"\
      \ title=\"Legacy:Beginner Topics\">Beginner Topics</a>. Anyway, I'm off to make\
      \ the above changes. I'll spread links to AO liberally.&#160;:-) – <i>Tarquin</i></dd>\n\
      </dl>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.024 seconds\nReal time\
      \ usage: 0.025 seconds\nPreprocessor visited node count: 6/1000000\nPreprocessor\
      \ generated node count: 12/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:400-0!*!0!!*!*!* and timestamp\
      \ 20221118121331 and revision id 1336\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Beginner Topics"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "4"
    line: "subpages"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Actor_(UT)/Talk"
    byteoffset: 0
    anchor: "subpages"
  - toclevel: 1
    level: "4"
    line: "\"actor classes\" etc"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Actor_(UT)/Talk"
    byteoffset: 519
    anchor: ".22actor_classes.22_etc"
  displaytitle: "Legacy:Actor (UT)/Talk"
  iwlinks: []
  wikitext:
    text: "====subpages ====\n:The principal groups in the Properties window are not\
      \ \"Actor Properties\" as in \"properties of all actors\", they are properties\
      \ of the class \"Actor\" which get inherited by all subclasses. This is why\
      \ they were subpages of \"Actor\". I realise this is coder mumbo-jumbo and may\
      \ be confusing to the mapper, and in fact is really of no interest to the mapper,\
      \ who just wants to look up what the properties mean.\n: I'll try and think\
      \ of a way that uses logical page-names, but is also clear to non-coders.\n\n\
      ====\"actor classes\" etc ====\n: \"Actor Classes\" was, I think, originally\
      \ meant to cover the browser window itself (details about saving stuff, importing,\
      \ etc). I used that name because (I think) that's what its title bar says in\
      \ UnrealEd, although in saying that I'm wide open for shooting because of \"\
      Surface Properties Window\".... urg.... Likewise, it's probably that if I made\
      \ an \"Actor Properties\" link it was meant to cover usage of that window itself,\
      \ explain how it works, etc.  &ndash; ''Tarquin''\n: <i>If a title has multiple\
      \ logical subjects, I'm all for turning it into a summary page with links to\
      \ the various subjects</i> &ndash; ''Aedis''\n\n----\n\n''Tarquin'': OK, here's\
      \ what I suggest:\n\n* We put the property subpages back under Actor, as technically\
      \ they do belong there.\n* Change \"Actor/Working with Actors\" to \"Actors\
      \ Overview\" so it shows up in the search list nicely.\n* On this \"Actors Overview\"\
      \ page, we put a list of all the property groups, and comment them, eg\n** \"\
      Display: these properties relate to blah blah\"  (<i>Makes sense to me!</i>\
      \ &ndash; ''Aedis'')\n* Link back to \"Actors Overview\" from all the properties\
      \ subpages.\n* Net result: we get the Actor tech spec page and the \"Actor Overview\"\
      \ page that's more mapper- and n00b-oriented, both effectively working in parallel.\n\
      \n''Mychaeel:''  That sounds reasonable to me.\n: <i>Indeed I am confused by\
      \ the above logic, but that doesn't bother me.  It sounds like there are different\
      \ schools of thought at work here.  One method is to organize according to topic.\
      \  Another method is to organize according to Unreal conventions.  I personally\
      \ prefer topical organization, because it serves the material and the learner\
      \ as opposed to the tool that is being taught.  For example, Tarquin's statement\
      \ above, \"as technically they do belong there\" sounds focused on emulating\
      \ the structure of UnrealScript instead of being focused on what is most useful\
      \ to a novice.  Of course, links are only links &ndash; the way info is organized\
      \ on the pages has a much larger impact on the reader.</i> - ''Aedis''\n: Topical\
      \ organization is best. The reason we want subpages for the properties is that,\
      \ to match all the other class technical pages, they should ALL be on the page\
      \ \"Actor\". Clearly, that's too much, so we're following a convention that\
      \ excessively long pages can get chopped into subpages.\n: The site's organization\
      \ isn't created by page names, it's created by links. If we have a page \"Actor\
      \ Overview\", that's likely to be where novices go if they see it in search\
      \ results. We can also give it prominence in topic pages. I've just realised\
      \ I don't know which topic page should get a link to \"Actor Overview\". Hmmm...\
      \ I really think we should resurrect [[Legacy:Beginner Topics|Beginner Topics]].\
      \ Anyway, I'm off to make the above changes. I'll spread links to AO liberally.\
      \ :-)  &ndash; ''Tarquin''"
  properties: []
  revId: 1336
name: "Legacy:Actor (UT)/Talk"
revision:
  revid: 1336
  parentid: 1337
  user: "Tarquin"
  timestamp: 1019632329.000000000
  comment: "*"
timestamp: 1668773611.503813000
