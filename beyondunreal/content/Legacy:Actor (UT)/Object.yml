---
parse:
  title: "Legacy:Actor (UT)/Object"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Properties\">Properties</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Actor_(UT)/Object?section=1\" title=\"Edit section: Properties\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<dl>\n\
      <dt>Name and Class&#160;</dt>\n<dd>These are defined in the <a href=\"/Legacy:Object\"\
      \ title=\"Legacy:Object\">Object</a> class script, so all objects have these\
      \ properties not just actors. These can't be edited in UnrealEd.</dd>\n<dt>InitialState&#160;</dt>\n\
      <dd>The initial state the actor will be in when the game starts. See below.</dd>\n\
      <dt>Group</dt>\n<dd>This is used by UnrealEd to keep track of which view group\
      \ an actor belongs to. This probably shouldn't be edited; UnrealEd will change\
      \ it to reflect the list in the <a href=\"/edit/Legacy:Group?redlink=1\" class=\"\
      new\" title=\"Legacy:Group (page does not exist)\">Group</a> browser.</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"Initial_States\">Initial States</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Actor_(UT)/Object?section=2\" title=\"Edit section: Initial\
      \ States\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>UnrealScript's states allow different types of behaviour. The same function\
      \ may be present in several states and the appropriate one will be called. The\
      \ classic example: an actor such as a monster could have states \"wandering\"\
      \ and \"attacking\", and in these states the function SeePlayer() will have\
      \ a completely different effect. (see <a href=\"/Legacy:State\" title=\"Legacy:State\"\
      >state</a> for more on scripting states)</p>\n<p>The InitialState property contains\
      \ a list of states that are made available to mappers. This sets which state\
      \ the actor will be in when the game begins.</p>\n<p>This property is not always\
      \ relevant: not all actors have states which can be chosen in this list. Of\
      \ those actors that do, some such as <a href=\"/Legacy:Trigger\" title=\"Legacy:Trigger\"\
      >Trigger</a> and <a href=\"/Legacy:SpecialEvent\" title=\"Legacy:SpecialEvent\"\
      >SpecialEvent</a> have states but don't switch between them at all during play.\
      \ This programming strategy essentially allows the one class to offer several\
      \ ways of behaving – several classes for the price of one.</p>\n<p>Quick link\
      \ for now: <a href=\"/Legacy:InitialState\" title=\"Legacy:InitialState\">InitialState</a>\
      \ covers this topic (or will) for mappers. <a href=\"/Legacy:State\" title=\"\
      Legacy:State\">State</a> is aimed at coders.</p>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.025 seconds\nReal time usage: 0.026 seconds\nPreprocessor\
      \ visited node count: 6/1000000\nPreprocessor generated node count: 12/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:397-0!*!0!!*!*!*\
      \ and timestamp 20221118121855 and revision id 1328\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:SpecialEvent"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:State"
  - ns: 100
    exists: true
    name: "Legacy:Object"
  - ns: 100
    exists: true
    name: "Legacy:InitialState"
  - ns: 100
    exists: false
    name: "Legacy:Group"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Properties"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Actor_(UT)/Object"
    byteoffset: 0
    anchor: "Properties"
  - toclevel: 1
    level: "2"
    line: "Initial States"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Actor_(UT)/Object"
    byteoffset: 485
    anchor: "Initial_States"
  displaytitle: "Legacy:Actor (UT)/Object"
  iwlinks: []
  wikitext:
    text: "==Properties ==\n; Name and Class : These are defined in the [[Legacy:Object|Object]]\
      \ class script, so all objects have these properties not just actors. These\
      \ can't be edited in UnrealEd.\n; InitialState : The initial state the actor\
      \ will be in when the game starts. See below.\n; Group: This is used by UnrealEd\
      \ to keep track of which view group an actor belongs to. This probably shouldn't\
      \ be edited; UnrealEd will change it to reflect the list in the [[Legacy:Group|Group]]\
      \ browser.\n\n==Initial States ==\n\nUnrealScript's states allow different types\
      \ of behaviour. The same function may be present in several states and the appropriate\
      \ one will be called. The classic example: an actor such as a monster could\
      \ have states \"wandering\" and \"attacking\", and in these states the function\
      \ SeePlayer() will have a completely different effect. (see [[Legacy:State|state]]\
      \ for more on scripting states)\n\nThe InitialState property contains a list\
      \ of states that are made available to mappers. This sets which state the actor\
      \ will be in when the game begins.\n\nThis property is not always relevant:\
      \ not all actors have states which can be chosen in this list. Of those actors\
      \ that do, some such as [[Legacy:Trigger|Trigger]] and [[Legacy:SpecialEvent|SpecialEvent]]\
      \ have states but don't switch between them at all during play. This programming\
      \ strategy essentially allows the one class to offer several ways of behaving\
      \ &ndash; several classes for the price of one.\n\nQuick link for now: [[Legacy:InitialState|InitialState]]\
      \ covers this topic (or will) for mappers. [[Legacy:State|State]] is aimed at\
      \ coders."
  properties: []
  revId: 1328
name: "Legacy:Actor (UT)/Object"
revision:
  revid: 1328
  parentid: 1329
  user: "Tarquin"
  timestamp: 1019643403.000000000
  comment: "rearranging stuff"
timestamp: 1668773936.117117000
