---
parse:
  title: "Legacy:Log Interaction"
  text:
    text: "<p><b>Shambler:</b> Got fed up of using the log window to debug stuff so\
      \ made this real quick....basically this code will allow you to display log\
      \ info on the HUD ingame and there are a number of ways you can format it to\
      \ stand out.</p>\n<p>Posting it on the wiki for others who may find use in it.</p>\n\
      <dl>\n<dd>&lt;wiki&gt;[[Image:Legacy_pgDebugLog.jpeg|]]</dd>\n</dl>\n<h2><span\
      \ class=\"mw-headline\" id=\"How_to_use_it\">How to use it</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Log_Interaction?section=1\"\
      \ title=\"Edit section: How to use it\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Create a mutator like this one:</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">Class</span> pgPortalGunMut <span\
      \ class=\"kw1\">extends</span> <span class=\"kw9\">Mutator</span>;\n \n<span\
      \ class=\"kw1\">function</span> ModifyPlayer<span class=\"br0\">(</span><span\
      \ class=\"kw9\">Pawn</span> Other<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \ i;\n \n\t<span class=\"co1\">// Debug</span>\n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Other.<span class=\"kw9\">Controller</span> <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">none</span> <span class=\"sy0\"\
      >&amp;&amp;</span> <span class=\"kw9\">PlayerController</span><span class=\"\
      br0\">(</span>Other.<span class=\"kw9\">Controller</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span> <span\
      \ class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span>Other.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span>.<span class=\"kw8\">Player</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"kw5\">none</span>\n\t\t<span class=\"sy0\">&amp;&amp;</span>\
      \ <span class=\"kw9\">PlayerController</span><span class=\"br0\">(</span>Other.<span\
      \ class=\"kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"\
      kw8\">Player</span>.<span class=\"kw8\">InteractionMaster</span> <span class=\"\
      sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\t<span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>; i<span\
      \ class=\"sy0\">&lt;</span><span class=\"kw9\">PlayerController</span><span\
      \ class=\"br0\">(</span>Other.<span class=\"kw9\">Controller</span><span class=\"\
      br0\">)</span>.<span class=\"kw8\">Player</span>.<span class=\"me0\">LocalInteractions</span>.<span\
      \ class=\"me0\">Length</span>; <span class=\"sy0\">++</span>i<span class=\"\
      br0\">)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>MathDebugInteraction<span class=\"br0\"\
      >(</span><span class=\"kw9\">PlayerController</span><span class=\"br0\">(</span>Other.<span\
      \ class=\"kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"\
      kw8\">Player</span>.<span class=\"me0\">LocalInteractions</span><span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span\
      \ class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"br0\"\
      >)</span>\n\t\t\t<span class=\"br0\">{</span>\n\t\t\t\tbSkip <span class=\"\
      sy0\">=</span> <span class=\"kw6\">True</span>;\n\t\t\t\t<span class=\"kw2\"\
      >break</span>;\n\t\t\t<span class=\"br0\">}</span>\n\t\t<span class=\"br0\"\
      >}</span>\n \n\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"sy0\">!</span>bSkip<span class=\"br0\">)</span>\n\t\t\t<span class=\"\
      kw9\">PlayerController</span><span class=\"br0\">(</span>Other.<span class=\"\
      kw9\">Controller</span><span class=\"br0\">)</span>.<span class=\"kw8\">Player</span>.<span\
      \ class=\"kw8\">InteractionMaster</span>.<span class=\"me0\">AddInteraction</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span><span class=\"br0\"\
      >(</span><span class=\"kw1\">Class</span><span class=\"st0\">'MathDebugInteraction'</span><span\
      \ class=\"br0\">)</span>, <span class=\"kw9\">PlayerController</span><span class=\"\
      br0\">(</span>Other.<span class=\"kw9\">Controller</span><span class=\"br0\"\
      >)</span>.<span class=\"kw8\">Player</span><span class=\"br0\">)</span>;\n\t\
      <span class=\"br0\">}</span>\n \n\t<span class=\"kw6\">Super</span>.<span class=\"\
      me0\">ModifyPlayer</span><span class=\"br0\">(</span>Other<span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ Mutate<span class=\"br0\">(</span><span class=\"kw5\">string</span> MutateString,\
      \ <span class=\"kw9\">PlayerController</span> Sender<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> i;\n \n\t<span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>MutateString ~<span class=\"sy0\">=</span> <span class=\"st0\">\"pgToggleDebug\"\
      </span><span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\t<span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>Sender.<span class=\"\
      kw8\">Player</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> Sender.<span class=\"kw8\">Player</span>.<span\
      \ class=\"kw8\">InteractionMaster</span> <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">none</span><span class=\"br0\">)</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t\t<span class=\"kw2\">for</span> <span class=\"br0\">(</span>i<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>Sender.<span\
      \ class=\"kw8\">Player</span>.<span class=\"me0\">LocalInteractions</span>.<span\
      \ class=\"me0\">Length</span>; <span class=\"sy0\">++</span>i<span class=\"\
      br0\">)</span>\n\t\t\t<span class=\"br0\">{</span>\n\t\t\t\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>MathDebugInteraction<span class=\"br0\"\
      >(</span>Sender.<span class=\"kw8\">Player</span>.<span class=\"me0\">LocalInteractions</span><span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span><span class=\"\
      br0\">)</span>\n\t\t\t\t<span class=\"br0\">{</span>\n\t\t\t\t\tMathDebugInteraction<span\
      \ class=\"br0\">(</span>Sender.<span class=\"kw8\">Player</span>.<span class=\"\
      me0\">LocalInteractions</span><span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span><span class=\"br0\">)</span>.<span class=\"me0\">ToggleDebug</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n\t\t\t\t\t<span class=\"\
      kw2\">break</span>;\n\t\t\t\t<span class=\"br0\">}</span>\n\t\t\t<span class=\"\
      br0\">}</span>\n\t\t<span class=\"br0\">}</span>\n\t<span class=\"br0\">}</span>\n\
      \t<span class=\"kw2\">else</span>\n\t<span class=\"br0\">{</span>\n\t\t<span\
      \ class=\"kw6\">Super</span>.<span class=\"me0\">Mutate</span><span class=\"\
      br0\">(</span>MutateString, Sender<span class=\"br0\">)</span>;\n\t<span class=\"\
      br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>Add some\
      \ debugging code to the class you want to debug</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">Class</span> SomeClass <span class=\"\
      kw1\">extends</span> SomeActor;\n \n<span class=\"kw1\">var</span> MathDebugInteraction\
      \ ActiveDebug;\n<span class=\"kw1\">var</span> <span class=\"kw5\">int</span>\
      \ FireMode; <span class=\"co1\">// This isn't important</span>\n \n<span class=\"\
      kw1\">function</span> SomeFunction<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> XDot, ZDot, ZAxisDiff, ClockX, ClockZ, DiffClockZ,\
      \ ClockTest;\n \n \n\t<span class=\"co1\">// Do stuff with these variables</span>\n\
      \tXDot <span class=\"sy0\">=</span> Blah;\n\tZDot <span class=\"sy0\">=</span>\
      \ Blah;\n\tZAxisDiff <span class=\"sy0\">=</span> Blah;\n\tClockX <span class=\"\
      sy0\">=</span> Blah;\n\tClockZ <span class=\"sy0\">=</span> Blah;\n\tClockTest\
      \ <span class=\"sy0\">=</span> Blah;\n\tDiffClockZ <span class=\"sy0\">=</span>\
      \ Blah;\n \n \n \n\t<span class=\"co1\">// Log stuff to display on screen (shown\
      \ in picture)</span>\n \n \n\t<span class=\"co1\">// Format of the LogString\
      \ function: (copied here for reference)</span>\n \n\t<span class=\"co1\">//\
      \ function LogString(string Info, optional color StringColor, optional bool\
      \ bUseColor, optional bool bUnderline, optional color HighlightColor, optional\
      \ bool bDontEndLine)</span>\n\t<span class=\"co1\">// Parameter 1: The string\
      \ you want to log</span>\n\t<span class=\"co1\">// Parameter 2: The colour of\
      \ the logstring</span>\n\t<span class=\"co1\">// Parameter 3: Pass in True if\
      \ you put in a colour for parameter 2 (I should change this but cba)</span>\n\
      \t<span class=\"co1\">// Parameter 4: Underline the text if True is passed in</span>\n\
      \t<span class=\"co1\">// Parameter 5: If you pass a colour in (with an Alpha\
      \ greater than 0) then the text is highlighted with that colour</span>\n\t<span\
      \ class=\"co1\">// Parameter 6: If you want the next log string to write on\
      \ the same line, pass in True here</span>\n \n \n \n \n\t<span class=\"co1\"\
      >// I want to rewrite the log info every tick, so check the timestamp on the\
      \ debug object...if its 'out of date', use EmptyList to wipe the log data (specifying\
      \ a new timestamp)</span>\n\t<span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>ActiveDebug.<span class=\"me0\">LogTimestamp</span> <span class=\"\
      sy0\">!=</span> <span class=\"kw7\">Level</span>.<span class=\"me0\">TimeSeconds</span><span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\tActiveDebug.<span\
      \ class=\"me0\">EmptyList</span><span class=\"br0\">(</span><span class=\"kw7\"\
      >Level</span>.<span class=\"me0\">TimeSeconds</span><span class=\"br0\">)</span>;\n\
      \ \n\t\t<span class=\"co1\">// The command to turn this off is detailed in the\
      \ mutator class</span>\n\t\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"To disable this text type: \"\
      </span>, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">255</span><span class=\"br0\">)</span>,\
      \ <span class=\"kw6\">True</span>,,,<span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\t\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"Mutate pgToggleDebug\"</span>, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >True</span>, <span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\
      \t\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"\"</span><span class=\"br0\">)</span>;\n\t<span class=\"br0\"\
      >}</span>\n \n \n\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>FireMode\
      \ <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\"\
      >)</span>\n\t\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"Portal\"</span><span class=\"sy0\">@</span>FireMode,\
      \ <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>, <span class=\"kw6\">True</span>,\
      \ <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">128</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \t<span class=\"kw2\">else</span>\n\t\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"Portal\"</span><span class=\"\
      sy0\">@</span>FireMode, <span class=\"kw1\">Class</span><span class=\"st0\"\
      >'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>, <span class=\"kw6\">True</span>,\
      \ <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">128</span>,<span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n \n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\"\
      >(</span><span class=\"st0\">\"XDot\"</span>, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>, <span\
      \ class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"(XY Axis change) is: \"</span>, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >True</span>,,,<span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\
      \tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">string</span><span class=\"br0\">(</span>XDot<span class=\"\
      br0\">)</span>,,,, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">64</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\t\
      ActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\" or \"</span>, <span class=\"kw1\">Class</span><span class=\"\
      st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\"\
      >MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>,,,<span\
      \ class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\tActiveDebug.<span\
      \ class=\"me0\">LogString</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >string</span><span class=\"br0\">(</span><span class=\"kw3\">ACos</span><span\
      \ class=\"br0\">(</span>XDot<span class=\"br0\">)</span> <span class=\"sy0\"\
      >*</span> <span class=\"nu0\">57.295779</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\"º\"</span>,,,, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">64</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"ZDot\"</span>, <span class=\"kw1\">Class</span><span class=\"\
      st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\"\
      >MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>, <span\
      \ class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"(Z Axis change) is: \"</span>, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >True</span>,,,<span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\
      \tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">string</span><span class=\"br0\">(</span>ZDot<span class=\"\
      br0\">)</span>,,,, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">64</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\t\
      ActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\" or \"</span>, <span class=\"kw1\">Class</span><span class=\"\
      st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\"\
      >MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>,,,<span\
      \ class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\tActiveDebug.<span\
      \ class=\"me0\">LogString</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >string</span><span class=\"br0\">(</span><span class=\"kw3\">ACos</span><span\
      \ class=\"br0\">(</span>ZDot<span class=\"br0\">)</span> <span class=\"sy0\"\
      >*</span> <span class=\"nu0\">57.295779</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">$</span><span class=\"st0\">\"º\"</span>,,,, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">64</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"ZAxisDiff\"</span>, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>, <span\
      \ class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"(Portal Up-Axis offset) is: \"</span>, <span\
      \ class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"\
      kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>,,,<span class=\"kw6\">True</span><span\
      \ class=\"br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span><span class=\"br0\"\
      >(</span>ZAxisDiff<span class=\"br0\">)</span>,,,, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >64</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span><span\
      \ class=\"br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\" or \"</span>, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >True</span>,,,<span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\
      \tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">string</span><span class=\"br0\">(</span><span class=\"kw3\"\
      >ACos</span><span class=\"br0\">(</span>ZAxisDiff<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">*</span> <span class=\"nu0\">57.295779</span><span class=\"\
      br0\">)</span><span class=\"sy0\">$</span><span class=\"st0\">\"º\"</span>,,,,\
      \ <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">0</span>,<span class=\"nu0\">64</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n \n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"ClockX\"</span>, <span class=\"\
      kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >True</span>, <span class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span\
      \ class=\"br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"(XDot/Yaw clockwise?) is: \"</span>,\
      \ <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>,,,<span class=\"kw6\">True</span><span\
      \ class=\"br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span><span class=\"br0\"\
      >(</span><span class=\"kw5\">bool</span><span class=\"br0\">(</span>ClockX<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>,,,, <span class=\"kw1\"\
      >Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">64</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"ClockZ\"</span>, <span class=\"kw1\">Class</span><span class=\"\
      st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"me0\"\
      >MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>, <span\
      \ class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"(ZDot/Pitch clockwise?) is: \"</span>, <span\
      \ class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"\
      kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"br0\"\
      >(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>,,,<span class=\"kw6\">True</span><span\
      \ class=\"br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span><span class=\"br0\"\
      >(</span><span class=\"kw5\">bool</span><span class=\"br0\">(</span>ClockZ<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>,,,, <span class=\"kw1\"\
      >Class</span><span class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span\
      \ class=\"me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >0</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">64</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \ \n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"br0\">(</span><span\
      \ class=\"st0\">\"DiffClockZ\"</span>, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>, <span\
      \ class=\"kw6\">True</span>,, <span class=\"kw6\">True</span><span class=\"\
      br0\">)</span>;\n\tActiveDebug.<span class=\"me0\">LogString</span><span class=\"\
      br0\">(</span><span class=\"st0\">\" is: \"</span>, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>,,,<span\
      \ class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\tActiveDebug.<span\
      \ class=\"me0\">LogString</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >string</span><span class=\"br0\">(</span><span class=\"kw5\">bool</span><span\
      \ class=\"br0\">(</span>DiffClockZ<span class=\"br0\">)</span><span class=\"\
      br0\">)</span>,,,, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">64</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n \n\tActiveDebug.<span class=\"me0\"\
      >LogString</span><span class=\"br0\">(</span><span class=\"st0\">\"ClockTest\"\
      </span>, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span><span class=\"br0\"\
      >)</span>, <span class=\"kw6\">True</span>, <span class=\"kw6\">True</span>,,\
      \ <span class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\tActiveDebug.<span\
      \ class=\"me0\">LogString</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"(ZDot/Roll clockwise?) is: \"</span>, <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'Canvas'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">MakeColor</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">255</span>,<span class=\"nu0\"\
      >255</span><span class=\"br0\">)</span>, <span class=\"kw6\">True</span>,,,<span\
      \ class=\"kw6\">True</span><span class=\"br0\">)</span>;\n\tActiveDebug.<span\
      \ class=\"me0\">LogString</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >string</span><span class=\"br0\">(</span><span class=\"kw5\">bool</span><span\
      \ class=\"br0\">(</span>ClockTest<span class=\"br0\">)</span><span class=\"\
      br0\">)</span>,,,, <span class=\"kw1\">Class</span><span class=\"st0\">'Canvas'</span>.<span\
      \ class=\"kw1\">static</span>.<span class=\"me0\">MakeColor</span><span class=\"\
      br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">255</span>,<span\
      \ class=\"nu0\">255</span>,<span class=\"nu0\">64</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n \n\tActiveDebug.<span class=\"me0\"\
      >LogString</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p>And put this in a .uc file in with your source, modify the 'foreach' loop\
      \ on line 45 so you can 'attach' (i.e. put a reference to) the interaction in\
      \ the class you want to debug.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// An interaction to help me debug problems with the portal\
      \ gun math</span>\n<span class=\"kw1\">Class</span> MathDebugInteraction <span\
      \ class=\"kw1\">extends</span> <span class=\"kw8\">Interaction</span>;\n \n\
      <span class=\"kw1\">struct</span> LogElement\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw1\">var</span> <span class=\"kw5\">string</span> LogString;\n\
      \t<span class=\"kw1\">var</span> <span class=\"kw5\">color</span> StringColor;\n\
      \t<span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bUnderline;\n\
      \t<span class=\"kw1\">var</span> <span class=\"kw5\">color</span> HighlightColor;\n\
      \t<span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bDontEndLine;\n\
      <span class=\"br0\">}</span>;\n \n<span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>LogElement<span class=\"sy0\">&gt;</span> LogList;\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> ListSpacing;\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">color</span> ListColor;\n\
      <span class=\"kw1\">var</span> font ListFont;\n<span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">float</span> ListX, ListY, FontY, FontScale, LogTimestamp;\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bInitialSetup;\n\
      \ \n<span class=\"kw1\">var</span> <span class=\"kw5\">bool</span> bDisableDebug;\n\
      \ \n \n<span class=\"kw1\">function</span> ToggleDebug<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\tbDisableDebug <span\
      \ class=\"sy0\">=</span> <span class=\"sy0\">!</span>bDisableDebug;\n \n\t<span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>bDisableDebug<span class=\"\
      br0\">)</span>\n\t\tEmptyList<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ PostRender<span class=\"br0\">(</span><span class=\"kw8\">canvas</span> <span\
      \ class=\"kw8\">Canvas</span><span class=\"br0\">)</span>\n<span class=\"br0\"\
      >{</span>\n\t<span class=\"kw1\">local</span> pgPortalDecal PD;\n\t<span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> i;\n\t<span class=\"kw1\"\
      >local</span> <span class=\"kw5\">float</span> LenX, LenY, LastX, LastY;\n \n\
      \t<span class=\"coMULTI\">/*\n\tEmptyList();\n\tLogString(\"Arf, testing\");\n\
      \tLogString(\"Wewt, testing2\", Canvas.MakeColor(255,255,255,255), True, True,,True);\n\
      \tLogString(\"AMG TEST\",,,True,Canvas.MakeColor(0,255,0,128));\n\tLogString(\"\
      FEYNAL TEST!!\");\n\t*/</span>\n \n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>ViewportOwner <span class=\"sy0\">!=</span> <span class=\"kw5\"\
      >none</span> <span class=\"sy0\">&amp;&amp;</span> ViewportOwner.<span class=\"\
      kw9\">Actor</span> <span class=\"sy0\">!=</span> <span class=\"kw5\">none</span>\
      \ <span class=\"sy0\">&amp;&amp;</span> ViewportOwner.<span class=\"kw9\">Actor</span>.<span\
      \ class=\"kw9\">Pawn</span> <span class=\"sy0\">!=</span> <span class=\"kw5\"\
      >none</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw9\">xPawn</span><span\
      \ class=\"br0\">(</span>ViewportOwner.<span class=\"kw9\">Actor</span>.<span\
      \ class=\"kw9\">Pawn</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >!=</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span>\n\t\t\
      <span class=\"kw2\">foreach</span> ViewportOwner.<span class=\"kw9\">Actor</span>.<span\
      \ class=\"kw2\">DynamicActors</span><span class=\"br0\">(</span><span class=\"\
      kw1\">Class</span><span class=\"st0\">'pgPortalDecal'</span>, PD<span class=\"\
      br0\">)</span>\n\t\t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>PD.<span\
      \ class=\"kw7\">Owner</span> <span class=\"sy0\">==</span> ViewportOwner.<span\
      \ class=\"kw9\">Actor</span><span class=\"coMULTI\">/* &amp;&amp; PD.FireMode\
      \ == 0*/</span> <span class=\"sy0\">&amp;&amp;</span> PD.<span class=\"me0\"\
      >ActiveDebug</span> <span class=\"sy0\">!=</span> <span class=\"kw6\">self</span><span\
      \ class=\"br0\">)</span>\n\t\t\t\tPD.<span class=\"me0\">ActiveDebug</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">self</span>;\n \n \n\t<span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>LogList.<span class=\"\
      me0\">Length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n\t\t<span class=\"kw2\">return</span>;\n \n \n\t<span\
      \ class=\"co1\">// ListX and ListY in default properties tell the code where\
      \ to start drawing (between 0.0 and 1.0), FontScale determines the size of font\
      \ with changing screen size</span>\n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"sy0\">!</span>bInitialSetup<span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\tListX <span class=\"sy0\">=</span> <span\
      \ class=\"kw8\">Canvas</span>.<span class=\"me0\">ClipX</span> <span class=\"\
      sy0\">*</span> ListX;\n\t\tListY <span class=\"sy0\">=</span> <span class=\"\
      kw8\">Canvas</span>.<span class=\"me0\">ClipY</span> <span class=\"sy0\">*</span>\
      \ ListY;\n\t\tFontScale <span class=\"sy0\">=</span> <span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">ClipX</span> <span class=\"sy0\">*</span> FontScale;\n \n\t\t\
      bInitialSetup <span class=\"sy0\">=</span> <span class=\"kw6\">True</span>;\n\
      \t<span class=\"br0\">}</span>\n \n \n\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"kw4\">Reset</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n \n \n\t<span class=\"co1\">// Setup stored variables</span>\n\t\
      <span class=\"kw8\">Canvas</span>.<span class=\"me0\">Font</span> <span class=\"\
      sy0\">=</span> ListFont;\n \n\t<span class=\"kw8\">Canvas</span>.<span class=\"\
      kw7\">Style</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>;\n\
      \ \n\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\">CurX</span> <span\
      \ class=\"sy0\">=</span> ListX;\n\t<span class=\"kw8\">Canvas</span>.<span class=\"\
      me0\">CurY</span> <span class=\"sy0\">=</span> ListY;\n\t<span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">FontScaleX</span> <span class=\"sy0\">=</span>\
      \ FontScale;\n\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\">FontScaleY</span>\
      \ <span class=\"sy0\">=</span> FontScale;\n \n\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">DrawColor</span> <span class=\"sy0\">=</span> ListColor;\n \n\
      \t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>FontY <span class=\"\
      sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n\t\
      \t<span class=\"kw8\">Canvas</span>.<span class=\"me0\">StrLen</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"X\"</span>, FontY, FontY<span class=\"br0\"\
      >)</span>;\n \n \n\t<span class=\"co1\">// Draw the list</span>\n\t<span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>LogList.<span class=\"\
      me0\">Length</span>; <span class=\"sy0\">++</span>i<span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"kw8\">Canvas</span>.<span class=\"me0\">CurY</span>\
      \ <span class=\"sy0\">&lt;</span> <span class=\"kw8\">Canvas</span>.<span class=\"\
      me0\">ClipY</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurX</span> <span class=\"sy0\">&lt;</span>\
      \ <span class=\"kw8\">Canvas</span>.<span class=\"me0\">ClipX</span> <span class=\"\
      sy0\">&amp;&amp;</span> LogList<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LogString</span> <span class=\"sy0\">!=</span>\
      \ <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t\tLastX <span class=\"sy0\">=</span> <span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurX</span>;\n\t\t\tLastY <span class=\"\
      sy0\">=</span> <span class=\"kw8\">Canvas</span>.<span class=\"me0\">CurY</span>;\n\
      \ \n\t\t\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\">StrLen</span><span\
      \ class=\"br0\">(</span>LogList<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>.<span class=\"me0\">LogString</span>, LenX, LenY<span class=\"br0\"\
      >)</span>;\n \n\t\t\t<span class=\"co1\">// Manage highlighting</span>\n\t\t\
      \t<span class=\"kw2\">if</span> <span class=\"br0\">(</span>LogList<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">HighlightColor</span>.<span\
      \ class=\"me0\">A</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n\t\t\t<span class=\"br0\">{</span>\n\t\t\t\t<span\
      \ class=\"kw8\">Canvas</span>.<span class=\"me0\">DrawColor</span> <span class=\"\
      sy0\">=</span> LogList<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">HighlightColor</span>;\n\t\t\t\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">DrawRect</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >Texture</span><span class=\"st0\">'WhiteTexture'</span>, <span class=\"kw3\"\
      >Min</span><span class=\"br0\">(</span>LenX, <span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">ClipX</span> <span class=\"sy0\">-</span> <span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurX</span><span class=\"br0\">)</span>,\
      \ FontY<span class=\"br0\">)</span>;\n\t\t\t\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">CurX</span> <span class=\"sy0\">=</span> LastX;\n\t\t\t\t<span\
      \ class=\"kw8\">Canvas</span>.<span class=\"me0\">CurY</span> <span class=\"\
      sy0\">=</span> LastY;\n\t\t\t<span class=\"br0\">}</span>\n \n\t\t\t<span class=\"\
      co1\">// Setup the color</span>\n\t\t\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">DrawColor</span> <span class=\"sy0\">=</span> LogList<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">StringColor</span>;\n\
      \ \n\t\t\t<span class=\"co1\">// Manage underlining</span>\n\t\t\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>LogList<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">bUnderline</span><span class=\"\
      br0\">)</span>\n\t\t\t<span class=\"br0\">{</span>\n\t\t\t\t<span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurY</span> <span class=\"sy0\">+=</span>\
      \ FontY;\n\t\t\t\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\">DrawRect</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">Texture</span><span class=\"st0\"\
      >'WhiteTexture'</span>, <span class=\"kw3\">Min</span><span class=\"br0\">(</span>LenX,\
      \ <span class=\"kw8\">Canvas</span>.<span class=\"me0\">ClipX</span> <span class=\"\
      sy0\">-</span> <span class=\"kw8\">Canvas</span>.<span class=\"me0\">CurX</span><span\
      \ class=\"br0\">)</span>, FontScale<span class=\"br0\">)</span>;\n\t\t\t\t<span\
      \ class=\"kw8\">Canvas</span>.<span class=\"me0\">CurX</span> <span class=\"\
      sy0\">=</span> LastX;\n\t\t\t\t<span class=\"kw8\">Canvas</span>.<span class=\"\
      me0\">CurY</span> <span class=\"sy0\">=</span> LastY;\n\t\t\t<span class=\"\
      br0\">}</span>\n \n\t\t\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\"\
      >DrawTextClipped</span><span class=\"br0\">(</span>LogList<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">LogString</span><span\
      \ class=\"br0\">)</span>;\n \n \n\t\t\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">CurX</span> <span class=\"sy0\">+=</span> <span class=\"kw3\"\
      >Min</span><span class=\"br0\">(</span>LenX, <span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">ClipX</span> <span class=\"sy0\">-</span> <span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurX</span><span class=\"br0\">)</span>;\n\
      \t\t<span class=\"br0\">}</span>\n \n \n\t\t<span class=\"co1\">// Endline</span>\n\
      \t\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>LogList<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">bDontEndLine</span><span class=\"br0\">)</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t\t<span class=\"kw8\">Canvas</span>.<span class=\"me0\"\
      >CurX</span> <span class=\"sy0\">=</span> ListX;\n\t\t\t<span class=\"kw8\"\
      >Canvas</span>.<span class=\"me0\">CurY</span> <span class=\"sy0\">+=</span>\
      \ ListSpacing <span class=\"sy0\">+</span> FontY;\n\t\t<span class=\"br0\">}</span>\n\
      \t<span class=\"br0\">}</span>\n \n\t<span class=\"kw8\">Canvas</span>.<span\
      \ class=\"kw4\">Reset</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ EmptyList<span class=\"br0\">(</span><span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">float</span> NewTimestamp<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\tLogList.<span class=\"me0\">Length</span> <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n \n\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>NewTimestamp <span class=\"sy0\"\
      >!=</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>\n\t\t\
      LogTimestamp <span class=\"sy0\">=</span> NewTimestamp;\n<span class=\"br0\"\
      >}</span>\n \n \n<span class=\"co1\">// LogString parameters:</span>\n<span\
      \ class=\"co1\">// Parameter 1: The string you want to log</span>\n<span class=\"\
      co1\">// Parameter 2: The colour of the logstring</span>\n<span class=\"co1\"\
      >// Parameter 3: Pass in True if you put in a colour for parameter 2 (I should\
      \ change this but cba)</span>\n<span class=\"co1\">// Parameter 4: Underline\
      \ the text if True is passed in</span>\n<span class=\"co1\">// Parameter 5:\
      \ If you pass a colour in (with an Alpha greater than 0) then the text is highlighted\
      \ with that colour</span>\n<span class=\"co1\">// Parameter 6: If you want the\
      \ next log string to write on the same line, pass in True here</span>\n \n<span\
      \ class=\"kw1\">function</span> LogString<span class=\"br0\">(</span><span class=\"\
      kw5\">string</span> <span class=\"kw9\">Info</span>, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">color</span> StringColor, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">bool</span> bUseColor, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">bool</span> bUnderline, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">color</span> HighlightColor, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">bool</span> bDontEndLine<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>bDisableDebug<span class=\"br0\">)</span>\n\t\t<span class=\"\
      kw2\">return</span>;\n \n\tLogList.<span class=\"me0\">Length</span> <span class=\"\
      sy0\">=</span> LogList.<span class=\"me0\">Length</span> <span class=\"sy0\"\
      >+</span> <span class=\"nu0\">1</span>;\n \n\tLogList<span class=\"br0\">[</span>LogList.<span\
      \ class=\"me0\">Length</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span>.<span class=\"me0\">LogString</span> <span\
      \ class=\"sy0\">=</span> <span class=\"kw9\">Info</span>;\n \n \n\t<span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span>bUseColor<span class=\"br0\">)</span>\n\
      \t\tLogList<span class=\"br0\">[</span>LogList.<span class=\"me0\">Length</span><span\
      \ class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">StringColor</span> <span class=\"sy0\">=</span> StringColor;\n\
      \t<span class=\"kw2\">else</span>\n\t\tLogList<span class=\"br0\">[</span>LogList.<span\
      \ class=\"me0\">Length</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span>.<span class=\"me0\">StringColor</span>\
      \ <span class=\"sy0\">=</span> ListColor;\n \n \n\tLogList<span class=\"br0\"\
      >[</span>LogList.<span class=\"me0\">Length</span><span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me0\">bUnderline</span>\
      \ <span class=\"sy0\">=</span> bUnderline;\n\tLogList<span class=\"br0\">[</span>LogList.<span\
      \ class=\"me0\">Length</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span>.<span class=\"me0\">HighlightColor</span>\
      \ <span class=\"sy0\">=</span> HighlightColor;\n\tLogList<span class=\"br0\"\
      >[</span>LogList.<span class=\"me0\">Length</span><span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me0\">bDontEndLine</span>\
      \ <span class=\"sy0\">=</span> bDontEndLine;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">defaultproperties</span>\n<span class=\"br0\">{</span>\n\
      \tbVisible<span class=\"sy0\">=</span><span class=\"kw6\">True</span>\n \n \n\
      \tListX<span class=\"sy0\">=</span><span class=\"nu0\">0.5625</span>\n\tListY<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0.125</span>\n\tListSpacing<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">5</span>\n\tListColor<span class=\"\
      sy0\">=</span><span class=\"br0\">(</span>R<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">255</span>,G<span class=\"sy0\">=</span><span class=\"nu0\"\
      >0</span>,B<span class=\"sy0\">=</span><span class=\"nu0\">0</span>,A<span class=\"\
      sy0\">=</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\t\
      ListFont<span class=\"sy0\">=</span>DefaultFont\n\tFontScale<span class=\"sy0\"\
      >=</span><span class=\"nu0\">0.00125</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p><b>Shambler:</b> Feel free to reformat the page, just keep all the\
      \ code as it is&#160;;) (I may update it later)</p>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.142 seconds\nReal time usage: 0.143 seconds\nPreprocessor\
      \ visited node count: 12/1000000\nPreprocessor generated node count: 68/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:1757-0!*!*!*!*!*!*\
      \ and timestamp 20221118151818 and revision id 4312\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "How to use it"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Log_Interaction"
    byteoffset: 330
    anchor: "How_to_use_it"
  displaytitle: "Legacy:Log Interaction"
  iwlinks: []
  wikitext:
    text: "'''Shambler:''' Got fed up of using the log window to debug stuff so made\
      \ this real quick....basically this code will allow you to display log info\
      \ on the HUD ingame and there are a number of ways you can format it to stand\
      \ out.\n\nPosting it on the wiki for others who may find use in it.\n:<wiki>[[Image:Legacy_pgDebugLog.jpeg|]]\n\
      \n==How to use it==\n\nCreate a mutator like this one:\n\n<uscript>\nClass pgPortalGunMut\
      \ extends Mutator;\n\nfunction ModifyPlayer(Pawn Other)\n{\n\tlocal int i;\n\
      \n\t// Debug\n\tif (Other.Controller != none && PlayerController(Other.Controller)\
      \ != none && PlayerController(Other.Controller).Player != none\n\t\t&& PlayerController(Other.Controller).Player.InteractionMaster\
      \ != none)\n\t{\n\t\tfor (i=0; i<PlayerController(Other.Controller).Player.LocalInteractions.Length;\
      \ ++i)\n\t\t{\n\t\t\tif (MathDebugInteraction(PlayerController(Other.Controller).Player.LocalInteractions[i])\
      \ != none)\n\t\t\t{\n\t\t\t\tbSkip = True;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
      \n\t\tif (!bSkip)\n\t\t\tPlayerController(Other.Controller).Player.InteractionMaster.AddInteraction(string(Class'MathDebugInteraction'),\
      \ PlayerController(Other.Controller).Player);\n\t}\n\n\tSuper.ModifyPlayer(Other);\n\
      }\n\nfunction Mutate(string MutateString, PlayerController Sender)\n{\n\tlocal\
      \ int i;\n\n\tif (MutateString ~= \"pgToggleDebug\")\n\t{\n\t\tif (Sender.Player\
      \ != none && Sender.Player.InteractionMaster != none)\n\t\t{\n\t\t\tfor (i=0;\
      \ i<Sender.Player.LocalInteractions.Length; ++i)\n\t\t\t{\n\t\t\t\tif (MathDebugInteraction(Sender.Player.LocalInteractions[i])\
      \ != none)\n\t\t\t\t{\n\t\t\t\t\tMathDebugInteraction(Sender.Player.LocalInteractions[i]).ToggleDebug();\n\
      \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tSuper.Mutate(MutateString,\
      \ Sender);\n\t}\n}\n</uscript>\n\nAdd some debugging code to the class you want\
      \ to debug\n\n<uscript>\nClass SomeClass extends SomeActor;\n\nvar MathDebugInteraction\
      \ ActiveDebug;\nvar int FireMode; // This isn't important\n\nfunction SomeFunction()\n\
      {\n\tlocal float XDot, ZDot, ZAxisDiff, ClockX, ClockZ, DiffClockZ, ClockTest;\n\
      \n\n\t// Do stuff with these variables\n\tXDot = Blah;\n\tZDot = Blah;\n\tZAxisDiff\
      \ = Blah;\n\tClockX = Blah;\n\tClockZ = Blah;\n\tClockTest = Blah;\n\tDiffClockZ\
      \ = Blah;\n\n\n\n\t// Log stuff to display on screen (shown in picture)\n\n\n\
      \t// Format of the LogString function: (copied here for reference)\n\n\t// function\
      \ LogString(string Info, optional color StringColor, optional bool bUseColor,\
      \ optional bool bUnderline, optional color HighlightColor, optional bool bDontEndLine)\n\
      \t// Parameter 1: The string you want to log\n\t// Parameter 2: The colour of\
      \ the logstring\n\t// Parameter 3: Pass in True if you put in a colour for parameter\
      \ 2 (I should change this but cba)\n\t// Parameter 4: Underline the text if\
      \ True is passed in\n\t// Parameter 5: If you pass a colour in (with an Alpha\
      \ greater than 0) then the text is highlighted with that colour\n\t// Parameter\
      \ 6: If you want the next log string to write on the same line, pass in True\
      \ here\n\n\n\n\n\t// I want to rewrite the log info every tick, so check the\
      \ timestamp on the debug object...if its 'out of date', use EmptyList to wipe\
      \ the log data (specifying a new timestamp)\n\tif (ActiveDebug.LogTimestamp\
      \ != Level.TimeSeconds)\n\t{\n\t\tActiveDebug.EmptyList(Level.TimeSeconds);\n\
      \n\t\t// The command to turn this off is detailed in the mutator class\n\t\t\
      ActiveDebug.LogString(\"To disable this text type: \", Class'Canvas'.static.MakeColor(0,255,0,255),\
      \ True,,,True);\n\t\tActiveDebug.LogString(\"Mutate pgToggleDebug\", Class'Canvas'.static.MakeColor(0,255,0,255),\
      \ True, True);\n\t\tActiveDebug.LogString(\"\");\n\t}\n\n\n\tif (FireMode ==\
      \ 0)\n\t\tActiveDebug.LogString(\"Portal\"@FireMode, Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True, True, Class'Canvas'.static.MakeColor(0,128,255));\n\telse\n\t\tActiveDebug.LogString(\"\
      Portal\"@FireMode, Class'Canvas'.static.MakeColor(255,255,255,255), True, True,\
      \ Class'Canvas'.static.MakeColor(255,128,0));\n\n\n\tActiveDebug.LogString(\"\
      XDot\", Class'Canvas'.static.MakeColor(255,255,255,255), True, True,, True);\n\
      \tActiveDebug.LogString(\"(XY Axis change) is: \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(XDot),,,, Class'Canvas'.static.MakeColor(0,255,255,64),\
      \ True);\n\tActiveDebug.LogString(\" or \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(ACos(XDot) * 57.295779)$\"º\"\
      ,,,, Class'Canvas'.static.MakeColor(255,255,0,64));\n\n\tActiveDebug.LogString(\"\
      ZDot\", Class'Canvas'.static.MakeColor(255,255,255,255), True, True,, True);\n\
      \tActiveDebug.LogString(\"(Z Axis change) is: \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(ZDot),,,, Class'Canvas'.static.MakeColor(0,255,255,64),\
      \ True);\n\tActiveDebug.LogString(\" or \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(ACos(ZDot) * 57.295779)$\"º\"\
      ,,,, Class'Canvas'.static.MakeColor(255,255,0,64));\n\n\tActiveDebug.LogString(\"\
      ZAxisDiff\", Class'Canvas'.static.MakeColor(255,255,255,255), True, True,, True);\n\
      \tActiveDebug.LogString(\"(Portal Up-Axis offset) is: \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(ZAxisDiff),,,, Class'Canvas'.static.MakeColor(0,255,255,64),\
      \ True);\n\tActiveDebug.LogString(\" or \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(ACos(ZAxisDiff) * 57.295779)$\"\
      º\",,,, Class'Canvas'.static.MakeColor(255,255,0,64));\n\n\tActiveDebug.LogString(\"\
      ClockX\", Class'Canvas'.static.MakeColor(255,255,255,255), True, True,, True);\n\
      \tActiveDebug.LogString(\"(XDot/Yaw clockwise?) is: \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(bool(ClockX)),,,, Class'Canvas'.static.MakeColor(0,255,255,64));\n\
      \n\tActiveDebug.LogString(\"ClockZ\", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True, True,, True);\n\tActiveDebug.LogString(\"(ZDot/Pitch clockwise?) is:\
      \ \", Class'Canvas'.static.MakeColor(255,255,255,255), True,,,True);\n\tActiveDebug.LogString(string(bool(ClockZ)),,,,\
      \ Class'Canvas'.static.MakeColor(0,255,255,64));\n\n\tActiveDebug.LogString(\"\
      DiffClockZ\", Class'Canvas'.static.MakeColor(255,255,255,255), True, True,,\
      \ True);\n\tActiveDebug.LogString(\" is: \", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True,,,True);\n\tActiveDebug.LogString(string(bool(DiffClockZ)),,,, Class'Canvas'.static.MakeColor(0,255,255,64));\n\
      \n\tActiveDebug.LogString(\"ClockTest\", Class'Canvas'.static.MakeColor(255,255,255,255),\
      \ True, True,, True);\n\tActiveDebug.LogString(\"(ZDot/Roll clockwise?) is:\
      \ \", Class'Canvas'.static.MakeColor(255,255,255,255), True,,,True);\n\tActiveDebug.LogString(string(bool(ClockTest)),,,,\
      \ Class'Canvas'.static.MakeColor(0,255,255,64));\n\n\tActiveDebug.LogString(\"\
      \");\n}\n</uscript>\n\nAnd put this in a .uc file in with your source, modify\
      \ the 'foreach' loop on line 45 so you can 'attach' (i.e. put a reference to)\
      \ the interaction in the class you want to debug.\n\n<uscript>\n// An interaction\
      \ to help me debug problems with the portal gun math\nClass MathDebugInteraction\
      \ extends Interaction;\n\nstruct LogElement\n{\n\tvar string LogString;\n\t\
      var color StringColor;\n\tvar bool bUnderline;\n\tvar color HighlightColor;\n\
      \tvar bool bDontEndLine;\n};\n\nvar array<LogElement> LogList;\nvar int ListSpacing;\n\
      var color ListColor;\nvar font ListFont;\nvar float ListX, ListY, FontY, FontScale,\
      \ LogTimestamp;\nvar bool bInitialSetup;\n\nvar bool bDisableDebug;\n\n\nfunction\
      \ ToggleDebug()\n{\n\tbDisableDebug = !bDisableDebug;\n\n\tif (bDisableDebug)\n\
      \t\tEmptyList();\n}\n\nfunction PostRender(canvas Canvas)\n{\n\tlocal pgPortalDecal\
      \ PD;\n\tlocal int i;\n\tlocal float LenX, LenY, LastX, LastY;\n\n\t/*\n\tEmptyList();\n\
      \tLogString(\"Arf, testing\");\n\tLogString(\"Wewt, testing2\", Canvas.MakeColor(255,255,255,255),\
      \ True, True,,True);\n\tLogString(\"AMG TEST\",,,True,Canvas.MakeColor(0,255,0,128));\n\
      \tLogString(\"FEYNAL TEST!!\");\n\t*/\n\n\tif (ViewportOwner != none && ViewportOwner.Actor\
      \ != none && ViewportOwner.Actor.Pawn != none && xPawn(ViewportOwner.Actor.Pawn)\
      \ != none)\n\t\tforeach ViewportOwner.Actor.DynamicActors(Class'pgPortalDecal',\
      \ PD)\n\t\t\tif (PD.Owner == ViewportOwner.Actor/* && PD.FireMode == 0*/ &&\
      \ PD.ActiveDebug != self)\n\t\t\t\tPD.ActiveDebug = self;\n\n\n\tif (LogList.Length\
      \ == 0)\n\t\treturn;\n\n\n\t// ListX and ListY in default properties tell the\
      \ code where to start drawing (between 0.0 and 1.0), FontScale determines the\
      \ size of font with changing screen size\n\tif (!bInitialSetup)\n\t{\n\t\tListX\
      \ = Canvas.ClipX * ListX;\n\t\tListY = Canvas.ClipY * ListY;\n\t\tFontScale\
      \ = Canvas.ClipX * FontScale;\n\n\t\tbInitialSetup = True;\n\t}\n\n\n\tCanvas.Reset();\n\
      \n\n\t// Setup stored variables\n\tCanvas.Font = ListFont;\n\n\tCanvas.Style\
      \ = 5;\n\n\tCanvas.CurX = ListX;\n\tCanvas.CurY = ListY;\n\tCanvas.FontScaleX\
      \ = FontScale;\n\tCanvas.FontScaleY = FontScale;\n\n\tCanvas.DrawColor = ListColor;\n\
      \n\tif (FontY == 0)\n\t\tCanvas.StrLen(\"X\", FontY, FontY);\n\n\n\t// Draw\
      \ the list\n\tfor (i=0; i<LogList.Length; ++i)\n\t{\n\t\tif (Canvas.CurY < Canvas.ClipY\
      \ && Canvas.CurX < Canvas.ClipX && LogList[i].LogString != \"\")\n\t\t{\n\t\t\
      \tLastX = Canvas.CurX;\n\t\t\tLastY = Canvas.CurY;\n\n\t\t\tCanvas.StrLen(LogList[i].LogString,\
      \ LenX, LenY);\n\n\t\t\t// Manage highlighting\n\t\t\tif (LogList[i].HighlightColor.A\
      \ != 0)\n\t\t\t{\n\t\t\t\tCanvas.DrawColor = LogList[i].HighlightColor;\n\t\t\
      \t\tCanvas.DrawRect(Texture'WhiteTexture', Min(LenX, Canvas.ClipX - Canvas.CurX),\
      \ FontY);\n\t\t\t\tCanvas.CurX = LastX;\n\t\t\t\tCanvas.CurY = LastY;\n\t\t\t\
      }\n\n\t\t\t// Setup the color\n\t\t\tCanvas.DrawColor = LogList[i].StringColor;\n\
      \n\t\t\t// Manage underlining\n\t\t\tif (LogList[i].bUnderline)\n\t\t\t{\n\t\
      \t\t\tCanvas.CurY += FontY;\n\t\t\t\tCanvas.DrawRect(Texture'WhiteTexture',\
      \ Min(LenX, Canvas.ClipX - Canvas.CurX), FontScale);\n\t\t\t\tCanvas.CurX =\
      \ LastX;\n\t\t\t\tCanvas.CurY = LastY;\n\t\t\t}\n\n\t\t\tCanvas.DrawTextClipped(LogList[i].LogString);\n\
      \n\n\t\t\tCanvas.CurX += Min(LenX, Canvas.ClipX - Canvas.CurX);\n\t\t}\n\n\n\
      \t\t// Endline\n\t\tif (!LogList[i].bDontEndLine)\n\t\t{\n\t\t\tCanvas.CurX\
      \ = ListX;\n\t\t\tCanvas.CurY += ListSpacing + FontY;\n\t\t}\n\t}\n\n\tCanvas.Reset();\n\
      }\n\nfunction EmptyList(optional float NewTimestamp)\n{\n\tLogList.Length =\
      \ 0;\n\n\tif (NewTimestamp != 0.0)\n\t\tLogTimestamp = NewTimestamp;\n}\n\n\n\
      // LogString parameters:\n// Parameter 1: The string you want to log\n// Parameter\
      \ 2: The colour of the logstring\n// Parameter 3: Pass in True if you put in\
      \ a colour for parameter 2 (I should change this but cba)\n// Parameter 4: Underline\
      \ the text if True is passed in\n// Parameter 5: If you pass a colour in (with\
      \ an Alpha greater than 0) then the text is highlighted with that colour\n//\
      \ Parameter 6: If you want the next log string to write on the same line, pass\
      \ in True here\n\nfunction LogString(string Info, optional color StringColor,\
      \ optional bool bUseColor, optional bool bUnderline, optional color HighlightColor,\
      \ optional bool bDontEndLine)\n{\n\tif (bDisableDebug)\n\t\treturn;\n\n\tLogList.Length\
      \ = LogList.Length + 1;\n\n\tLogList[LogList.Length-1].LogString = Info;\n\n\
      \n\tif (bUseColor)\n\t\tLogList[LogList.Length-1].StringColor = StringColor;\n\
      \telse\n\t\tLogList[LogList.Length-1].StringColor = ListColor;\n\n\n\tLogList[LogList.Length-1].bUnderline\
      \ = bUnderline;\n\tLogList[LogList.Length-1].HighlightColor = HighlightColor;\n\
      \tLogList[LogList.Length-1].bDontEndLine = bDontEndLine;\n}\n\ndefaultproperties\n\
      {\n\tbVisible=True\n\n\n\tListX=0.5625\n\tListY=0.125\n\tListSpacing=5\n\tListColor=(R=255,G=0,B=0,A=255)\n\
      \tListFont=DefaultFont\n\tFontScale=0.00125\n}\n</uscript>\n\n'''Shambler:'''\
      \ Feel free to reformat the page, just keep all the code as it is ;) (I may\
      \ update it later)"
  properties: []
  revId: 4312
name: "Legacy:Log Interaction"
revision:
  revid: 4312
  parentid: 4313
  user: "Shambler"
  timestamp: 1162826526.000000000
  comment: "* Added page with debug helper class"
timestamp: 1668784699.896908000
