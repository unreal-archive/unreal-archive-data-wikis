---
parse:
  title: "Legacy:INI File"
  text:
    text: "<p><a href=\"/Legacy:Unreal_Engine\" title=\"Legacy:Unreal Engine\">Unreal\
      \ Engine</a> based games make use of one or more INI files to hold configuration\
      \ information for the classes used within the application running.</p>\n<p>Some\
      \ mods also use their own configuration file to avoid cluttering up the main\
      \ program INI file and making their mod easier to install and uninstall. You\
      \ can learn more about how this is done by reading about <a href=\"/Legacy:Config_Vars_And_.Ini_Files\"\
      \ title=\"Legacy:Config Vars And .Ini Files\">Config Vars And .Ini Files</a>.</p>\n\
      <p>The INI file is broken into sections each with its own header. Each section\
      \ within the INI file corresponds to the configuration of a class. The format\
      \ of the section header is typically <tt>[package.classname]</tt> but not always.</p>\n\
      <p>An example INI file section showning the <i>initialisation style</i> of each\
      \ variable type is shown below.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"br0\">[</span>MyPackage.<span class=\"me0\">MyMutator</span><span\
      \ class=\"br0\">]</span>\nIntegerValue<span class=\"sy0\">=</span><span class=\"\
      nu0\">1</span>\nbBooleanValue<span class=\"sy0\">=</span><span class=\"kw6\"\
      >False</span>\nFloatValue<span class=\"sy0\">=</span><span class=\"nu0\">0.350000</span>\n\
      ClassName<span class=\"sy0\">=</span>UMenu.<span class=\"me0\">UMenuModMenu</span>\n\
      \ \nMyStaticStringArray<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"kw5\">string</span>\
      \ element <span class=\"nu0\">0</span>\nMyStaticStringArray<span class=\"br0\"\
      >[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"\
      sy0\">=</span><span class=\"kw5\">string</span> element <span class=\"nu0\"\
      >1</span>\nMyStaticStringArray<span class=\"br0\">[</span><span class=\"nu0\"\
      >2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"\
      kw5\">string</span> element <span class=\"nu0\">0</span>\n \nMyDynamicIntArray<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>\nMyDynamicIntArray<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">1</span>\nMyDynamicIntArray<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">2</span>\nMyDynamicIntArray<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">3</span>\n \nUWindowKey<span class=\"\
      sy0\">=</span>IK_None</pre></div>\n</div>\n<p>The most important thing to note\
      \ about the above example is the difference between the initialisation of the\
      \ static and dynamic arrays.</p>\n<p>When a static array is specified all elements\
      \ in the array are saved to the INI file, even though they may be empty (or\
      \ contain NULL values). Also, the index of the element is stored with the value.</p>\n\
      <p>When a <a href=\"/Legacy:Dynamic_Array\" title=\"Legacy:Dynamic Array\">dynamic\
      \ array</a> is specified then the element indexes are ommitted and the variable\
      \ name of the dynamic array is used in multiple assignments. The <i>EditPackages=...</i>\
      \ lines in the UnrealTournament.ini file are a real life example of the initialisation\
      \ of a dynamic array.</p>\n<p>Although you can comment an INI file using the\
      \ <b>;</b>, <b>#</b> symbols or an apostraphy, all comments are lost as soon\
      \ as the INI file is updated by a save of the configuration unless they are\
      \ within a section (under a heading, see example) <b>and</b> have an <b>=</b>\
      \ sign in them. You can use a few different ways to comment out lines. Note\
      \ that I made up a section that is not related to any class, but it makes all\
      \ comments with an <b>=</b> sign in them endure updates of the ini file. This\
      \ will also work under any existing section.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"br0\">[</span>Comments<span class=\"br0\">]</span>\n\
      rem<span class=\"sy0\">=</span>this is a test <span class=\"kw2\">for</span>\
      \ comments.</pre></div>\n</div>\n<p>Note that \"rem=\", \"comment=\", \"DonkeyFeet=\"\
      , will all work to start a comment line.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:INI_File?section=1\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:INT_File\" title=\"Legacy:INT\
      \ File\">INT file</a></li>\n<li><a href=\"/Legacy:Config_Vars_And_.Ini_Files\"\
      \ title=\"Legacy:Config Vars And .Ini Files\">Config Vars And .Ini Files</a></li>\n\
      <li><a href=\"/Legacy:File_Format\" title=\"Legacy:File Format\">File format</a></li>\n\
      <li><a href=\"/Legacy:Game_Ini_File\" title=\"Legacy:Game Ini File\">Game Ini\
      \ File</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\">Discussion</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:INI_File?section=2\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\n<!--\
      \ \nNewPP limit report\nCPU time usage: 0.049 seconds\nReal time usage: 0.122\
      \ seconds\nPreprocessor visited node count: 25/1000000\nPreprocessor generated\
      \ node count: 52/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:1495-0!*!0!!*!*!* and timestamp 20221118011246 and revision\
      \ id 3746\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Game Ini File"
  - ns: 100
    exists: true
    name: "Legacy:File Format"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:Dynamic Array"
  - ns: 100
    exists: true
    name: "Legacy:Config Vars And .Ini Files"
  - ns: 100
    exists: true
    name: "Legacy:INT File"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "1"
    index: "1"
    fromtitle: "Legacy:INI_File"
    byteoffset: 2472
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "2"
    index: "2"
    fromtitle: "Legacy:INI_File"
    byteoffset: 2668
    anchor: "Discussion"
  displaytitle: "Legacy:INI File"
  iwlinks: []
  wikitext:
    text: "[[Legacy:Unreal Engine|Unreal Engine]] based games make use of one or more\
      \ INI files to hold configuration information for the classes used within the\
      \ application running.\n\nSome mods also use their own configuration file to\
      \ avoid cluttering up the main program INI file and making their mod easier\
      \ to install and uninstall.  You can learn more about how this is done by reading\
      \ about [[Legacy:Config Vars And .Ini Files|Config Vars And .Ini Files]].\n\n\
      The INI file is broken into sections each with its own header.  Each section\
      \ within the INI file corresponds to the configuration of a class.  The format\
      \ of the section header is typically <tt>[package.classname]</tt> but not always.\n\
      \nAn example INI file section showning the ''initialisation style'' of each\
      \ variable type is shown below.\n\n<uscript>\n[MyPackage.MyMutator]\nIntegerValue=1\n\
      bBooleanValue=False\nFloatValue=0.350000\nClassName=UMenu.UMenuModMenu\n\nMyStaticStringArray[0]=string\
      \ element 0\nMyStaticStringArray[1]=string element 1\nMyStaticStringArray[2]=string\
      \ element 0\n\nMyDynamicIntArray=0\nMyDynamicIntArray=1\nMyDynamicIntArray=2\n\
      MyDynamicIntArray=3\n\nUWindowKey=IK_None\n</uscript>\n\nThe most important\
      \ thing to note about the above example is the difference between the initialisation\
      \ of the static and dynamic arrays.\n\nWhen a static array is specified all\
      \ elements in the array are saved to the INI file, even though they may be empty\
      \ (or contain NULL values).  Also, the index of the element is stored with the\
      \ value.\n\nWhen a [[Legacy:Dynamic Array|dynamic array]] is specified then\
      \ the element indexes are ommitted and the variable name of the dynamic array\
      \ is used in multiple assignments.  The ''EditPackages=...'' lines in the UnrealTournament.ini\
      \ file are a real life example of the initialisation of a dynamic array.\n\n\
      Although you can comment an INI file using the ''';''', '''#''' symbols or an\
      \ apostraphy, all comments are lost as soon as the INI file is updated by a\
      \ save of the configuration unless they are within a section (under a heading,\
      \ see example) '''and''' have an '''=''' sign in them. You can use a few different\
      \ ways to comment out lines. Note that I made up a section that is not related\
      \ to any class, but it makes all comments with an '''=''' sign in them endure\
      \ updates of the ini file. This will also work under any existing section.\n\
      \n<uscript>\n[Comments]\nrem=this is a test for comments.\n</uscript>\n\nNote\
      \ that \"rem=\", \"comment=\", \"DonkeyFeet=\", will all work to start a comment\
      \ line.\n\n==Related Topics==\n* [[Legacy:INT File|INT file]]\n* [[Legacy:Config\
      \ Vars And .Ini Files|Config Vars And .Ini Files]]\n* [[Legacy:File Format|File\
      \ format]]\n* [[Legacy:Game Ini File|Game Ini File]]\n\n==Discussion=="
  properties: []
  revId: 3746
name: "Legacy:INI File"
revision:
  revid: 3746
  parentid: 3748
  user: "12.20.23.6"
  timestamp: 1206472170.000000000
  comment: "*"
timestamp: 1668767288.672329000
