---
parse:
  title: "Legacy:AI Scripting Reference"
  text:
    text: "<p>Commands for <a href=\"/Legacy:Unreal_2\" title=\"Legacy:Unreal 2\"\
      >Unreal 2</a>'s <a href=\"/Legacy:AI_Scripting\" title=\"Legacy:AI Scripting\"\
      >AI Scripting</a> system.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div\
      \ id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1\
      \ tocsection-1\"><a href=\"#Commands\"><span class=\"tocnumber\">1</span> <span\
      \ class=\"toctext\">Commands</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"\
      ><a href=\"#Events\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Events</span></a></li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#Related_Topics\"\
      ><span class=\"tocnumber\">3</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Commands\">Commands</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:AI_Scripting_Reference?section=1\" title=\"Edit section:\
      \ Commands\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>addammo</dt>\n<dd><i><b>ammostring amount [maxclip]</b></i> gives\
      \ N units of specified ammo to NPC, if maxclip=1 makes sure clip is as full\
      \ as possible</dd>\n<dt>agentbind</dt>\n<dd><i><b>inputname valuename</b></i>\
      \ sets and locks an agent input to a given value, for characters with agent-driven\
      \ meshes</dd>\n<dt>agentcall</dt>\n<dd><i><b>actionname [wait]</b></i> calls\
      \ an agent action of the given name, for characters with agent-driven meshes</dd>\n\
      <dt>agentexecute</dt>\n<dd><i><b>actiontext [wait]</b></i> compiles and executes\
      \ a GAL string on-the-fly as if were inside an action, and calls it</dd>\n<dt>agentunbind</dt>\n\
      <dd><i><b>inputname</b></i> unlocks an agent input previously locked and set\
      \ with AgentBind</dd>\n<dt>animloop</dt>\n<dd><i><b>name [rate tweentime [wait]]</b></i>\
      \ loops specified anim on channel 0</dd>\n<dt>animloopex</dt>\n<dd><i><b>channel\
      \ name [rate tweentime [wait]]</b></i> loops specified anim on arbitrary channel</dd>\n\
      <dt>animplay</dt>\n<dd><i><b>name [rate tweentime [wait]]</b></i> plays specified\
      \ anim on channel 0</dd>\n<dt>animplayex</dt>\n<dd><i><b>channel name [rate\
      \ tweentime [wait]]</b></i> plays specified anim on arbitrary channel</dd>\n\
      <dt>animrelease</dt>\n<dd>allow NPC to control anims (currently idle only)</dd>\n\
      <dt>animtween</dt>\n<dd><i><b>name [tweentime [wait]]</b></i> tweens specified\
      \ anim on channel 0</dd>\n<dt>animtweenex</dt>\n<dd><i><b>channel name [tweentime\
      \ [wait]]</b></i> tweens specified anim on arbitrary channel</dd>\n<dt>call</dt>\n\
      <dd><i><b>label</b></i> pushes line after current one and jumps to given label</dd>\n\
      <dt>callscript</dt>\n<dd><i><b>scriptname</b></i> pushes current script state\
      \ and switches to specified file</dd>\n<dt>callend</dt>\n<dd>aborts any previously\
      \ pushed call (can no longer return)</dd>\n<dt>clearevents</dt>\n<dd>clears\
      \ any current onevents</dd>\n<dt>cleartimers</dt>\n<dd>clears any current general\
      \ timers</dd>\n<dt>cleartriggers</dt>\n<dd>clears any current ontriggers</dd>\n\
      <dt>consolecommand</dt>\n<dd><i><b>command</b></i> executes given console command</dd>\n\
      <dt>debugai</dt>\n<dd><i><b>0/1</b></i> enables/disables debug AI mode in controlled\
      \ NPC</dd>\n<dt>debugaievents</dt>\n<dd><i><b>0/1</b></i> enables/disables debug\
      \ events mode in controlled NPC</dd>\n<dt>debugaiflags</dt>\n<dd><i><b>###</b></i>\
      \ explicitely sets debug AI flags in controlled NPC</dd>\n<dt>debugmode</dt>\n\
      <dd><i><b>flags</b></i> enables/disables various debug modes for the script\
      \ controller</dd>\n<dt>decproperty</dt>\n<dd><i><b>name property value [#]</b></i>\
      \ decrements (integer) property in named actor by 1 or by #</dd>\n<dt>deployinventory</dt>\n\
      <dd><i><b>S [1]</b></i> deploy given inventory item [alt deploy it]</dd>\n<dt>destroy</dt>\n\
      <dd>destroy controlled NPC (and controller)</dd>\n<dt>dialogdisable</dt>\n<dd><i><b>topicname</b></i>\
      \ disable this dialog node</dd>\n<dt>dialogenable</dt>\n<dd><i><b>topicname</b></i>\
      \ enable this dialog node</dd>\n<dt>dialogfar</dt>\n<dd><i><b>topicname speaker1\
      \ [speaker2]</b></i> starts dialog b/w 2 npcs regardless of distance</dd>\n\
      <dt>dialogfarwait</dt>\n<dd><i><b>topicname speaker1 [speaker2]</b></i> waits\
      \ for dialog b/w 2 npcs to finish</dd>\n<dt>dialoginitiate</dt>\n<dd><i><b>speaker\
      \ topicname</b></i> tries to initiate given dialog with given target</dd>\n\
      <dt>dialogterminate</dt>\n<dd><i><b>speaker</b></i> tries to remove NPC from\
      \ dialog</dd>\n<dt>directionalpatrol</dt>\n<dd><i><b>0/1</b></i> whether NPC\
      \ faces in direction of patrol destination</dd>\n<dt>dormant</dt>\n<dd><i><b>0/1\
      \ [1]</b></i> toggle whether NPC (Pawn and Controller) is dormant (bStasis=true\
      \ and Physics=PHYS_None) [1] means stay dormant even if script removed?</dd>\n\
      <dt>dropinventory</dt>\n<dd><i><b>S</b></i> drop given inventory item</dd>\n\
      <dt>enableprobeevent</dt>\n<dd><i><b>probename 0|1</b></i> enables/disables\
      \ NPC probe event (for performance) e.g. enableprobeevent seeplayer 0 -&gt;\
      \ no more seeplayer events</dd>\n<dt>enablexmphandling</dt>\n<dd><i><b>0/1</b></i>\
      \ enables/disables NPC reacting to XMP items (inert 0/1 sets this to 1/0 use\
      \ enablexmphandling 0/1 to override this).</dd>\n<dt>error</dt>\n<dd>used internally</dd>\n\
      <dt>eventdisable</dt>\n<dd><i><b>event</b></i> disables event</dd>\n<dt>eventenable</dt>\n\
      <dd><i><b>event</b></i> enables event</dd>\n<dt>eventwait</dt>\n<dd><i><b>event</b></i>\
      \ waits until event occurs</dd>\n<dt>findactor</dt>\n<dd><i><b>[name Min Max\
      \ Type Vis Num gotolabel targetlabel]</b></i> searches for actors in level (all\
      \ args optional)</dd>\n<dt>fire</dt>\n<dd><i><b>[duration]</b></i> fire (weapon\
      \ / animation-based) for given duration</dd>\n<dt>firealt</dt>\n<dd><i><b>[duration]</b></i>\
      \ alt fire (weapon / animation-based) for given duration</dd>\n<dt>gib</dt>\n\
      <dd><i><b>[bDestroy] [gorelevel]</b></i> gib controlled NPC. If gib fails, bDestroy\
      \ determines if npc is killed or destroyed. Gore level overrides the gibset's\
      \ default gore level</dd>\n<dt>giball</dt>\n<dd><i><b>targetclass [bDestroy]\
      \ [gorelevel]</b></i> gib all actors of the given class. . If gib fails, bDestroy\
      \ determines if npc is killed or destroyed. Gore level overrides the gibset's\
      \ default gore level</dd>\n<dt>giveinventory</dt>\n<dd><i><b>inventorystring</b></i>\
      \ gives the specified inventory item to the NPC</dd>\n<dt>giveitemtoplayer</dt>\n\
      <dd><i><b>inventorystring [ammocount]</b></i> give item to player, if ammocount\
      \ treats as ammo and adds this much ammo to player's inventory</dd>\n<dt>givetosseditem</dt>\n\
      <dd><i><b>inventorystring</b></i> add item to tossed items list</dd>\n<dt>gotoactor</dt>\n\
      <dd><i><b>targetname [dist [face]]</b></i> sends NPC to specifed actor at specified\
      \ dist (error if target not found), face=1 ==&gt; try to face target (e.g. for\
      \ initiating dialog)</dd>\n<dt>gotoactorsafe</dt>\n<dd><i><b>targetname [dist\
      \ [face]]</b></i> sends NPC to specifed actor at specified dist (not an error\
      \ if target not found), face=1 ==&gt; try to face target (e.g. for initiating\
      \ dialog)</dd>\n<dt>gotolabel</dt>\n<dd><i><b>label</b></i> jumps to given label</dd>\n\
      <dt>incproperty</dt>\n<dd><i><b>name property value [#]</b></i> increments (integer)\
      \ property in named actor by 1 or by #</dd>\n</dl>\n<dl>\n<dt>inert</dt>\n<dd><i><b>0/1</b></i>\
      \ toggles NPC reacting to sensory input – shorthand for toggling bump, hearnoise,\
      \ seeplayer, tookdamage</dd>\n<dt>handlergroup</dt>\n<dd>denotes start of a\
      \ new handler groups (can't be in one currently?)</dd>\n<dt>handlergroupend</dt>\n\
      <dd>denotes end of a new handler groups (must be in one currently)</dd>\n<dt>headtracking</dt>\n\
      <dd><i><b>0/1</b></i></dd>\n<dt>jump</dt>\n<dd><i><b>X Y Z</b></i> launch NPC\
      \ in given direction</dd>\n<dt>kill</dt>\n<dd>kill controlled NPC (goes into\
      \ dying state)</dd>\n<dt>killall</dt>\n<dd><i><b>targetclass</b></i> kill all\
      \ actors of the given class</dd>\n<dt>lockstep</dt>\n<dd><i><b>name [f]</b></i>\
      \ maintain given or current distance from named actor (for keeping squads in\
      \ formation)</dd>\n<dt>message</dt>\n<dd><i><b>string [0|1|2]</b></i> displays\
      \ the given message in-game (surround with \"\" for multiple words) 0: onscreen\
      \ 1: log 2: onscreen and log</dd>\n<dt>onevent</dt>\n<dd><i><b>xxx [gotolabel\
      \ ### [clear]]</b></i> when event xxx occurs, jumps to given label (or disables\
      \ previous onevent)</dd>\n<dt>ontimer</dt>\n<dd><i><b>index [delay repeat gotolabel\
      \ ###]</b></i> adds a general-purpose timer</dd>\n<dt>ontrigger</dt>\n<dd><i><b>name\
      \ [gotolabel ###]</b></i> when trigger with given event name occurs, jumps to\
      \ given label (or disables previous ontrigger)</dd>\n<dt>playsound</dt>\n<dd><i><b>name\
      \ sound [slot [volume [bNoOverride [Radius [Pitch]]]]]</b></i> plays sound through\
      \ named actor (or self=controlled NPC)</dd>\n<dt>playsoundwait</dt>\n<dd><i><b>name\
      \ sound [slot [volume [bNoOverride [Radius [Pitch]]]]]</b></i> plays sound through\
      \ named actor (or self=controlled NPC) and script waits for sound to finish</dd>\n\
      <dt>playsoundtableslot</dt>\n<dd><i><b>name slot</b></i> play sound belonging\
      \ to the specified group from named pawn's sound table</dd>\n<dt>playsoundtableslotwait</dt>\n\
      <dd><i><b>name slot</b></i> play sound belonging to the specified group from\
      \ named pawn's sound table and script waits for sound to finish</dd>\n<dt>removeinventory</dt>\n\
      <dd><i><b>[string]</b></i> removes all [or the specified] inventory from the\
      \ NPC</dd>\n<dt>removeinventoryfromplayer</dt>\n<dd><i><b>[string]</b></i> removes\
      \ all [or the specified] inventory from the player</dd>\n<dt>removeitemfromplayer</dt>\n\
      <dd><i><b>inventorystring</b></i> add item to player's inventory</dd>\n<dt>removetosseditem</dt>\n\
      <dd><i><b>inventorystring</b></i> remove item from tossed items list</dd>\n\
      <dt>resumepatrol</dt>\n<dd><i><b>startlabel endlabel</b></i> finds the \"best\"\
      \ destination at which the resume patrolling and jumps to that line</dd>\n<dt>return</dt>\n\
      <dd>returns to most recently pushed line or script state (error if no applicable)</dd>\n\
      <dt>rotate</dt>\n<dd><i><b>#.#</b></i> rotate #.# degrees clockwise (right)\
      \ relative to forward</dd>\n<dt>savedestination</dt>\n<dd>copies GotoActorTarget\
      \ into SavedDestination for later use with resumepatrol</dd>\n<dt>sendevent</dt>\n\
      <dd><i><b>EventName [triggerpawns]</b></i> triggers all Actors with tag that\
      \ matches given Event, or all NPCs</dd>\n<dt>setactorrangetest</dt>\n<dd><i><b>target\
      \ distance</b></i> sets the InRangeActor and InRangeDistance for ActorInRange/ActorOutOfRange\
      \ events</dd>\n<dt>setaimodds</dt>\n<dd><i><b>odds</b></i> sets odds of hitting\
      \ target when firing weapon under script control</dd>\n<dt>setalert</dt>\n<dd><i><b>0/1</b></i>\
      \ controls whether NPC uses \"alert\" animations</dd>\n<dt>setammo</dt>\n<dd><i><b>ammostring\
      \ amount [maxclip]</b></i> makes sure NPC has exactly specified amount of given\
      \ type of ammo, if maxclip=1 makes sure clip is as full as possible</dd>\n<dt>setfocus</dt>\n\
      <dd><i><b>[name]</b></i> set scripted focus to given actor or clear focus</dd>\n\
      <dt>sethealth</dt>\n<dd><i><b>x.x</b></i> sets controlled NPC's health to x.x</dd>\n\
      <dt>setinventory</dt>\n<dd><i><b>targetname inventorystring</b></i> sets target's\
      \ selected inventory to x.x</dd>\n<dt>setlocation</dt>\n<dd><i><b>locationname\
      \ [allowfail]</b></i> move pawn to location of locationame</dd>\n<dt>setlocationnamed</dt>\n\
      <dd><i><b>targetname locationname [allowfail]</b></i> move actor matching targetname\
      \ to location of locationame</dd>\n<dt>setlocationvector</dt>\n<dd><i><b>targetname\
      \ X Y Z</b></i> move targetname to given coordinates</dd>\n<dt>setmovespeed</dt>\n\
      <dd><i><b>speed [stance]</b></i> 0.01 to MaxDesiredSpeed (usually 1.0) – set\
      \ speed used for scripted movement</dd>\n<dt>setmovespeedauto</dt>\n<dd><i><b>speed</b></i>\
      \ 0.01 to MaxDesiredSpeed (usually 1.0) – set speed used for autonomous movement</dd>\n\
      <dt>setorders</dt>\n<dd><i><b>orders [OrdersObject [fparam [ordergiver]]]</b></i>\
      \ sets/clears orders</dd>\n<dt>setphysics</dt>\n<dd><i><b>physics</b></i></dd>\n\
      <dt>setproperty</dt>\n<dd><i><b>targetname property value</b></i> sets property\
      \ in named actor to value</dd>\n<dt>setproperties</dt>\n<dd><i><b>classname\
      \ property value</b></i> sets given property in all actors which are a classname</dd>\n\
      <dt>setsatellite</dt>\n<dd><i><b>satellitename [targetname]</b></i> binds a\
      \ mesh satellite node of the given name to the given target, for dynamic animations</dd>\n\
      <dt>setscript</dt>\n<dd><i><b>filename [startlabel]</b></i> switches over to\
      \ the given script [at the given label]</dd>\n<dt>setskill</dt>\n<dd><i><b>skill</b></i>\
      \ set NPC's skill to given value (0.0..1.0)</dd>\n<dt>setstance</dt>\n<dd><i><b>stand\
      \ / crouch / prone</b></i> specifies stance that NPC should use while patrolling</dd>\n\
      <dt>setstationary</dt>\n<dd><i><b>1/0 [1]</b></i> makes NPC immobile/mobile,\
      \ optionally forever</dd>\n<dt>settacticalmovetype</dt>\n<dd><i><b>0/1/2</b></i>\
      \ sets tactical move type to use during scripted movement (0: none 1: basic\
      \ 2: serpentine)</dd>\n<dt>setweapon</dt>\n<dd><i><b>weaponstring</b></i> set\
      \ NPC's weapon to specified one, spawning it if necessary</dd>\n<dt>shutdown</dt>\n\
      <dd><i><b>1/0</b></i> makes NPC as inert as possible without actually making\
      \ it dormant or removing its controller</dd>\n<dt>sleep</dt>\n<dd><i><b>[x.x]</b></i>\
      \ puts controller to sleep for x.x seconds (defaults to \"forever\")</dd>\n\
      <dt>sleeprand</dt>\n<dd><i><b>[x.x]</b></i> puts controller to sleep for random\
      \ time in 0..x.x seconds (x.x defaults to 1.0)</dd>\n<dt>spawn</dt>\n<dd><i><b>targetname\
      \ S [1 [filename [startlabel]]]</b></i> spawn given actor at targetname's location,\
      \ if 1 is given, failure = error, optionally gives spawned NPCs a script</dd>\n\
      <dt>stop</dt>\n<dd>stops execution, detaches script controller</dd>\n<dt>stopmovement</dt>\n\
      <dd>stops NPC movement</dd>\n<dt>stopsound</dt>\n<dd><i><b>slot [bStopNoOverrideSounds]</b></i>\
      \ stops any sounds played through the named actor on the specified sound slot</dd>\n\
      <dt>testactorinrange</dt>\n<dd><i><b>name distance</b></i> if given actor is\
      \ outside given distance of pawn ==&gt; next command skipped</dd>\n<dt>testproperty</dt>\n\
      <dd><i><b>name property value</b></i> property&#160;!= value ==&gt; next command\
      \ skipped (string comparison)</dd>\n<dt>testpropertyci</dt>\n<dd><i><b>name\
      \ property value</b></i> property&#160;!= value ==&gt; next command skipped\
      \ (case-insensitive string comparison)</dd>\n<dt>testpropertye</dt>\n<dd><i><b>name\
      \ property value</b></i> property&#160;!= value ==&gt; next command skipped\
      \ (numerical comparison)</dd>\n<dt>testpropertyg</dt>\n<dd><i><b>name property\
      \ value</b></i> property &lt;= value ==&gt; next command skipped (numerical\
      \ comparison)</dd>\n<dt>testpropertyge</dt>\n<dd><i><b>name property value</b></i>\
      \ property &lt; value ==&gt; next command skipped (numerical comparison)</dd>\n\
      <dt>testpropertyl</dt>\n<dd><i><b>name property value</b></i> property &gt;=\
      \ value ==&gt; next command skipped (numerical comparison)</dd>\n<dt>testpropertyle</dt>\n\
      <dd><i><b>name property value</b></i> property &gt; value ==&gt; next command\
      \ skipped (numerical comparison)</dd>\n<dt>testrandom</dt>\n<dd><i><b>float</b></i>\
      \ (if random number in 0.0..1.0 &gt; value ==&gt; next command skipped)</dd>\n\
      <dt>teststate</dt>\n<dd><i><b>name name</b></i> (false ==&gt; next command skipped)</dd>\n\
      <dt>turntoactor</dt>\n<dd><i><b>targetname [LOS [Lock]]</b></i> turn NPC to\
      \ face named actor, LOS=0 ==&gt; LOS not needed, LOS=1 ==&gt; LOS needed, LOS=2\
      \ ==&gt; LOS not needed but turn anyway, Lock means target actor won't be cleared</dd>\n\
      <dt>unuse</dt>\n<dd><i><b>name</b></i> unuse the named actor</dd>\n<dt>use</dt>\n\
      <dd><i><b>name</b></i> use the named actor</dd>\n<dt>usepickups</dt>\n<dd><i><b>0/1</b></i>\
      \ if 0, won't go after or pickup pickups</dd>\n<dt>weaponload</dt>\n<dd>load\
      \ current weapon</dd>\n<dt>WeaponSetAmmoType</dt>\n<dd><i><b>ammoname</b></i></dd>\n\
      <dt>WeaponSupportsAltFire</dt>\n<dd><i><b>weaponname 0/1</b></i> disables/enables\
      \ NPC being able to alt fire weapon</dd>\n<dt>WeaponSupportsFire</dt>\n<dd><i><b>weaponname\
      \ 0/1</b></i> disables/enables NPC being able to primary fire weapon</dd>\n\
      </dl>\n<p><br /></p>\n<h2><span class=\"mw-headline\" id=\"Events\">Events</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:AI_Scripting_Reference?section=2\" title=\"Edit section:\
      \ Events\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt>ActorInRange</dt>\n<dd>generated when the InRangeActor comes within\
      \ the InRangeDistance</dd>\n<dt>ActorOutOfRange</dt>\n<dd>generated once when\
      \ the InRangeActor comes goes out of the InRangeDistance</dd>\n<dt>AnimEnd</dt>\n\
      <dd>goes to Controller unless Pawn has no Controller (dying state)</dd>\n<dt>AutoBegin</dt>\n\
      <dd>goes to Controller, generated by U2NPCControllerScriptable</dd>\n<dt>AutoEnd</dt>\n\
      <dd>goes to Controller, generated by Controller &#160;: seems to be used for\
      \ after fighting conditions</dd>\n<dt>BumpEnemy</dt>\n<dd>NotifyBump –&gt; Controller\
      \ –&gt; BumpEnemy/Friend/Other</dd>\n<dt>BumpFriend</dt>\n<dd>NotifyBump –&gt;\
      \ Controller –&gt; BumpEnemy/Friend/Other</dd>\n<dt>BumpOther</dt>\n<dd>NotifyBump\
      \ –&gt; Controller –&gt; BumpEnemy/Friend/Other</dd>\n<dt>BumpPlayer</dt>\n\
      <dd>not an actual event: eventwait BumpPlayer –&gt; BumpEnemy/BumpFriend checked\
      \ for player</dd>\n<dt>DestinationReached</dt>\n<dd>goes to Controller</dd>\n\
      <dt>DialogBegin</dt>\n<dd>generated by Controller before destroyed</dd>\n<dt>DialogUnPause</dt>\n\
      <dd>generated when dialog unpauses npc's script</dd>\n<dt>Died</dt>\n<dd>generated\
      \ by Controller before destroyed</dd>\n<dt>EnemyNotVisible</dt>\n<dd>goes to\
      \ Controller</dd>\n<dt>HearNoiseFriendly</dt>\n<dd>HearNoise –&gt; Controller\
      \ –&gt; HearNoiseFriendly</dd>\n<dt>HearNoiseOther</dt>\n<dd>HearNoise –&gt;\
      \ Controller –&gt; HearNoiseOther</dd>\n<dt>HearNoiseThreat</dt>\n<dd>HearNoise\
      \ –&gt; Controller –&gt; HearNoiseThreat</dd>\n<dt>InheritEnemy</dt>\n<dd>generated\
      \ when NPC could inherit another NPC's Enemy</dd>\n<dt>ScriptedLanding</dt>\n\
      <dd>generated when NPC in scripted state lands (not passed back to NPC)</dd>\n\
      <dt>SeeAlertFriend</dt>\n<dd>SeeAlertFriend –&gt; Controller</dd>\n<dt>SeeEnemy</dt>\n\
      <dd>SeeEnemy –&gt; Controller</dd>\n<dt>SeeFriend</dt>\n<dd>SeeFriend –&gt;\
      \ Controller –&gt; SeeFriend</dd>\n<dt>SeeOther</dt>\n<dd>SeeOther –&gt; Controller\
      \ –&gt; SeeOther</dd>\n<dt>SeePlayer</dt>\n<dd>not an actual event: eventwait\
      \ SeePlayer –&gt; SeeEnemy/SeeFriend checked for player</dd>\n<dt>TakeDamage</dt>\n\
      <dd>goes to Pawn</dd>\n<dt>TookDamage</dt>\n<dd>eventTakeDamage –&gt; TookDamage\
      \ generated by U2NPCControllerScriptable</dd>\n<dt>TookDamageEnemy</dt>\n<dd>generated\
      \ internall from TookDamage for use by scripts only</dd>\n<dt>TookDamageFriend</dt>\n\
      <dd>generated internall from TookDamage for use by scripts only</dd>\n<dt>Trigger</dt>\n\
      <dd>goes to Pawn then Controller</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:AI_Scripting_Reference?section=3\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Artificial_Intelligence\"\
      \ title=\"Legacy:Artificial Intelligence\">Artificial Intelligence</a> – A super\
      \ topic for all AI</li>\n<li><a href=\"/Legacy:AI_Scripting\" title=\"Legacy:AI\
      \ Scripting\">AI Scripting</a></li>\n<li><a href=\"/Legacy:ScriptedPawn\" title=\"\
      Legacy:ScriptedPawn\">ScriptedPawn</a></li>\n</ul>\n<p><br /></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Discussion\">Discussion</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:AI_Scripting_Reference?section=4\"\
      \ title=\"Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p><b>Unknown:</b> Maybe explain what these are and where\
      \ to put them?</p>\n<p><b>Unknown:</b> I'll put that stuff in <a href=\"/Legacy:Basic_AI_Scripting_Tutorial\"\
      \ title=\"Legacy:Basic AI Scripting Tutorial\">Basic AI Scripting Tutorial</a>\
      \ when I make it.</p>\n<p><b>SuperApe:</b> This page needs help. Is it purely\
      \ U2? It should be applicable to all versions. Since, I'm working on the <a\
      \ href=\"/Legacy:Basic_AI_Scripting_Tutorial\" title=\"Legacy:Basic AI Scripting\
      \ Tutorial\">Basic AI Scripting Tutorial</a>, I may revise this.</p>\n<hr />\n\
      <p><a href=\"/Category:Legacy_Mapping\" title=\"Category:Legacy Mapping\">Category:Legacy\
      \ Mapping</a></p>\n<p><a href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy\
      \ To Do\">Category:Legacy To Do</a> – This page needs to be updated and made\
      \ relevant to all Unreal versions as well as the current wiki structure.</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.068 seconds\nReal time usage:\
      \ 0.070 seconds\nPreprocessor visited node count: 17/1000000\nPreprocessor generated\
      \ node count: 36/1000000\nPost‐expand include size: 44/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:415-0!*!0!!en!*!* and timestamp 20221118024652 and revision\
      \ id 1370\n -->\n"
  categories:
  - sortkey: "AI Scripting Reference"
    name: "Legacy_To_Do"
  - sortkey: "AI Scripting Reference"
    name: "Legacy_Mapping"
  links:
  - ns: 14
    exists: true
    name: "Category:Legacy Mapping"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedPawn"
  - ns: 100
    exists: true
    name: "Legacy:Artificial Intelligence"
  - ns: 100
    exists: true
    name: "Legacy:Unreal 2"
  - ns: 100
    exists: true
    name: "Legacy:Basic AI Scripting Tutorial"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:AI Scripting"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Commands"
    number: "1"
    index: "1"
    fromtitle: "Legacy:AI_Scripting_Reference"
    byteoffset: 90
    anchor: "Commands"
  - toclevel: 1
    level: "2"
    line: "Events"
    number: "2"
    index: "2"
    fromtitle: "Legacy:AI_Scripting_Reference"
    byteoffset: 26876
    anchor: "Events"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "3"
    index: "3"
    fromtitle: "Legacy:AI_Scripting_Reference"
    byteoffset: 31995
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "4"
    index: "4"
    fromtitle: "Legacy:AI_Scripting_Reference"
    byteoffset: 32189
    anchor: "Discussion"
  displaytitle: "Legacy:AI Scripting Reference"
  iwlinks: []
  wikitext:
    text: "Commands for [[Legacy:Unreal 2|Unreal 2]]'s [[Legacy:AI Scripting|AI Scripting]]\
      \ system.\n\n==Commands ==\n\n;addammo\t\t\t: '''''ammostring amount [maxclip]'''''\t\
      \t\t\t\tgives N units of specified ammo to NPC, if maxclip=1 makes sure clip\
      \ is as full as possible                                                   \
      \                   \t\n;agentbind\t\t\t: '''''inputname valuename'''''\t\t\t\
      \t\t\tsets and locks an agent input to a given value, for characters with agent-driven\
      \ meshes                                                                   \
      \       \t\t\n;agentcall\t\t\t: '''''actionname [wait]'''''\t\t\t\t\t\tcalls\
      \ an agent action of the given name, for characters with agent-driven meshes\
      \                                                                          \
      \       \t\t\n;agentexecute\t\t\t: '''''actiontext [wait]'''''\t\t\t\t\t\tcompiles\
      \ and executes a GAL string on-the-fly as if were inside an action, and calls\
      \ it                                                                       \
      \   \t\t\n;agentunbind\t\t\t: '''''inputname'''''\t\t\t\t\t\t\tunlocks an agent\
      \ input previously locked and set with AgentBind                           \
      \                                                                       \t\t\
      \n;animloop\t\t\t: '''''name [rate tweentime [wait]]'''''\t\t\t\t\tloops specified\
      \ anim on channel 0                                                        \
      \                                                                        \t\t\
      \n;animloopex\t\t\t: '''''channel name [rate tweentime [wait]]'''''\t\t\t\t\
      loops specified anim on arbitrary channel                                  \
      \                                                                          \
      \            \t\t\n;animplay\t\t\t: '''''name [rate tweentime\t[wait]]'''''\t\
      \t\t\t\tplays specified anim on channel 0                                  \
      \                                                                          \
      \                    \t\t\n;animplayex\t\t\t: '''''channel name [rate tweentime\
      \ [wait]]'''''\t\t\t\tplays specified anim on arbitrary channel            \
      \                                                                          \
      \                                  \t\t\n;animrelease\t\t\t: \t\t\t\t\t\t\t\t\
      allow NPC to control anims (currently idle only)                           \
      \                                                                          \
      \            \t\t\n;animtween\t\t\t: '''''name [tweentime [wait]]'''''\t\t\t\
      \t\ttweens specified anim on channel 0                                     \
      \                                                                          \
      \                \t\t\n;animtweenex\t\t\t: '''''channel name [tweentime [wait]]'''''\t\
      \t\t\ttweens specified anim on arbitrary channel                           \
      \                                                                          \
      \                  \t\t\n;call\t\t\t\t: '''''label'''''\t\t\t\t\t\t\t\tpushes\
      \ line after current one and jumps to given label                          \
      \                                                                          \
      \       \t\t\n;callscript\t\t\t: '''''scriptname'''''\t\t\t\t\t\t\tpushes current\
      \ script state and switches to specified file                              \
      \                                                                         \t\
      \t\n;callend  \t\t\t: \t\t\t\t\t\t\t\taborts any previously pushed call (can\
      \ no longer return)                                                        \
      \                                                 \t\t\n;clearevents  \t\t\t\
      : \t\t\t\t\t\t\t\tclears any current onevents                              \
      \                                                                          \
      \                              \t\t\n;cleartimers  \t\t\t: \t\t\t\t\t\t\t\t\
      clears any current general timers                                          \
      \                                                                          \
      \            \t\t\n;cleartriggers\t\t\t: \t\t\t\t\t\t\t\tclears any current\
      \ ontriggers                                                               \
      \                                                                     \t\t\n\
      ;consolecommand  \t\t: '''''command'''''\t\t\t\t\t\t\texecutes given console\
      \ command                                                                  \
      \                                                                 \t\t\n;debugai\t\
      \t\t: '''''0/1'''''\t\t\t\t\t\t\t\tenables/disables debug AI mode in controlled\
      \ NPC                                                                      \
      \                                           \t\t\n;debugaievents\t\t\t: '''''0/1'''''\t\
      \t\t\t\t\t\t\tenables/disables debug events mode in controlled NPC         \
      \                                                                          \
      \                          \t\t\n;debugaiflags\t\t\t: '''''###'''''\t\t\t\t\t\
      \t\t\texplicitely sets debug AI flags in controlled NPC                    \
      \                                                                          \
      \                  \t\t\n;debugmode\t\t\t: '''''flags'''''\t\t\t\t\t\t\t\tenables/disables\
      \ various debug modes for the script controller                            \
      \                                                                       \t\t\
      \n;decproperty\t\t\t: '''''name property value [#]'''''\t\t\t\t\tdecrements\
      \ (integer) property in named actor by 1 or by #                           \
      \                                                                          \
      \   \t\t\n;deployinventory\t\t: '''''S [1]'''''\t\t\t\t\t\t\t\tdeploy given\
      \ inventory item [alt deploy it]                                           \
      \                                                                          \
      \ \t\t\n;destroy\t\t\t: \t\t\t\t\t\t\t\tdestroy controlled NPC (and controller)\
      \                                                                          \
      \                                                \t\t\n;dialogdisable\t\t\t\
      : '''''topicname'''''\t\t\t\t\t\t\tdisable this dialog node                \
      \                                                                          \
      \                                               \t\t\n;dialogenable\t\t\t: '''''topicname'''''\t\
      \t\t\t\t\t\tenable this dialog node                                        \
      \                                                                          \
      \                        \t\t\n;dialogfar\t\t\t: '''''topicname speaker1 [speaker2]'''''\t\
      \t\t\t\tstarts dialog b/w 2 npcs regardless of distance                    \
      \                                                                          \
      \                    \t\t\n;dialogfarwait\t\t\t: '''''topicname speaker1 [speaker2]'''''\t\
      \t\t\t\twaits for dialog b/w 2 npcs to finish                              \
      \                                                                          \
      \                    \t\t\n;dialoginitiate\t\t\t: '''''speaker topicname'''''\t\
      \t\t\t\t\ttries to initiate given dialog with given target                 \
      \                                                                          \
      \                      \t\t\n;dialogterminate\t\t: '''''speaker'''''\t\t\t\t\
      \t\t\ttries to remove NPC from dialog                                      \
      \                                                                          \
      \                  \t\t\n;directionalpatrol\t\t: '''''0/1'''''\t\t\t\t\t\t\t\
      \twhether NPC faces in direction of patrol destination                     \
      \                                                                          \
      \              \t\t\n;dormant\t\t\t: '''''0/1 [1]'''''\t\t\t\t\t\t\ttoggle whether\
      \ NPC (Pawn and Controller) is dormant (bStasis=true and Physics=PHYS_None)\
      \ [1] means stay dormant even if script removed?                          \t\
      \t\n;dropinventory\t\t\t: '''''S'''''\t\t\t\t\t\t\t\tdrop given inventory item\
      \                                                                          \
      \                                                              \t\t\n;enableprobeevent\t\
      \t: '''''probename 0|1'''''\t\t\t\t\t\t\tenables/disables NPC probe event (for\
      \ performance) e.g. enableprobeevent seeplayer 0 -> no more seeplayer events\
      \                                                 \t\t\n;enablexmphandling\t\
      \t: '''''0/1'''''\t\t\t\t\t\t\t\tenables/disables NPC reacting to XMP items\
      \ (inert 0/1 sets this to 1/0 use enablexmphandling 0/1 to override this). \
      \                                             \t\t\n;error\t\t\t\t:\t\t\t\t\t\
      \t\t\tused internally                                                      \
      \                                                                          \
      \                  \t\t\n;eventdisable\t\t\t: '''''event'''''\t\t\t\t\t\t\t\t\
      disables event                                                             \
      \                                                                          \
      \            \t\t\n;eventenable\t\t\t: '''''event'''''\t\t\t\t\t\t\t\tenables\
      \ event                                                                    \
      \                                                                          \
      \      \t\t\n;eventwait\t\t\t: '''''event'''''\t\t\t\t\t\t\t\twaits until event\
      \ occurs                                                                   \
      \                                                                      \t\t\n\
      ;findactor\t\t\t: '''''[name Min Max Type Vis Num gotolabel targetlabel]'''''\
      \    \t\tsearches for actors in level (all args optional)                  \
      \                                                                          \
      \                     \t\t\n;fire\t\t\t\t: '''''[duration]'''''\t\t\t\t\t\t\t\
      fire (weapon / animation-based) for given duration                         \
      \                                                                          \
      \            \t\t\n;firealt\t\t\t: '''''[duration]'''''\t\t\t\t\t\t\talt fire\
      \ (weapon / animation-based) for given duration                            \
      \                                                                          \
      \     \t\t\n;gib\t\t\t\t: '''''[bDestroy] [gorelevel]'''''\t\t\t\t\tgib controlled\
      \ NPC. If gib fails, bDestroy determines if npc is killed or destroyed. Gore\
      \ level overrides the gibset's default gore level                        \t\t\
      \n;giball\t\t\t\t: '''''targetclass [bDestroy] [gorelevel]'''''\t\t\t\tgib all\
      \ actors of the given class. . If gib fails, bDestroy determines if npc is killed\
      \ or destroyed. Gore level overrides the gibset's default gore level       \t\
      \t\n;giveinventory\t\t\t: '''''inventorystring'''''\t\t\t\t\t\tgives the specified\
      \ inventory item to the NPC                                                \
      \                                                                    \t\t\n\
      ;giveitemtoplayer\t\t: '''''inventorystring [ammocount]'''''\t\t\t\t\tgive item\
      \ to player, if ammocount treats as ammo and adds this much ammo to player's\
      \ inventory                                                                \
      \   \t\t\n;givetosseditem\t\t\t: '''''inventorystring'''''\t\t\t\t\t\tadd item\
      \ to tossed items list                                                     \
      \                                                                          \
      \     \t\t\n;gotoactor\t\t\t: '''''targetname [dist [face]]'''''\t\t\t\t\tsends\
      \ NPC to specifed actor at specified dist (error if target not found), face=1\
      \ ==> try to face target (e.g. for initiating dialog)                      \
      \      \t\t\n;gotoactorsafe\t\t\t: '''''targetname [dist [face]]'''''\t\t\t\t\
      \tsends NPC to specifed actor at specified dist (not an error if target not\
      \ found), face=1 ==> try to face target (e.g. for initiating dialog)       \
      \              \t\t\n;gotolabel\t\t\t: '''''label'''''\t\t\t\t\t\t\t\tjumps\
      \ to given label                                                           \
      \                                                                          \
      \        \t\t\n;incproperty\t\t\t: '''''name property value [#]'''''\t\t\t\t\
      \tincrements (integer) property in named actor by 1 or by #                \
      \                                                                          \
      \              \t\t\n\n;inert\t\t\t\t: '''''0/1'''''\t\t\t\t\t\t\t\ttoggles\
      \ NPC reacting to sensory input &ndash; shorthand for toggling bump, hearnoise,\
      \ seeplayer, tookdamage                                                    \
      \       \t\t\n;handlergroup\t\t\t: \t\t\t\t\t\t\t\tdenotes start of a new handler\
      \ groups (can't be in one currently?)                                      \
      \                                                         \t\t\n;handlergroupend\t\
      \t: \t\t\t\t\t\t\t\tdenotes end of a new handler groups (must be in one currently)\
      \                                                                          \
      \                         \t\t\n;headtracking\t\t\t: '''''0/1'''''\t       \
      \                                                                          \
      \                                                                          \
      \                                                           \t\t\n;jump\t\t\t\
      \t: '''''X Y Z'''''\t\t\t\t\t\t\t\tlaunch NPC in given direction           \
      \                                                                          \
      \                                               \t\t\n;kill\t\t\t\t: \t\t\t\t\
      \t\t\t\tkill controlled NPC (goes into dying state)                        \
      \                                                                          \
      \                    \t\t\n;killall\t\t\t: '''''targetclass'''''\t\t\t\t\t\t\
      \tkill all actors of the given class                                       \
      \                                                                          \
      \              \t\t\n;lockstep\t\t\t: '''''name [f]'''''\t\t\t\t\t\t\tmaintain\
      \ given or current distance from named actor (for keeping squads in formation)\
      \                                                                          \
      \  \t\t\n;message\t\t\t: '''''string [0|1|2]'''''\t\t\t\t\t\tdisplays the given\
      \ message in-game (surround with \"\" for multiple words) 0: onscreen 1: log\
      \ 2: onscreen and log                                                  \t\t\n\
      ;onevent\t\t\t: '''''xxx [gotolabel ### [clear]]'''''\t\t\t\t\twhen event xxx\
      \ occurs, jumps to given label (or disables previous onevent)              \
      \                                                                         \t\
      \t\n;ontimer\t\t\t: '''''index [delay repeat gotolabel ###]'''''\t\t\t\tadds\
      \ a general-purpose timer                                                  \
      \                                                                          \
      \         \t\t\n;ontrigger\t\t\t: '''''name [gotolabel ###]'''''\t\t\t\t\t\t\
      when trigger with given event name occurs, jumps to given label (or disables\
      \ previous ontrigger)                                                      \
      \           \t\t\n;playsound\t\t\t: '''''name sound [slot [volume [bNoOverride\
      \ [Radius [Pitch]]]]]'''''\tplays sound through named actor (or self=controlled\
      \ NPC)                                                                     \
      \                                    \t\t\n;playsoundwait\t\t\t: '''''name sound\
      \ [slot [volume [bNoOverride [Radius [Pitch]]]]]'''''\tplays sound through named\
      \ actor (or self=controlled NPC) and script waits for sound to finish      \
      \                                                              \t\t\n;playsoundtableslot\t\
      \t: '''''name slot'''''\t\t\t\t\t\t\tplay sound belonging to the specified group\
      \ from named pawn's sound table                                            \
      \                                            \t\t\n;playsoundtableslotwait\t\
      \t: '''''name slot'''''\t\t\t\t\t\t\tplay sound belonging to the specified group\
      \ from named pawn's sound table and script waits for sound to finish       \
      \                                            \t\t\n;removeinventory\t\t: '''''[string]'''''\t\
      \t\t\t\t\t\tremoves all [or the specified] inventory from the NPC          \
      \                                                                          \
      \                        \t\t\n;removeinventoryfromplayer\t: '''''[string]'''''\t\
      \t\t\t\t\t\tremoves all [or the specified] inventory from the player       \
      \                                                                          \
      \                        \t\t\n;removeitemfromplayer\t\t: '''''inventorystring'''''\t\
      \t\t\t\t\tadd item to player's inventory                                   \
      \                                                                          \
      \                      \t\t\n;removetosseditem\t\t: '''''inventorystring'''''\t\
      \t\t\t\t\tremove item from tossed items list                               \
      \                                                                          \
      \                      \t\t\n;resumepatrol\t\t\t: '''''startlabel endlabel'''''\t\
      \t\t\t\t\tfinds the \"best\" destination at which the resume patrolling and\
      \ jumps to that line                                                       \
      \                        \t\t\n;return\t\t\t\t:      \t\t\t\t\t\t\t\treturns\
      \ to most recently pushed line or script state (error if no applicable)    \
      \                                                                          \
      \      \t\t\n;rotate\t\t\t\t: '''''#.#'''''\t\t\t\t\t\t\t\trotate #.# degrees\
      \ clockwise (right) relative to forward                                    \
      \                                                                     \t\t\n\
      ;savedestination\t\t: \t\t\t\t\t\t\t\tcopies GotoActorTarget into SavedDestination\
      \ for later use with resumepatrol                                          \
      \                                           \t\t\n;sendevent  \t\t\t: '''''EventName\
      \ [triggerpawns]'''''\t\t\t\t\ttriggers all Actors with tag that matches given\
      \ Event, or all NPCs                                                       \
      \                                        \t\t\n;setactorrangetest\t\t: '''''target\
      \ distance'''''\t\t\t\t\t\tsets the InRangeActor and InRangeDistance for ActorInRange/ActorOutOfRange\
      \ events                                                                   \
      \             \t\t\n;setaimodds\t\t\t: '''''odds'''''\t\t\t\t\t\t\t\tsets odds\
      \ of hitting target when firing weapon under script control                \
      \                                                                          \
      \    \t\t\n;setalert\t\t\t: '''''0/1'''''\t\t\t\t\t\t\t\tcontrols whether NPC\
      \ uses \"alert\" animations                                                \
      \                                                                     \t\t\n\
      ;setammo\t\t\t: '''''ammostring amount [maxclip]'''''\t\t\t\t\tmakes sure NPC\
      \ has exactly specified amount of given type of ammo, if maxclip=1 makes sure\
      \ clip is as full as possible                                           \t\t\
      \n;setfocus\t\t\t: '''''[name]'''''\t\t\t\t\t\t\tset scripted focus to given\
      \ actor or clear focus                                                     \
      \                                                            \t\t\n;sethealth\t\
      \t\t: '''''x.x'''''\t\t\t\t\t\t\t\tsets controlled NPC's health to x.x     \
      \                                                                          \
      \                                               \t\t\n;setinventory\t\t\t: '''''targetname\
      \ inventorystring'''''\t\t\t\t\tsets target's selected inventory to x.x    \
      \                                                                          \
      \                                            \t\t\n;setlocation\t\t\t: '''''locationname\
      \ [allowfail]'''''\t\t\t\t\tmove pawn to location of locationame           \
      \                                                                          \
      \                                        \t\t\n;setlocationnamed\t\t: '''''targetname\
      \ locationname [allowfail]'''''\t\t\t\tmove actor matching targetname to location\
      \ of locationame                                                           \
      \                                             \t\t\n;setlocationvector\t\t:\
      \ '''''targetname X Y Z'''''\t\t\t\t\t\tmove targetname to given coordinates\
      \                                                                          \
      \                                                   \t\t\n;setmovespeed\t\t\t\
      : '''''speed [stance]'''''\t\t\t\t\t\t0.01 to MaxDesiredSpeed (usually 1.0)\
      \ &ndash; set speed used for scripted movement                             \
      \                                                       \t\t\n;setmovespeedauto\t\
      \t: '''''speed'''''\t\t\t\t\t\t\t\t0.01 to MaxDesiredSpeed (usually 1.0) &ndash;\
      \ set speed used for autonomous movement                                   \
      \                                               \t\t\n;setorders\t\t\t: '''''orders\
      \ [OrdersObject [fparam [ordergiver]]]''''' \t\t\tsets/clears orders       \
      \                                                                          \
      \                                                              \t\t\n;setphysics\t\
      \t\t: '''''physics'''''                                                    \
      \                                                                          \
      \                                                                          \
      \             \t\t\n;setproperty\t\t\t: '''''targetname property value'''''\
      \  \t\t\t\t\tsets property in named actor to value                         \
      \                                                                          \
      \                         \t\t\n;setproperties\t\t\t: '''''classname property\
      \ value'''''  \t\t\t\t\tsets given property in all actors which are a classname\
      \                                                                          \
      \                                \t\t\n;setsatellite\t\t\t: '''''satellitename\
      \ [targetname]'''''\t\t\t\t\tbinds a mesh satellite node of the given name to\
      \ the given target, for dynamic animations                                 \
      \                                       \t\t\n;setscript\t\t\t: '''''filename\
      \ [startlabel]'''''\t\t\t\t\t\tswitches over to the given script [at the given\
      \ label]                                                                   \
      \                                        \t\t\n;setskill\t\t\t: '''''skill'''''\t\
      \t\t\t\t\t\t\tset NPC's skill to given value (0.0..1.0)                    \
      \                                                                          \
      \                          \t\t\n;setstance\t\t\t: '''''stand / crouch / prone'''''\t\
      \t\t\t\tspecifies stance that NPC should use while patrolling              \
      \                                                                          \
      \                    \t\t\n;setstationary\t\t\t: '''''1/0 [1]'''''\t\t\t\t\t\
      \t\tmakes NPC immobile/mobile, optionally forever                          \
      \                                                                          \
      \                \t\t\n;settacticalmovetype\t\t: '''''0/1/2'''''\t\t\t\t\t\t\
      \t\tsets tactical move type to use during scripted movement (0: none 1: basic\
      \ 2: serpentine)                                                           \
      \              \t\t\n;setweapon\t\t\t: '''''weaponstring'''''\t\t\t\t\t\t\t\
      set NPC's weapon to specified one, spawning it if necessary                \
      \                                                                          \
      \            \t\t\n;shutdown\t\t\t: '''''1/0'''''\t\t\t\t\t\t\t\tmakes NPC as\
      \ inert as possible without actually making it dormant or removing its controller\
      \                                                                     \t\t\n\
      ;sleep\t  \t\t\t: '''''[x.x]'''''   \t\t\t\t\t\t\tputs controller to sleep for\
      \ x.x seconds (defaults to \"forever\")                                    \
      \                                                             \t\t\n;sleeprand\t\
      \t\t: '''''[x.x]'''''\t\t\t\t\t\t\t\tputs controller to sleep for random time\
      \ in 0..x.x seconds (x.x defaults to 1.0)                                  \
      \                                               \t\t\n;spawn\t\t\t\t: '''''targetname\
      \ S\t[1 [filename [startlabel]]]'''''\t\t\tspawn given actor at targetname's\
      \ location, if 1 is given, failure = error, optionally gives spawned NPCs a\
      \ script                                               \t\t\n;stop\t\t\t\t:\
      \ \t\t\t\t\t\t\t\tstops execution, detaches script controller              \
      \                                                                          \
      \                              \t\t\n;stopmovement\t\t\t: \t\t\t\t\t\t\t\tstops\
      \ NPC movement                                                             \
      \                                                                          \
      \        \t\t\n;stopsound\t\t\t: '''''slot\t[bStopNoOverrideSounds]'''''\t\t\
      \t\t\tstops any sounds played through the named actor on the specified sound\
      \ slot                                                                     \
      \                 \t\t\n;testactorinrange\t\t: '''''name distance'''''\t\t\t\
      \t\t\t\tif given actor is outside given distance of pawn ==> next command skipped\
      \                                                                          \
      \              \t\t\n;testproperty\t\t\t: '''''name property value'''''  \t\t\
      \t\t\t\tproperty != value ==> next command skipped (string comparison)     \
      \                                                                          \
      \                    \t\t\n;testpropertyci\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty != value ==> next command skipped (case-insensitive\
      \ string comparison)                                                       \
      \                           \t\t\n;testpropertye\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty != value ==> next command skipped (numerical comparison)\
      \                                                                          \
      \                      \t\t\n;testpropertyg\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty <= value ==> next command skipped (numerical comparison)\
      \                                                                          \
      \                      \t\t\n;testpropertyge\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty <  value ==> next command skipped (numerical comparison)\
      \                                                                          \
      \                      \t\t\n;testpropertyl\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty >= value ==> next command skipped (numerical comparison)\
      \                                                                          \
      \                      \t\t\n;testpropertyle\t\t\t: '''''name property value'''''\
      \  \t\t\t\t\t\tproperty >  value ==> next command skipped (numerical comparison)\
      \                                                                          \
      \                      \t\t\n;testrandom\t\t\t: '''''float'''''\t\t\t\t\t\t\t\
      \t(if random number in 0.0..1.0 > value ==> next command skipped)          \
      \                                                                          \
      \              \t\t\n;teststate\t\t\t: '''''name name'''''\t\t\t\t\t\t\t(false\
      \ ==> next command skipped)                                                \
      \                                                                          \
      \       \t\t\n;turntoactor\t\t\t: '''''targetname [LOS [Lock]]'''''\t\t\t\t\t\
      turn NPC to face named actor, LOS=0 ==> LOS not needed, LOS=1 ==> LOS needed,\
      \ LOS=2 ==> LOS not needed but turn anyway, Lock means target actor won't be\
      \ cleared \t\t\n;unuse\t\t\t\t: '''''name'''''\t\t\t\t\t\t\t\tunuse the named\
      \ actor                                                                    \
      \                                                                        \t\t\
      \n;use\t\t\t\t: '''''name'''''\t\t\t\t\t\t\t\tuse the named actor          \
      \                                                                          \
      \                                                          \t\t\n;usepickups\t\
      \t\t: '''''0/1'''''\t\t\t\t\t\t\t\tif 0, won't go after or pickup pickups  \
      \                                                                          \
      \                                               \t\t\n;weaponload\t\t\t:\t\t\
      \t\t\t\t\t\tload current weapon                                            \
      \                                                                          \
      \                        \t\t\n;WeaponSetAmmoType\t\t: '''''ammoname'''''  \
      \                                                                          \
      \                                                                          \
      \                                                              \t\t\n;WeaponSupportsAltFire\t\
      \t: '''''weaponname 0/1'''''\t\t\t\t\t\tdisables/enables NPC being able to alt\
      \ fire weapon                                                              \
      \                                                 \t\t\n;WeaponSupportsFire\t\
      \t: '''''weaponname 0/1'''''\t\t\t\t\t\tdisables/enables NPC being able to primary\
      \ fire weapon                                                              \
      \                                             \t\t\n                       \
      \                                                                         \n\
      \n==Events ==\n                                                            \
      \                                                                          \
      \                        \n;ActorInRange\t\t\t: \t\t\t\t\t\t\t\tgenerated when\
      \ the InRangeActor comes within the InRangeDistance                       \n\
      ;ActorOutOfRange\t\t:                                                      \
      \         generated once when the InRangeActor comes goes out of the InRangeDistance\
      \             \n;AnimEnd\t\t\t:                                            \
      \                   goes to Controller unless Pawn has no Controller (dying\
      \ state)                         \n;AutoBegin\t\t\t:                       \
      \                                        goes to Controller, generated by U2NPCControllerScriptable\
      \                             \n;AutoEnd\t\t\t:                            \
      \                                   goes to Controller, generated by Controller\
      \  : seems to be used for after fighting conditions                        \
      \                   \n;BumpEnemy\t\t\t:                                    \
      \                           NotifyBump &ndash;> Controller &ndash;> BumpEnemy/Friend/Other\
      \                                   \n;BumpFriend\t\t\t:                   \
      \                                            NotifyBump &ndash;> Controller\
      \ &ndash;> BumpEnemy/Friend/Other                                   \n;BumpOther\t\
      \t\t:                                                               NotifyBump\
      \ &ndash;> Controller &ndash;> BumpEnemy/Friend/Other                      \
      \             \n;BumpPlayer\t\t\t:                                         \
      \                      not an actual event: eventwait BumpPlayer &ndash;> BumpEnemy/BumpFriend\
      \ checked for player  \n;DestinationReached\t\t:                           \
      \                                    goes to Controller                    \
      \                                                 \n;DialogBegin\t \t\t:   \
      \                                                            generated by Controller\
      \ before destroyed                                               \n;DialogUnPause\t\
      \t\t:                                                               generated\
      \ when dialog unpauses npc's script                                        \
      \    \n;Died\t \t\t\t:                                                     \
      \          generated by Controller before destroyed                        \
      \                       \n;EnemyNotVisible\t\t:                            \
      \                                   goes to Controller                     \
      \                                                \n;HearNoiseFriendly\t\t: \
      \                                                              HearNoise &ndash;>\
      \ Controller &ndash;> HearNoiseFriendly                                    \
      \     \n;HearNoiseOther\t\t\t:                                             \
      \                  HearNoise &ndash;> Controller &ndash;> HearNoiseOther   \
      \                                         \n;HearNoiseThreat\t\t:          \
      \                                                     HearNoise &ndash;> Controller\
      \ &ndash;> HearNoiseThreat                                           \n;InheritEnemy\t\
      \t\t:                                                               generated\
      \ when NPC could inherit another NPC's Enemy                               \
      \    \n;ScriptedLanding\t\t:                                               \
      \                generated when NPC in scripted state lands (not passed back\
      \ to NPC)                    \n;SeeAlertFriend\t\t\t:                      \
      \                                         SeeAlertFriend &ndash;> Controller\
      \                                                          \n;SeeEnemy\t\t\t\
      :                                                               SeeEnemy &ndash;>\
      \ Controller                                                               \
      \ \n;SeeFriend\t\t\t:                                                      \
      \         SeeFriend &ndash;> Controller &ndash;> SeeFriend                 \
      \                                \n;SeeOther\t\t\t:                        \
      \                                       SeeOther &ndash;> Controller &ndash;>\
      \ SeeOther                                                   \n;SeePlayer\t\t\
      \t:                                                               not an actual\
      \ event: eventwait SeePlayer &ndash;> SeeEnemy/SeeFriend checked for player\
      \     \n;TakeDamage\t\t\t:                                                 \
      \              goes to Pawn                                                \
      \                           \n;TookDamage\t\t\t:                           \
      \                                    eventTakeDamage &ndash;> TookDamage generated\
      \ by U2NPCControllerScriptable                  \n;TookDamageEnemy\t\t:    \
      \                                                           generated internall\
      \ from TookDamage for use by scripts only                            \n;TookDamageFriend\t\
      \t:                                                               generated\
      \ internall from TookDamage for use by scripts only                        \
      \    \n;Trigger\t\t\t:                                                     \
      \          goes to Pawn then Controller                                    \
      \                       \n\n==Related Topics==\n* [[Legacy:Artificial Intelligence|Artificial\
      \ Intelligence]] &ndash; A super topic for all AI\n* [[Legacy:AI Scripting|AI\
      \ Scripting]]\n* [[Legacy:ScriptedPawn|ScriptedPawn]]\n \n\n==Discussion==\n\
      \n'''Unknown:''' Maybe explain what these are and where to put them?\n\n'''Unknown:'''\
      \ I'll put that stuff in [[Legacy:Basic AI Scripting Tutorial|Basic AI Scripting\
      \ Tutorial]] when I make it.\n\n'''SuperApe:''' This page needs help.  Is it\
      \ purely U2?  It should be applicable to all versions.  Since, I'm working on\
      \ the [[Legacy:Basic AI Scripting Tutorial|Basic AI Scripting Tutorial]], I\
      \ may revise this.\n\n----\n\n[[:Category:Legacy Mapping]]\n\n[[:Category:Legacy\
      \ To Do]] &ndash; This page needs to be updated and made relevant to all Unreal\
      \ versions as well as the current wiki structure.\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 1370
name: "Legacy:AI Scripting Reference"
revision:
  revid: 1370
  parentid: 1372
  user: "SuperApe"
  timestamp: 1133904477.000000000
  comment: "*"
timestamp: 1668763908.241052000
