---
parse:
  title: "Legacy:Subversion"
  text:
    text: "<p>Subversion is a <a href=\"/Legacy:Version_Control\" title=\"Legacy:Version\
      \ Control\">version control</a> system designed to help groups of people working\
      \ on the same files work together without stepping all over each others' toes,\
      \ and keep track of all of the changes being made by everyone in a sane and\
      \ productive way. Version management can contribute a number of benefits to\
      \ all kinds of software development (and other) projects:</p>\n<ul>\n<li>All\
      \ changes to files are recorded, including who changed them, when, comments\
      \ about why the change was made, and precise information about exactly what\
      \ was changed in each file.</li>\n<li>A canonical state of the project is always\
      \ kept in one central location (the repository). Developers can update their\
      \ copies from the central location at any time to make sure they're completely\
      \ up to date with what's going on. Likewise, when one developer makes a change,\
      \ he/she need only check that change in to the one central repository, and everybody\
      \ else in the project will automatically get the change the next time they do\
      \ an update.</li>\n<li>Anyone, at any time, can retrieve a version of the project\
      \ (or individual files) as they existed at any point in time (\"What did this\
      \ look like last Friday?\"). If problems are discovered at some late date, it\
      \ is easy to backtrack in time to find out exactly when and where the problem\
      \ was introduced.</li>\n<li>In some cases, multiple developers can even work\
      \ on the same files at the same time. When they check their changes back into\
      \ the repository, the Subversion software will automatically try to merge the\
      \ changes from both developers into one up-to-date version in the repository\
      \ (there are limitations to this. In particular, it only really works on text-based\
      \ files). If Subversion can't figure out how to automatically merge changes,\
      \ tools are also provided for developers to manually fix up conflicts.</li>\n\
      </ul>\n<p>For those out there who might already be familiar with <a href=\"\
      /Legacy:CVS\" title=\"Legacy:CVS\">CVS</a>, Subversion is basically a newer,\
      \ better version of CVS. The Subversion web site can be found at <a rel=\"nofollow\"\
      \ class=\"external free\" href=\"http://subversion.tigris.org/\">http://subversion.tigris.org/</a></p>\n\
      <p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Why_use_Subversion_with_Unreal.3F\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">Why use Subversion\
      \ with Unreal?</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"\
      #Why_use_Subversion_instead_of_CVS.3F\"><span class=\"tocnumber\">2</span> <span\
      \ class=\"toctext\">Why use Subversion instead of CVS?</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-3\"><a href=\"#Subversion_Topics\"><span class=\"\
      tocnumber\">3</span> <span class=\"toctext\">Subversion Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Related_Topics\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h3><span class=\"mw-headline\" id=\"Why_use_Subversion_with_Unreal.3F\"\
      >Why use Subversion with Unreal?</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Subversion?section=1\"\
      \ title=\"Edit section: Why use Subversion with Unreal?\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p>There are a number of reasons\
      \ why Subversion can be useful to people working on Unreal development:</p>\n\
      <ul>\n<li>Subversion can make working together with other developers on the\
      \ same project much easier. All code and other files are maintained in one place,\
      \ and everybody's changes are seen by everybody else. Two people making incompatible\
      \ changes to the same files will be noticed and flagged immediately by Subversion\
      \ when they try to commit them, so people don't end up with a bunch of slightly\
      \ different and incompatible versions of the same pieces floating around.</li>\n\
      <li>Subversion can provide a central point where anyone interested in a project\
      \ can go and see the state of the project, or get their own copy of it.</li>\n\
      <li>Even if you only work on your own projects by yourself, Subversion can allow\
      \ you to keep track of all of your changes over time, making it easy to go back\
      \ and undo changes, or look at your change history to remember why you did something\
      \ three months ago.</li>\n<li>If you do development on more than one machine,\
      \ Subversion can provide a very easy way to keep everything in sync between\
      \ your multiple development environments.</li>\n<li>Keeping a Subversion repository\
      \ on a different machine than your work copy can provide a (limited) backup\
      \ for your work. A fried hard drive doesn't mean that you've just lost months\
      \ of work on that great new mod you were about to release to the public. (Note:\
      \ while Subversion can be used by itself for a simple level of backup, you really\
      \ should back up the Subversion repository periodically too, so you don't risk\
      \ losing all of the valuable history information if the repository's disk goes\
      \ bye-bye, or something equally catastrophic happens).</li>\n</ul>\n<h3><span\
      \ class=\"mw-headline\" id=\"Why_use_Subversion_instead_of_CVS.3F\">Why use\
      \ Subversion instead of CVS?</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Subversion?section=2\"\
      \ title=\"Edit section: Why use Subversion instead of CVS?\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<p><a href=\"/Legacy:CVS\" title=\"\
      Legacy:CVS\">CVS</a> is a time-honored version management system, which many\
      \ people have used quite effectively for many many years to manage software\
      \ development. Subversion, on the other hand, is a newer upstart which aims\
      \ to do much the same thing as CVS has done fairly successfully for a long time.\
      \ Why not just use CVS?</p>\n<p>Obviously, everybody has their favorite version\
      \ management system, and so there is room for debate about which is better for\
      \ what, but there are a couple of reasons that Subversion might be better for\
      \ your Unreal project than CVS:</p>\n<ul>\n<li>Many files related to Unreal\
      \ development are binary files, and Subversion does have somewhat better handling\
      \ for binary files than CVS.</li>\n<li>Many files related to Unreal development\
      \ are fairly large. Subversion is more efficient in transferring updates over\
      \ the network than CVS, and thus can be faster when working with a remote server\
      \ and large files.</li>\n<li>Subversion is often easier to set up and administrate\
      \ than CVS, so if you're not a hard-core software developer who's already used\
      \ to CVS, Subversion may be slightly easier to work with.</li>\n</ul>\n<h2><span\
      \ class=\"mw-headline\" id=\"Subversion_Topics\">Subversion Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Subversion?section=3\" title=\"Edit section: Subversion\
      \ Topics\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <dl>\n<dt><a href=\"/Legacy:Setting_Up_Subversion\" title=\"Legacy:Setting Up\
      \ Subversion\">Setting up Subversion</a>&#160;</dt>\n<dd>A simple walkthrough\
      \ of how to set up a Subversion repository for your Unreal project.</dd>\n<dt><a\
      \ href=\"/Legacy:Setting_Up_A_Subversion_Server\" title=\"Legacy:Setting Up\
      \ A Subversion Server\">Setting up a Subversion Server</a>&#160;</dt>\n<dd>How\
      \ to set up a Subversion server so that other developers can access your repository.</dd>\n\
      </dl>\n<h2><span class=\"mw-headline\" id=\"Related_Topics\">Related Topics</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Subversion?section=4\" title=\"Edit section: Related Topics\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li><a href=\"/Legacy:CVS\" title=\"Legacy:CVS\">CVS</a></li>\n<li><a href=\"\
      /Legacy:Version_Control\" title=\"Legacy:Version Control\">Version Control</a></li>\n\
      <li><a href=\"/Legacy:Making_Mods/Distributed_Development\" title=\"Legacy:Making\
      \ Mods/Distributed Development\">Making Mods/Distributed Development</a></li>\n\
      </ul>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.027 seconds\nReal time\
      \ usage: 0.112 seconds\nPreprocessor visited node count: 16/1000000\nPreprocessor\
      \ generated node count: 28/1000000\nPost‐expand include size: 10/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:2952-0!*!0!!en!*!* and timestamp\
      \ 20221118023932 and revision id 7821\n -->\n"
  categories:
  - sortkey: "Subversion"
    name: "Legacy_Application"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Version Control"
  - ns: 100
    exists: true
    name: "Legacy:Setting Up Subversion"
  - ns: 100
    exists: true
    name: "Legacy:Making Mods/Distributed Development"
  - ns: 100
    exists: true
    name: "Legacy:CVS"
  - ns: 100
    exists: true
    name: "Legacy:Setting Up A Subversion Server"
  templates: []
  images: []
  externallinks:
  - "http://subversion.tigris.org/"
  sections:
  - toclevel: 1
    level: "3"
    line: "Why use Subversion with Unreal?"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Subversion"
    byteoffset: 2033
    anchor: "Why_use_Subversion_with_Unreal.3F"
  - toclevel: 1
    level: "3"
    line: "Why use Subversion instead of CVS?"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Subversion"
    byteoffset: 3758
    anchor: "Why_use_Subversion_instead_of_CVS.3F"
  - toclevel: 1
    level: "2"
    line: "Subversion Topics"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Subversion"
    byteoffset: 4903
    anchor: "Subversion_Topics"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "4"
    index: "4"
    fromtitle: "Legacy:Subversion"
    byteoffset: 5237
    anchor: "Related_Topics"
  displaytitle: "Legacy:Subversion"
  iwlinks: []
  wikitext:
    text: "Subversion is a [[Legacy:Version Control|version control]] system designed\
      \ to help groups of people working on the same files work together without stepping\
      \ all over each others' toes, and keep track of all of the changes being made\
      \ by everyone in a sane and productive way.  Version management can contribute\
      \ a number of benefits to all kinds of software development (and other) projects:\n\
      \n* All changes to files are recorded, including who changed them, when, comments\
      \ about why the change was made, and precise information about exactly what\
      \ was changed in each file.\n* A canonical state of the project is always kept\
      \ in one central location (the repository).  Developers can update their copies\
      \ from the central location at any time to make sure they're completely up to\
      \ date with what's going on.  Likewise, when one developer makes a change, he/she\
      \ need only check that change in to the one central repository, and everybody\
      \ else in the project will automatically get the change the next time they do\
      \ an update.\n* Anyone, at any time, can retrieve a version of the project (or\
      \ individual files) as they existed at any point in time (\"What did this look\
      \ like last Friday?\").  If problems are discovered at some late date, it is\
      \ easy to backtrack in time to find out exactly when and where the problem was\
      \ introduced.\n* In some cases, multiple developers can even work on the same\
      \ files at the same time.  When they check their changes back into the repository,\
      \ the Subversion software will automatically try to merge the changes from both\
      \ developers into one up-to-date version in the repository (there are limitations\
      \ to this.  In particular, it only really works on text-based files).  If Subversion\
      \ can't figure out how to automatically merge changes, tools are also provided\
      \ for developers to manually fix up conflicts.\n\nFor those out there who might\
      \ already be familiar with [[Legacy:CVS|CVS]], Subversion is basically a newer,\
      \ better version of CVS.  The Subversion web site can be found at http://subversion.tigris.org/\n\
      \n===Why use Subversion with Unreal?===\n\nThere are a number of reasons why\
      \ Subversion can be useful to people working on Unreal development:\n\n* Subversion\
      \ can make working together with other developers on the same project much easier.\
      \  All code and other files are maintained in one place, and everybody's changes\
      \ are seen by everybody else.  Two people making incompatible changes to the\
      \ same files will be noticed and flagged immediately by Subversion when they\
      \ try to commit them, so people don't end up with a bunch of slightly different\
      \ and incompatible versions of the same pieces floating around.\n* Subversion\
      \ can provide a central point where anyone interested in a project can go and\
      \ see the state of the project, or get their own copy of it.\n* Even if you\
      \ only work on your own projects by yourself, Subversion can allow you to keep\
      \ track of all of your changes over time, making it easy to go back and undo\
      \ changes, or look at your change history to remember why you did something\
      \ three months ago.\n* If you do development on more than one machine, Subversion\
      \ can provide a very easy way to keep everything in sync between your multiple\
      \ development environments.\n* Keeping a Subversion repository on a different\
      \ machine than your work copy can provide a (limited) backup for your work.\
      \  A fried hard drive doesn't mean that you've just lost months of work on that\
      \ great new mod you were about to release to the public.  (Note: while Subversion\
      \ can be used by itself for a simple level of backup, you really should back\
      \ up the Subversion repository periodically too, so you don't risk losing all\
      \ of the valuable history information if the repository's disk goes bye-bye,\
      \ or something equally catastrophic happens).\n\n===Why use Subversion instead\
      \ of CVS?===\n\n[[Legacy:CVS|CVS]] is a time-honored version management system,\
      \ which many people have used quite effectively for many many years to manage\
      \ software development.  Subversion, on the other hand, is a newer upstart which\
      \ aims to do much the same thing as CVS has done fairly successfully for a long\
      \ time.  Why not just use CVS?\n\nObviously, everybody has their favorite version\
      \ management system, and so there is room for debate about which is better for\
      \ what, but there are a couple of reasons that Subversion might be better for\
      \ your Unreal project than CVS:\n\n* Many files related to Unreal development\
      \ are binary files, and Subversion does have somewhat better handling for binary\
      \ files than CVS.\n* Many files related to Unreal development are fairly large.\
      \  Subversion is more efficient in transferring updates over the network than\
      \ CVS, and thus can be faster when working with a remote server and large files.\n\
      * Subversion is often easier to set up and administrate than CVS, so if you're\
      \ not a hard-core software developer who's already used to CVS, Subversion may\
      \ be slightly easier to work with.\n\n==Subversion Topics==\n\n; [[Legacy:Setting\
      \ Up Subversion|Setting up Subversion]] : A simple walkthrough of how to set\
      \ up a Subversion repository for your Unreal project.\n; [[Legacy:Setting Up\
      \ A Subversion Server|Setting up a Subversion Server]] : How to set up a Subversion\
      \ server so that other developers can access your repository.\n\n==Related Topics==\n\
      * [[Legacy:CVS|CVS]]\n* [[Legacy:Version Control|Version Control]]\n* [[Legacy:Making\
      \ Mods/Distributed Development|Making Mods/Distributed Development]]\n\n[[Category:Legacy\
      \ Application|{{PAGENAME}}]]"
  properties: []
  revId: 7821
name: "Legacy:Subversion"
revision:
  revid: 7821
  parentid: 7822
  user: "SuperApe"
  timestamp: 1135821607.000000000
  comment: "*"
timestamp: 1668786892.633763000
