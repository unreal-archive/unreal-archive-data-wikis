---
parse:
  title: "Constants"
  text:
    text: "<p>UnrealScript constants are basically alias names for specific <a href=\"\
      /Literals\" title=\"Literals\">literals</a>.</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Declaration\">Declaration</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Constants?section=1\"\
      \ title=\"Edit section: Declaration\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Constants can be declared almost anywhere in a class.\
      \ Usually they are defined at the top of the class, right after the class declaration\
      \ or between variable declarations, but they can also appear in the body of\
      \ structs, states and function declarations. The syntax is really simple:</p>\n\
      <pre><b>const</b> <i>constantname</i> <b>=</b> <i>value</i><b>;</b>\n</pre>\n\
      <p>While this looks similar to a variable assignment, the value in a constant\
      \ declaration must be a single <a href=\"/Literal\" title=\"Literal\" class=\"\
      mw-redirect\">literal</a> without any function calls or operators. The pseudo-function\
      \ <code><a href=\"/ArrayCount\" title=\"ArrayCount\" class=\"mw-redirect\">ArrayCount</a><b>(</b><i>variablename</i><b>)</b></code>\
      \ is also allowed, as it is evaluated at compile-time, and is translated to\
      \ the number of elements in the specified static array variable. <a href=\"\
      /Enum\" title=\"Enum\" class=\"mw-redirect\">Enum</a> values are not supported,\
      \ this includes the <i>EnumCount</i> and <i>_MAX</i> enum properties.</p>\n\
      <p>Unlike <a href=\"/Variables#Access_modifiers\" title=\"Variables\">constant\
      \ variables</a>, constants are really \"constant\" and will never change at\
      \ runtime. The <b>const</b> modifier in variable declarations really only prevents\
      \ the variable to be used on the left side of an assignment or as <b>out</b>\
      \ parameter in a function call. <a href=\"/edit/Native_code?redlink=1\" class=\"\
      new\" title=\"Native code (page does not exist)\">Native code</a> can still\
      \ assign to <b>const</b> variables, and in fact that modifier is used for many\
      \ variables with native side effects that must be changed through corresponding\
      \ native <a href=\"http://en.wikipedia.org/wiki/accessor\" class=\"extiw\" title=\"\
      wp:accessor\">accessor</a> functions.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Usage\">Usage</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Constants?section=2\" title=\"Edit section: Usage\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Constants\
      \ can be used almost in every place where a literal can be used. Integer constants\
      \ are even allowed as the size of <a href=\"/Static_arrays\" title=\"Static\
      \ arrays\">static arrays</a>. The only exceptions are the <a href=\"/Defaultproperties\"\
      \ title=\"Defaultproperties\">defaultproperties</a> block, where constants are\
      \ only allowed starting with <a href=\"/Unreal_Engine_3\" title=\"Unreal Engine\
      \ 3\">Unreal Engine 3</a>, and other constant definitions. For some reason constants\
      \ don't count as \"constant\" there.</p>\n<p>When the compiler encounters a\
      \ constant name in code, and that place allows the use of literals, the constant\
      \ name is replaced by the literal assigned in the constant definition.</p>\n\
      <p>Starting with <a href=\"/Unreal_Engine_3\" title=\"Unreal Engine 3\">Unreal\
      \ Engine 3</a> you can access constants from other classes by using the const\
      \ keyword like shown below.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> ClassA <span class=\"kw1\">extends</span> <span class=\"\
      kw8\">Object</span>;\n \n<span class=\"kw1\">const</span> ConstA <span class=\"\
      sy0\">=</span> <span class=\"st0\">\"UnrealWiki\"</span>;</pre></div>\n</div>\n\
      <p>This declares a function that wraps around the constant of another class.</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> ClassB\
      \ <span class=\"kw1\">extends</span> <span class=\"kw8\">Object</span>;\n \n\
      <span class=\"kw1\">final</span> <span class=\"kw1\">protected</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">string</span> GetConstA<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"kw2\">return</span> <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'ClassA'</span>.<span class=\"kw1\">const</span>.<span class=\"\
      me0\">ConstA</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<table\
      \ class=\"navbox nowraplinks\" style=\"\">\n<tr class=\"navbox-header\">\n<th\
      \ colspan=\"2\" class=\"navbox-header\" style=\"\">\n<div style=\"position:relative;\
      \ width:100%; white-space:nowrap;\">\n<div class=\"noprint plainlinks\" style=\"\
      background-color:transparent; padding:0; font-weight:normal; font-size:xx-small;\
      \ white-space:nowrap; position:absolute;left:0.5em;\"><a href=\"/Template:Navbox_unrealscript\"\
      \ title=\"Template:Navbox unrealscript\"><span title=\"View this template\"\
      >v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\" title=\"\
      Template talk:Navbox unrealscript\"><span title=\"Discussion about this template\"\
      >d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external text\" href=\"\
      https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"><span title=\"\
      You can edit this template. Please use the preview button before saving.\">e</span></a></div>\n\
      <a href=\"/UnrealScript_reference\" title=\"UnrealScript reference\">UnrealScript\
      \ reference</a></div>\n</th>\n</tr>\n<tr class=\"navbox-body odd\">\n<th class=\"\
      navbox-group\" style=\"\">Declarations</th>\n<td class=\"navbox-body\" style=\"\
      \"><a href=\"/Preprocessor\" title=\"Preprocessor\">Preprocessor</a>&#160;•\
      \ <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;• <a href=\"/Interfaces\"\
      \ title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"/Cpptext\" title=\"Cpptext\"\
      >Cpptext</a>&#160;• <strong class=\"selflink\">Constants</strong>&#160;• <a\
      \ href=\"/Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"\
      Structs\">Structs</a>&#160;• <a href=\"/Variables\" title=\"Variables\">Variables</a>&#160;(<a\
      \ href=\"/Metadata\" title=\"Metadata\">Metadata</a>)&#160;• <a href=\"/Replication_block\"\
      \ title=\"Replication block\">Replication block</a>&#160;• <a href=\"/Operators\"\
      \ title=\"Operators\">Operators</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\"\
      >Delegates</a>&#160;• <a href=\"/Functions\" title=\"Functions\">Functions</a>&#160;•\
      \ <a href=\"/States\" title=\"States\">States</a>&#160;• <a href=\"/Defaultproperties\"\
      \ title=\"Defaultproperties\">Defaultproperties</a>&#160;(<a href=\"/Subobjects\"\
      \ title=\"Subobjects\">Subobjects</a>)</td>\n</tr>\n<tr class=\"navbox-body\
      \ even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Types\" title=\"\
      Types\">Types</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Bool\"\
      \ title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;• <a href=\"/Byte\" title=\"\
      Byte\" class=\"mw-redirect\">byte</a>&#160;• <a href=\"/Float\" title=\"Float\"\
      \ class=\"mw-redirect\">float</a>&#160;• <a href=\"/Int\" title=\"Int\" class=\"\
      mw-redirect\">int</a>&#160;• <a href=\"/Name\" title=\"Name\" class=\"mw-redirect\"\
      >name</a>&#160;• <a href=\"/String\" title=\"String\">string</a>&#160;• <a href=\"\
      /Types#Reference_types\" title=\"Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\"\
      \ title=\"Class limiter\" class=\"mw-redirect\">Class</a>&#160;• <a href=\"\
      /Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\"\
      >Structs</a>&#160;(<a href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a\
      \ href=\"/Rotator\" title=\"Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"\
      Quat\" class=\"mw-redirect\">Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\"\
      >Color</a>)&#160;• <a href=\"/Static_arrays\" title=\"Static arrays\">Static\
      \ arrays</a>&#160;• <a href=\"/Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic\
      \ arrays</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;•\
      \ <a href=\"/Typecasting\" title=\"Typecasting\">Typecasting</a></td>\n</tr>\n\
      <tr class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"\
      /Literals\" title=\"Literals\">Literals</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;•\
      \ <a href=\"/Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a\
      \ href=\"/Literals#Integer_numbers\" title=\"Literals\">Integer</a>&#160;• <a\
      \ href=\"/Literals#Names\" title=\"Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\"\
      \ title=\"Literals\">Objects</a> (<a href=\"/None\" title=\"None\" class=\"\
      mw-redirect\">None</a>&#160;⋅ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\"\
      >Self</a>)&#160;• <a href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;•\
      \ <a href=\"/Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"\
      /Literals#Strings\" title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"\
      navbox-body even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\"\
      \ title=\"Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"\
      ><a href=\"/GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"\
      /If_statement\" title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\"\
      \ title=\"Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\"\
      \ title=\"Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"\
      Stop statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch\
      \ statement\">Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\"\
      >While</a>&#160;• <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <a href=\"/Continue_statement\" title=\"\
      Continue statement\">Continue</a></td>\n</tr>\n<tr class=\"navbox-body odd\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Specifiers\" title=\"Specifiers\"\
      >Specifiers</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\"\
      \ title=\"Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.138 seconds\nReal time usage: 0.434 seconds\nPreprocessor\
      \ visited node count: 175/1000000\nPreprocessor generated node count: 913/1000000\n\
      Post‐expand include size: 10615/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \  104.640      1 - -total\n100.00%  104.640      1 - Template:Navbox_unrealscript\n\
      \ 74.23%   77.672      1 - Template:Navbox\n 22.44%   23.483      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:24170-0!*!0!!*!*!*\
      \ and timestamp 20221117135900 and revision id 42920\n -->\n"
  categories:
  - sortkey: "Constants"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "ArrayCount"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "Literal"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: false
    name: "Native code"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Unreal Engine 3"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "Enum"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "Flow control"
  templates:
  - ns: 10
    exists: true
    name: "Template:Navbox"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Declaration"
    number: "1"
    index: "1"
    fromtitle: "Constants"
    byteoffset: 77
    anchor: "Declaration"
  - toclevel: 1
    level: "2"
    line: "Usage"
    number: "2"
    index: "2"
    fromtitle: "Constants"
    byteoffset: 1425
    anchor: "Usage"
  displaytitle: "Constants"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/accessor"
    name: "wp:accessor"
  wikitext:
    text: "UnrealScript constants are basically alias names for specific [[literals]].\n\
      \n==Declaration==\nConstants can be declared almost anywhere in a class. Usually\
      \ they are defined at the top of the class, right after the class declaration\
      \ or between variable declarations, but they can also appear in the body of\
      \ structs, states and function declarations. The syntax is really simple:\n\
      \ '''const''' ''constantname'' '''=''' ''value''''';'''\nWhile this looks similar\
      \ to a variable assignment, the value in a constant declaration must be a single\
      \ [[literal]] without any function calls or operators. The pseudo-function <code>[[ArrayCount]]'''('''''variablename''''')'''</code>\
      \ is also allowed, as it is evaluated at compile-time, and is translated to\
      \ the number of elements in the specified static array variable. [[Enum]] values\
      \ are not supported, this includes the ''EnumCount'' and ''_MAX'' enum properties.\n\
      \nUnlike [[Variables#Access modifiers|constant variables]], constants are really\
      \ \"constant\" and will never change at runtime. The '''const''' modifier in\
      \ variable declarations really only prevents the variable to be used on the\
      \ left side of an assignment or as '''out''' parameter in a function call. [[Native\
      \ code]] can still assign to '''const''' variables, and in fact that modifier\
      \ is used for many variables with native side effects that must be changed through\
      \ corresponding native [[wp:accessor|accessor]] functions.\n\n==Usage==\nConstants\
      \ can be used almost in every place where a literal can be used. Integer constants\
      \ are even allowed as the size of [[static arrays]]. The only exceptions are\
      \ the [[defaultproperties]] block, where constants are only allowed starting\
      \ with [[Unreal Engine 3]], and other constant definitions. For some reason\
      \ constants don't count as \"constant\" there.\n\nWhen the compiler encounters\
      \ a constant name in code, and that place allows the use of literals, the constant\
      \ name is replaced by the literal assigned in the constant definition.\n\nStarting\
      \ with [[Unreal Engine 3]] you can access constants from other classes by using\
      \ the const keyword like shown below.\n\n<uscript>class ClassA extends Object;\n\
      \nconst ConstA = \"UnrealWiki\";\n</uscript>\n\nThis declares a function that\
      \ wraps around the constant of another class.\n<uscript>\nclass ClassB extends\
      \ Object;\n\nfinal protected function string GetConstA()\n{\n    return class'ClassA'.const.ConstA;\n\
      }\n</uscript>\n\n{{navbox unrealscript}}"
  properties: []
  revId: 42920
name: "Constants"
revision:
  revid: 42920
  parentid: 42918
  user: "Eliot"
  timestamp: 1271638209.000000000
  comment: ""
timestamp: 1668754794.424267000
