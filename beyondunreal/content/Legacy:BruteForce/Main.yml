---
parse:
  title: "Legacy:BruteForce/Main"
  text:
    text: "<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span>\
      \ BruteForce <span class=\"kw1\">extends</span> <span class=\"kw8\">Commandlet</span>\
      \ <span class=\"kw1\">config</span><span class=\"br0\">(</span>BruteForce<span\
      \ class=\"br0\">)</span>;\n \n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">private</span> Tokenizer t;\n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">private</span> Scope s;\n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">private</span> Compiler c;\n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">private</span> AST a;\n<span class=\"kw1\">var</span> <span class=\"kw1\"\
      >private</span> Interpreter i;\n \n<span class=\"kw1\">var</span> <span class=\"\
      kw1\">config</span> array<span class=\"sy0\">&lt;</span>string<span class=\"\
      sy0\">&gt;</span> Code;</pre></div>\n</div>\n<p>Just edit the BruteForce.ini\
      \ file to change the code.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">var</span> array<span class=\"sy0\">&lt;</span>string<span class=\"sy0\"\
      >&gt;</span> Input;</pre></div>\n</div>\n<p>The input, with argc() and argv()\
      \ function you can get this info from within BruteForce</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"coMULTI\">/* Main */</span>\n \n<span class=\"\
      kw1\">event</span> <span class=\"kw5\">int</span> Main<span class=\"br0\">(</span>\
      \ <span class=\"kw5\">string</span> Parms <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n  <span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> n;\n  <span class=\"kw1\">local</span> <span class=\"kw5\"\
      >bool</span> showTree, saveTree, noCompile;\n  showTree <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">false</span>;\n  saveTree <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">false</span>;\n  noCompile <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">false</span>;\n  <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'wString'</span>.<span class=\"kw1\">static</span>.<span class=\"\
      me0\">split2</span><span class=\"br0\">(</span>Parms, <span class=\"st0\">\"\
      \ \"</span>, Input, <span class=\"kw6\">true</span>, <span class=\"st0\">\"\
      <span class=\"es0\">\\\"</span>\"</span><span class=\"br0\">)</span>;\n  <span\
      \ class=\"kw2\">for</span> <span class=\"br0\">(</span>n <span class=\"sy0\"\
      >=</span> input.<span class=\"me0\">length</span><span class=\"sy0\">-</span><span\
      \ class=\"nu0\">1</span>; n <span class=\"sy0\">&gt;=</span> <span class=\"\
      nu0\">0</span>; n<span class=\"sy0\">--</span><span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>input<span class=\"br0\">[</span>n<span class=\"br0\">]</span>\
      \ ~<span class=\"sy0\">=</span> <span class=\"st0\">\"-showtree\"</span><span\
      \ class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n      input.<span\
      \ class=\"me0\">remove</span><span class=\"br0\">(</span>n, <span class=\"nu0\"\
      >1</span><span class=\"br0\">)</span>;\n      showTree <span class=\"sy0\">=</span>\
      \ <span class=\"kw6\">true</span>;\n    <span class=\"br0\">}</span>\n    <span\
      \ class=\"kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>input<span class=\"br0\">[</span>n<span class=\"br0\">]</span> ~<span\
      \ class=\"sy0\">=</span> <span class=\"st0\">\"-savetree\"</span><span class=\"\
      br0\">)</span>\n    <span class=\"br0\">{</span>\n      input.<span class=\"\
      me0\">remove</span><span class=\"br0\">(</span>n, <span class=\"nu0\">1</span><span\
      \ class=\"br0\">)</span>;\n      saveTree <span class=\"sy0\">=</span> <span\
      \ class=\"kw6\">true</span>;\n    <span class=\"br0\">}</span>\n    <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span>input<span\
      \ class=\"br0\">[</span>n<span class=\"br0\">]</span> ~<span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"-nocompile\"</span><span class=\"br0\">)</span>\n  \
      \  <span class=\"br0\">{</span>\n      input.<span class=\"me0\">remove</span><span\
      \ class=\"br0\">(</span>n, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \      noCompile <span class=\"sy0\">=</span> <span class=\"kw6\">true</span>;\n\
      \    <span class=\"br0\">}</span>\n  <span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>Process the commandline arguments, we have three special case parameters\
      \ that we use for certain parts:</p>\n<p>-showtree will display the AST-</p>\n\
      <p>-savetree will save the tree to the config file, if the tree is saved you\
      \ no longer need to compile the code-</p>\n<p>-nocompile don't compile the code,\
      \ just execute the AST-</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"> \n  s <span class=\"\
      sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'Scope'</span>;  \n  a <span class=\"sy0\">=</span> <span class=\"\
      kw1\">new</span> <span class=\"kw1\">class</span><span class=\"st0\">'AST'</span>;\n\
      \  i <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"\
      kw1\">class</span><span class=\"st0\">'Interpreter'</span>;\n \n  <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>noCompile<span\
      \ class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n    t <span class=\"\
      sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw1\">class</span><span\
      \ class=\"st0\">'Tokenizer'</span>;\n    c <span class=\"sy0\">=</span> <span\
      \ class=\"kw1\">new</span> <span class=\"kw1\">class</span><span class=\"st0\"\
      >'Compiler'</span>;\n    t.<span class=\"me0\">Create</span><span class=\"br0\"\
      >(</span>Code<span class=\"br0\">)</span>;\n    a.<span class=\"me0\">Create</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n    <span class=\"kw3\"\
      >StopWatch</span><span class=\"br0\">(</span><span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n    t.<span class=\"me0\">nextToken</span><span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n    c.<span class=\"me0\">Compile</span><span\
      \ class=\"br0\">(</span>t, a<span class=\"br0\">)</span>;\n    <span class=\"\
      kw3\">Log</span><span class=\"br0\">(</span><span class=\"st0\">\"Compile time:\
      \ \"</span><span class=\"br0\">)</span>;\n    <span class=\"kw3\">StopWatch</span><span\
      \ class=\"br0\">(</span><span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n \n  <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>showTree<span class=\"br0\">)</span> a.<span class=\"me0\">printTree</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n \n  <span class=\"kw3\"\
      >StopWatch</span><span class=\"br0\">(</span><span class=\"kw6\">false</span><span\
      \ class=\"br0\">)</span>;\n  i.<span class=\"me0\">Create</span><span class=\"\
      br0\">(</span>a, s, input<span class=\"br0\">)</span>;\n  i.<span class=\"me0\"\
      >Execute</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n \
      \ <span class=\"kw3\">Log</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"Execution time: \"</span><span class=\"br0\">)</span>;\n  <span class=\"\
      kw3\">StopWatch</span><span class=\"br0\">(</span><span class=\"kw6\">true</span><span\
      \ class=\"br0\">)</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>saveTree<span class=\"br0\">)</span> a.<span class=\"kw3\">SaveConfig</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n \n  <span class=\"kw2\"\
      >return</span> <span class=\"nu0\">0</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.087 seconds\nReal time\
      \ usage: 0.090 seconds\nPreprocessor visited node count: 13/1000000\nPreprocessor\
      \ generated node count: 84/1000000\nPost‐expand include size: 0/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:607-0!*!*!*!*!*!* and timestamp\
      \ 20221118154728 and revision id 1824\n -->\n"
  categories: []
  links: []
  templates: []
  images: []
  externallinks: []
  sections: []
  displaytitle: "Legacy:BruteForce/Main"
  iwlinks: []
  wikitext:
    text: "<uscript>\nclass BruteForce extends Commandlet config(BruteForce);\n\n\
      var private Tokenizer t;\nvar private Scope s;\nvar private Compiler c;\nvar\
      \ private AST a;\nvar private Interpreter i;\n\nvar config array<string> Code;\n\
      </uscript>\n\nJust edit the BruteForce.ini file to change the code.\n\n<uscript>\n\
      var array<string> Input;\n</uscript>\n\nThe input, with argc() and argv() function\
      \ you can get this info from within BruteForce\n\n<uscript>\n\n/* Main */\n\n\
      event int Main( string Parms )\n{\n  local int n;\n  local bool showTree, saveTree,\
      \ noCompile;\n  showTree = false;\n  saveTree = false;\n  noCompile = false;\n\
      \  class'wString'.static.split2(Parms, \" \", Input, true, \"\\\"\");\n  for\
      \ (n = input.length-1; n >= 0; n--)\n  {\n    if (input[n] ~= \"-showtree\"\
      )\n    {\n      input.remove(n, 1);\n      showTree = true;\n    }\n    else\
      \ if (input[n] ~= \"-savetree\")\n    {\n      input.remove(n, 1);\n      saveTree\
      \ = true;\n    }\n    else if (input[n] ~= \"-nocompile\")\n    {\n      input.remove(n,\
      \ 1);\n      noCompile = true;\n    }\n  }\n</uscript>\n\nProcess the commandline\
      \ arguments, we have three special case parameters that we use for certain parts:\
      \ \n\n-showtree will display the AST-\n\n-savetree will save the tree to the\
      \ config file, if the tree is saved you no longer need to compile the code-\n\
      \n-nocompile don't compile the code, just execute the AST-\n\n<uscript>\n  \
      \  \n  s = new class'Scope';  \n  a = new class'AST';\n  i = new class'Interpreter';\n\
      \   \n  if (!noCompile)\n  {\n    t = new class'Tokenizer';\n    c = new class'Compiler';\n\
      \    t.Create(Code);\n    a.Create();\n    StopWatch(false);\n    t.nextToken();\n\
      \    c.Compile(t, a);\n    Log(\"Compile time: \");\n    StopWatch(true);\n\
      \  }\n\n  if (showTree) a.printTree();\n\n  StopWatch(false);\n  i.Create(a,\
      \ s, input);\n  i.Execute();\n  Log(\"Execution time: \");\n  StopWatch(true);\n\
      \n  if (saveTree) a.SaveConfig();\n\n  return 0;\n}\n</uscript>"
  properties: []
  revId: 1824
name: "Legacy:BruteForce/Main"
revision:
  revid: 1824
  parentid: 1825
  user: "El Muerte TDS"
  timestamp: 1051434485.000000000
  comment: "*"
timestamp: 1668786371.477147000
