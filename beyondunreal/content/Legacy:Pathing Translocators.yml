---
parse:
  title: "Legacy:Pathing Translocators"
  text:
    text: "<p><i>This article discusses how to path translocators for the original\
      \ <a href=\"/Legacy:Unreal_Tournament\" title=\"Legacy:Unreal Tournament\">Unreal\
      \ Tournament</a>. To do this in UT200x, just use a <a href=\"/Legacy:JumpSpot\"\
      \ title=\"Legacy:JumpSpot\">JumpSpot</a>. As discussed on the JumpSpot page,\
      \ the bots in UT200x are smart enough to use the translocator to get to a JumpSpot\
      \ when necessary.</i></p>\n<h2><span class=\"mw-headline\" id=\"Pathing_Translocators_for_UT\"\
      >Pathing Translocators for UT</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Pathing_Translocators?section=1\"\
      \ title=\"Edit section: Pathing Translocators for UT\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>Pathnoding translocators is\
      \ very similar to <a href=\"/Legacy:Pathing_Lifts\" title=\"Legacy:Pathing Lifts\"\
      >Pathing Lifts</a>. To set up a place for bots to use their translocators, you\
      \ need to place three actors:</p>\n<ol>\n<li>Place a <a href=\"/Legacy:LiftExit\"\
      \ title=\"Legacy:LiftExit\">LiftExit</a> where you want the bot to stand to\
      \ fire his translocator. LiftExit can be found under <a href=\"/Legacy:NavigationPoint\"\
      \ title=\"Legacy:NavigationPoint\">NavigationPoint</a> in the <a href=\"/Legacy:Actor_Browser\"\
      \ title=\"Legacy:Actor Browser\" class=\"mw-redirect\">Actor Browser</a>.</li>\n\
      <li>Place a <a href=\"/Legacy:TranslocDest\" title=\"Legacy:TranslocDest\">TranslocDest</a>\
      \ where the bot should throw his translocator target. TranslocDest can be found\
      \ under <a href=\"/Legacy:LiftCenter\" title=\"Legacy:LiftCenter\">LiftCenter</a>,\
      \ which itself is under NavigationPoint.</li>\n<li>Place a second <a href=\"\
      /Legacy:LiftExit\" title=\"Legacy:LiftExit\">LiftExit</a> near the TranslocDest\
      \ as an \"exit\" from this path.</li>\n<li>Finally, you need to indicate that\
      \ these three actors are related to one another. Choose a descriptive name and\
      \ set the following properties of your actors to that name:\n<ul>\n<li>LiftExit-&gt;LiftTag\
      \ (for both LiftExits)</li>\n<li>LiftCenter-&gt;LiftTag (for the TranslocDest)</li>\n\
      </ul>\n</li>\n</ol>\n<p>The screenshot below shows an example of this from my\
      \ map CTF-Susurrous.</p>\n<div class=\"center\">\n<div class=\"floatnone\"><a\
      \ href=\"/File:Legacy_Pathing-Translocators-01.jpeg\" class=\"image\" title=\"\
      Bots will translocate up this path, and jump down.\"><img alt=\"Bots will translocate\
      \ up this path, and jump down.\" src=\"/w/images/Legacy_Pathing-Translocators-01.jpeg\"\
      \ width=\"511\" height=\"400\" /></a></div>\n</div>\n<p>When you set up a translocator\
      \ path like this, a bot using it will assume that he can walk from the TranslocDest\
      \ to either of the LiftExits. And in the case shown in the image above, it's\
      \ true. A bot needs the translocator to get from ground level up to that high\
      \ ledge, but if he wants to get from the ledge back down to the ground, he can\
      \ just walk or jump off the side.</p>\n<p>However, this won't always be the\
      \ case in your maps. For example, if you want a bot to use his translocator\
      \ to cross a wide gap, he won't be able to walk from the TranslocDest back to\
      \ the original LiftExit. In cases like this, you replace the first LiftExit\
      \ with a <a href=\"/Legacy:TranslocStart\" title=\"Legacy:TranslocStart\">TranslocStart</a>,\
      \ which is a subclass of LiftExit that indicates to the bot that he must use\
      \ his translocator in both directions. Here's an example from the same map that\
      \ shows this:</p>\n<div class=\"center\">\n<div class=\"floatnone\"><a href=\"\
      /File:Legacy_Pathing-Translocators-02.jpeg\" class=\"image\" title=\"Bots will\
      \ translocate along this path in both directions.\"><img alt=\"Bots will translocate\
      \ along this path in both directions.\" src=\"/w/images/Legacy_Pathing-Translocators-02.jpeg\"\
      \ width=\"560\" height=\"400\" /></a></div>\n</div>\n<p>In this case, I wanted\
      \ bots on the roof of the base to be able to reach the sniper tower directly,\
      \ instead of having to go find the teleporter that would take them there otherwise.\
      \ Thus I have a TranslocStart on the roof of the base, and a TranslocDest and\
      \ LiftExit inside the sniper tower. In addition to using this path to reach\
      \ the sniper tower, a bot will also throw his translocator from the TranslocDest\
      \ back to the TranslocStart on the roof and move that way.</p>\n<p>There may\
      \ also come a time when you want a translocator path that can only be followed\
      \ in one direction; in other words, the bot can't get back to the original LiftExit\
      \ or TranslocStart at all. For example, you might want to have bots use their\
      \ translocators to get down from a very high altitude. The usual way to make\
      \ a path one-way is as follows:</p>\n<ol>\n<li>Select the node from which you\
      \ only want paths to face in one direction.</li>\n<li>Set the property NavigationPoint-&gt;bOneWayPath\
      \ to True.</li>\n<li>Set the propety Advanced-&gt;bDirection to True. This will\
      \ make an arrow appear pointing away from the node whenever it's selected in\
      \ one of your 2D viewports.</li>\n<li>Rotate the node so that the arrow points\
      \ in the direction you want the paths to point. Paths are valid through a 180-degree\
      \ arc in that direction. In other words, if you imagine a plane passing through\
      \ the node and perpendicular to the arrow, paths are only valid towards nodes\
      \ on the same side of the plane as the arrow.</li>\n</ol>\n<p>This works fine\
      \ for other types of nodes, but I've had some trouble getting it to work with\
      \ LiftExits and TranslocDests. An alternate solution is to place the TranslocDest\
      \ such that a bot can't walk to it; that way he'll ignore it and find another\
      \ path. The screenshot below shows an example from my map.</p>\n<div class=\"\
      center\">\n<div class=\"floatnone\"><a href=\"/File:Legacy_Pathing-Translocators-03.jpeg\"\
      \ class=\"image\" title=\"The TranslocDest is about 350 UUs above the ground.\"\
      ><img alt=\"The TranslocDest is about 350 UUs above the ground.\" src=\"/w/images/Legacy_Pathing-Translocators-03.jpeg\"\
      \ width=\"475\" height=\"400\" /></a></div>\n</div>\n<p>Here I needed a way\
      \ for a bot to escape the sniper tower and move directly towards the center\
      \ of the map, without needing to take the longer route through the teleporter\
      \ I've got up there, so I created a translocator path from the sniper tower\
      \ to the ground. However, even with all three nodes set as one-way paths, I\
      \ still noticed the bots trying to reach the sniper tower directly from the\
      \ ground, and it's much too high for that to be possible. Thus, I raised the\
      \ TranslocDest and LiftExit above the ground a little so bots couldn't walk\
      \ to it, but not so high that bots would take damage falling from it. After\
      \ doing so, they used the path without any problems.</p>\n<p>One more thing\
      \ you should be aware of: if you set your translocator points in such a way\
      \ that translocation is not possible, for example if the TranslocDest is ridiculously\
      \ high off the ground, the bots will try to use it anyway, so make sure you\
      \ test these things out. One problem I've encountered is that bots often seem\
      \ to mess up if you try to give them a path that's too close to being vertical.\
      \ Below is a screenshot where I wanted bots to translocate from one bridge up\
      \ to another.</p>\n<div class=\"center\">\n<div class=\"floatnone\"><a href=\"\
      /File:Legacy_Pathing-Translocators-04.jpeg\" class=\"image\" title=\"Don't make\
      \ paths too steep!\"><img alt=\"Don't make paths too steep!\" src=\"/w/images/Legacy_Pathing-Translocators-04.jpeg\"\
      \ width=\"471\" height=\"400\" /></a></div>\n</div>\n<p>Now, it's kind of a\
      \ tricky translocation as the bridges' heights are relatively far apart, so\
      \ I thought, \"Well, the closer to vertical you throw a translocator, the more\
      \ height you'll get out of it.\" Right? That makes sense to you and me, but\
      \ apparently bots don't agree. In the configuration you see above, my bots would\
      \ throw the translocator, and it would hit the side of the bridge and bounce\
      \ off. Then the bot would translocate up into midair, fall back down, and try\
      \ again ad infinitum. It was amusing to watch for awhile, but it's not something\
      \ you want in the final version of your map. I found that if I backed the bottom\
      \ LiftExit up a bit, so the path's angle above the horizon was not quite so\
      \ great, they were able to use the path with ease. A human player might find\
      \ it difficult to fire the translocator exactly right from that position, but\
      \ the bots will get it every time.</p>\n<h2><span class=\"mw-headline\" id=\"\
      Related_Topics\">Related Topics</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Pathing_Translocators?section=2\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Bot_Support\" title=\"Legacy:Bot\
      \ Support\">Bot Support</a> – Main topic\n<ul>\n<li><a href=\"/Legacy:Bot_Pathing\"\
      \ title=\"Legacy:Bot Pathing\">Bot Pathing</a> – Concepts and elements of the\
      \ bot path network\n<ul>\n<li><a href=\"/Legacy:Basic_Bot_Pathing\" title=\"\
      Legacy:Basic Bot Pathing\">Basic Bot Pathing</a> – A tutorial on basic bot pathing</li>\n\
      </ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Legacy:Translocator\" title=\"Legacy:Translocator\"\
      >Translocator</a></li>\n<li><a href=\"/Legacy:JumpSpot\" title=\"Legacy:JumpSpot\"\
      >JumpSpot</a></li>\n<li><a href=\"/Legacy:LookTarget\" title=\"Legacy:LookTarget\"\
      >LookTarget</a></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Pathing_Translocators?section=3\" title=\"Edit\
      \ section: Discussion\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>SuperApe:</b> This page appears out of date. The UT200x method of getting\
      \ bots to aim appropriately with the translocator is with a JumpSpot, not a\
      \ LiftExit. Another method uses a LookTarget. I'm referring directly to <a rel=\"\
      nofollow\" class=\"external text\" href=\"http://blitz.unrealplayground.com/tutorials/bots.html#TrickyTransloc\"\
      >Blitz's Advanced Bot Pathing Tutorial</a>.</p>\n<p><b>Ironblayde:</b> You're\
      \ absolutely right; this was written for UT99, and it's quite different in later\
      \ games. Should we perhaps rename this page to \"Pathing Translocators (UT)\"\
      \ and then use the regular \"Pathing Translocators\" page to set down the methods\
      \ for UT200x?</p>\n<p><b>SuperApe:</b> Well, the (UT)/(UT200x) notation is really\
      \ more for class pages. I think since this is just a \"how to\" page, perhaps\
      \ this page could just be divided into two sections. (*waves at Ironblayde*)&#160;:)</p>\n\
      <p><b>Birelli:</b> I wrote up how to path UT2004 translocators from Steve Polge's\
      \ article on <a href=\"/Legacy:JumpSpot\" title=\"Legacy:JumpSpot\">JumpSpot</a>,\
      \ a simple note at the top of this saying \"This is for UT, for pathing translocators\
      \ in UT2004 just use a <a href=\"/Legacy:JumpSpot\" title=\"Legacy:JumpSpot\"\
      >JumpSpot</a>\"...I'm going to put that in.</p>\n<p><b>SuperApe:</b> It sounds\
      \ like more from Blitz's tut (like the <a href=\"/Legacy:LookTarget\" title=\"\
      Legacy:LookTarget\">LookTarget</a> stuff) could be included as well. Perhaps\
      \ just a little more info could be included in a separate level 2 heading for\
      \ UT200x.</p>\n<hr />\n<p><a href=\"/Category:Legacy_Mapping\" title=\"Category:Legacy\
      \ Mapping\">Category:Legacy Mapping</a></p>\n<p><a href=\"/Category:Legacy_Tutorial\"\
      \ title=\"Category:Legacy Tutorial\">Category:Legacy Tutorial</a></p>\n<p><a\
      \ href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy To Do\">Category:Legacy\
      \ To Do</a> – Update for UT200x with the comments made above in Discussion.</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.101 seconds\nReal time usage:\
      \ 0.210 seconds\nPreprocessor visited node count: 14/1000000\nPreprocessor generated\
      \ node count: 40/1000000\nPost‐expand include size: 63/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2393-0!*!0!!*!5!* and timestamp 20221118020331 and revision\
      \ id 5739\n -->\n"
  categories:
  - sortkey: "Pathing Translocators"
    name: "Legacy_Tutorial"
  - sortkey: "Pathing Translocators"
    name: "Legacy_Mapping"
  - sortkey: "Pathing Translocators"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:LookTarget"
  - ns: 100
    exists: true
    name: "Legacy:LiftExit"
  - ns: 100
    exists: true
    name: "Legacy:TranslocDest"
  - ns: 100
    exists: true
    name: "Legacy:Translocator"
  - ns: 100
    exists: true
    name: "Legacy:Bot Pathing"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Bot Support"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Tournament"
  - ns: 100
    exists: true
    name: "Legacy:Actor Browser"
  - ns: 14
    exists: true
    name: "Category:Legacy Mapping"
  - ns: 100
    exists: true
    name: "Legacy:NavigationPoint"
  - ns: 100
    exists: true
    name: "Legacy:UU"
  - ns: 100
    exists: true
    name: "Legacy:JumpSpot"
  - ns: 100
    exists: true
    name: "Legacy:TranslocStart"
  - ns: 100
    exists: true
    name: "Legacy:LiftCenter"
  - ns: 100
    exists: true
    name: "Legacy:Basic Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:Pathing Lifts"
  - ns: 14
    exists: true
    name: "Category:Legacy Tutorial"
  templates: []
  images:
  - "Legacy_Pathing-Translocators-03.jpeg"
  - "Legacy_Pathing-Translocators-02.jpeg"
  - "Legacy_Pathing-Translocators-01.jpeg"
  - "Legacy_Pathing-Translocators-04.jpeg"
  externallinks:
  - "http://blitz.unrealplayground.com/tutorials/bots.html#TrickyTransloc"
  sections:
  - toclevel: 1
    level: "2"
    line: "Pathing Translocators for UT"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Pathing_Translocators"
    byteoffset: 314
    anchor: "Pathing_Translocators_for_UT"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Pathing_Translocators"
    byteoffset: 6430
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Pathing_Translocators"
    byteoffset: 6794
    anchor: "Discussion"
  displaytitle: "Legacy:Pathing Translocators"
  iwlinks: []
  wikitext:
    text: "''This article discusses how to path translocators for the original [[Legacy:Unreal\
      \ Tournament|Unreal Tournament]]. To do this in UT200x, just use a [[Legacy:JumpSpot|JumpSpot]].\
      \ As discussed on the JumpSpot page, the bots in UT200x are smart enough to\
      \ use the translocator to get to a JumpSpot when necessary.''\n\n==Pathing Translocators\
      \ for UT ==\n\nPathnoding translocators is very similar to [[Legacy:Pathing\
      \ Lifts|Pathing Lifts]].  To set up a place for bots to use their translocators,\
      \ you need to place three actors:\n\n# Place a [[Legacy:LiftExit|LiftExit]]\
      \ where you want the bot to stand to fire his translocator. LiftExit can be\
      \ found under [[Legacy:NavigationPoint|NavigationPoint]] in the [[Legacy:Actor\
      \ Browser|Actor Browser]].\n# Place a [[Legacy:TranslocDest|TranslocDest]] where\
      \ the bot should throw his translocator target. TranslocDest can be found under\
      \ [[Legacy:LiftCenter|LiftCenter]], which itself is under NavigationPoint.\n\
      # Place a second [[Legacy:LiftExit|LiftExit]] near the TranslocDest as an \"\
      exit\" from this path.\n# Finally, you need to indicate that these three actors\
      \ are related to one another. Choose a descriptive name and set the following\
      \ properties of your actors to that name:\n#* LiftExit->LiftTag (for both LiftExits)\n\
      #* LiftCenter->LiftTag (for the TranslocDest)\n\nThe screenshot below shows\
      \ an example of this from my map CTF-Susurrous.\n\n[[Image:Legacy_Pathing-Translocators-01.jpeg|center|Bots\
      \ will translocate up this path, and jump down.]]\n\nWhen you set up a translocator\
      \ path like this, a bot using it will assume that he can walk from the TranslocDest\
      \ to either of the LiftExits. And in the case shown in the image above, it's\
      \ true. A bot needs the translocator to get from ground level up to that high\
      \ ledge, but if he wants to get from the ledge back down to the ground, he can\
      \ just walk or jump off the side. \n\nHowever, this won't always be the case\
      \ in your maps. For example, if you want a bot to use his translocator to cross\
      \ a wide gap, he won't be able to walk from the TranslocDest back to the original\
      \ LiftExit. In cases like this, you replace the first LiftExit with a [[Legacy:TranslocStart|TranslocStart]],\
      \ which is a subclass of LiftExit that indicates to the bot that he must use\
      \ his translocator in both directions. Here's an example from the same map that\
      \ shows this:\n\n[[Image:Legacy_Pathing-Translocators-02.jpeg|center|Bots will\
      \ translocate along this path in both directions.]]\n\nIn this case, I wanted\
      \ bots on the roof of the base to be able to reach the sniper tower directly,\
      \ instead of having to go find the teleporter that would take them there otherwise.\
      \ Thus I have a TranslocStart on the roof of the base, and a TranslocDest and\
      \ LiftExit inside the sniper tower. In addition to using this path to reach\
      \ the sniper tower, a bot will also throw his translocator from the TranslocDest\
      \ back to the TranslocStart on the roof and move that way.\n\nThere may also\
      \ come a time when you want a translocator path that can only be followed in\
      \ one direction; in other words, the bot can't get back to the original LiftExit\
      \ or TranslocStart at all. For example, you might want to have bots use their\
      \ translocators to get down from a very high altitude. The usual way to make\
      \ a path one-way is as follows:\n\n# Select the node from which you only want\
      \ paths to face in one direction.\n# Set the property NavigationPoint->bOneWayPath\
      \ to True.\n# Set the propety Advanced->bDirection to True. This will make an\
      \ arrow appear pointing away from the node whenever it's selected in one of\
      \ your 2D viewports.\n# Rotate the node so that the arrow points in the direction\
      \ you want the paths to point. Paths are valid through a 180-degree arc in that\
      \ direction. In other words, if you imagine a plane passing through the node\
      \ and perpendicular to the arrow, paths are only valid towards nodes on the\
      \ same side of the plane as the arrow.\n\nThis works fine for other types of\
      \ nodes, but I've had some trouble getting it to work with LiftExits and TranslocDests.\
      \ An alternate solution is to place the TranslocDest such that a bot can't walk\
      \ to it; that way he'll ignore it and find another path. The screenshot below\
      \ shows an example from my map.\n\n[[Image:Legacy_Pathing-Translocators-03.jpeg|center|The\
      \ TranslocDest is about 350 [[Legacy:UU|UU]]s above the ground.]]\n\nHere I\
      \ needed a way for a bot to escape the sniper tower and move directly towards\
      \ the center of the map, without needing to take the longer route through the\
      \ teleporter I've got up there, so I created a translocator path from the sniper\
      \ tower to the ground. However, even with all three nodes set as one-way paths,\
      \ I still noticed the bots trying to reach the sniper tower directly from the\
      \ ground, and it's much too high for that to be possible. Thus, I raised the\
      \ TranslocDest and LiftExit above the ground a little so bots couldn't walk\
      \ to it, but not so high that bots would take damage falling from it. After\
      \ doing so, they used the path without any problems.\n\nOne more thing you should\
      \ be aware of: if you set your translocator points in such a way that translocation\
      \ is not possible, for example if the TranslocDest is ridiculously high off\
      \ the ground, the bots will try to use it anyway, so make sure you test these\
      \ things out. One problem I've encountered is that bots often seem to mess up\
      \ if you try to give them a path that's too close to being vertical. Below is\
      \ a screenshot where I wanted bots to translocate from one bridge up to another.\n\
      \n[[Image:Legacy_Pathing-Translocators-04.jpeg|center|Don't make paths too steep!]]\n\
      \nNow, it's kind of a tricky translocation as the bridges' heights are relatively\
      \ far apart, so I thought, \"Well, the closer to vertical you throw a translocator,\
      \ the more height you'll get out of it.\" Right? That makes sense to you and\
      \ me, but apparently bots don't agree. In the configuration you see above, my\
      \ bots would throw the translocator, and it would hit the side of the bridge\
      \ and bounce off. Then the bot would translocate up into midair, fall back down,\
      \ and try again ad infinitum. It was amusing to watch for awhile, but it's not\
      \ something you want in the final version of your map. I found that if I backed\
      \ the bottom LiftExit up a bit, so the path's angle above the horizon was not\
      \ quite so great, they were able to use the path with ease. A human player might\
      \ find it difficult to fire the translocator exactly right from that position,\
      \ but the bots will get it every time.\n\n==Related Topics==\n* [[Legacy:Bot\
      \ Support|Bot Support]] &ndash; Main topic\n** [[Legacy:Bot Pathing|Bot Pathing]]\
      \ &ndash; Concepts and elements of the bot path network\n*** [[Legacy:Basic\
      \ Bot Pathing|Basic Bot Pathing]] &ndash; A tutorial on basic bot pathing\n\
      * [[Legacy:Translocator|Translocator]]\n* [[Legacy:JumpSpot|JumpSpot]]\n* [[Legacy:LookTarget|LookTarget]]\n\
      \n==Discussion==\n\n'''SuperApe:''' This page appears out of date.  The UT200x\
      \ method of getting bots to aim appropriately with the translocator is with\
      \ a JumpSpot, not a LiftExit.  Another method uses a LookTarget.  I'm referring\
      \ directly to [http://blitz.unrealplayground.com/tutorials/bots.html#TrickyTransloc\
      \ Blitz's Advanced Bot Pathing Tutorial].\n\n'''Ironblayde:''' You're absolutely\
      \ right; this was written for UT99, and it's quite different in later games.\
      \ Should we perhaps rename this page to \"Pathing Translocators (UT)\" and then\
      \ use the regular \"Pathing Translocators\" page to set down the methods for\
      \ UT200x?\n\n'''SuperApe:''' Well, the (UT)/(UT200x) notation is really more\
      \ for class pages.  I think since this is just a \"how to\" page, perhaps this\
      \ page could just be divided into two sections. (*waves at Ironblayde*) :)\n\
      \n'''Birelli:''' I wrote up how to path UT2004 translocators from Steve Polge's\
      \ article on [[Legacy:JumpSpot|JumpSpot]], a simple note at the top of this\
      \ saying \"This is for UT, for pathing translocators in UT2004 just use a [[Legacy:JumpSpot|JumpSpot]]\"\
      ...I'm going to put that in.\n\n'''SuperApe:''' It sounds like more from Blitz's\
      \ tut (like the [[Legacy:LookTarget|LookTarget]] stuff) could be included as\
      \ well.  Perhaps just a little more info could be included in a separate level\
      \ 2 heading for UT200x.\n\n----\n\n[[:Category:Legacy Mapping]]\n\n[[:Category:Legacy\
      \ Tutorial]]\n\n[[:Category:Legacy To Do]] &ndash; Update for UT200x with the\
      \ comments made above in Discussion.\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy Tutorial|{{PAGENAME}}]]\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 5739
name: "Legacy:Pathing Translocators"
revision:
  revid: 5739
  parentid: 5740
  user: "El Muerte"
  timestamp: 1144361593.000000000
  comment: "revert"
timestamp: 1668763722.202733000
