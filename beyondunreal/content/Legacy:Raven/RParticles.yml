---
parse:
  title: "Legacy:Raven/RParticles"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"RParticles_v._1.2\">RParticles v.\
      \ 1.2</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Raven/RParticles?section=1\" title=\"Edit section:\
      \ RParticles v. 1.2\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>RParticles is advanced particle engine for UT'99. It's written only in Unreal\
      \ Script and therefore it works on Linux, Mac and Windows.</p>\n<ul>\n<li>Up\
      \ to 16 different templates in one Particle Emitter</li>\n<li>Can fade in/out</li>\n\
      <li>5 different states (TriggerControl/TriggerTurnsOff/TriggerTurnsOn/TriggerToggle/TriggeredBlast)\
      \ in ExtendedEmitter</li>\n<li>2 different selection methods</li>\n<li>2 different\
      \ burst methods</li>\n<li>Collision detection</li>\n<li>Performance mode</li>\n\
      <li>Available version for Unreal 1 (tested on 226 and 225f)</li>\n<li>Much more&#160;:)</li>\n\
      </ul>\n<hr />\n<p><b>Class tree</b>:</p>\n<ul>\n<li>Actor\n<ul>\n<li><a href=\"\
      /Legacy:RParticles/ParticleSystem\" title=\"Legacy:RParticles/ParticleSystem\"\
      >ParticleSystem</a> - holds everything together\n<ul>\n<li><b>BasicParticle</b>\
      \ - particle class</li>\n<li><a href=\"/Legacy:RParticles/EmitterCombiner\"\
      \ title=\"Legacy:RParticles/EmitterCombiner\">EmitterCombiner</a> - Emitter\
      \ Combiner is used for merging many emitters into one effect</li>\n<li><a href=\"\
      /Legacy:RParticles/Force\" title=\"Legacy:RParticles/Force\">Force</a> - affects\
      \ BasicParticle velocity (not ParticleEmitter)</li>\n<li><a href=\"/Legacy:RParticles/ParticlePath\"\
      \ title=\"Legacy:RParticles/ParticlePath\">ParticlePath</a> - changes BasicParticle\
      \ Destination</li>\n<li><a href=\"/Legacy:RParticles/ParticleAlter\" title=\"\
      Legacy:RParticles/ParticleAlter\">ParticleAlter</a> - affects ParticleEmitter\
      \ configurations (particles velocity)</li>\n<li><a href=\"/Legacy:RParticles/ParticleAnimationStorage\"\
      \ title=\"Legacy:RParticles/ParticleAnimationStorage\">ParticleAnimationStorage</a>\
      \ - stores animation info for particles (for coders)\n<ul>\n<li><b>UT2k4FireAnimations</b>\
      \ - animations for UT2k4Fire2</li>\n</ul>\n</li>\n<li><a href=\"/Legacy:RParticles/ParticleEmitter\"\
      \ title=\"Legacy:RParticles/ParticleEmitter\">ParticleEmitter</a>\n<ul>\n<li><a\
      \ href=\"/Legacy:RParticles/ExtendedEmitter\" title=\"Legacy:RParticles/ExtendedEmitter\"\
      >ExtendedEmitter</a> - extended version of ParticleEmitter. Contain working\
      \ states</li>\n<li><a href=\"/Legacy:RParticles/WeaponEmitter\" title=\"Legacy:RParticles/WeaponEmitter\"\
      >WeaponEmitter</a> - emitter for weapon effects. Can be destroyed.</li>\n<li><b>FireEmitter</b>\
      \ - holds fire effects together\n<ul>\n<li><b>UT2k4Fire</b> - fire preset form\
      \ UT 2004</li>\n<li><b>UT2k4Fire2</b> - fire preset from UT 2004 (with ParticleAnimationStorage)</li>\n\
      </ul>\n</li>\n<li><b>ParticleTest</b> - sample particles\n<ul>\n<li><b>Sample1</b></li>\n\
      <li><b>Sample2</b></li>\n<li><b>Sample3</b></li>\n</ul>\n</li>\n</ul>\n</li>\n\
      </ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<div class=\"center\">\n<div class=\"\
      floatnone\"><a href=\"/File:Legacy_RParticlesExampleVariatto.jpeg\" class=\"\
      image\" title=\"CTF-TFC-Variatto with RParticles\"><img alt=\"CTF-TFC-Variatto\
      \ with RParticles\" src=\"/w/images/Legacy_RParticlesExampleVariatto.jpeg\"\
      \ width=\"640\" height=\"503\" /></a></div>\n</div>\n<div class=\"center\">\n\
      <div class=\"floatnone\"><a href=\"/File:Legacy_RParticlesTorch.jpeg\" class=\"\
      image\" title=\"Simple Torch created using RParticles\"><img alt=\"Simple Torch\
      \ created using RParticles\" src=\"/w/images/Legacy_RParticlesTorch.jpeg\" width=\"\
      183\" height=\"462\" /></a></div>\n</div>\n<div class=\"center\">\n<div class=\"\
      floatnone\"><a href=\"/File:Legacy_RParticles.jpeg\" class=\"image\" title=\"\
      UT2k4 and UT'99 emitter\"><img alt=\"UT2k4 and UT'99 emitter\" src=\"/w/images/Legacy_RParticles.jpeg\"\
      \ width=\"160\" height=\"151\" /></a></div>\n</div>\n<div class=\"center\">\n\
      <div class=\"floatnone\"><a href=\"/File:Legacy_RParticlesWindow.gif\" class=\"\
      image\" title=\"UED shot\"><img alt=\"UED shot\" src=\"/w/images/Legacy_RParticlesWindow.gif\"\
      \ width=\"333\" height=\"420\" /></a></div>\n</div>\n<p><b>UT'99 version download\
      \ link</b>: <a rel=\"nofollow\" class=\"external autonumber\" href=\"http://turniej.unreal.pl/files/RParticles.zip\"\
      >[1]</a> (tested on 436).</p>\n<p><b>Unreal 1 download link</b>: <a rel=\"nofollow\"\
      \ class=\"external autonumber\" href=\"http://turniej.unreal.pl/files/RParticlesU1a.zip\"\
      >[2]</a> (tested on 226 and 225f - version 1.2).</p>\n<p><b>Archive content</b>:</p>\n\
      <ul>\n<li>RParticles.u\n<ul>\n<li>3 samples and 2 working fire templates included</li>\n\
      </ul>\n</li>\n<li>Help file</li>\n</ul>\n<hr />\n<p><b>Tarquin:</b> Please give\
      \ images clear and sensible names. '222' does not describe what this image does.</p>\n\
      <p><b>Raven:</b> Sorry for that. I've updated that image with better name -\
      \ <b>RPartices.jpg</b>.</p>\n<p><b>Tarquin:</b> Thanks&#160;:) This is for UT?\
      \ Might be an idea to clearly state that at the top of this page. Oh, and don't\
      \ forget to mark them as custom classes.</p>\n<p><b>Raven</b> Yes, it's for\
      \ old UT'99. Everything added (I hope). And little update will come soon (new\
      \ sizing method (infinity/user defined)). Actually it's finished, but i need\
      \ to test it on-line.</p>\n<p><b>Tester:</b> If you have 1ghz and MX440 like\
      \ me do not use this! It killed my fps down to 10fps in a single cube room!!!</p>\n\
      <p><b>Xian:</b> I'll take a look at it when I have time. UT99 has always been\
      \ my true love, never bene a fan of UE2. BTW, I suggest you check out <a href=\"\
      /Legacy:UnrealTournament_Extension_Pack\" title=\"Legacy:UnrealTournament Extension\
      \ Pack\">this</a> subpage. Working together with Shadow might help you both.\
      \ I don't know if you have performance issues (as in FPS drops) with your script\
      \ yet, but Shadow might be able to help you there if you do. Exchanging ideas,\
      \ coding together, who knows&#160;?! He is also planning on porting a new RenDev\
      \ for OGL (not sure about D3D) to include motion blur and such. You could ask\
      \ him to include your distance fog, once it's fixed. Good luck&#160;!</p>\n\
      <p>-&gt; <b>Shadow:</b> Well currently while rewriting my particle system I\
      \ made up my mind coding 4 different particle systems (yes..). All four a very\
      \ different but still compatible to each other. I'm maybe going to code a 5th\
      \ particle system which will be native, covering voxel particles, advanced particle\
      \ techniques and maybe in-UnrealED preview, but still keeping the other 4 for\
      \ leaving platform independence intact. The reason for 4 different particle\
      \ systems is the contrast between crapload + growing functionality VS. user\
      \ friendlyness + performance optimizations. Most of the code is only executed\
      \ when it's really needed resulting in a performance boost. They're also (currently)\
      \ around 30+ performance options dealing with visibility, culling, dynamic lod,\
      \ respawning, recycling algorithms. One of the completely new features is a\
      \ build-in support for simulated pixel shaders allowing particles with dynamic\
      \ color, U/V size, combiners and so on. All particle systems, of course next\
      \ to all other extensions, will be intensely tested online too by the help of\
      \ some guys from UnrealED.de making shure it'll work fine in multiplayer/network\
      \ too. The extended Render containing the StaticMesh Extension and the Hardware\
      \ PostProcessing will be for both Direct3D8/9 and OpenGL1.4/2.x . Also there's\
      \ no need of implementing his distance fog since I had distance fog years ago\
      \ for LSoNP and both methods (his and mine) are nearly the same. I already helped\
      \ Raven several times concerning his scripts, lastly on his particle system.\
      \ Giving a slight prediction the particle systems should run smoothly on a machine\
      \ like 1-2 GHZ, 256/512 MB Ram, 64 MB GFX Card. My own pc isn't the best and\
      \ also partially broken too so you can trust me (2.5 GHZ, 256 MB Ram (originally\
      \ 512 MB, but one ram slot is broken), 64 MB GFX Card (GeforceFX 5200)). The\
      \ final pack will contain around ~20 basic emitters and ~100 additional emitters\
      \ which are all ready-to-use.</p>\n<p>Hope I made everything clear for you Xian&#160;;)</p>\n\
      <p><b>Xian:</b></p>\n<p><i>Edit:</i> After checking your code... I don't understand\
      \ your idea:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> ParticleSystem;\n \n<span class=\"kw1\">simulated</span>\
      \ <span class=\"kw1\">function</span> <span class=\"kw5\">int</span> RandFloat<span\
      \ class=\"br0\">(</span><span class=\"kw5\">float</span> <span class=\"kw3\"\
      >max</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> num;\n <span class=\"\
      kw1\">local</span> <span class=\"kw5\">float</span> delta;\n num <span class=\"\
      sy0\">=</span> <span class=\"kw3\">max</span>;\n delta<span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">max</span> <span class=\"sy0\">-</span> num;\n \n <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">rand</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span\
      \ class=\"sy0\">&lt;</span>delta<span class=\"sy0\">*</span><span class=\"nu0\"\
      >100</span><span class=\"br0\">)</span> num<span class=\"sy0\">++</span>;\n\
      \ <span class=\"kw2\">return</span> num;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>So... num (initially 0) becomes max (say... 3.0f). Delta becomes\
      \ max - num, that is 3.0f - 3.0f, which is 0. Then, if a Random 0-99 number\
      \ is smaller than delta * 100 (that is, 0 100, which is 0), increase the num,\
      \ which was initially max (3.0f in our example). Seems like a lot of assigning\
      \ and operator calls which are not efficient in the aging UE1 framework. You\
      \ either forgot something (maybe a RandRange() call) or you wanted to just reset\
      \ delta (which is reset to 0 by default).</p>\n<p>Also:</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">class</span> ExtendedEmitter;\n \n\
      <span class=\"co1\">//=============================================================================</span>\n\
      <span class=\"co1\">// Set's bOn on or off. cleintside function</span>\n<span\
      \ class=\"co1\">//=============================================================================</span>\n\
      <span class=\"kw1\">function</span> SetOn<span class=\"br0\">(</span><span class=\"\
      kw5\">bool</span> btun<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \    <span class=\"coMULTI\">/*if(Level.NetMode != NM_DedicatedServer)*/</span>\
      \ bIsOn<span class=\"sy0\">=</span>btun;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>To make a function clientside, you need to declare it as <i>simulated</i>.\
      \ Also, you extend ParticleSystem which extends Actor. Role is ROLE_Authority\
      \ by default and RemoteRole is ROLE_DumbProxy. In order to ensure proper replication,\
      \ a simulated function call requires a RemoteRole of ROLE_SimulatedProxy. Which\
      \ you do not have.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\">\t<span class=\"\
      kw1\">simulated</span> <span class=\"kw1\">function</span> <span class=\"kw4\"\
      >Trigger</span><span class=\"br0\">(</span> <span class=\"kw9\">actor</span>\
      \ Other, <span class=\"kw9\">pawn</span> EventInstigator <span class=\"br0\"\
      >)</span>\n\t<span class=\"br0\">{</span>\n                <span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>bIsOn<span class=\"br0\">)</span>\n \
      \               <span class=\"br0\">{</span>\n                    SetOn<span\
      \ class=\"br0\">(</span><span class=\"kw6\">false</span><span class=\"br0\"\
      >)</span>;\n                <span class=\"br0\">}</span>\n\t\t<span class=\"\
      kw2\">else</span>\n                <span class=\"br0\">{</span>\n          \
      \          SetOn<span class=\"br0\">(</span><span class=\"kw6\">true</span><span\
      \ class=\"br0\">)</span>;\n                <span class=\"br0\">}</span>\n\t\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>This part in ExtendedEmitter.TriggerToggle.Trigger()\
      \ could have been written as:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      >\t<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">Trigger</span><span class=\"br0\">(</span> <span class=\"\
      kw9\">actor</span> Other, <span class=\"kw9\">pawn</span> EventInstigator <span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n            SetOn<span\
      \ class=\"br0\">(</span><span class=\"sy0\">!</span>bIsOn<span class=\"br0\"\
      >)</span>;\n\t<span class=\"br0\">}</span></pre></div>\n</div>\n<p>Also:</p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">class</span> ParticlePath;\n\
      \ \n<span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">Touch</span><span class=\"br0\">(</span><span class=\"\
      kw9\">Actor</span> Other<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \     <span class=\"kw2\">if</span><span class=\"br0\">(</span>BasicParticle<span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span> <span class=\"sy0\"\
      >!=</span> <span class=\"kw5\">none</span><span class=\"br0\">)</span> BasicParticle<span\
      \ class=\"br0\">(</span>Other<span class=\"br0\">)</span>.<span class=\"me0\"\
      >Destn</span><span class=\"sy0\">=</span>NextPoint;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>Would be better written as:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw1\">simulated</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw4\">Touch</span><span class=\"br0\">(</span><span class=\"\
      kw9\">Actor</span> Other<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \     <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      br0\">(</span>NextPoint <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span> <span class=\"co1\">// No reason to check the rest\
      \ of the code if we don't have 'NextPoint'</span>\n     <span class=\"sy0\"\
      >&amp;&amp;</span> <span class=\"br0\">(</span>BasicParticle<span class=\"br0\"\
      >(</span>Other<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \         BasicParticle<span class=\"br0\">(</span>Other<span class=\"br0\"\
      >)</span>.<span class=\"me0\">Destn</span> <span class=\"sy0\">=</span> NextPoint;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>These are just a few glances\
      \ I had within the first minutes. The code is interesting, but it seems you\
      \ lack some optimizations in the code. I estimate that if you would optimize\
      \ all of it, you'd get a speed-up of at least 25% per whole package (note, not\
      \ 25% increase per class, but as a whole, so around 5% maybe per running class,\
      \ which is still good).</p>\n<p>Please note that UE1 and UScript in general\
      \ is slow, so take any optimization you can get. It can definitely help you\
      \ and others&#160;:)</p>\n<hr />\n<p><b>Credits</b>:</p>\n<ul>\n<li>USU team\
      \ for release UltimaUnreal particle system (it was a base or very first TCO\
      \ particle system, and now not much of it left in the code right now&#160;:P)</li>\n\
      <li>TCO Team for early betatesting&#160;:)</li>\n</ul>\n<hr />\n<h2><span class=\"\
      mw-headline\" id=\"Version_history:\">Version history:</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Raven/RParticles?section=2\"\
      \ title=\"Edit section: Version history:\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li>v. 1.2a (Unreal 1 version)\n<ul>\n<li>new <b>SpawnOffset</b>\
      \ vestor in <b>Particle_EffectArea[16]</b></li>\n</ul>\n</li>\n<li>v. 1.2\n\
      <ul>\n<li>ParticleEmitter is now fully ClientSide.</li>\n<li>States TriggerControl/TriggerTurnsOff/TriggerTurnsOn/TriggerToggle/TriggeredBlast\
      \ was moved to ExtendedEmitter because of replication which was required in\
      \ order to make this states work</li>\n<li>WeaponEmitter for any effects which\
      \ have to be spawned/destroyed during game (like Explosions, etc.)</li>\n</ul>\n\
      </li>\n<li>v. 1.1 (unreleased)\n<ul>\n<li>new <b>Particle_EffectArea[16]</b>\
      \ struct to override defult spawn area</li>\n<li>new <b>Particle_Mesh[16]</b>\
      \ struct which allows to play animations while <b>bUseMesh</b> in <b>Particle_Display[16]</b>\
      \ is true</li>\n<li>new <b>Particle_Destination[16]</b> struct which gives ability\
      \ to decide about optional destination</li>\n<li>new <b>ParticlePath</b> actor\
      \ used to give particles specified path (can be used only if <b>DestinationType</b>&#160;!=\
      \ <b>DEST_None</b>)</li>\n<li>new features in <b>Force</b> actor</li>\n<li>few\
      \ optimizations in replication block</li>\n</ul>\n</li>\n<li>v. 1.0\n<ul>\n\
      <li>few optimizations</li>\n<li>fixed critical error which in some situations\
      \ can lead to crash&#160;!!</li>\n</ul>\n</li>\n<li>v. 0.9.0.8\n<ul>\n<li>added\
      \ new, advanced, velocity functions (<b>Particle_InvertVelocity[16]</b> inside\
      \ <b>ParticleEmitter</b>)</li>\n</ul>\n</li>\n<li>v. 0.9.0.7\n<ul>\n<li>optimized\
      \ ParticleEmitter.uc</li>\n<li>optimized BasicParticle.uc</li>\n</ul>\n</li>\n\
      <li>v. 0.9.0.6\n<ul>\n<li>added new EmitterCombiner.uc actor</li>\n</ul>\n</li>\n\
      <li>v. 0.9.0.5\n<ul>\n<li>added new ESizing enum. It describes whenever particle\
      \ should shrinks/grows endlesly or stop when it reaches specifed size</li>\n\
      </ul>\n</li>\n<li>v. 0.9.0.4\n<ul>\n<li>added new srtucture: SSize where all\
      \ size related variables was moved (ParticleDrawScale/ParticleDrawScaleVariance/ParticleGrowth)</li>\n\
      <li>new option, which allow to cyclically changing particle size (shrinking/and\
      \ growing), has beed added</li>\n<li>new sample (Sample3.uc) which shows cyclically\
      \ changing particle size</li>\n<li>few smaller or bigger improvements</li>\n\
      </ul>\n</li>\n<li>v. 0.9.0.3\n<ul>\n<li>added new global setting which can be\
      \ forced to use instead of template Particle_Main.</li>\n</ul>\n</li>\n<li>v.\
      \ 0.9.0.2\n<ul>\n<li>fixed bug in TriggeredBlast state in ParticleEmitter.uc</li>\n\
      <li>added ParticleAnimationStorage.uc to store animation info (override strange\
      \ bug with static array in an static array of structures).</li>\n<li>added Force.uc\
      \ actor to change particle velocity (affect only this particles that touches\
      \ it)</li>\n<li>new icons</li>\n</ul>\n</li>\n<li>v. 0.9.0.1\n<ul>\n<li>added\
      \ new presets (UT2k4Fire/UT2k4Fire2)</li>\n<li>few changes in ParticleEmitter.uc</li>\n\
      </ul>\n</li>\n</ul>\n<hr />\n<p><a href=\"/Category:Legacy_Mapping\" title=\"\
      Category:Legacy Mapping\">Category:Legacy Mapping</a><br />\n<a href=\"/Category:Legacy_Custom_Class_(UT)\"\
      \ title=\"Category:Legacy Custom Class (UT)\">Category:Legacy Custom Class (UT)</a>\
      \ \\\\</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.230 seconds\nReal\
      \ time usage: 0.455 seconds\nPreprocessor visited node count: 63/1000000\nPreprocessor\
      \ generated node count: 150/1000000\nPost‐expand include size: 32/2097152 bytes\n\
      Template argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive\
      \ parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report\
      \ (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\n<!-- Saved\
      \ in parser cache with key wiki:pcache:idhash:2701-0!*!0!!*!5!* and timestamp\
      \ 20221207102114 and revision id 6428\n -->\n"
  categories:
  - sortkey: "Raven/RParticles"
    name: "Legacy_Mapping"
  - sortkey: "Raven/RParticles"
    name: "Legacy_Custom_Class_(UT)"
  links:
  - ns: 14
    exists: true
    name: "Category:Legacy Custom Class (UT)"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/WeaponEmitter"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ExtendedEmitter"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ParticleEmitter"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ParticlePath"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/EmitterCombiner"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/Force"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ParticleSystem"
  - ns: 100
    exists: true
    name: "Legacy:UnrealTournament Extension Pack"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ParticleAlter"
  - ns: 14
    exists: true
    name: "Category:Legacy Mapping"
  - ns: 100
    exists: true
    name: "Legacy:RParticles/ParticleAnimationStorage"
  templates: []
  images:
  - "Legacy_RParticlesWindow.gif"
  - "Legacy_RParticlesExampleVariatto.jpeg"
  - "Legacy_RParticlesTorch.jpeg"
  - "Legacy_RParticles.jpeg"
  externallinks:
  - "http://turniej.unreal.pl/files/RParticles.zip"
  - "http://turniej.unreal.pl/files/RParticlesU1a.zip"
  sections:
  - toclevel: 1
    level: "2"
    line: "RParticles v. 1.2"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Raven/RParticles"
    byteoffset: 0
    anchor: "RParticles_v._1.2"
  - toclevel: 1
    level: "2"
    line: "Version history:"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Raven/RParticles"
    byteoffset: 8843
    anchor: "Version_history:"
  displaytitle: "Legacy:Raven/RParticles"
  iwlinks: []
  wikitext:
    text: "==RParticles v. 1.2==\n\nRParticles is advanced particle engine for UT'99.\
      \ It's written only in Unreal Script and therefore it works on Linux, Mac and\
      \ Windows.\n\n* Up to 16 different templates in one Particle Emitter\n* Can\
      \ fade in/out\n* 5 different states (TriggerControl/TriggerTurnsOff/TriggerTurnsOn/TriggerToggle/TriggeredBlast)\
      \ in ExtendedEmitter\n* 2 different selection methods\n* 2 different burst methods\n\
      * Collision detection\n* Performance mode\n* Available version for Unreal 1\
      \ (tested on 226 and 225f)\n* Much more :)\n\n----\n\n'''Class tree''':\n*Actor\n\
      **[[Legacy:RParticles/ParticleSystem|ParticleSystem]] - holds everything together\n\
      ***'''BasicParticle''' - particle class\n***[[Legacy:RParticles/EmitterCombiner|EmitterCombiner]]\
      \ - Emitter Combiner is used for merging many emitters into one effect\n***[[Legacy:RParticles/Force|Force]]\
      \ - affects BasicParticle velocity (not ParticleEmitter)\n***[[Legacy:RParticles/ParticlePath|ParticlePath]]\
      \ - changes BasicParticle Destination\n***[[Legacy:RParticles/ParticleAlter|ParticleAlter]]\
      \ - affects ParticleEmitter configurations (particles velocity)\n***[[Legacy:RParticles/ParticleAnimationStorage|ParticleAnimationStorage]]\
      \ - stores animation info for particles (for coders)\n****'''UT2k4FireAnimations'''\
      \ - animations for UT2k4Fire2\n***[[Legacy:RParticles/ParticleEmitter|ParticleEmitter]]\n\
      ****[[Legacy:RParticles/ExtendedEmitter|ExtendedEmitter]] - extended version\
      \ of ParticleEmitter. Contain working states\n****[[Legacy:RParticles/WeaponEmitter|WeaponEmitter]]\
      \ - emitter for weapon effects. Can be destroyed.\n****'''FireEmitter''' - holds\
      \ fire effects together\n*****'''UT2k4Fire''' - fire preset form UT 2004\n*****'''UT2k4Fire2'''\
      \ - fire preset from UT 2004 (with ParticleAnimationStorage)\n****'''ParticleTest'''\
      \ - sample particles\n*****'''Sample1'''\n*****'''Sample2'''\n*****'''Sample3'''\n\
      \n----\n\n[[Image:Legacy_RParticlesExampleVariatto.jpeg|center|CTF-TFC-Variatto\
      \ with RParticles]]\n\n[[Image:Legacy_RParticlesTorch.jpeg|center|Simple Torch\
      \ created using RParticles]]\n\n[[Image:Legacy_RParticles.jpeg|center|UT2k4\
      \ and UT'99 emitter]]\n\n[[Image:Legacy_RParticlesWindow.gif|center|UED shot]]\n\
      \n'''UT'99 version download link''': [http://turniej.unreal.pl/files/RParticles.zip]\
      \ (tested on 436).\n\n'''Unreal 1 download link''': [http://turniej.unreal.pl/files/RParticlesU1a.zip]\
      \ (tested on 226 and 225f - version 1.2).\n\n'''Archive content''':\n* RParticles.u\n\
      ** 3 samples and 2 working fire templates included\n* Help file\n\n----\n\n\
      '''Tarquin:''' Please give images clear and sensible names. '222' does not describe\
      \ what this image does.\n\n'''Raven:''' Sorry for that. I've updated that image\
      \ with better name - '''RPartices.jpg'''.\n\n'''Tarquin:''' Thanks :) This is\
      \ for UT? Might be an idea to clearly state that at the top of this page. Oh,\
      \ and don't forget to mark them as custom classes.\n\n'''Raven''' Yes, it's\
      \ for old UT'99. Everything added (I hope). And little update will come soon\
      \ (new sizing method (infinity/user defined)). Actually it's finished, but i\
      \ need to test it on-line.\n\n'''Tester:''' If you have 1ghz and MX440 like\
      \ me do not use this! It killed my fps down to 10fps in a single cube room!!!\n\
      \n'''Xian:''' I'll take a look at it when I have time. UT99 has always been\
      \ my true love, never bene a fan of UE2. BTW, I suggest you check out [[Legacy:UnrealTournament\
      \ Extension Pack | this]] subpage. Working together with Shadow might help you\
      \ both. I don't know if you have performance issues (as in FPS drops) with your\
      \ script yet, but Shadow might be able to help you there if you do. Exchanging\
      \ ideas, coding together, who knows ?! He is also planning on porting a new\
      \ RenDev for OGL (not sure about D3D) to include motion blur and such. You could\
      \ ask him to include your distance fog, once it's fixed. Good luck !\n\n-> '''Shadow:'''\
      \ Well currently while rewriting my particle system I made up my mind coding\
      \ 4 different particle systems (yes..). All four a very different but still\
      \ compatible to each other. I'm maybe going to code a 5th particle system which\
      \ will be native, covering voxel particles, advanced particle techniques and\
      \ maybe in-UnrealED preview, but still keeping the other 4 for leaving platform\
      \ independence intact. The reason for 4 different particle systems is the contrast\
      \ between crapload + growing functionality VS. user friendlyness + performance\
      \ optimizations. Most of the code is only executed when it's really needed resulting\
      \ in a performance boost. They're also (currently) around 30+ performance options\
      \ dealing with visibility, culling, dynamic lod, respawning, recycling algorithms.\
      \ One of the completely new features is a build-in support for simulated pixel\
      \ shaders allowing particles with dynamic color, U/V size, combiners and so\
      \ on. All particle systems, of course next to all other extensions, will be\
      \ intensely tested online too by the help of some guys from UnrealED.de making\
      \ shure it'll work fine in multiplayer/network too. The extended Render containing\
      \ the StaticMesh Extension and the Hardware PostProcessing will be for both\
      \ Direct3D8/9 and OpenGL1.4/2.x . Also there's no need of implementing his distance\
      \ fog since I had distance fog years ago for LSoNP and both methods (his and\
      \ mine) are nearly the same. I already helped Raven several times concerning\
      \ his scripts, lastly on his particle system. Giving a slight prediction the\
      \ particle systems should run smoothly on a machine like 1-2 GHZ, 256/512 MB\
      \ Ram, 64 MB GFX Card. My own pc isn't the best and also partially broken too\
      \ so you can trust me (2.5 GHZ, 256 MB Ram (originally 512 MB, but one ram slot\
      \ is broken), 64 MB GFX Card (GeforceFX 5200)). The final pack will contain\
      \ around ~20 basic emitters and ~100 additional emitters which are all ready-to-use.\n\
      \nHope I made everything clear for you Xian ;)\n\n'''Xian:'''\n\n''Edit:'' After\
      \ checking your code... I don't understand your idea:\n\n<uscript>\nclass ParticleSystem;\n\
      \nsimulated function int RandFloat(float max)\n{\n local int num;\n local float\
      \ delta;\n num = max;\n delta= max - num;\n\n if (rand(100)<delta*100) num++;\n\
      \ return num;\n}</uscript>\n\nSo... num (initially 0) becomes max (say... 3.0f).\
      \ Delta becomes max - num, that is 3.0f - 3.0f, which is 0. Then, if a Random\
      \ 0-99 number is smaller than delta * 100 (that is, 0  100, which is 0), increase\
      \ the num, which was initially max (3.0f in our example). Seems like a lot of\
      \ assigning and operator calls which are not efficient in the aging UE1 framework.\
      \ You either forgot something (maybe a RandRange() call) or you wanted to just\
      \ reset delta (which is reset to 0 by default).\n\nAlso:\n\n<uscript>\nclass\
      \ ExtendedEmitter;\n\n//=============================================================================\n\
      // Set's bOn on or off. cleintside function\n//=============================================================================\n\
      function SetOn(bool btun)\n{\n    /*if(Level.NetMode != NM_DedicatedServer)*/\
      \ bIsOn=btun;\n}</uscript>\n\nTo make a function clientside, you need to declare\
      \ it as ''simulated''. Also, you extend ParticleSystem which extends Actor.\
      \ Role is ROLE_Authority by default and RemoteRole is ROLE_DumbProxy. In order\
      \ to ensure proper replication, a simulated function call requires a RemoteRole\
      \ of ROLE_SimulatedProxy. Which you do not have. \n\n<uscript>\n\tsimulated\
      \ function Trigger( actor Other, pawn EventInstigator )\n\t{\n             \
      \   if (bIsOn)\n                {\n                    SetOn(false);\n     \
      \           }\n\t\telse\n                {\n                    SetOn(true);\n\
      \                }\n\t}</uscript>\n\nThis part in ExtendedEmitter.TriggerToggle.Trigger()\
      \ could have been written as:\n\n<uscript>\n\tsimulated function Trigger( actor\
      \ Other, pawn EventInstigator )\n\t{\n            SetOn(!bIsOn);\n\t}</uscript>\n\
      \nAlso:\n\n<uscript>class ParticlePath;\n\nsimulated function Touch(Actor Other)\n\
      {\n     if(BasicParticle(Other) != none) BasicParticle(Other).Destn=NextPoint;\n\
      }</uscript>\n\nWould be better written as:\n\n<uscript>simulated function Touch(Actor\
      \ Other)\n{\n     if ((NextPoint != None) // No reason to check the rest of\
      \ the code if we don't have 'NextPoint'\n     && (BasicParticle(Other) != None))\n\
      \         BasicParticle(Other).Destn = NextPoint;\n}</uscript>\n\nThese are\
      \ just a few glances I had within the first minutes. The code is interesting,\
      \ but it seems you  lack some optimizations in the code. I estimate that if\
      \ you would optimize all of it, you'd get a speed-up of at least 25% per whole\
      \ package (note, not 25% increase per class, but as a whole, so around 5% maybe\
      \ per running class, which is still good).\n\nPlease note that UE1 and UScript\
      \ in general is slow, so take any optimization you can get. It can definitely\
      \ help you and others :)\n\n----\n\n'''Credits''':\n* USU team for release UltimaUnreal\
      \ particle system (it was a base or very first TCO particle system, and now\
      \ not much of it left in the code right now :P)\n* TCO Team for early betatesting\
      \ :)\n\n----\n\n==Version history:==\n* v. 1.2a (Unreal 1 version)\n** new '''SpawnOffset'''\
      \ vestor in '''Particle_EffectArea[16]'''\n* v. 1.2\n** ParticleEmitter is now\
      \ fully ClientSide.\n** States TriggerControl/TriggerTurnsOff/TriggerTurnsOn/TriggerToggle/TriggeredBlast\
      \ was moved to ExtendedEmitter because of replication which was required in\
      \ order to make this states work\n** WeaponEmitter for any effects which have\
      \ to be spawned/destroyed during game (like Explosions, etc.)\n* v. 1.1 (unreleased)\n\
      ** new '''Particle_EffectArea[16]''' struct to override defult spawn area\n\
      ** new '''Particle_Mesh[16]''' struct which allows to play animations while\
      \ '''bUseMesh''' in '''Particle_Display[16]''' is true\n** new '''Particle_Destination[16]'''\
      \ struct which gives ability to decide about optional destination\n** new '''ParticlePath'''\
      \ actor used to give particles specified path (can be used only if '''DestinationType'''\
      \ != '''DEST_None''')\n** new features in '''Force''' actor\n** few optimizations\
      \ in replication block\n* v. 1.0\n** few optimizations\n** fixed critical error\
      \ which in some situations can lead to crash !!\n* v. 0.9.0.8\n** added new,\
      \ advanced, velocity functions ('''Particle_InvertVelocity[16]''' inside '''ParticleEmitter''')\n\
      * v. 0.9.0.7\n** optimized ParticleEmitter.uc\n** optimized BasicParticle.uc\n\
      * v. 0.9.0.6\n** added new EmitterCombiner.uc actor\n* v. 0.9.0.5\n** added\
      \ new ESizing enum. It describes whenever particle should shrinks/grows endlesly\
      \ or stop when it reaches specifed size\n* v. 0.9.0.4\n** added new srtucture:\
      \ SSize where all size related variables was moved (ParticleDrawScale/ParticleDrawScaleVariance/ParticleGrowth)\n\
      ** new option, which allow to cyclically changing particle size (shrinking/and\
      \ growing), has beed added\n** new sample (Sample3.uc) which shows cyclically\
      \ changing particle size\n** few smaller or bigger improvements\n* v. 0.9.0.3\n\
      ** added new global setting which can be forced to use instead of template Particle_Main.\n\
      * v. 0.9.0.2\n** fixed bug in TriggeredBlast state in ParticleEmitter.uc\n**\
      \ added ParticleAnimationStorage.uc to store animation info (override strange\
      \ bug with static array in an static array of structures).\n** added Force.uc\
      \ actor to change particle velocity (affect only this particles that touches\
      \ it)\n** new icons\n*v. 0.9.0.1\n** added new presets (UT2k4Fire/UT2k4Fire2)\n\
      ** few changes in ParticleEmitter.uc\n\n----\n\n[[:Category:Legacy Mapping]]\
      \ <br />[[:Category:Legacy Custom Class (UT)]] \\\\\n[[Category:Legacy Mapping|{{PAGENAME}}]]\n\
      [[Category:Legacy Custom Class (UT)|{{PAGENAME}}]]"
  properties: []
  revId: 6428
name: "Legacy:Raven/RParticles"
revision:
  revid: 6428
  parentid: 6429
  user: "Shadow"
  timestamp: 1201455925.000000000
  comment: "*"
timestamp: 1670408476.093623000
