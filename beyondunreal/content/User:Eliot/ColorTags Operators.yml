---
parse:
  title: "User:Eliot/ColorTags Operators"
  text:
    text: "<div style=\"float:right; border:1px solid silver; width:250px; background-color:White;\
      \ padding:3px;\">\n<center><b>ColorTags Operators</b><br />\n<small>Provides\
      \ operators and functions to convert a <a href=\"/Color\" title=\"Color\">color</a>\
      \ <a href=\"/Struct\" title=\"Struct\" class=\"mw-redirect\">struct</a> to a\
      \ color tag.</small><br /></center>\n<p><br /></p>\n<table style=\"background-color:White;\"\
      >\n<tr>\n<td><b><a href=\"http://en.wikipedia.org/wiki/Author\" class=\"extiw\"\
      \ title=\"wp:Author\">Author</a></b></td>\n<td><a href=\"/User:Eliot\" title=\"\
      User:Eliot\">Eliot</a></td>\n</tr>\n<tr>\n<td><b><a href=\"http://en.wikipedia.org/wiki/Computer_compatibility#Software_compatibility\"\
      \ class=\"extiw\" title=\"wp:Computer compatibility\">Compatible</a></b></td>\n\
      <td><a href=\"/edit/Unreal_Engine_2?redlink=1\" class=\"new\" title=\"Unreal\
      \ Engine 2 (page does not exist)\">Unreal Engine 2</a></td>\n</tr>\n</table>\n\
      <p><br /></p>\n<center>\n<p><small>When using any of the provided source code\
      \ please credit the listed <i>Author</i> in your source code! e.g. <i>\"ColorTags\
      \ Operators utils written by <a href=\"/User:Eliot\" title=\"User:Eliot\">Eliot</a>.\"\
      </i>.<br />\nView more utils at <a href=\"/UnrealScript_Utils\" title=\"UnrealScript\
      \ Utils\" class=\"mw-redirect\">UnrealScript Utils</a></small></p>\n</center>\n\
      </div>\n<p><br /></p>\n<p>Because i hate to call static functions of epic games\
      \ or self-written ones to generate a <a href=\"/edit/Color_tag?redlink=1\" class=\"\
      new\" title=\"Color tag (page does not exist)\">color tag</a> from a color on\
      \ run-time i have made those operations so that i have to write less and so\
      \ my long ClientMessage strings aren't so ugly to read.</p>\n<p><b>Note:</b>\
      \ I haven't tested all of these operators!, if you find a bug or something else\
      \ feel free to correct the code here on this article!.</p>\n<p></p>\n<div id=\"\
      toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n\
      <li class=\"toclevel-1 tocsection-1\"><a href=\"#Creating_color_tags\"><span\
      \ class=\"tocnumber\">1</span> <span class=\"toctext\">Creating color tags</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Adding_color_tags\"><span class=\"\
      tocnumber\">2</span> <span class=\"toctext\">Adding color tags</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Conditional_operators\"><span\
      \ class=\"tocnumber\">3</span> <span class=\"toctext\">Conditional operators</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-4\"><a href=\"#Removing.2FReplacing_color_tags\"\
      ><span class=\"tocnumber\">4</span> <span class=\"toctext\">Removing/Replacing\
      \ color tags</span></a></li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"\
      #Converting_color_tags\"><span class=\"tocnumber\">5</span> <span class=\"toctext\"\
      >Converting color tags</span></a></li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"\
      mw-headline\" id=\"Creating_color_tags\">Creating color tags</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/User:Eliot/ColorTags_Operators?section=1\"\
      \ title=\"Edit section: Creating color tags\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      coMULTI\">/** Returns int A as a color tag. */</span>\n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">preoperator</span> <span\
      \ class=\"kw5\">string</span> <span class=\"sy0\">$</span><span class=\"br0\"\
      >(</span> <span class=\"kw5\">int</span> A <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"\
      br0\">(</span><span class=\"kw3\">Chr</span><span class=\"br0\">(</span> 0x1B\
      \ <span class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"br0\"\
      >(</span><span class=\"kw3\">Chr</span><span class=\"br0\">(</span> <span class=\"\
      kw3\">Max</span><span class=\"br0\">(</span> A <span class=\"sy0\">&amp;</span>\
      \ 0xFF0000, <span class=\"nu0\">1</span> <span class=\"br0\">)</span>  <span\
      \ class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">Max</span><span class=\"br0\">(</span>\
      \ A <span class=\"sy0\">&amp;</span> 0x00FF00, <span class=\"nu0\">1</span>\
      \ <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\"\
      >$</span> <span class=\"kw3\">Chr</span><span class=\"br0\">(</span> <span class=\"\
      kw3\">Max</span><span class=\"br0\">(</span> A <span class=\"sy0\">&amp;</span>\
      \ 0x0000FF, <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p><b>Example</b></p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">string</span> redcolortag;\n \nredcolortag <span class=\"sy0\"\
      >=</span> <span class=\"sy0\">$</span>0xFF0000;</pre></div>\n</div>\n<p><i>Returns\
      \ a red color tag based on the specified hexadecimal.</i><br />\n<br /></p>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"coMULTI\">/** Returns\
      \ color A as a color tag. */</span>\n<span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">preoperator</span> <span class=\"\
      kw5\">string</span> <span class=\"sy0\">$</span><span class=\"br0\">(</span>\
      \ <span class=\"kw5\">Color</span> A <span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Chr</span><span class=\"br0\">(</span> 0x1B <span class=\"br0\"\
      >)</span> <span class=\"sy0\">$</span> <span class=\"br0\">(</span><span class=\"\
      kw3\">Chr</span><span class=\"br0\">(</span> <span class=\"kw3\">Max</span><span\
      \ class=\"br0\">(</span> A.<span class=\"me0\">R</span>, <span class=\"nu0\"\
      >1</span> <span class=\"br0\">)</span>  <span class=\"br0\">)</span> <span class=\"\
      sy0\">$</span> <span class=\"kw3\">Chr</span><span class=\"br0\">(</span> <span\
      \ class=\"kw3\">Max</span><span class=\"br0\">(</span> A.<span class=\"me0\"\
      >G</span>, <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"\
      br0\">)</span> <span class=\"sy0\">$</span> <span class=\"kw3\">Chr</span><span\
      \ class=\"br0\">(</span> <span class=\"kw3\">Max</span><span class=\"br0\">(</span>\
      \ A.<span class=\"me0\">B</span>, <span class=\"nu0\">1</span> <span class=\"\
      br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n\
      <p><b>Example</b></p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">local</span> <span class=\"kw5\">string</span> redcolortag;\n \nredcolortag\
      \ <span class=\"sy0\">=</span> <span class=\"sy0\">$</span>Class<span class=\"\
      st0\">'HUD'</span>.<span class=\"kw1\">default</span>.<span class=\"me0\">RedColor</span>;\n\
      <span class=\"kw3\">Log</span><span class=\"br0\">(</span> redcolortag <span\
      \ class=\"sy0\">$</span> <span class=\"st0\">\"blabla this is colored red by\
      \ using a cached color tag\"</span> <span class=\"br0\">)</span>;</pre></div>\n\
      </div>\n<p><i>Returns a red color tag based on the specified color struct.</i><br\
      \ />\n<br /></p>\n<h2><span class=\"mw-headline\" id=\"Adding_color_tags\">Adding\
      \ color tags</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Eliot/ColorTags_Operators?section=2\" title=\"\
      Edit section: Adding color tags\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      coMULTI\">/** Adds B as a color tag to the end of A. */</span>\n<span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">string</span> <span class=\"sy0\">$</span><span class=\"\
      br0\">(</span> <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ A, <span class=\"kw5\">Color</span> B <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> A <span class=\"\
      sy0\">$</span> <span class=\"sy0\">$</span>B;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"coMULTI\">/** Adds A as a color tag to the begin of B. */</span>\n\
      <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">operator</span><span class=\"br0\">(</span><span class=\"nu0\">40</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">string</span> <span class=\"sy0\"\
      >$</span><span class=\"br0\">(</span> <span class=\"kw5\">Color</span> A, <span\
      \ class=\"kw1\">coerce</span> <span class=\"kw5\">string</span> B <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span>\
      \ <span class=\"sy0\">$</span>A <span class=\"sy0\">$</span> B;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"coMULTI\">/** Adds B as a color tag to the\
      \ end of A with a space in between. */</span>\n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">string</span> <span class=\"sy0\">@</span><span class=\"\
      br0\">(</span> <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ A, <span class=\"kw5\">Color</span> B <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> A <span class=\"\
      sy0\">@</span> <span class=\"sy0\">$</span>B;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"coMULTI\">/** Adds A as a color tag to the begin of B with\
      \ a space in between. */</span>\n<span class=\"kw1\">static</span> <span class=\"\
      kw1\">final</span> <span class=\"kw1\">operator</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">40</span><span class=\"br0\">)</span> <span class=\"kw5\">string</span>\
      \ <span class=\"sy0\">@</span><span class=\"br0\">(</span> <span class=\"kw5\"\
      >Color</span> A, <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ B <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">return</span> <span class=\"sy0\">$</span>A <span class=\"sy0\">@</span>\
      \ B;\n<span class=\"br0\">}</span>\n \n<span class=\"coMULTI\">/** Adds B as\
      \ a color tag to the end of A. */</span>\n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">44</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">string</span> <span class=\"sy0\">$=</span><span class=\"\
      br0\">(</span> <span class=\"kw1\">out</span> <span class=\"kw5\">string</span>\
      \ A, <span class=\"kw5\">Color</span> B <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> A <span class=\"\
      sy0\">$</span> <span class=\"sy0\">$</span>B;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"coMULTI\">/** Adds B as a color tag to the end of A with a\
      \ space inbetween. */</span>\n<span class=\"kw1\">static</span> <span class=\"\
      kw1\">final</span> <span class=\"kw1\">operator</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">44</span><span class=\"br0\">)</span> <span class=\"kw5\">string</span>\
      \ <span class=\"sy0\">@=</span><span class=\"br0\">(</span> <span class=\"kw1\"\
      >out</span> <span class=\"kw5\">string</span> A, <span class=\"kw5\">Color</span>\
      \ B <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">return</span> A <span class=\"sy0\">@</span> <span class=\"sy0\">$</span>B;\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p><b>Example</b></p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\">local</span> <span\
      \ class=\"kw9\">PlayerController</span> PC;\n \nPC <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Level</span>.<span class=\"me0\">GetLocalPlayerController</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n<span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span> PC <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >none</span> <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  \
      \  <span class=\"kw2\">return</span>;\n<span class=\"br0\">}</span>\n \nPC.<span\
      \ class=\"kw4\">ClientMessage</span><span class=\"br0\">(</span> <span class=\"\
      kw1\">Class</span><span class=\"st0\">'HUD'</span>.<span class=\"kw1\">default</span>.<span\
      \ class=\"me0\">BlueColor</span> <span class=\"sy0\">$</span> <span class=\"\
      st0\">\"Welcome\"</span> <span class=\"sy0\">$</span> <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'HUD'</span>.<span class=\"kw1\">default</span>.<span class=\"\
      me0\">WhiteColor</span> <span class=\"sy0\">@</span> PC.<span class=\"me0\"\
      >GetHumanReadableName</span><span class=\"br0\">(</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">@</span> <span class=\"kw1\">Class</span><span\
      \ class=\"st0\">'HUD'</span>.<span class=\"kw1\">default</span>.<span class=\"\
      me0\">BlueColor</span> <span class=\"sy0\">$</span> <span class=\"st0\">\"to\
      \ our server!.\"</span> <span class=\"br0\">)</span>;</pre></div>\n</div>\n\
      <p><i>This will print a colored message to the local client saying \"Welcome\"\
      \ in blue + \"PlayerName\" in white + \"to our server!.\" in blue, obviously\
      \ it would be nicer if you don't use the default color variables from HUD and\
      \ use self declared colors of your class.</i></p>\n<p><br /></p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Conditional_operators\">Conditional operators</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/User:Eliot/ColorTags_Operators?section=3\" title=\"Edit section:\
      \ Conditional operators\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"coMULTI\">/**\n * Tests\
      \ if A contains color tag B.\n *\n * @return\t\tTRUE if A contains color tag\
      \ B, FALSE if A does not contain color tag B.\n */</span>\n<span class=\"kw1\"\
      >static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">operator</span><span\
      \ class=\"br0\">(</span><span class=\"nu0\">24</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">bool</span> ~<span class=\"sy0\">=</span><span class=\"\
      br0\">(</span> <span class=\"kw1\">coerce</span> <span class=\"kw5\">string</span>\
      \ A, <span class=\"kw5\">Color</span> B <span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"\
      kw3\">InStr</span><span class=\"br0\">(</span> A, <span class=\"sy0\">$</span>B\
      \ <span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"\
      sy0\">-</span><span class=\"nu0\">1</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Removing.2FReplacing_color_tags\"\
      >Removing/Replacing color tags</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/User:Eliot/ColorTags_Operators?section=4\"\
      \ title=\"Edit section: Removing/Replacing color tags\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"coMULTI\">/** Strips all color B tags from A. */</span>\n\
      <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">operator</span><span class=\"br0\">(</span><span class=\"nu0\">45</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">string</span> <span class=\"sy0\"\
      >-=</span><span class=\"br0\">(</span> <span class=\"kw1\">out</span> <span\
      \ class=\"kw5\">string</span> A, <span class=\"kw5\">Color</span> B <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw2\">return</span>\
      \ A <span class=\"sy0\">-=</span> <span class=\"sy0\">$</span>B;\n<span class=\"\
      br0\">}</span>\n \n<span class=\"coMULTI\">/** Strips all color tags from A.\
      \ */</span>\n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">preoperator</span> <span class=\"kw5\">string</span> <span\
      \ class=\"sy0\">%</span><span class=\"br0\">(</span> <span class=\"kw5\">string</span>\
      \ A <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> i;\n \n        <span class=\"\
      kw2\">while</span><span class=\"br0\">(</span> <span class=\"kw6\">true</span>\
      \ <span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\ti <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">InStr</span><span class=\"br0\"\
      >(</span> A, <span class=\"kw3\">Chr</span><span class=\"br0\">(</span> 0x1B\
      \ <span class=\"br0\">)</span> <span class=\"br0\">)</span>;\n\t\t<span class=\"\
      kw2\">if</span><span class=\"br0\">(</span> i <span class=\"sy0\">!=</span>\
      \ <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\"\
      >)</span>\n\t\t<span class=\"br0\">{</span>\n\t\t\tA <span class=\"sy0\">=</span>\
      \ <span class=\"kw3\">Left</span><span class=\"br0\">(</span> A, i <span class=\"\
      br0\">)</span> <span class=\"sy0\">$</span> <span class=\"kw3\">Mid</span><span\
      \ class=\"br0\">(</span> A, i <span class=\"sy0\">+</span> <span class=\"nu0\"\
      >4</span> <span class=\"br0\">)</span>;\n\t\t\t<span class=\"kw2\">continue</span>;\n\
      \t\t<span class=\"br0\">}</span>\n\t\t<span class=\"kw2\">break</span>;\n\t\
      <span class=\"br0\">}</span>\n\t<span class=\"kw2\">return</span> A;\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"coMULTI\">/** Replaces all color\
      \ B tags in A with color C tags. */</span>\n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">string</span> ReplaceColorTag<span class=\"br0\">(</span> <span\
      \ class=\"kw5\">string</span> A, <span class=\"kw5\">Color</span> B, <span class=\"\
      kw5\">Color</span> C <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw2\">return</span> <span class=\"kw3\">Repl</span><span class=\"\
      br0\">(</span> A, <span class=\"sy0\">$</span>B, <span class=\"sy0\">$</span>C\
      \ <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Converting_color_tags\">Converting\
      \ color tags</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/User:Eliot/ColorTags_Operators?section=5\" title=\"\
      Edit section: Converting color tags\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      coMULTI\">/** Converts a color tag from A to a color struct into B. */</span>\n\
      <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> ColorTagToColor<span class=\"br0\">(</span> <span class=\"\
      kw5\">string</span> A, <span class=\"kw1\">out</span> <span class=\"kw5\">Color</span>\
      \ B <span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n        A <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span class=\"br0\">(</span>\
      \ A, <span class=\"nu0\">1</span> <span class=\"br0\">)</span>;\n\tB.<span class=\"\
      me0\">R</span> <span class=\"sy0\">=</span> <span class=\"kw5\">byte</span><span\
      \ class=\"br0\">(</span><span class=\"kw3\">Asc</span><span class=\"br0\">(</span>\
      \ <span class=\"kw3\">Left</span><span class=\"br0\">(</span> A, <span class=\"\
      nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n\tA <span class=\"sy0\">=</span> <span class=\"kw3\"\
      >Mid</span><span class=\"br0\">(</span> A, <span class=\"nu0\">1</span> <span\
      \ class=\"br0\">)</span>;\n\tB.<span class=\"me0\">G</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw5\">byte</span><span class=\"br0\">(</span><span class=\"\
      kw3\">Asc</span><span class=\"br0\">(</span> <span class=\"kw3\">Left</span><span\
      \ class=\"br0\">(</span> A, <span class=\"nu0\">1</span> <span class=\"br0\"\
      >)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\tA <span\
      \ class=\"sy0\">=</span> <span class=\"kw3\">Mid</span><span class=\"br0\">(</span>\
      \ A, <span class=\"nu0\">1</span> <span class=\"br0\">)</span>;\n\tB.<span class=\"\
      me0\">B</span> <span class=\"sy0\">=</span> <span class=\"kw5\">byte</span><span\
      \ class=\"br0\">(</span><span class=\"kw3\">Asc</span><span class=\"br0\">(</span>\
      \ <span class=\"kw3\">Left</span><span class=\"br0\">(</span> A, <span class=\"\
      nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n        B.<span class=\"me0\">A</span> <span class=\"\
      sy0\">=</span> 0xFF; <span class=\"co1\">// Max(255)</span>\n<span class=\"\
      br0\">}</span></pre></div>\n</div>\n<p><b>Note:</b> I'm pretty sure this one\
      \ is very slow xD! but anyway might still be handy if for example you want to\
      \ convert user inputted(or from a player's name) color tags back to a color\
      \ struct.<br />\n<br />\nTo use these operations just add them in your class\
      \ above your functions and use them as you can see in the examples and also\
      \ please credit me when using any of these operations&#160;:).</p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.212 seconds\nReal time usage: 0.694 seconds\n\
      Preprocessor visited node count: 120/1000000\nPreprocessor generated node count:\
      \ 339/1000000\nPost‐expand include size: 906/2097152 bytes\nTemplate argument\
      \ size: 179/2097152 bytes\nHighest expansion depth: 4/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%   28.776      1 - -total\n100.00%   28.776      1 - Template:Infobox_utility\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:28959-0!*!0!!en!*!*\
      \ and timestamp 20221117234341 and revision id 43867\n -->\n"
  categories:
  - sortkey: "Eliot/ColorTags Operators"
    name: "UnrealScript_utils"
  - sortkey: ""
    name: "Programming_articles"
  links:
  - ns: 0
    exists: true
    name: "Color"
  - ns: 2
    exists: true
    name: "User:Eliot"
  - ns: 0
    exists: false
    name: "Color tag"
  - ns: 0
    exists: true
    name: "Struct"
  - ns: 0
    exists: true
    name: "UnrealScript Utils"
  - ns: 0
    exists: false
    name: "Unreal Engine 2"
  templates:
  - ns: 10
    exists: true
    name: "Template:Infobox utility"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Creating color tags"
    number: "1"
    index: "1"
    fromtitle: "User:Eliot/ColorTags_Operators"
    byteoffset: 596
    anchor: "Creating_color_tags"
  - toclevel: 1
    level: "2"
    line: "Adding color tags"
    number: "2"
    index: "2"
    fromtitle: "User:Eliot/ColorTags_Operators"
    byteoffset: 1473
    anchor: "Adding_color_tags"
  - toclevel: 1
    level: "2"
    line: "Conditional operators"
    number: "3"
    index: "3"
    fromtitle: "User:Eliot/ColorTags_Operators"
    byteoffset: 2937
    anchor: "Conditional_operators"
  - toclevel: 1
    level: "2"
    line: "Removing/Replacing color tags"
    number: "4"
    index: "4"
    fromtitle: "User:Eliot/ColorTags_Operators"
    byteoffset: 3213
    anchor: "Removing.2FReplacing_color_tags"
  - toclevel: 1
    level: "2"
    line: "Converting color tags"
    number: "5"
    index: "5"
    fromtitle: "User:Eliot/ColorTags_Operators"
    byteoffset: 3812
    anchor: "Converting_color_tags"
  displaytitle: "User:Eliot/ColorTags Operators"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Computer_compatibility"
    name: "wp:Computer compatibility"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/Author"
    name: "wp:Author"
  wikitext:
    text: "{{Infobox_utility\n|name=ColorTags Operators\n|description=Provides operators\
      \ and functions to convert a [[color]] [[struct]] to a color tag.\n|author=[[User:Eliot|Eliot]]\n\
      |compatible=[[Unreal Engine 2]]\n}}\nBecause i hate to call static functions\
      \ of epic games or self-written ones to generate a [[color tag]] from a color\
      \ on run-time i have made those operations so that i have to write less and\
      \ so my long ClientMessage strings aren't so ugly to read.\n\n'''Note:''' I\
      \ haven't tested all of these operators!, if you find a bug or something else\
      \ feel free to correct the code here on this article!.\n\n==Creating color tags==\n\
      <uscript>\n/** Returns int A as a color tag. */\nstatic final preoperator string\
      \ $( int A )\n{\n\treturn (Chr( 0x1B ) $ (Chr( Max( A & 0xFF0000, 1 )  ) $ Chr(\
      \ Max( A & 0x00FF00, 1 ) ) $ Chr( Max( A & 0x0000FF, 1 ) )));\n}\n</uscript>\n\
      '''Example'''\n<uscript>\nlocal string redcolortag;\n\nredcolortag = $0xFF0000;\n\
      </uscript>\n''Returns a red color tag based on the specified hexadecimal.''\n\
      <br>\n<br>\n<uscript>\n/** Returns color A as a color tag. */\nstatic final\
      \ preoperator string $( Color A )\n{\n\treturn (Chr( 0x1B ) $ (Chr( Max( A.R,\
      \ 1 )  ) $ Chr( Max( A.G, 1 ) ) $ Chr( Max( A.B, 1 ) )));\n}\n</uscript>\n'''Example'''\n\
      <uscript>\nlocal string redcolortag;\n\nredcolortag = $Class'HUD'.default.RedColor;\n\
      Log( redcolortag $ \"blabla this is colored red by using a cached color tag\"\
      \ );\n</uscript>\n''Returns a red color tag based on the specified color struct.''\n\
      <br>\n<br>\n\n==Adding color tags==\n<uscript>\n/** Adds B as a color tag to\
      \ the end of A. */\nstatic final operator(40) string $( coerce string A, Color\
      \ B )\n{\n\treturn A $ $B;\n}\n\n/** Adds A as a color tag to the begin of B.\
      \ */\nstatic final operator(40) string $( Color A, coerce string B )\n{\n\t\
      return $A $ B;\n}\n\n/** Adds B as a color tag to the end of A with a space\
      \ in between. */\nstatic final operator(40) string @( coerce string A, Color\
      \ B )\n{\n\treturn A @ $B;\n}\n\n/** Adds A as a color tag to the begin of B\
      \ with a space in between. */\nstatic final operator(40) string @( Color A,\
      \ coerce string B )\n{\n\treturn $A @ B;\n}\n\n/** Adds B as a color tag to\
      \ the end of A. */\nstatic final operator(44) string $=( out string A, Color\
      \ B )\n{\n\treturn A $ $B;\n}\n\n/** Adds B as a color tag to the end of A with\
      \ a space inbetween. */\nstatic final operator(44) string @=( out string A,\
      \ Color B )\n{\n\treturn A @ $B;\n}\n</uscript>\n'''Example'''\n<uscript>\n\
      local PlayerController PC;\n\nPC = Level.GetLocalPlayerController();\nif( PC\
      \ == none )\n{\n    return;\n}\n\nPC.ClientMessage( Class'HUD'.default.BlueColor\
      \ $ \"Welcome\" $ Class'HUD'.default.WhiteColor @ PC.GetHumanReadableName()\
      \ @ Class'HUD'.default.BlueColor $ \"to our server!.\" );\n</uscript>\n''This\
      \ will print a colored message to the local client saying \"Welcome\" in blue\
      \ + \"PlayerName\" in white + \"to our server!.\" in blue, obviously it would\
      \ be nicer if you don't use the default color variables from HUD and use self\
      \ declared colors of your class.\n\n\n==Conditional operators==\n<uscript>\n\
      /**\n * Tests if A contains color tag B.\n *\n * @return\t\tTRUE if A contains\
      \ color tag B, FALSE if A does not contain color tag B.\n */\nstatic final operator(24)\
      \ bool ~=( coerce string A, Color B )\n{\n\treturn InStr( A, $B ) != -1;\n}\n\
      </uscript>\n\n==Removing/Replacing color tags==\n<uscript>\n/** Strips all color\
      \ B tags from A. */\nstatic final operator(45) string -=( out string A, Color\
      \ B )\n{\n\treturn A -= $B;\n}\n\n/** Strips all color tags from A. */\nstatic\
      \ final preoperator string %( string A )\n{\n\tlocal int i;\n\n        while(\
      \ true )\n\t{\n\t\ti = InStr( A, Chr( 0x1B ) );\n\t\tif( i != -1 )\n\t\t{\n\t\
      \t\tA = Left( A, i ) $ Mid( A, i + 4 );\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\
      \t}\n\treturn A;\n}\n\n/** Replaces all color B tags in A with color C tags.\
      \ */\nstatic final function string ReplaceColorTag( string A, Color B, Color\
      \ C )\n{\n\treturn Repl( A, $B, $C );\n}\n</uscript>\n\n==Converting color tags==\n\
      <uscript>\n/** Converts a color tag from A to a color struct into B. */\nstatic\
      \ final function ColorTagToColor( string A, out Color B )\n{\n        A = Mid(\
      \ A, 1 );\n\tB.R = byte(Asc( Left( A, 1 ) ));\n\tA = Mid( A, 1 );\n\tB.G = byte(Asc(\
      \ Left( A, 1 ) ));\n\tA = Mid( A, 1 );\n\tB.B = byte(Asc( Left( A, 1 ) ));\n\
      \        B.A = 0xFF; // Max(255)\n}\n</uscript>\n'''Note:''' I'm pretty sure\
      \ this one is very slow xD! but anyway might still be handy if for example you\
      \ want to convert user inputted(or from a player's name) color tags back to\
      \ a color struct.\n<br>\n<br>\nTo use these operations just add them in your\
      \ class above your functions and use them as you can see in the examples and\
      \ also please credit me when using any of these operations :).\n\n[[Category:Programming\
      \ articles]]"
  properties: []
  revId: 43867
name: "User:Eliot/ColorTags Operators"
revision:
  revid: 43867
  parentid: 43251
  user: "Eliot"
  timestamp: 1281706640.000000000
  comment: "/* Removing/Replacing color tags */ Bug fix"
timestamp: 1668797620.123197000
