---
parse:
  title: "Legacy:Attaching Actors"
  text:
    text: "<p>This tutorial discusses attaching actors to a mover and assumes you\
      \ already know about:</p>\n<ul>\n<li><a href=\"/Legacy:Actor_Overview\" title=\"\
      Legacy:Actor Overview\">Actor Overview</a>: adding actors, setting properties</li>\n\
      <li><a href=\"/Legacy:Create_A_Mover\" title=\"Legacy:Create A Mover\">Create\
      \ A Mover</a></li>\n<li><a href=\"/Legacy:Keyframe\" title=\"Legacy:Keyframe\"\
      >Keyframe</a></li>\n</ul>\n<p>Any actors attached to a mover will follow the\
      \ mover. You can attach smoke generators to leave a trail of smoke or attach\
      \ a fighter jet decoration to fly around your map.</p>\n<p>Attached actors can\
      \ be anywhere in the map; they don't have to touch the mover or even be anywhere\
      \ near it. The mover can be hidden (in solid space) and the actors will appear\
      \ to move independently. Attached actors will always move relative to the movement\
      \ of the mover; if the mover moves 64 units to the left, so will the attached\
      \ actor.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Method_1:_Attach_Tag\"><span class=\"tocnumber\">1</span> <span class=\"\
      toctext\">Method 1: Attach Tag</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"\
      ><a href=\"#Non-unique_Tag\"><span class=\"tocnumber\">1.1</span> <span class=\"\
      toctext\">Non-unique Tag</span></a></li>\n<li class=\"toclevel-2 tocsection-3\"\
      ><a href=\"#bStatic\"><span class=\"tocnumber\">1.2</span> <span class=\"toctext\"\
      >bStatic</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#bCollideActors\"\
      ><span class=\"tocnumber\">1.3</span> <span class=\"toctext\">bCollideActors</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-5\"><a href=\"#Method_2:_AttachMovers_.28UT_only.29\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">Method 2: AttachMovers\
      \ (UT only)</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"\
      #Attaching_Actors\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\"\
      >Attaching Actors</span></a></li>\n<li class=\"toclevel-2 tocsection-7\"><a\
      \ href=\"#Warnings\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\"\
      >Warnings</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-8\"\
      ><a href=\"#Ideas\"><span class=\"tocnumber\">3</span> <span class=\"toctext\"\
      >Ideas</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#Triggered_Kicker\"\
      ><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">Triggered Kicker</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-10\"><a href=\"#Moving_Skybox\"><span class=\"\
      tocnumber\">3.2</span> <span class=\"toctext\">Moving Skybox</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"#Related_Topics\"\
      ><span class=\"tocnumber\">4</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Method_1:_Attach_Tag\"\
      >Method 1: Attach Tag</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Attaching_Actors?section=1\" title=\"Edit section:\
      \ Method 1: Attach Tag\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>To attach any actor to a mover, <a href=\"/Legacy:Match_These_Tags\" title=\"\
      Legacy:Match These Tags\">match these tags</a>:</p>\n<ul>\n<li>The Mover's Events\
      \ -&gt; Tag</li>\n<li>The Actor's Movement -&gt; AttachTag</li>\n</ul>\n<p>Most\
      \ actors can be attached in this way. There are three possible pitfalls however.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Non-unique_Tag\">Non-unique Tag</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Attaching_Actors?section=2\" title=\"Edit section: Non-unique\
      \ Tag\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>In order for this to work there must be <i>only one</i> actor (mover or otherwise)\
      \ in the game with the same Tag as the actor's AttachTag. If the same tag is\
      \ used by your mover and another object, the attached actor will not know which\
      \ object to follow, and will not move. You will have to give your mover a unique\
      \ tag before you can successfully attach other things to it in this way.</p>\n\
      <h3><span class=\"mw-headline\" id=\"bStatic\">bStatic</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=3\"\
      \ title=\"Edit section: bStatic\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Most actors can be attached in this way. The principal\
      \ cause of an actor not moving with the mover is that it has the property <b>bStatic</b>\
      \ set to true by default (for example <a href=\"/Legacy:PlayerStart\" title=\"\
      Legacy:PlayerStart\">PlayerStarts</a> and <a href=\"/Legacy:Volume\" title=\"\
      Legacy:Volume\">Volumes</a>).</p>\n<p>You will need to change this property\
      \ for the actor you want to attach: see <a href=\"/Legacy:Actor_Properties_Window\"\
      \ title=\"Legacy:Actor Properties Window\">Actor Properties Window</a> for how\
      \ to edit hidden properties. However, this may cause problems in netplay. Another\
      \ solution is to <a href=\"/Legacy:Create_A_Subclass\" title=\"Legacy:Create\
      \ A Subclass\">Create a subclass</a> for the item you want to attach, and change\
      \ the default value of bStatic for the new custom class.</p>\n<h3><span class=\"\
      mw-headline\" id=\"bCollideActors\">bCollideActors</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=4\"\
      \ title=\"Edit section: bCollideActors\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Bizzarely, Collision.bCollideActors must be true for\
      \ attachment to work, or the attached item may just drift off casually into\
      \ the void in a straight line. (This was observed when attaching a rotating\
      \ mover to the arm of another rotating mover. No other Collision flags appear\
      \ to be needed.)</p>\n<h2><span class=\"mw-headline\" id=\"Method_2:_AttachMovers_.28UT_only.29\"\
      >Method 2: AttachMovers (UT only)</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=5\"\
      \ title=\"Edit section: Method 2: AttachMovers (UT only)\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p>This method is an alternative,\
      \ available in <a href=\"/Legacy:UT\" title=\"Legacy:UT\" class=\"mw-redirect\"\
      >UT</a> and other games of that generation which have the <a href=\"/Legacy:AttachMover\"\
      \ title=\"Legacy:AttachMover\">AttachMover</a> class. To add special movers,\
      \ right-click the <i>Add Mover</i> <a href=\"/Legacy:Toolbox\" title=\"Legacy:Toolbox\"\
      >toolbox</a> button instead of just clicking it: choose \"AttachMover\" from\
      \ the small pop-up menu.</p>\n<p>An AttachMover has the same properties as a\
      \ normal mover, you can have it BumpOpenTimed so it will open when you touch\
      \ it, TriggerOpenTimed so you can trigger it (see <a href=\"/Legacy:Activating_A_Mover\"\
      \ title=\"Legacy:Activating A Mover\">Activating a mover</a> for more on this).\
      \ The only difference is that in the properties of the mover there is now a\
      \ new option.</p>\n<h3><span class=\"mw-headline\" id=\"Attaching_Actors\">Attaching\
      \ Actors</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Attaching_Actors?section=6\" title=\"Edit section:\
      \ Attaching Actors\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Unreal uses tags to tie actors to the AttachMover, the same way <a href=\"\
      /Legacy:Trigger\" title=\"Legacy:Trigger\">Triggers</a> work. The same name\
      \ must be present in two different places. It doesn't matter what the text is,\
      \ but something descriptive may help later. 'Blah' will do, as will 'Attach'\
      \ or 'AttachedBarrel'. The following properties must match:</p>\n<ul>\n<li>The\
      \ AttachMover's AttachMover -&gt; AttachTag</li>\n<li>The Actor's Events -&gt;\
      \ Tag</li>\n</ul>\n<p>Now you may have to set a few other properties on the\
      \ actor to get this to work. Check the actors have the following properties\
      \ set:</p>\n<ul>\n<li>Advanced -&gt; bMovable = True</li>\n<li>Advanced -&gt;\
      \ bStatic = False</li>\n</ul>\n<p>Also, it is a good idea to turn the attached\
      \ actor's collision <i>off</i>. If the actor has it's collision properties set\
      \ to True, it can cause all sorts of problems (i.e. your actor may not move\
      \ properly). If you need collision, try using an invisible mover to create the\
      \ illusion of collision. Alternatively, in the case of Karma-simulated actors,\
      \ collision can be manually disabled between two actors without affecting those\
      \ object's collision with the remainder of objects in the world.</p>\n<p>Now\
      \ test your map. When the mover moves, the actor should move with it.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Warnings\">Warnings</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=7\"\
      \ title=\"Edit section: Warnings\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<ul>\n<li>If your actor does not move with the mover,\
      \ check the bMovable and bStatic properties of the actor. Lights are one example.</li>\n\
      </ul>\n<ul>\n<li>Do not attach any NavigationPoint or any actor that alters\
      \ the bot's pathing to a mover.</li>\n</ul>\n<ul>\n<li>Do not attach an actor\
      \ to more than one mover.</li>\n</ul>\n<p>Actors that are attached to a mover\
      \ follow its location, but only the yaw of its rotation. If you need to have\
      \ your actors follow rotational movement around the other axes as well, check\
      \ the <a href=\"/Legacy:ActorAttacher\" title=\"Legacy:ActorAttacher\">ActorAttacher</a>\
      \ component.</p>\n<h2><span class=\"mw-headline\" id=\"Ideas\">Ideas</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Attaching_Actors?section=8\" title=\"Edit section: Ideas\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<h3><span\
      \ class=\"mw-headline\" id=\"Triggered_Kicker\">Triggered Kicker</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Attaching_Actors?section=9\" title=\"Edit section: Triggered\
      \ Kicker\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>You can try attaching a <a href=\"/Legacy:Kicker\" title=\"Legacy:Kicker\"\
      >Kicker</a> to a mover to make a triggered jump pad. Just add the kicker somewhere\
      \ below the kicker where it won't effect players, then attach it to a mover\
      \ which will move it up enough so that it kicks people. This can be quite fun\
      \ for things like Human Cannons &lt;insert evil laugh here&gt;.</p>\n<dl>\n\
      <dd>Alternatively, see the <a href=\"/Legacy:Kicker\" title=\"Legacy:Kicker\"\
      >Kicker</a> actor page for a subclass which does this.</dd>\n</dl>\n<h3><span\
      \ class=\"mw-headline\" id=\"Moving_Skybox\">Moving Skybox</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=10\"\
      \ title=\"Edit section: Moving Skybox\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>You can also attach a <a href=\"/Legacy:SkyZoneInfo\"\
      \ title=\"Legacy:SkyZoneInfo\">SkyZoneInfo</a> to movers. I've tried this one\
      \ and it's pretty cool. Try creating a circular <a href=\"/Legacy:SkyBox\" title=\"\
      Legacy:SkyBox\">SkyBox</a>, then add a mover in the very center of it that rotates\
      \ constantly. You will want to make sure that you can't see it at any point\
      \ though&#160;:) After that, add your SkyZoneInfo somewhere near the perimeter\
      \ of the skybox and attach it to the mover.</p>\n<p>You will want to check that\
      \ <i>bDirectional = True</i> in the advanced properties of it so that it is\
      \ facing the correct way (say you are doing a flying ship or something&#160;:)\
      \ ) Also, you can try tilting it sideways in towards the center of the skybox\
      \ so that the entire map is sloped inwards as you would on a moterbike (This\
      \ can make you feel sick after a while&#160;:) )</p>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Attaching_Actors?section=11\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Mover_Topics\" title=\"Legacy:Mover\
      \ Topics\">Mover Topics</a></li>\n<li><a href=\"/Legacy:Actor_(UT)/Advanced\"\
      \ title=\"Legacy:Actor (UT)/Advanced\">Actor (UT)/Advanced</a> properties</li>\n\
      <li><a href=\"/Legacy:Actor_(UT)/Events\" title=\"Legacy:Actor (UT)/Events\"\
      >Actor (UT)/Events</a> properties</li>\n<li><a href=\"/Legacy:Actor_(UT)/Movement\"\
      \ title=\"Legacy:Actor (UT)/Movement\">Actor (UT)/Movement</a> properties</li>\n\
      <li><a href=\"/Legacy:ActorAttacher\" title=\"Legacy:ActorAttacher\">ActorAttacher</a>\
      \ component for UT</li>\n<li><a href=\"/Legacy:Movable_Lights\" title=\"Legacy:Movable\
      \ Lights\" class=\"mw-redirect\">Movable Lights</a> making lights move</li>\n\
      </ul>\n<p><a href=\"/Category:Legacy_Mapping\" title=\"Category:Legacy Mapping\"\
      >Category:Legacy Mapping</a><br />\n<a href=\"/Category:Legacy_To_Do\" title=\"\
      Category:Legacy To Do\">Category:Legacy To Do</a> <i>this tute has only been\
      \ partially freshed up for UT2003.</i></p>\n\n<!-- \nNewPP limit report\nCPU\
      \ time usage: 0.034 seconds\nReal time usage: 0.036 seconds\nPreprocessor visited\
      \ node count: 46/1000000\nPreprocessor generated node count: 66/1000000\nPost‐\
      expand include size: 32/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:359-0!*!0!!en!*!*\
      \ and timestamp 20221117222325 and revision id 42530\n -->\n"
  categories:
  - sortkey: "Attaching Actors"
    name: "Legacy_To_Do"
  - sortkey: "Attaching Actors"
    name: "Legacy_Mapping"
  links:
  - ns: 14
    exists: true
    name: "Category:Legacy Mapping"
  - ns: 100
    exists: true
    name: "Legacy:Actor (UT)/Events"
  - ns: 100
    exists: true
    name: "Legacy:SkyBox"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:Match These Tags"
  - ns: 100
    exists: true
    name: "Legacy:ActorAttacher"
  - ns: 100
    exists: true
    name: "Legacy:AttachMover"
  - ns: 100
    exists: true
    name: "Legacy:UT"
  - ns: 100
    exists: true
    name: "Legacy:Activating A Mover"
  - ns: 100
    exists: true
    name: "Legacy:Kicker"
  - ns: 100
    exists: true
    name: "Legacy:Keyframe"
  - ns: 100
    exists: true
    name: "Legacy:Movable Lights"
  - ns: 100
    exists: true
    name: "Legacy:Actor (UT)/Advanced"
  - ns: 100
    exists: true
    name: "Legacy:Toolbox"
  - ns: 100
    exists: true
    name: "Legacy:Create A Mover"
  - ns: 100
    exists: true
    name: "Legacy:SkyZoneInfo"
  - ns: 100
    exists: true
    name: "Legacy:Create A Subclass"
  - ns: 100
    exists: true
    name: "Legacy:Trigger"
  - ns: 100
    exists: true
    name: "Legacy:Actor Overview"
  - ns: 100
    exists: true
    name: "Legacy:Actor (UT)/Movement"
  - ns: 100
    exists: true
    name: "Legacy:PlayerStart"
  - ns: 100
    exists: true
    name: "Legacy:Mover Topics"
  - ns: 100
    exists: true
    name: "Legacy:Volume"
  - ns: 100
    exists: true
    name: "Legacy:Actor Properties Window"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Method 1: Attach Tag"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 755
    anchor: "Method_1:_Attach_Tag"
  - toclevel: 2
    level: "3"
    line: "Non-unique Tag"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 1011
    anchor: "Non-unique_Tag"
  - toclevel: 2
    level: "3"
    line: "bStatic"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 1418
    anchor: "bStatic"
  - toclevel: 2
    level: "3"
    line: "bCollideActors"
    number: "1.3"
    index: "4"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 2065
    anchor: "bCollideActors"
  - toclevel: 1
    level: "2"
    line: "Method 2: AttachMovers (UT only)"
    number: "2"
    index: "5"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 2380
    anchor: "Method_2:_AttachMovers_.28UT_only.29"
  - toclevel: 2
    level: "3"
    line: "Attaching Actors"
    number: "2.1"
    index: "6"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 3060
    anchor: "Attaching_Actors"
  - toclevel: 2
    level: "3"
    line: "Warnings"
    number: "2.2"
    index: "7"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 4240
    anchor: "Warnings"
  - toclevel: 1
    level: "2"
    line: "Ideas"
    number: "3"
    index: "8"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 4770
    anchor: "Ideas"
  - toclevel: 2
    level: "3"
    line: "Triggered Kicker"
    number: "3.1"
    index: "9"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 4781
    anchor: "Triggered_Kicker"
  - toclevel: 2
    level: "3"
    line: "Moving Skybox"
    number: "3.2"
    index: "10"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 5227
    anchor: "Moving_Skybox"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "4"
    index: "11"
    fromtitle: "Legacy:Attaching_Actors"
    byteoffset: 6018
    anchor: "Related_Topics"
  displaytitle: "Legacy:Attaching Actors"
  iwlinks: []
  wikitext:
    text: "This tutorial discusses attaching actors to a mover and assumes you already\
      \ know  about:\n* [[Legacy:Actor Overview|Actor Overview]]: adding actors, setting\
      \ properties\n* [[Legacy:Create A Mover|Create A Mover]]\n* [[Legacy:Keyframe|Keyframe]]\n\
      \nAny actors attached to a mover will follow the mover. You can attach smoke\
      \ generators to leave a trail of smoke or attach a fighter jet decoration to\
      \ fly around your map.\n\nAttached actors can be anywhere in the map; they don't\
      \ have to touch the mover or even be anywhere near it. The mover can be hidden\
      \ (in solid space) and the actors will appear to move independently. Attached\
      \ actors will always move relative to the movement of the mover; if the mover\
      \ moves 64 units to the left, so will the attached actor.\n\n==Method 1: Attach\
      \ Tag==\n\nTo attach any actor to a mover, [[Legacy:Match These Tags|match these\
      \ tags]]:\n* The Mover's Events -> Tag \n* The Actor's Movement -> AttachTag\
      \ \n\nMost actors can be attached in this way. There are three possible pitfalls\
      \ however.\n\n===Non-unique Tag===\n\nIn order for this to work there must be\
      \ ''only one'' actor (mover or otherwise) in the game with the same Tag as the\
      \ actor's AttachTag. If the same tag is used by your mover and another object,\
      \ the attached actor will not know which object to follow, and will not move.\
      \  You will have to give your mover a unique tag before you can successfully\
      \ attach other things to it in this way.\n\n===bStatic ===\n\nMost actors can\
      \ be attached in this way. The principal cause of an actor not moving with the\
      \ mover is that it has the property '''bStatic''' set to true by default (for\
      \ example [[Legacy:PlayerStart|PlayerStart]]s and [[Legacy:Volume|Volume]]s).\n\
      \nYou will need to change this property for the actor you want to attach: see\
      \ [[Legacy:Actor Properties Window|Actor Properties Window]] for how to edit\
      \ hidden properties. However, this may cause problems in netplay. Another solution\
      \ is to [[Legacy:Create A Subclass|Create a subclass]] for the item you want\
      \ to attach, and change the default value of bStatic for the new custom class.\n\
      \n===bCollideActors===\n\nBizzarely, Collision.bCollideActors must be true for\
      \ attachment to work, or the attached item may just drift off casually into\
      \ the void in a straight line. (This was observed when attaching a rotating\
      \ mover to the arm of another rotating mover. No other Collision flags appear\
      \ to be needed.)\n\n==Method 2: AttachMovers (UT only) ==\n\nThis method is\
      \ an alternative, available in [[Legacy:UT|UT]] and other games of that generation\
      \ which have the [[Legacy:AttachMover|AttachMover]] class. To add special movers,\
      \ right-click the ''Add Mover'' [[Legacy:Toolbox|toolbox]] button instead of\
      \ just clicking it: choose \"AttachMover\" from the small pop-up menu.\n\nAn\
      \ AttachMover has the same properties as a normal mover, you can have it BumpOpenTimed\
      \ so it will open when you touch it, TriggerOpenTimed so you can trigger it\
      \ (see [[Legacy:Activating A Mover|Activating a mover]] for more on this). The\
      \ only difference is that in the properties of the mover there is now a new\
      \ option.\n\n===Attaching Actors ===\n\nUnreal uses tags to tie actors to the\
      \ AttachMover, the same way [[Legacy:Trigger|Trigger]]s work. The same name\
      \ must be present in two different places. It doesn't matter what the text is,\
      \ but something descriptive may help later. 'Blah' will do, as will 'Attach'\
      \ or 'AttachedBarrel'. The following properties must match:\n\n* The AttachMover's\
      \ AttachMover -> AttachTag\n* The Actor's Events -> Tag \n\nNow you may have\
      \ to set a few other properties on the actor to get this to work. Check the\
      \ actors have the following properties set:\n* Advanced -> bMovable = True\n\
      * Advanced -> bStatic = False\n\nAlso, it is a good idea to turn the attached\
      \ actor's collision ''off''.  If the actor has it's collision properties set\
      \ to True, it can cause all sorts of problems (i.e. your actor may not move\
      \ properly). If you need collision, try using an invisible mover to create the\
      \ illusion of collision. Alternatively, in the case of Karma-simulated actors,\
      \ collision can be manually disabled between two actors without affecting those\
      \ object's collision with the remainder of objects in the world.\n\nNow test\
      \ your map. When the mover moves, the actor should move with it.\n\n===Warnings===\n\
      * If your actor does not move with the mover, check the bMovable and bStatic\
      \ properties of the actor.  Lights are one example.\n\n* Do not attach any NavigationPoint\
      \ or any actor that alters the bot's pathing to a mover.  \n\n* Do not attach\
      \ an actor to more than one mover.\n\nActors that are attached to a mover follow\
      \ its location, but only the yaw of its rotation.  If you need to have your\
      \ actors follow rotational movement around the other axes as well, check the\
      \ [[Legacy:ActorAttacher|ActorAttacher]] component.\n\n==Ideas==\n\n===Triggered\
      \ Kicker===\n\nYou can try attaching a [[Legacy:Kicker|Kicker]] to a mover to\
      \ make a triggered jump pad. Just add the kicker somewhere below the kicker\
      \ where it won't effect players, then attach it to a mover which will move it\
      \ up enough so that it kicks people. This can be quite fun for things like Human\
      \ Cannons <insert evil laugh here>. \n: Alternatively, see the [[Legacy:Kicker|Kicker]]\
      \ actor page for a subclass which does this. \n\n===Moving Skybox===\n\nYou\
      \ can also attach a [[Legacy:SkyZoneInfo|SkyZoneInfo]] to movers. I've tried\
      \ this one and it's pretty cool. Try creating a circular [[Legacy:SkyBox|SkyBox]],\
      \ then add a mover in the very center of it that rotates constantly. You will\
      \ want to make sure that you can't see it at any point though :) After that,\
      \ add your  SkyZoneInfo somewhere near the perimeter of the skybox and attach\
      \ it to the mover.\n\nYou will want to check that ''bDirectional = True'' in\
      \ the advanced properties of it so that it is facing the correct way (say you\
      \ are doing a flying ship or something :) ) Also, you can try tilting it sideways\
      \ in towards the center of the skybox so that the entire map is sloped inwards\
      \ as you would on a moterbike (This can make you feel sick after a while :)\
      \ )\n\n==Related Topics==\n* [[Legacy:Mover Topics|Mover Topics]]\n* [[Legacy:Actor\
      \ (UT)/Advanced|Actor (UT)/Advanced]] properties\n* [[Legacy:Actor (UT)/Events|Actor\
      \ (UT)/Events]] properties\n* [[Legacy:Actor (UT)/Movement|Actor (UT)/Movement]]\
      \ properties\n* [[Legacy:ActorAttacher|ActorAttacher]] component for UT\n* [[Legacy:Movable\
      \ Lights|Movable Lights]] making lights move\n\n[[:Category:Legacy Mapping]]<br\
      \ />[[:Category:Legacy To Do]] ''this tute has only been partially freshed up\
      \ for UT2003.'' \n[[Category:Legacy Mapping|{{PAGENAME}}]]\n[[Category:Legacy\
      \ To Do|{{PAGENAME}}]]"
  properties: []
  revId: 42530
name: "Legacy:Attaching Actors"
revision:
  revid: 42530
  parentid: 42529
  user: "Eliot"
  timestamp: 1265837270.000000000
  comment: ""
timestamp: 1668766523.493449000
