---
parse:
  title: "Legacy:UnrealScript Language Reference/Program Structure"
  text:
    text: "<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n\
      </div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#UnrealScript_Language_Reference\"\
      ><span class=\"tocnumber\">1</span> <span class=\"toctext\">UnrealScript Language\
      \ Reference</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"\
      #Program_Structure\"><span class=\"tocnumber\">2</span> <span class=\"toctext\"\
      >Program Structure</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a\
      \ href=\"#For_Loops\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\"\
      >For Loops</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"\
      #Do-Until_Loops\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\"\
      >Do-Until Loops</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"\
      #While_Loops\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\"\
      >While Loops</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"\
      #Break\"><span class=\"tocnumber\">2.4</span> <span class=\"toctext\">Break</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-7\"><a href=\"#Goto\"><span class=\"tocnumber\"\
      >2.5</span> <span class=\"toctext\">Goto</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-8\"><a href=\"#Conditional_Statements\"><span class=\"tocnumber\"\
      >2.6</span> <span class=\"toctext\">Conditional Statements</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-9\"><a href=\"#Case_Statements\"><span class=\"\
      tocnumber\">2.7</span> <span class=\"toctext\">Case Statements</span></a></li>\n\
      </ul>\n</li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"\
      UnrealScript_Language_Reference\">UnrealScript Language Reference</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=1\"\
      \ title=\"Edit section: UnrealScript Language Reference\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h2>\n<p><i>This subpage is part of\
      \ a document by Tim Sweeney. The Unreal Wiki has been granted permission to\
      \ host it. Please don't make any edits to these pages other than basic formatting\
      \ of the text. If you have more to say on a topic here, please start a new Wiki\
      \ page on it, for example from <a href=\"/Legacy:UnrealScript\" title=\"Legacy:UnrealScript\"\
      >UnrealScript</a> or <a href=\"/Legacy:Unreal_Engine\" title=\"Legacy:Unreal\
      \ Engine\">Unreal Engine</a>, and then add a \"related topics\" section to the\
      \ very end of a page here.</i></p>\n<blockquote class=\"legacyquote\">\n<p>Tim\
      \ Sweeney<br />\nEpic MegaGames, Inc.<br />\ntim@epicgames.com<br />\n<a rel=\"\
      nofollow\" class=\"external free\" href=\"http://www.epicgames.com\">http://www.epicgames.com</a></p>\n\
      </blockquote>\n<h2><span class=\"mw-headline\" id=\"Program_Structure\">Program\
      \ Structure</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=2\"\
      \ title=\"Edit section: Program Structure\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>UnrealScript supports all the standard flow-control\
      \ statements of C/C++/Java:</p>\n<h3><span class=\"mw-headline\" id=\"For_Loops\"\
      >For Loops</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=3\"\
      \ title=\"Edit section: For Loops\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>For</b> loops let you cycle through a loop as long\
      \ as some condition is met. For example:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co1\">// Example of \"for\" loop.</span>\n<span class=\"\
      kw1\">function</span> ForExample<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n       <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i;\n       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"Demonstrating the for loop\"\
      </span> <span class=\"br0\">)</span>;\n       <span class=\"kw2\">for</span><span\
      \ class=\"br0\">(</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>;\
      \ i<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span>; i<span class=\"\
      sy0\">++</span> <span class=\"br0\">)</span>\n       <span class=\"br0\">{</span>\n\
      \               <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span\
      \ class=\"st0\">\"The value of i is \"</span> <span class=\"sy0\">$</span> i\
      \ <span class=\"br0\">)</span>;\n       <span class=\"br0\">}</span>\n     \
      \  <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"Completed with i=\"</span> <span class=\"sy0\">$</span> i<span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The output\
      \ of this loop is:</p>\n<pre> Demonstrating the for loop\n The value of i is\
      \ 0\n The value of i is 1\n The value of i is 2\n The value of i is 3\n Completed\
      \ with i=4\n</pre>\n<p>In a for loop, you must specify three expressions separated\
      \ by semicolons. The first expression is for initializing a variable to its\
      \ starting value. The second expression gives a condition which is checked before\
      \ each iteration of the loop executes; if this expression is true, the loop\
      \ executes. If it’s false, the loop terminates. The third condition gives an\
      \ expression which increments the loop counter.</p>\n<p>Though most <b>for</b>\
      \ loop expressions just update a counter, you can also use <b>for</b> loops\
      \ for more advanced things like traversing linked lists, by using the appropriate\
      \ initialization, termination, and increment expressions.</p>\n<p>In all of\
      \ the flow control statements, you can either execute a single statement, without\
      \ brackets, as follows:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw2\">for</span><span class=\"br0\">(</span> i<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\"\
      >4</span>; i<span class=\"sy0\">++</span> <span class=\"br0\">)</span>\n   \
      \ <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"The value of i is \"</span> <span class=\"sy0\">$</span> i <span class=\"\
      br0\">)</span>;</pre></div>\n</div>\n<p>Or you can execute multiple statements,\
      \ surrounded by brackets, like this:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"kw2\">for</span><span class=\"br0\">(</span> i<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span\
      \ class=\"nu0\">4</span>; i<span class=\"sy0\">++</span> <span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"The value of i is\"</span> <span\
      \ class=\"br0\">)</span>;\n       <span class=\"kw3\">log</span><span class=\"\
      br0\">(</span> i <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h3><span class=\"mw-headline\" id=\"Do-Until_Loops\">Do-Until Loops</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=4\"\
      \ title=\"Edit section: Do-Until Loops\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>Do</b>-<b>Until</b> loops let you cycle through\
      \ a loop while some ending expression is true.&#160; Note that Unreal's do-until\
      \ syntax differs from C/Java (which use do-while).</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co1\">// Example of \"do\" loop.</span>\n<span\
      \ class=\"kw1\">function</span> DoExample<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n       <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i;\n       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"Demonstrating the do loop\"</span>\
      \ <span class=\"br0\">)</span>;\n       <span class=\"kw2\">do</span>\n    \
      \   <span class=\"br0\">{</span>\n               <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"The value of i is \"</span> <span\
      \ class=\"sy0\">$</span> i <span class=\"br0\">)</span>;\n               i <span\
      \ class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\"\
      >1</span>;\n       <span class=\"br0\">}</span> until<span class=\"br0\">(</span>\
      \ i <span class=\"sy0\">==</span> <span class=\"nu0\">4</span> <span class=\"\
      br0\">)</span>;\n       <span class=\"kw3\">log</span><span class=\"br0\">(</span>\
      \ <span class=\"st0\">\"Completed with i=\"</span> <span class=\"sy0\">$</span>\
      \ i<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The output of this loop is:</p>\n<pre> Demonstrating the do loop\n\
      \ The value of i is 0\n The value of i is 1\n The value of i is 2\n The value\
      \ of i is 3\n Completed with i=4\n</pre>\n<h3><span class=\"mw-headline\" id=\"\
      While_Loops\">While Loops</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=5\"\
      \ title=\"Edit section: While Loops\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>While</b> loops let you cycle through a loop while\
      \ some starting expression is true.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// Example of \"while\" loop.</span>\n<span class=\"kw1\"\
      >function</span> WhileExample<span class=\"br0\">(</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n       <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i;\n       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"Demonstrating the while loop\"\
      </span> <span class=\"br0\">)</span>;\n       <span class=\"kw2\">while</span><span\
      \ class=\"br0\">(</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\"\
      >4</span> <span class=\"br0\">)</span>\n       <span class=\"br0\">{</span>\n\
      \               <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span\
      \ class=\"st0\">\"The value of i is \"</span> <span class=\"sy0\">$</span> i\
      \ <span class=\"br0\">)</span>;\n               i <span class=\"sy0\">=</span>\
      \ i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>;\n       <span\
      \ class=\"br0\">}</span>\n       <span class=\"kw3\">log</span><span class=\"\
      br0\">(</span> <span class=\"st0\">\"Completed with i=\"</span> <span class=\"\
      sy0\">$</span> i<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The output of this loop is:</p>\n<pre> Demonstrating the while loop\n\
      \ The value of i is 0\n The value of i is 1\n The value of i is 2\n The value\
      \ of i is 3\n Completed with i=4\n</pre>\n<h3><span class=\"mw-headline\" id=\"\
      Break\">Break</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=6\"\
      \ title=\"Edit section: Break\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The <b>break</b> command exits out of the nearest\
      \ loop (<b>For</b>, <b>Do</b>, or <b>While</b>).</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co1\">// Example of \"while\" loop.</span>\n\
      <span class=\"kw1\">function</span> WhileExample<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">int</span> i;\n    <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"Demonstrating break\"</span>\
      \ <span class=\"br0\">)</span>;\n    <span class=\"kw2\">for</span><span class=\"\
      br0\">(</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>; i<span\
      \ class=\"sy0\">&lt;</span><span class=\"nu0\">10</span>; i<span class=\"sy0\"\
      >++</span> <span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n\
      \        <span class=\"kw2\">if</span><span class=\"br0\">(</span> i <span class=\"\
      sy0\">==</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span>\n\
      \            <span class=\"kw2\">break</span>;\n        <span class=\"kw3\"\
      >log</span><span class=\"br0\">(</span> <span class=\"st0\">\"The value of i\
      \ is \"</span> <span class=\"sy0\">$</span> i <span class=\"br0\">)</span>;\n\
      \    <span class=\"br0\">}</span>\n    <span class=\"kw3\">log</span><span class=\"\
      br0\">(</span> <span class=\"st0\">\"Completed with i=\"</span> <span class=\"\
      sy0\">$</span> i <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The output of this loop is:</p>\n<pre> Demonstrating break\n The\
      \ value of i is 0\n The value of i is 1\n The value of i is 2\n Completed with\
      \ i=3\n</pre>\n<h3><span class=\"mw-headline\" id=\"Goto\">Goto</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=7\"\
      \ title=\"Edit section: Goto\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The <b>Goto</b> command goes to a label somewhere\
      \ in the current function or state.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// Example of \"goto\".</span>\n<span class=\"kw1\">function</span>\
      \ GotoExample<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n       <span class=\"kw3\">log</span><span class=\"\
      br0\">(</span> <span class=\"st0\">\"Starting GotoExample\"</span> <span class=\"\
      br0\">)</span>;\n       goto Hither;\nYon:\n       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"At Yon\"</span> <span class=\"\
      br0\">)</span>;\n       goto Elsewhere;\nHither:\n       <span class=\"kw3\"\
      >log</span><span class=\"br0\">(</span> <span class=\"st0\">\"At Hither\"</span>\
      \ <span class=\"br0\">)</span>;\n       goto Yon;\nElsewhere:\n       <span\
      \ class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"st0\">\"\
      At Elsewhere\"</span> <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The output is:</p>\n<pre> Starting GotoExample\n At Hither\n At Yon\n\
      \ At Elsewhere\n</pre>\n<h3><span class=\"mw-headline\" id=\"Conditional_Statements\"\
      >Conditional Statements</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=8\"\
      \ title=\"Edit section: Conditional Statements\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>If</b>, <b>Else If</b>, and <b>Else</b> let you\
      \ execute code if certain conditions are</p>\n<p>met.</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"co1\">// Example of simple \"if\".</span>\n\
      <span class=\"kw2\">if</span><span class=\"br0\">(</span> LightBrightness <span\
      \ class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span> <span class=\"br0\"\
      >)</span>\n    <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span\
      \ class=\"st0\">\"My light is dim\"</span> <span class=\"br0\">)</span>;\n \n\
      <span class=\"co1\">// Example of \"if-else\".</span>\n<span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span> LightBrightness <span class=\"sy0\">&lt;</span> <span\
      \ class=\"nu0\">20</span> <span class=\"br0\">)</span>\n    <span class=\"kw3\"\
      >log</span><span class=\"br0\">(</span> <span class=\"st0\">\"My light is dim\"\
      </span> <span class=\"br0\">)</span>;\n<span class=\"kw2\">else</span>\n   \
      \ <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"My light is bright\"</span> <span class=\"br0\">)</span>;\n \n<span\
      \ class=\"co1\">// Example of \"if-else if-else\".</span>\n<span class=\"kw2\"\
      >if</span><span class=\"br0\">(</span> LightBrightness <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">20</span> <span class=\"br0\">)</span>\n    <span class=\"\
      kw3\">log</span><span class=\"br0\">(</span> <span class=\"st0\">\"My light\
      \ is dim\"</span> <span class=\"br0\">)</span>;\n<span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span><span class=\"br0\">(</span> LightBrightness\
      \ <span class=\"sy0\">&lt;</span> <span class=\"nu0\">40</span> <span class=\"\
      br0\">)</span>\n    <span class=\"kw3\">log</span><span class=\"br0\">(</span>\
      \ <span class=\"st0\">\"My light is medium\"</span> <span class=\"br0\">)</span>;\n\
      <span class=\"kw2\">else</span> <span class=\"kw2\">if</span><span class=\"\
      br0\">(</span> LightBrightness <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">60</span> <span class=\"br0\">)</span>\n    <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"My light is kinda bright\"</span>\
      \ <span class=\"br0\">)</span>;\n<span class=\"kw2\">else</span>\n    <span\
      \ class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"st0\">\"\
      My light is very bright\"</span> <span class=\"br0\">)</span>;\n \n<span class=\"\
      co1\">// Example of \"if\" with brackets.</span>\n<span class=\"kw2\">if</span><span\
      \ class=\"br0\">(</span> LightType <span class=\"sy0\">==</span> LT_Steady <span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw3\"\
      >log</span><span class=\"br0\">(</span> <span class=\"st0\">\"Light is steady\"\
      </span> <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n<span class=\"\
      kw2\">else</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"Light is not steady\"</span>\
      \ <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<table>\n<tr>\n<td><b>Note:</b> due to a bug in the unrealscript parser,\
      \ you cannot use a loop construct (<b>while</b>, <b>for</b>, <i>etc</i>) in\
      \ a simple <b>else</b> clause. You must use the form with brackets.</td>\n</tr>\n\
      </table>\n<h3><span class=\"mw-headline\" id=\"Case_Statements\">Case Statements</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:UnrealScript_Language_Reference/Program_Structure?section=9\"\
      \ title=\"Edit section: Case Statements\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p><b>Switch</b>, <b>Case</b>, <b>Default</b>, and <b>Break</b>\
      \ let you handle lists of conditions easily.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co1\">// Example of switch-case.</span>\n<span\
      \ class=\"kw1\">function</span> TestSwitch<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n       <span class=\"\
      co1\">// Execute one of the case statements below, based on</span>\n       <span\
      \ class=\"co1\">// the value in LightType.</span>\n       <span class=\"kw2\"\
      >switch</span><span class=\"br0\">(</span> LightType <span class=\"br0\">)</span>\n\
      \       <span class=\"br0\">{</span>\n               <span class=\"kw2\">case</span>\
      \ LT_None:\n                       <span class=\"kw3\">log</span><span class=\"\
      br0\">(</span> <span class=\"st0\">\"There is no lighting\"</span> <span class=\"\
      br0\">)</span>;\n                       <span class=\"kw2\">break</span>;\n\
      \               <span class=\"kw2\">case</span> LT_Steady:\n               \
      \        <span class=\"kw3\">log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"There is steady lighting\"</span> <span class=\"br0\">)</span>;\n  \
      \                     <span class=\"kw2\">break</span>;\n               <span\
      \ class=\"kw2\">case</span> LT_Backdrop:\n                       <span class=\"\
      kw3\">log</span><span class=\"br0\">(</span> <span class=\"st0\">\"There is\
      \ backdrop lighting\"</span> <span class=\"br0\">)</span>;\n               \
      \        <span class=\"kw2\">break</span>;\n               <span class=\"kw1\"\
      >default</span>:\n                       <span class=\"kw3\">log</span><span\
      \ class=\"br0\">(</span> <span class=\"st0\">\"There is dynamic\"</span> <span\
      \ class=\"br0\">)</span>;\n                       <span class=\"kw2\">break</span>;\n\
      \       <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>A <b>switch</b> statement consists of one or more <b>case</b> statements,\
      \ and an optional <b>default</b> statement. After a switch statement, execution\
      \ goes to the matching <b>case</b> statement if there is one; otherwise execution\
      \ goes to the <b>default</b> statement; otherwise execution continues past the\
      \ end of the <b>select</b> statement.</p>\n<p>After you write code following\
      \ a <b>case</b> label, you must use a <b>break</b> statement to cause execution\
      \ to go past the end of the <b>switch</b> statement. If you don’t use a <b>break</b>,\
      \ execution \"falls through\" to the next <b>case</b> handler.</p>\n<table>\n\
      <tr>\n<td><i>see also <a href=\"/Legacy:Flow_Syntax\" title=\"Legacy:Flow Syntax\"\
      >Flow Syntax</a> on the Wiki</i></td>\n</tr>\n</table>\n<hr />\n<p>Prev Page:\
      \ <a href=\"/Legacy:UnrealScript_Language_Reference/Functions\" title=\"Legacy:UnrealScript\
      \ Language Reference/Functions\">Legacy:UnrealScript Language Reference/Functions</a>\
      \ – <b>Section 5 of 9</b> – Next Page: <a href=\"/Legacy:UnrealScript_Language_Reference/States\"\
      \ title=\"Legacy:UnrealScript Language Reference/States\">Legacy:UnrealScript\
      \ Language Reference/States</a></p>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.216 seconds\nReal time usage: 0.218 seconds\nPreprocessor visited node count:\
      \ 127/1000000\nPreprocessor generated node count: 311/1000000\nPost‐expand include\
      \ size: 362/2097152 bytes\nTemplate argument size: 96/2097152 bytes\nHighest\
      \ expansion depth: 3/40\nExpensive parser function count: 0/100\n-->\n\n<!--\
      \ \nTransclusion expansion time report (%,ms,calls,template)\n100.00%    6.535\
      \      1 - -total\n100.00%    6.535      1 - Template:Innerbox\n-->\n\n<!--\
      \ Saved in parser cache with key wiki:pcache:idhash:3287-0!*!0!!en!*!* and timestamp\
      \ 20221118160229 and revision id 8512\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Language Reference/States"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript"
  - ns: 100
    exists: true
    name: "Legacy:Flow Syntax"
  - ns: 100
    exists: true
    name: "Legacy:Unreal Engine"
  - ns: 100
    exists: true
    name: "Legacy:UnrealScript Language Reference/Functions"
  templates:
  - ns: 10
    exists: true
    name: "Template:Innerbox"
  images: []
  externallinks:
  - "http://www.epicgames.com"
  sections:
  - toclevel: 1
    level: "2"
    line: "UnrealScript Language Reference"
    number: "1"
    index: "1"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 0
    anchor: "UnrealScript_Language_Reference"
  - toclevel: 1
    level: "2"
    line: "Program Structure"
    number: "2"
    index: "2"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 591
    anchor: "Program_Structure"
  - toclevel: 2
    level: "3"
    line: "For Loops"
    number: "2.1"
    index: "3"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 695
    anchor: "For_Loops"
  - toclevel: 2
    level: "3"
    line: "Do-Until Loops"
    number: "2.2"
    index: "4"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 2254
    anchor: "Do-Until_Loops"
  - toclevel: 2
    level: "3"
    line: "While Loops"
    number: "2.3"
    index: "5"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 2914
    anchor: "While_Loops"
  - toclevel: 2
    level: "3"
    line: "Break"
    number: "2.4"
    index: "6"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 3488
    anchor: "Break"
  - toclevel: 2
    level: "3"
    line: "Goto"
    number: "2.5"
    index: "7"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 4019
    anchor: "Goto"
  - toclevel: 2
    level: "3"
    line: "Conditional Statements"
    number: "2.6"
    index: "8"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 4466
    anchor: "Conditional_Statements"
  - toclevel: 2
    level: "3"
    line: "Case Statements"
    number: "2.7"
    index: "9"
    fromtitle: "Legacy:UnrealScript_Language_Reference/Program_Structure"
    byteoffset: 5431
    anchor: "Case_Statements"
  displaytitle: "Legacy:UnrealScript Language Reference/Program Structure"
  iwlinks: []
  wikitext:
    text: "==UnrealScript Language Reference ==\n\n''This subpage is part of a document\
      \ by Tim Sweeney. The Unreal Wiki has been granted permission to host it. Please\
      \ don't make any edits to these pages other than basic formatting of the text.\
      \ If you have more to say on a topic here, please start a new Wiki page on it,\
      \ for example from [[Legacy:UnrealScript|UnrealScript]] or [[Legacy:Unreal Engine|Unreal\
      \ Engine]], and then add a \"related topics\" section to the very end of a page\
      \ here.''\n\n{{innerbox| Tim Sweeney <br />Epic MegaGames, Inc. <br />tim@epicgames.com\
      \ <br />http://www.epicgames.com\n\n}}\n\n==Program Structure ==\n\nUnrealScript\
      \ supports all the standard flow-control statements of C/C++/Java: \n\n===For\
      \ Loops ===\n\n'''For''' loops let you cycle through a loop as long as some\
      \ condition is met. For example:\n\n<uscript>\n// Example of \"for\" loop.\n\
      function ForExample()\n{\n       local int i;\n       log( \"Demonstrating the\
      \ for loop\" );\n       for( i=0; i<4; i++ )\n       {\n               log(\
      \ \"The value of i is \" $ i );\n       }\n       log( \"Completed with i=\"\
      \ $ i);\n}\n</uscript>\n\nThe output of this loop is:\n\n  Demonstrating the\
      \ for loop\n  The value of i is 0\n  The value of i is 1\n  The value of i is\
      \ 2\n  The value of i is 3\n  Completed with i=4\n\nIn a for loop, you must\
      \ specify three expressions separated by semicolons. The first expression is\
      \ for initializing a variable to its starting value. The second expression gives\
      \ a condition which is checked before each iteration of the loop executes; if\
      \ this expression is true, the loop executes. If it’s false, the loop terminates.\
      \ The third condition gives an expression which increments the loop counter.\n\
      \nThough most '''for''' loop expressions just update a counter, you can also\
      \ use '''for''' loops for more advanced things like traversing linked lists,\
      \ by using the appropriate initialization, termination, and increment expressions.\n\
      \nIn all of the flow control statements, you can either execute a single statement,\
      \ without brackets, as follows:\n\n<uscript>\nfor( i=0; i<4; i++ )\n    log(\
      \ \"The value of i is \" $ i );\n</uscript>\n\nOr you can execute multiple statements,\
      \ surrounded by brackets, like this:\n\n<uscript>\nfor( i=0; i<4; i++ )\n{\n\
      \       log( \"The value of i is\" );\n       log( i );\n}\n</uscript>\n\n===Do-Until\
      \ Loops ===\n\n'''Do'''-'''Until''' loops let you cycle through a loop while\
      \ some ending expression is true.&nbsp; Note that Unreal's do-until syntax differs\
      \ from C/Java (which use do-while).\n\n<uscript>\n// Example of \"do\" loop.\n\
      function DoExample()\n{\n       local int i;\n       log( \"Demonstrating the\
      \ do loop\" );\n       do\n       {\n               log( \"The value of i is\
      \ \" $ i );\n               i = i + 1;\n       } until( i == 4 );\n       log(\
      \ \"Completed with i=\" $ i);\n}\n</uscript>\n\nThe output of this loop is:\n\
      \n  Demonstrating the do loop\n  The value of i is 0\n  The value of i is 1\n\
      \  The value of i is 2\n  The value of i is 3\n  Completed with i=4\n\n===While\
      \ Loops ===\n\n'''While''' loops let you cycle through a loop while some starting\
      \ expression is true.\n\n<uscript>\n// Example of \"while\" loop.\nfunction\
      \ WhileExample()\n{\n       local int i;\n       log( \"Demonstrating the while\
      \ loop\" );\n       while( i < 4 )\n       {\n               log( \"The value\
      \ of i is \" $ i );\n               i = i + 1;\n       }\n       log( \"Completed\
      \ with i=\" $ i);\n}\n</uscript>\n\nThe output of this loop is:\n\n  Demonstrating\
      \ the while loop\n  The value of i is 0\n  The value of i is 1\n  The value\
      \ of i is 2\n  The value of i is 3\n  Completed with i=4\n\n===Break ===\n\n\
      The '''break''' command exits out of the nearest loop ('''For''', '''Do''',\
      \ or '''While''').\n\n<uscript>\n// Example of \"while\" loop.\nfunction WhileExample()\n\
      {\n    local int i;\n    log( \"Demonstrating break\" );\n    for( i=0; i<10;\
      \ i++ )\n    {\n        if( i == 3 )\n            break;\n        log( \"The\
      \ value of i is \" $ i );\n    }\n    log( \"Completed with i=\" $ i );\n}\n\
      </uscript>\n\nThe output of this loop is:\n\n  Demonstrating break\n  The value\
      \ of i is 0\n  The value of i is 1\n  The value of i is 2\n  Completed with\
      \ i=3\n\n===Goto ===\n\nThe '''Goto''' command goes to a label somewhere in\
      \ the current function or state.\n\n<uscript>\n// Example of \"goto\".\nfunction\
      \ GotoExample()\n{\n       log( \"Starting GotoExample\" );\n       goto Hither;\n\
      Yon:\n       log( \"At Yon\" );\n       goto Elsewhere;\nHither:\n       log(\
      \ \"At Hither\" );\n       goto Yon;\nElsewhere:\n       log( \"At Elsewhere\"\
      \ );\n}\n</uscript>\n\nThe output is:\n\n  Starting GotoExample\n  At Hither\n\
      \  At Yon\n  At Elsewhere\n\n===Conditional Statements ===\n\n'''If''', '''Else\
      \ If''', and '''Else''' let you execute code if certain conditions are \n\n\
      met.\n\n<uscript>\n// Example of simple \"if\".\nif( LightBrightness < 20 )\n\
      \    log( \"My light is dim\" );\n\n// Example of \"if-else\".\nif( LightBrightness\
      \ < 20 )\n    log( \"My light is dim\" );\nelse\n    log( \"My light is bright\"\
      \ );\n\n// Example of \"if-else if-else\".\nif( LightBrightness < 20 )\n   \
      \ log( \"My light is dim\" );\nelse if( LightBrightness < 40 )\n    log( \"\
      My light is medium\" );\nelse if( LightBrightness < 60 )\n    log( \"My light\
      \ is kinda bright\" );\nelse\n    log( \"My light is very bright\" );\n\n//\
      \ Example of \"if\" with brackets.\nif( LightType == LT_Steady )\n{\n    log(\
      \ \"Light is steady\" );\n}\nelse\n{\n    log( \"Light is not steady\" );\n\
      }\n</uscript>\n\n{|\n\n|-\n|'''Note:''' due to a bug in the unrealscript parser,\
      \ you cannot use a loop construct ('''while''', '''for''', ''etc'') in a simple\
      \ '''else''' clause.  You must use the form with brackets. \n|}\n\n===Case Statements\
      \ ===\n\n'''Switch''', '''Case''', '''Default''', and '''Break''' let you handle\
      \ lists of conditions easily.\n\n<uscript>\n// Example of switch-case.\nfunction\
      \ TestSwitch()\n{\n       // Execute one of the case statements below, based\
      \ on\n       // the value in LightType.\n       switch( LightType )\n      \
      \ {\n               case LT_None:\n                       log( \"There is no\
      \ lighting\" );\n                       break;\n               case LT_Steady:\n\
      \                       log( \"There is steady lighting\" );\n             \
      \          break;\n               case LT_Backdrop:\n                      \
      \ log( \"There is backdrop lighting\" );\n                       break;\n  \
      \             default:\n                       log( \"There is dynamic\" );\n\
      \                       break;\n       }\n}\n</uscript>\n\nA '''switch''' statement\
      \ consists of one or more '''case''' statements, and an optional '''default'''\
      \ statement. After a switch statement, execution goes to the matching '''case'''\
      \ statement if there is one; otherwise execution goes to the '''default''' statement;\
      \ otherwise execution continues past the end of the '''select''' statement.\n\
      \nAfter you write code following a '''case''' label, you must use a '''break'''\
      \ statement to cause execution to go past the end of the '''switch''' statement.\
      \ If you don’t use a '''break''', execution \"falls through\" to the next '''case'''\
      \ handler.\n\n{|\n\n|-\n|''see also [[Legacy:Flow Syntax|Flow Syntax]] on the\
      \ Wiki'' \n|}\n\n----\n\nPrev Page: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/Functions]]\
      \ &ndash; '''Section 5 of 9''' &ndash; Next Page: [[:{{SUBJECTSPACE}}:{{BASEPAGENAME}}/States]]"
  properties: []
  revId: 8512
name: "Legacy:UnrealScript Language Reference/Program Structure"
revision:
  revid: 8512
  parentid: 8513
  user: "Wormbo"
  timestamp: 1150839657.000000000
  comment: "added the legal stuff about the origin of the document"
timestamp: 1668787198.343078000
