---
parse:
  title: "UnrealScript Hello World"
  text:
    text: "<p>This tutorial will explain the steps to making your first \"Hello, world!\"\
      \ modification; we'll be using a gametype to do our hello world example.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Qualifications\">Qualifications</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/UnrealScript_Hello_World?section=1\" title=\"Edit section: Qualifications\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li>A moddable <a href=\"/Unreal_Engine\" title=\"Unreal Engine\" class=\"mw-redirect\"\
      >Unreal Engine</a> game</li>\n<li>A <a href=\"/edit/TextEditor?redlink=1\" class=\"\
      new\" title=\"TextEditor (page does not exist)\">TextEditor</a> e.g. Notepad</li>\n\
      </ul>\n<h2><span class=\"mw-headline\" id=\"Getting_started\">Getting started</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/UnrealScript_Hello_World?section=2\" title=\"Edit section: Getting\
      \ started\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Before we can begin coding our \"Hello, world!\" mod, we will have to create\
      \ a new project folder.</p>\n<dl>\n<dt>Unreal Engine 1/2&#160;</dt>\n<dd>Browse\
      \ to path \"%HomeDrive%\\GAMEDIRECTORY\\\" and make a new folder named HelloWorld\
      \ this will be the name of the project and the compiled file name i.e. \"HelloWorld.u\"\
      .</dd>\n</dl>\n<dl>\n<dt>Unreal Engine 3&#160;</dt>\n<dd>Open Windows Explorer\
      \ and go to path \"%HomeDrive%\\GAMEDIRECTORY\\Development\\Src\\\" and make\
      \ a new folder named HelloWorld this will be the name of the project and the\
      \ compiled file name i.e. \"HelloWorld.u\".</dd>\n</dl>\n<p>Open HelloWorld\
      \ and make a new folder named Classes this will be the folder where all UnrealScript\
      \ classes go to. Now open your favorite <a href=\"/edit/TextEditor?redlink=1\"\
      \ class=\"new\" title=\"TextEditor (page does not exist)\">TextEditor</a> and\
      \ start copying the code below:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">class</span> HelloWorldGame <span class=\"kw1\">extends</span>\
      \ <span class=\"kw9\">GameInfo</span>;</pre></div>\n</div>\n<p>The above code\
      \ means this is a <a href=\"/Class\" title=\"Class\" class=\"mw-redirect\">class</a>\
      \ and that the class name is HelloWorld and this class extends the class GameInfo(gametype).</p>\n\
      <p>Now to make this class useful we'll have to start overriding specific events\
      \ that the Unreal Engine will notify our gametype about so that we can actually\
      \ start doing our thing, copy the code below:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">event</span> InitGame<span class=\"br0\"\
      >(</span> <span class=\"kw5\">string</span> Options, <span class=\"kw1\">out</span>\
      \ <span class=\"kw5\">string</span> <span class=\"kw4\">Error</span> <span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"co1\">// Call\
      \ the parent(i.e. GameInfo) InitGame event version and pass the parameters</span>\n\
      \    <span class=\"kw6\">super</span>.<span class=\"me0\">InitGame</span><span\
      \ class=\"br0\">(</span> Options, <span class=\"kw4\">Error</span> <span class=\"\
      br0\">)</span>;\n \n    <span class=\"co1\">// Unreal Engine 1/2</span>\n  \
      \  <span class=\"kw3\">Log</span><span class=\"br0\">(</span> <span class=\"\
      st0\">\"Hello, world!\"</span> <span class=\"br0\">)</span>;\n \n    <span class=\"\
      co1\">// Unreal Engine 3</span>\n    <span class=\"sy0\">`</span><span class=\"\
      kw3\">log</span><span class=\"br0\">(</span> <span class=\"st0\">\"Hello, world!\"\
      </span> <span class=\"br0\">)</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>The above code tells that this class overrides the <a href=\"/Event\"\
      \ title=\"Event\">event</a> named InitGame(the earliest UnrealScript event of\
      \ all) that accepts the following parameter Options and optionally return an\
      \ Error.</p>\n<p>\"{\" means the beginning of this event's scope and \"}\" the\
      \ end. The first code is usually a super call which tells the engine to call\
      \ the parent's version of InitGame before it executes our code e.g. Log*, next\
      \ we tell the engine call the function named Log with the following message\
      \ of \"Hello, world!\".</p>\n<p>Now we have to save this as a class file i.e.\
      \ .uc, in your TextEditor go to File-&gt;Save As... and name the file the same\
      \ as your class name in this case HelloWorldGame and add the extension \".uc\"\
      , go to your project classes folder e.g. HelloWorld\\Classes\\ and click Save!</p>\n\
      <h2><span class=\"mw-headline\" id=\"Compiling_your_modification\">Compiling\
      \ your modification</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/UnrealScript_Hello_World?section=3\" title=\"Edit section:\
      \ Compiling your modification\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Now to make the code above useful and executable by\
      \ the Unreal Engine we will have to compile it, which will output a Unreal file\
      \ named HelloWorld.u</p>\n<p>In order to continue we will first have to tell\
      \ the Unreal Engine which packages to recompile, we do this by adding a Mod/EditPackage:</p>\n\
      <dl>\n<dt>Unreal Engine 1/2&#160;</dt>\n<dd>Browse to your game directory and\
      \ go in System\\ and open GAME.ini, search for [Editor.EditorEngine] section\
      \ and below it add <code>EditPackages=HelloWorld</code>, Save the ini file and\
      \ move on to the next step: Open your favorite TextEditor and copy the code\
      \ below:</dd>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\">cd.. <span class=\"\
      co2\"># step out of project folder</span>\ncd System <span class=\"co2\"># step\
      \ into System folder</span>\ndel HelloWorld.<span class=\"me0\">u</span> <span\
      \ class=\"co2\"># delete old HelloWorld.u so that we can surely recompile our\
      \ mod</span>\nucc.<span class=\"me0\">exe</span> Editor.<span class=\"me0\"\
      >MakeCommandlet</span></pre></div>\n</div>\n<dl>\n<dt>Unreal Engine 3&#160;</dt>\n\
      <dd>Browse to your game directory and go in PREFIXGame\\Config\\ and open PREFIXEngine.ini,\
      \ search for [UnrealEd.EditorEngine] section and below it add <code>ModEditPackages=HelloWorld</code>,\
      \ Save the ini file and move on to the next step: Open your favorite TextEditor\
      \ and copy the code below:</dd>\n</dl>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      >cd.. <span class=\"co2\"># step out of project folder</span>\ncd.. <span class=\"\
      co2\"># step out of Src folder</span>\ncd.. <span class=\"co2\"># step out of\
      \ Development folder</span>\ncd Binaries <span class=\"co2\"># step into Binaries\
      \ folder</span>\n<span class=\"kw7\">GAME</span>.<span class=\"me0\">exe</span>\
      \ make</pre></div>\n</div>\n<p><br />\nClick File-&gt;Save As... and set the\
      \ file name to Make.bat, browse to your project directory(not in classes!) and\
      \ Save.</p>\n<p>Now browse to this \"Make.bat\" file and execute it, this batch\
      \ file will execute all the commands in order automate the compiling process\
      \ for you! Once done, check if there are any errors, if so double check your\
      \ code to see if you made any typos or check <a href=\"/Compiler_errors_overview\"\
      \ title=\"Compiler errors overview\">Compiler errors overview</a>, if not it\
      \ is time to launch the game you compiled HelloWorld for and open up your console\
      \ and execute \"ShowLog\" and \"Open MAPNAME?Game=HelloWorld.HelloWorldGame\"\
      , check in the Log Window if you see \"Hello, world!\" if so then everything\
      \ is working and it is time to extend your UnrealScript knowledge to start developing\
      \ your ideas.</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.074 seconds\n\
      Real time usage: 0.245 seconds\nPreprocessor visited node count: 35/1000000\n\
      Preprocessor generated node count: 96/1000000\nPost‐expand include size: 0/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:29211-0!*!0!!*!*!*\
      \ and timestamp 20221118022624 and revision id 44207\n -->\n"
  categories:
  - sortkey: ""
    name: "Programming_tutorials"
  links:
  - ns: 0
    exists: true
    name: "Compiler errors overview"
  - ns: 0
    exists: false
    name: "TextEditor"
  - ns: 0
    exists: true
    name: "Event"
  - ns: 0
    exists: true
    name: "Class"
  - ns: 0
    exists: true
    name: "Unreal Engine"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Qualifications"
    number: "1"
    index: "1"
    fromtitle: "UnrealScript_Hello_World"
    byteoffset: 146
    anchor: "Qualifications"
  - toclevel: 1
    level: "2"
    line: "Getting started"
    number: "2"
    index: "2"
    fromtitle: "UnrealScript_Hello_World"
    byteoffset: 234
    anchor: "Getting_started"
  - toclevel: 1
    level: "2"
    line: "Compiling your modification"
    number: "3"
    index: "3"
    fromtitle: "UnrealScript_Hello_World"
    byteoffset: 2423
    anchor: "Compiling_your_modification"
  displaytitle: "UnrealScript Hello World"
  iwlinks: []
  wikitext:
    text: "This tutorial will explain the steps to making your first \"Hello, world!\"\
      \ modification; we'll be using a gametype to do our hello world example.\n\n\
      ==Qualifications==\n* A moddable [[Unreal Engine]] game\n* A [[TextEditor]]\
      \ e.g. Notepad\n\n==Getting started==\nBefore we can begin coding our \"Hello,\
      \ world!\" mod, we will have to create a new project folder.\n\n;Unreal Engine\
      \ 1/2 : Browse to path \"%HomeDrive%\\GAMEDIRECTORY\\\" and make a new folder\
      \ named HelloWorld this will be the name of the project and the compiled file\
      \ name i.e. \"HelloWorld.u\".\n\n;Unreal Engine 3 : Open Windows Explorer and\
      \ go to path \"%HomeDrive%\\GAMEDIRECTORY\\Development\\Src\\\" and make a new\
      \ folder named HelloWorld this will be the name of the project and the compiled\
      \ file name i.e. \"HelloWorld.u\".\n\nOpen HelloWorld and make a new folder\
      \ named Classes this will be the folder where all UnrealScript classes go to.\
      \ Now open your favorite [[TextEditor]] and start copying the code below:\n\n\
      <uscript>class HelloWorldGame extends GameInfo;</uscript>\nThe above code means\
      \ this is a [[class]] and that the class name is HelloWorld and this class extends\
      \ the class GameInfo(gametype).\n\nNow to make this class useful we'll have\
      \ to start overriding specific events that the Unreal Engine will notify our\
      \ gametype about so that we can actually start doing our thing, copy the code\
      \ below:\n\n<uscript>event InitGame( string Options, out string Error )\n{\n\
      \    // Call the parent(i.e. GameInfo) InitGame event version and pass the parameters\n\
      \    super.InitGame( Options, Error );\n \n    // Unreal Engine 1/2\n    Log(\
      \ \"Hello, world!\" );\n\n    // Unreal Engine 3\n    `log( \"Hello, world!\"\
      \ );\n}</uscript>\nThe above code tells that this class overrides the [[event]]\
      \ named InitGame(the earliest UnrealScript event of all) that accepts the following\
      \ parameter Options and optionally return an Error.\n\n\"{\" means the beginning\
      \ of this event's scope and \"}\" the end. The first code is usually a super\
      \ call which tells the engine to call the parent's version of InitGame before\
      \ it executes our code e.g. Log*, next we tell the engine call the function\
      \ named Log with the following message of \"Hello, world!\". \n\nNow we have\
      \ to save this as a class file i.e. .uc, in your TextEditor go to File->Save\
      \ As... and name the file the same as your class name in this case HelloWorldGame\
      \ and add the extension \".uc\", go to your project classes folder e.g. HelloWorld\\\
      Classes\\ and click Save!\n\n==Compiling your modification==\nNow to make the\
      \ code above useful and executable by the Unreal Engine we will have to compile\
      \ it, which will output a Unreal file named HelloWorld.u\n\nIn order to continue\
      \ we will first have to tell the Unreal Engine which packages to recompile,\
      \ we do this by adding a Mod/EditPackage:\n\n;Unreal Engine 1/2 : Browse to\
      \ your game directory and go in System\\ and open GAME.ini, search for [Editor.EditorEngine]\
      \ section and below it add <code>EditPackages=HelloWorld</code>, Save the ini\
      \ file and move on to the next step: Open your favorite TextEditor and copy\
      \ the code below:\n<uscript>cd.. # step out of project folder\ncd System # step\
      \ into System folder\ndel HelloWorld.u # delete old HelloWorld.u so that we\
      \ can surely recompile our mod\nucc.exe Editor.MakeCommandlet</uscript>\n\n\
      ;Unreal Engine 3 : Browse to your game directory and go in PREFIXGame\\Config\\\
      \ and open PREFIXEngine.ini, search for [UnrealEd.EditorEngine] section and\
      \ below it add <code>ModEditPackages=HelloWorld</code>, Save the ini file and\
      \ move on to the next step: Open your favorite TextEditor and copy the code\
      \ below:\n<uscript>cd.. # step out of project folder\ncd.. # step out of Src\
      \ folder\ncd.. # step out of Development folder\ncd Binaries # step into Binaries\
      \ folder\nGAME.exe make</uscript>\n\n\nClick File->Save As... and set the file\
      \ name to Make.bat, browse to your project directory(not in classes!) and Save.\n\
      \nNow browse to this \"Make.bat\" file and execute it, this batch file will\
      \ execute all the commands in order automate the compiling process for you!\
      \ Once done, check if there are any errors, if so double check your code to\
      \ see if you made any typos or check [[Compiler errors overview]], if not it\
      \ is time to launch the game you compiled HelloWorld for and open up your console\
      \ and execute \"ShowLog\" and \"Open MAPNAME?Game=HelloWorld.HelloWorldGame\"\
      , check in the Log Window if you see \"Hello, world!\" if so then everything\
      \ is working and it is time to extend your UnrealScript knowledge to start developing\
      \ your ideas.\n\n[[Category:Programming tutorials]]"
  properties: []
  revId: 44207
name: "UnrealScript Hello World"
revision:
  revid: 44207
  parentid: 44132
  user: "Eliot"
  timestamp: 1293469021.000000000
  comment: "Minor corrections"
timestamp: 1668797584.490832000
