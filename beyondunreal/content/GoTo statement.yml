---
parse:
  title: "GoTo statement"
  text:
    text: "<p>The <b>GoTo</b> statement makes code execution jump to the specified\
      \ <a href=\"/edit/Label?redlink=1\" class=\"new\" title=\"Label (page does not\
      \ exist)\">label</a>. The exact behavior is slightly different depending on\
      \ whether it is used in <a href=\"/State\" title=\"State\" class=\"mw-redirect\"\
      >state</a> code, in <a href=\"/Function\" title=\"Function\" class=\"mw-redirect\"\
      >function</a> code or within a <a href=\"/ForEach\" title=\"ForEach\" class=\"\
      mw-redirect\">ForEach</a> loop.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\"\
      >\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1\
      \ tocsection-1\"><a href=\"#Syntax_in_functions_and_ForEach_loops\"><span class=\"\
      tocnumber\">1</span> <span class=\"toctext\">Syntax in functions and ForEach\
      \ loops</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#Usage_considerations\"\
      ><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Usage considerations</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-3\"><a href=\"#Syntax_in_state_code\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">Syntax in state\
      \ code</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Using_GotoState.28.29_instead\"\
      ><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Using GotoState()\
      \ instead</span></a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"\
      mw-headline\" id=\"Syntax_in_functions_and_ForEach_loops\">Syntax in functions\
      \ and ForEach loops</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/GoTo_statement?section=1\" title=\"Edit section: Syntax\
      \ in functions and ForEach loops\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The following syntax applies in functions (including\
      \ <a href=\"/Operators\" title=\"Operators\">operators</a> and <a href=\"/Delegates\"\
      \ title=\"Delegates\">delegates</a>) and also in ForEach loops within <a href=\"\
      /edit/State_code?redlink=1\" class=\"new\" title=\"State code (page does not\
      \ exist)\">state code</a>:</p>\n<pre><b>goto</b> <i>labelname</i> <b>;</b>\n\
      </pre>\n<p>The label name must be an identifier matching a label name in the\
      \ immediately surrounding function or ForEach block. The label can also be outside\
      \ the current code block, but it is not allowed to jump out of or into a ForEach\
      \ block. Other loop types and <a href=\"/If\" title=\"If\" class=\"mw-redirect\"\
      >If</a>, Else or <a href=\"/Switch\" title=\"Switch\" class=\"mw-redirect\"\
      >Switch</a> blocks are unproblematic in that respect.</p>\n<h3><span class=\"\
      mw-headline\" id=\"Usage_considerations\">Usage considerations</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/GoTo_statement?section=2\"\
      \ title=\"Edit section: Usage considerations\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The GoTo statement should generally be avoided. Instead,\
      \ other flow control statements, such as <a href=\"/Break\" title=\"Break\"\
      \ class=\"mw-redirect\">break</a>, <a href=\"/Continue\" title=\"Continue\"\
      \ class=\"mw-redirect\">continue</a> or one of the various available loop constructs\
      \ should be used.</p>\n<p>The label name must be an identifier, not a <a href=\"\
      /Name_literal\" title=\"Name literal\" class=\"mw-redirect\">name literal</a>.\
      \ It is not possible to specify a <a href=\"/Name\" title=\"Name\" class=\"\
      mw-redirect\">name</a>-type variable or other kind of expression here.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Syntax_in_state_code\">Syntax in state\
      \ code</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/GoTo_statement?section=3\" title=\"Edit section: Syntax\
      \ in state code\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>The syntax in states (outside any ForEach loops) is similar to that in functions,\
      \ but there is a small difference:</p>\n<pre><b>goto</b> <i>expression</i> <b>;</b>\n\
      </pre>\n<p>Instead of a simple identifier to specify a label, an expression\
      \ is expected that evaluates to a <a href=\"/Name\" title=\"Name\" class=\"\
      mw-redirect\">name</a> value. The simplest case would be a <a href=\"/Name_literal\"\
      \ title=\"Name literal\" class=\"mw-redirect\">name literal</a>, but you can\
      \ also access variables or call functions here.</p>\n<p>As with any other expression,\
      \ the compiler can only check the syntax. In particular, the expression's result\
      \ is not validated at compile-time, so it is possible to specify invalid label\
      \ names. Such an invalid name will generate a runtime warning and stop state\
      \ code execution as if the <a href=\"/Stop_statement\" title=\"Stop statement\"\
      >Stop statement</a> was used.</p>\n<h3><span class=\"mw-headline\" id=\"Using_GotoState.28.29_instead\"\
      >Using GotoState() instead</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/GoTo_statement?section=4\"\
      \ title=\"Edit section: Using GotoState() instead\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>As mentioned above, the GoTo statement for jumping\
      \ to state labels can only be used in state code outside any ForEach loop. If\
      \ you want to jump to a different state label from within a function, you can\
      \ use the <b>GotoState()</b> function as described below.</p>\n<dl>\n<dd><b>Warning:</b>\
      \ Functions called from within a ForEach loop in state code, as part of a function\
      \ parameter expression or in similar nested context (such as the condition of\
      \ a loop or an If statement) <b>must not</b> change the actor's state or jump\
      \ to a different state label as <a href=\"http://en.wikipedia.org/wiki/side_effect_(computer_science)\"\
      \ class=\"extiw\" title=\"wp:side effect (computer science)\">side effect</a>.\
      \ Doing so will crash the engine with a <a href=\"http://en.wikipedia.org/wiki/general_protection_fault\"\
      \ class=\"extiw\" title=\"wp:general protection fault\">general protection fault</a>!</dd>\n\
      </dl>\n<p>The GotoState() function is a <a href=\"/Functions#Access_modifiers\"\
      \ title=\"Functions\">non-static</a> <a href=\"/Functions#Native_implementation_modifiers\"\
      \ title=\"Functions\">native</a> function defined in the <a href=\"/Object\"\
      \ title=\"Object\">Object</a> class of all engine generations:</p>\n<div class=\"\
      code block\" style=\"font-family:monospace;padding-left:4em;text-indent:-4em\"\
      >native(113) final function <b>GotoState</b> (optional&#160;<a href=\"/Name\"\
      \ title=\"Name\" class=\"mw-redirect\">name</a>&#160;<b>NewState</b>, optional&#160;<a\
      \ href=\"/Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;<b>Label</b>)</div>\n\
      <p>Within state code, the result of a GoTo statement is the same as calling\
      \ the GotoState() function and only passing the label expression as the second\
      \ parameter:</p>\n<pre><b>GotoState(,</b> <i>expression</i><b>);</b>\n</pre>\n\
      <p>Due to the introduction of <a href=\"/edit/State_stacking?redlink=1\" class=\"\
      new\" title=\"State stacking (page does not exist)\">state stacking</a>, <a\
      \ href=\"/Unreal_Engine_3\" title=\"Unreal Engine 3\">Unreal Engine 3</a> added\
      \ some parameters:</p>\n<div class=\"code block\" style=\"font-family:monospace;padding-left:4em;text-indent:-4em\"\
      >native(113) final function <b>GotoState</b> (optional&#160;<a href=\"/Name\"\
      \ title=\"Name\" class=\"mw-redirect\">name</a>&#160;<b>NewState</b>, optional&#160;<a\
      \ href=\"/Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;<b>Label</b>,\
      \ optional&#160;<a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;<b>bForceEvents</b>,\
      \ optional&#160;<a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;<b>bKeepStack</b>)</div>\n\
      <p>Thus the corresponding GotoState() call would be:</p>\n<pre><b>GotoState(,</b>\
      \ <i>expression</i><b>, False, True);</b>\n</pre>\n<p>The last two parameters\
      \ can also be omitted if the current state was not pushed onto the state stack\
      \ with the PushState() function.</p>\n<table class=\"navbox nowraplinks\" style=\"\
      \">\n<tr class=\"navbox-header\">\n<th colspan=\"2\" class=\"navbox-header\"\
      \ style=\"\">\n<div style=\"position:relative; width:100%; white-space:nowrap;\"\
      >\n<div class=\"noprint plainlinks\" style=\"background-color:transparent; padding:0;\
      \ font-weight:normal; font-size:xx-small; white-space:nowrap; position:absolute;left:0.5em;\"\
      ><a href=\"/Template:Navbox_unrealscript\" title=\"Template:Navbox unrealscript\"\
      ><span title=\"View this template\">v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\"\
      \ title=\"Template talk:Navbox unrealscript\"><span title=\"Discussion about\
      \ this template\">d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external\
      \ text\" href=\"https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"\
      ><span title=\"You can edit this template. Please use the preview button before\
      \ saving.\">e</span></a></div>\n<a href=\"/UnrealScript_reference\" title=\"\
      UnrealScript reference\">UnrealScript reference</a></div>\n</th>\n</tr>\n<tr\
      \ class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\">Declarations</th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/Preprocessor\" title=\"Preprocessor\"\
      >Preprocessor</a>&#160;• <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;•\
      \ <a href=\"/Interfaces\" title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"\
      /Cpptext\" title=\"Cpptext\">Cpptext</a>&#160;• <a href=\"/Constants\" title=\"\
      Constants\">Constants</a>&#160;• <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;•\
      \ <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;• <a href=\"/Variables\"\
      \ title=\"Variables\">Variables</a>&#160;(<a href=\"/Metadata\" title=\"Metadata\"\
      >Metadata</a>)&#160;• <a href=\"/Replication_block\" title=\"Replication block\"\
      >Replication block</a>&#160;• <a href=\"/Operators\" title=\"Operators\">Operators</a>&#160;•\
      \ <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"\
      /Functions\" title=\"Functions\">Functions</a>&#160;• <a href=\"/States\" title=\"\
      States\">States</a>&#160;• <a href=\"/Defaultproperties\" title=\"Defaultproperties\"\
      >Defaultproperties</a>&#160;(<a href=\"/Subobjects\" title=\"Subobjects\">Subobjects</a>)</td>\n\
      </tr>\n<tr class=\"navbox-body even\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Types\" title=\"Types\">Types</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Bool\" title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;•\
      \ <a href=\"/Byte\" title=\"Byte\" class=\"mw-redirect\">byte</a>&#160;• <a\
      \ href=\"/Float\" title=\"Float\" class=\"mw-redirect\">float</a>&#160;• <a\
      \ href=\"/Int\" title=\"Int\" class=\"mw-redirect\">int</a>&#160;• <a href=\"\
      /Name\" title=\"Name\" class=\"mw-redirect\">name</a>&#160;• <a href=\"/String\"\
      \ title=\"String\">string</a>&#160;• <a href=\"/Types#Reference_types\" title=\"\
      Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\" title=\"Class limiter\"\
      \ class=\"mw-redirect\">Class</a>&#160;• <a href=\"/Enums\" title=\"Enums\"\
      >Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\">Structs</a>&#160;(<a\
      \ href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a href=\"/Rotator\" title=\"\
      Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"Quat\" class=\"mw-redirect\"\
      >Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\">Color</a>)&#160;• <a href=\"\
      /Static_arrays\" title=\"Static arrays\">Static arrays</a>&#160;• <a href=\"\
      /Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic arrays</a>&#160;• <a href=\"\
      /Delegates\" title=\"Delegates\">Delegates</a>&#160;• <a href=\"/Typecasting\"\
      \ title=\"Typecasting\">Typecasting</a></td>\n</tr>\n<tr class=\"navbox-body\
      \ odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Literals\" title=\"\
      Literals\">Literals</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"\
      /Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;• <a href=\"\
      /Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a href=\"/Literals#Integer_numbers\"\
      \ title=\"Literals\">Integer</a>&#160;• <a href=\"/Literals#Names\" title=\"\
      Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\" title=\"Literals\"\
      >Objects</a> (<a href=\"/None\" title=\"None\" class=\"mw-redirect\">None</a>&#160;⋅\
      \ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\">Self</a>)&#160;• <a\
      \ href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;• <a href=\"\
      /Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"/Literals#Strings\"\
      \ title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"navbox-body even\"\
      >\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\" title=\"\
      Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"><strong class=\"\
      selflink\">GoTo</strong>&#160;• <a href=\"/If_statement\" title=\"If statement\"\
      >If</a>&#160;• <a href=\"/Assert_statement\" title=\"Assert statement\">Assert</a>&#160;•\
      \ <a href=\"/Return_statement\" title=\"Return statement\">Return</a>&#160;•\
      \ <a href=\"/Stop_statement\" title=\"Stop statement\">Stop</a>&#160;• <a href=\"\
      /Switch_statement\" title=\"Switch statement\">Switch</a>&#160;• <a href=\"\
      /While_loop\" title=\"While loop\">While</a>&#160;• <a href=\"/Do...Until_loop\"\
      \ title=\"Do...Until loop\">Do...Until</a>&#160;• <a href=\"/For_loop\" title=\"\
      For loop\">For</a>&#160;• <a href=\"/ForEach_loop\" title=\"ForEach loop\">ForEach</a>&#160;•\
      \ <a href=\"/Break_statement\" title=\"Break statement\">Break</a>&#160;• <a\
      \ href=\"/Continue_statement\" title=\"Continue statement\">Continue</a></td>\n\
      </tr>\n<tr class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Specifiers\" title=\"Specifiers\">Specifiers</a></th>\n<td class=\"\
      navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\" title=\"\
      Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.106 seconds\nReal time usage: 0.377 seconds\nPreprocessor\
      \ visited node count: 187/1000000\nPreprocessor generated node count: 929/1000000\n\
      Post‐expand include size: 11176/2097152 bytes\nTemplate argument size: 4545/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \  103.160      1 - -total\n 88.27%   91.058      1 - Template:Navbox_unrealscript\n\
      \ 55.51%   57.260      1 - Template:Navbox\n 14.02%   14.466      1 - Template:Tnavbar\n\
      \ 11.10%   11.451      2 - Template:Code\n-->\n\n<!-- Saved in parser cache\
      \ with key wiki:pcache:idhash:28583-0!*!0!!en!*!* and timestamp 20221117233208\
      \ and revision id 40380\n -->\n"
  categories:
  - sortkey: "GoTo statement"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "ForEach"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Continue"
  - ns: 0
    exists: false
    name: "State code"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "Break"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Object"
  - ns: 0
    exists: false
    name: "Label"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "Continue statement"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "State"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Name literal"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "Switch"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "Unreal Engine 3"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "If"
  - ns: 0
    exists: true
    name: "Function"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: false
    name: "State stacking"
  templates:
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  - ns: 10
    exists: true
    name: "Template:Code"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Syntax in functions and ForEach loops"
    number: "1"
    index: "1"
    fromtitle: "GoTo_statement"
    byteoffset: 223
    anchor: "Syntax_in_functions_and_ForEach_loops"
  - toclevel: 2
    level: "3"
    line: "Usage considerations"
    number: "1.1"
    index: "2"
    fromtitle: "GoTo_statement"
    byteoffset: 758
    anchor: "Usage_considerations"
  - toclevel: 1
    level: "2"
    line: "Syntax in state code"
    number: "2"
    index: "3"
    fromtitle: "GoTo_statement"
    byteoffset: 1122
    anchor: "Syntax_in_state_code"
  - toclevel: 2
    level: "3"
    line: "Using GotoState() instead"
    number: "2.1"
    index: "4"
    fromtitle: "GoTo_statement"
    byteoffset: 1832
    anchor: "Using_GotoState.28.29_instead"
  displaytitle: "GoTo statement"
  iwlinks:
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/general_protection_fault"
    name: "wp:general protection fault"
  - prefix: "wp"
    url: "http://en.wikipedia.org/wiki/side_effect_(computer_science)"
    name: "wp:side effect (computer science)"
  wikitext:
    text: "The '''GoTo''' statement makes code execution jump to the specified [[label]].\
      \ The exact behavior is slightly different depending on whether it is used in\
      \ [[state]] code, in [[function]] code or within a [[ForEach]] loop.\n\n==Syntax\
      \ in functions and ForEach loops==\nThe following syntax applies in functions\
      \ (including [[operators]] and [[delegates]]) and also in ForEach loops within\
      \ [[state code]]:\n '''goto''' ''labelname'' ''';'''\nThe label name must be\
      \ an identifier matching a label name in the immediately surrounding function\
      \ or ForEach block. The label can also be outside the current code block, but\
      \ it is not allowed to jump out of or into a ForEach block. Other loop types\
      \ and [[If]], Else or [[Switch]] blocks are unproblematic in that respect.\n\
      \n===Usage considerations===\nThe GoTo statement should generally be avoided.\
      \ Instead, other flow control statements, such as [[break]], [[continue]] or\
      \ one of the various available loop constructs should be used.\n\nThe label\
      \ name must be an identifier, not a [[name literal]]. It is not possible to\
      \ specify a [[name]]-type variable or other kind of expression here.\n\n==Syntax\
      \ in state code==\nThe syntax in states (outside any ForEach loops) is similar\
      \ to that in functions, but there is a small difference:\n '''goto''' ''expression''\
      \ ''';'''\nInstead of a simple identifier to specify a label, an expression\
      \ is expected that evaluates to a [[name]] value. The simplest case would be\
      \ a [[name literal]], but you can also access variables or call functions here.\n\
      \nAs with any other expression, the compiler can only check the syntax. In particular,\
      \ the expression's result is not validated at compile-time, so it is possible\
      \ to specify invalid label names. Such an invalid name will generate a runtime\
      \ warning and stop state code execution as if the [[Stop statement]] was used.\n\
      \n===Using GotoState() instead===\nAs mentioned above, the GoTo statement for\
      \ jumping to state labels can only be used in state code outside any ForEach\
      \ loop. If you want to jump to a different state label from within a function,\
      \ you can use the '''GotoState()''' function as described below.\n\n:'''Warning:'''\
      \ Functions called from within a ForEach loop in state code, as part of a function\
      \ parameter expression or in similar nested context (such as the condition of\
      \ a loop or an If statement) '''must not''' change the actor's state or jump\
      \ to a different state label as [[wp:side effect (computer science)|side effect]].\
      \ Doing so will crash the engine with a [[wp:general protection fault|general\
      \ protection fault]]!\n\nThe GotoState() function is a [[Functions#Access modifiers|non-static]]\
      \ [[Functions#Native implementation modifiers|native]] function defined in the\
      \ [[Object]] class of all engine generations:\n{{code|native(113) final function\
      \ '''GotoState''' (optional&nbsp;[[name]]&nbsp;'''NewState''', optional&nbsp;[[name]]&nbsp;'''Label''')}}\n\
      Within state code, the result of a GoTo statement is the same as calling the\
      \ GotoState() function and only passing the label expression as the second parameter:\n\
      \ '''GotoState(,''' ''expression''''');'''\n\nDue to the introduction of [[state\
      \ stacking]], [[Unreal Engine 3]] added some parameters:\n{{code|native(113)\
      \ final function '''GotoState''' (optional&nbsp;[[name]]&nbsp;'''NewState''',\
      \ optional&nbsp;[[name]]&nbsp;'''Label''', optional&nbsp;[[bool]]&nbsp;'''bForceEvents''',\
      \ optional&nbsp;[[bool]]&nbsp;'''bKeepStack''')}}\nThus the corresponding GotoState()\
      \ call would be:\n '''GotoState(,''' ''expression''''', False, True);'''\nThe\
      \ last two parameters can also be omitted if the current state was not pushed\
      \ onto the state stack with the PushState() function.\n\n{{navbox unrealscript}}"
  properties: []
  revId: 40380
name: "GoTo statement"
revision:
  revid: 40380
  parentid: 40345
  user: "Wormbo"
  timestamp: 1262453075.000000000
  comment: "added GoTo and GotoState() info for state labels"
timestamp: 1668754714.539845000
