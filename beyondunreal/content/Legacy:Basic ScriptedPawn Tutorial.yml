---
parse:
  title: "Legacy:Basic ScriptedPawn Tutorial"
  text:
    text: "<p>This is a tutorial that sets up a UT NPC (Monster) via <a href=\"/Legacy:ScriptedPawn\"\
      \ title=\"Legacy:ScriptedPawn\">ScriptedPawn</a>.</p>\n<p>For a tutorial on\
      \ using UT2004 <a href=\"/Legacy:Monster\" title=\"Legacy:Monster\">Monsters</a>,\
      \ see <a href=\"/Legacy:A_UT2004_Monster_Tutorial\" title=\"Legacy:A UT2004\
      \ Monster Tutorial\">A UT2004 Monster Tutorial</a>.</p>\n<p></p>\n<div id=\"\
      toc\" class=\"toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n\
      <li class=\"toclevel-1 tocsection-1\"><a href=\"#Prerequisites\"><span class=\"\
      tocnumber\">1</span> <span class=\"toctext\">Prerequisites</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-2\"><a href=\"#Overview\"><span class=\"tocnumber\"\
      >2</span> <span class=\"toctext\">Overview</span></a></li>\n<li class=\"toclevel-1\
      \ tocsection-3\"><a href=\"#Tutorial\"><span class=\"tocnumber\">3</span> <span\
      \ class=\"toctext\">Tutorial</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#Setting_Up\"><span class=\"tocnumber\">3.1</span> <span class=\"\
      toctext\">Setting Up</span></a>\n<ul>\n<li class=\"toclevel-3 tocsection-5\"\
      ><a href=\"#Classes_Used\"><span class=\"tocnumber\">3.1.1</span> <span class=\"\
      toctext\">Classes Used</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-2\
      \ tocsection-6\"><a href=\"#Retreating\"><span class=\"tocnumber\">3.2</span>\
      \ <span class=\"toctext\">Retreating</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-7\"><a href=\"#Alarm\"><span class=\"tocnumber\">3.3</span> <span\
      \ class=\"toctext\">Alarm</span></a></li>\n<li class=\"toclevel-2 tocsection-8\"\
      ><a href=\"#Waiting\"><span class=\"tocnumber\">3.4</span> <span class=\"toctext\"\
      >Waiting</span></a></li>\n<li class=\"toclevel-2 tocsection-9\"><a href=\"#Ambushing\"\
      ><span class=\"tocnumber\">3.5</span> <span class=\"toctext\">Ambushing</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-10\"><a href=\"#Patroling\"><span class=\"\
      tocnumber\">3.6</span> <span class=\"toctext\">Patroling</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-11\"><a href=\"#Guarding\"><span class=\"tocnumber\"\
      >3.7</span> <span class=\"toctext\">Guarding</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-12\"><a href=\"#PawnSpecific_Orders\"><span class=\"tocnumber\"\
      >3.8</span> <span class=\"toctext\">PawnSpecific Orders</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-13\"><a href=\"#CreatureFactory_and_SpawnPoints\"\
      ><span class=\"tocnumber\">3.9</span> <span class=\"toctext\">CreatureFactory\
      \ and SpawnPoints</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-14\"\
      ><a href=\"#External_Links\"><span class=\"tocnumber\">4</span> <span class=\"\
      toctext\">External Links</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-15\"\
      ><a href=\"#Steve_Polge.27s_Docs\"><span class=\"tocnumber\">4.1</span> <span\
      \ class=\"toctext\">Steve Polge's Docs</span></a></li>\n<li class=\"toclevel-2\
      \ tocsection-16\"><a href=\"#Matthias_Worch.27s_Tutorials\"><span class=\"tocnumber\"\
      >4.2</span> <span class=\"toctext\">Matthias Worch's Tutorials</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-17\"><a href=\"#Related_Topics\"\
      ><span class=\"tocnumber\">5</span> <span class=\"toctext\">Related Topics</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-18\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">6</span> <span class=\"toctext\">Discussion</span></a></li>\n</ul>\n\
      </div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Prerequisites\">Prerequisites</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=1\" title=\"Edit section:\
      \ Prerequisites\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>You should already be familiar with <a href=\"/Legacy:Bot_Pathing\" title=\"\
      Legacy:Bot Pathing\">Bot Pathing</a>, <a href=\"/Legacy:Testing_Botplay\" title=\"\
      Legacy:Testing Botplay\">Testing Botplay</a> and <a href=\"/Legacy:Bot_Mind\"\
      \ title=\"Legacy:Bot Mind\">Bot Mind</a>. Although we're not dealing with bots,\
      \ creatures use the same bot path network and perform many similar actions in\
      \ navigation. You should also be familiar with the properties available on <a\
      \ href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\">ScriptedPawn</a>.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Overview\">Overview</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=2\"\
      \ title=\"Edit section: Overview\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>\"Scripting\" <a href=\"/Legacy:Pawn_(UT)\" title=\"\
      Legacy:Pawn (UT)\">Pawn (UT)s</a> was a common practice for mappers in <a href=\"\
      /Legacy:UT\" title=\"Legacy:UT\" class=\"mw-redirect\">UT</a>. Whether scripting\
      \ advanced bot support or setting up monsters to patrol the level, the native\
      \ AI of the UT Pawns was used in conjuction with <a href=\"/Legacy:AIScript\"\
      \ title=\"Legacy:AIScript\">AIScripts</a> to create relatively realistic behavior.</p>\n\
      <p>This tutorial will show how to implement UT creatures, subclasses of ScriptedPawn.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Tutorial\">Tutorial</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=3\"\
      \ title=\"Edit section: Tutorial\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>This is a general tutorial and guide designed to demonstrate\
      \ the implementation of several different creatures set to perform several different\
      \ tasks. After completing this tutorial, you should have a good idea how these\
      \ AI functions work and be able to experiment combining them in different ways,\
      \ with different settings, etc.</p>\n<h3><span class=\"mw-headline\" id=\"Setting_Up\"\
      >Setting Up</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=4\" title=\"\
      Edit section: Setting Up\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>You should start with a bot pathed map that is working properly. See also\
      \ <a href=\"/Legacy:Bot_Pathing\" title=\"Legacy:Bot Pathing\">Bot Pathing</a>.</p>\n\
      <h4><span class=\"mw-headline\" id=\"Classes_Used\">Classes Used</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=5\" title=\"Edit section:\
      \ Classes Used\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h4>\n\
      <ul>\n<li><a href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\">ScriptedPawn</a></li>\n\
      <li><a href=\"/Legacy:HomeBase\" title=\"Legacy:HomeBase\">HomeBase</a></li>\n\
      <li><a href=\"/Legacy:AlarmPoint\" title=\"Legacy:AlarmPoint\">AlarmPoint</a></li>\n\
      <li><a href=\"/Legacy:AmbushPoint\" title=\"Legacy:AmbushPoint\">AmbushPoint</a></li>\n\
      <li><a href=\"/Legacy:PatrolPoint\" title=\"Legacy:PatrolPoint\">PatrolPoint</a></li>\n\
      <li><a href=\"/Legacy:CreatureFactory\" title=\"Legacy:CreatureFactory\">CreatureFactory</a></li>\n\
      <li><a href=\"/Legacy:SpawnPoint\" title=\"Legacy:SpawnPoint\">SpawnPoint</a></li>\n\
      </ul>\n<h3><span class=\"mw-headline\" id=\"Retreating\">Retreating</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=6\" title=\"Edit section:\
      \ Retreating\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>This is an automatic function rather than an explicit Order. The creature\
      \ can be made to retreat to a specific spot if hurt or otherwise frightened.</p>\n\
      <ol>\n<li>Place a creature in the map and enter a unique Tag that will be used\
      \ to associate this creature with a HomeBase.</li>\n<li>Place a HomeBase somewhere\
      \ in the map. This will the place the creature will retreat to. Likely places\
      \ to retreat to include out of the way places, spots \"deeper\" into the map's\
      \ layout or objective sequence, or where other creatures can be found to help\
      \ this creature in combat.</li>\n<li>Enter the Tag of the HomeBase to match\
      \ the creature's Tag.</li>\n<li>Decide an appropriate Extend to set for the\
      \ HomeBase. This is the radius (in UU) that the creature's \"home\" extends\
      \ from the HomeBase actor. Note that the creature will only consider themselves\
      \ at \"home\" if they are within the Extend and have a line of sight to the\
      \ HomeBase.</li>\n<li>Decide an appropriate LookDir for the HomeBase. This is\
      \ the direction the creature will face once they are at \"home.\"</li>\n</ol>\n\
      <h3><span class=\"mw-headline\" id=\"Alarm\">Alarm</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=7\"\
      \ title=\"Edit section: Alarm\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Although this is not an explicit Order, Alarm functions\
      \ can direct a creature to perform complex tasks when an enemy player is first\
      \ seen. In practical terms, the creature will attempt to perform these tasks\
      \ at all cost. After the task is complete, the creature will attack the enemy,\
      \ if still available. After combat, the creature will return to a RestFormation\
      \ or resume it's normal Orders.</p>\n<ol>\n<li>Place a creature in the map and\
      \ enter a unique AlarmTag that will be used to associate this creature with\
      \ it's AlarmPoint.</li>\n<li>Place an AlarmPoint in a spot that will represent\
      \ a destination for the task the creature is to perform once \"alarmed\". This\
      \ could be a spot near other creatures to help in combat, it could be an actual\
      \ alarm trigger (a switch the creature activates to set off an audible alarm\
      \ sound), or it could be a better tactical position to attack from. While the\
      \ specific tasks the creature is to perform can vary, the main idea is that\
      \ it will travel to this AlarmPoint once \"alarmed\".</li>\n<li>You may add\
      \ additional AlarmPoints as long as they all have a unique Tag. Place as many\
      \ additional AlarmPoints as you like. These will make the creature travel from\
      \ the first AlarmPoint to the next in a series until the last AlarmPoint is\
      \ reached.</li>\n<li>Enter the Tag of the next AlarmPoint in the NextAlarm property\
      \ of this AlarmPoint. Move on to the next AlarmPoint in the series and continue\
      \ to enter the NextAlarm property until all are properly associated.</li>\n\
      <li>Decide if the creature should perform a specific animation sequence when\
      \ this AlarmPoint is reached. If so, enter the name of the animation sequence\
      \ in the AlarmAnim property of the AlarmPoint. A list of animation sequece names\
      \ can be found in the <a href=\"/Legacy:Mesh_Browser\" title=\"Legacy:Mesh Browser\"\
      >Mesh Browser</a>. Note that animation sequences are specific to the creature\
      \ used.</li>\n<li>Decide if the creature should play a specific sound while\
      \ at this AlarmPoint. Enter the sound in the AlarmSound property of the AlarmPoint.</li>\n\
      <li>If no AlarmAnim is used, decide if the creature should pause and play default\
      \ waiting animations when this AlarmPoint is reached. Enter the time to pause\
      \ (in seconds) in the PauseTime property on the AlarmPoint.</li>\n<li>The creature\
      \ can be made to shoot at any actor when this AlarmPoint is reached. Enter the\
      \ Tag of the actor in the ShootTarget property on this AlarmPoint.</li>\n</ol>\n\
      <p>Note: The AlarmPoint actor has many other properties with which to adjust\
      \ the creature's behavior. In conjunction with other AlarmPoints, Triggers,\
      \ etc., the creature can be made to perform complex behavior once a player enemy\
      \ is detected. See also <a href=\"/Legacy:AlarmPoint\" title=\"Legacy:AlarmPoint\"\
      >AlarmPoint</a>. <i>(See also Steve Polge's guide linked to at the bottom of\
      \ this page. Some properties on the AlarmPoint page here on the wiki are suspect.)</i></p>\n\
      <h3><span class=\"mw-headline\" id=\"Waiting\">Waiting</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=8\"\
      \ title=\"Edit section: Waiting\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>This is the default Order. The creature will wait\
      \ near its location, sometimes randomly wandering, until a player enemy is seen\
      \ to attack. After combat, the creature will return to a waiting state.</p>\n\
      <ol>\n<li>Place a creature in the map and enter \"Waiting\" in the Orders property,\
      \ if it isn't already set.</li>\n<li>That's it. You may want to rotate the creature\
      \ to face a particular direction at match start, but after a short while, it\
      \ will wander and change it's location and rotation on its own.</li>\n</ol>\n\
      <h3><span class=\"mw-headline\" id=\"Ambushing\">Ambushing</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=9\"\
      \ title=\"Edit section: Ambushing\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The creature will find a place to wait in ambush for\
      \ a player to attack. Once combat is over, the creature will find another spot\
      \ to ambush from and again wait for a player to attack.</p>\n<ol>\n<li>Place\
      \ a creature in the map and enter \"Ambushing\" in the Orders property.</li>\n\
      <li>Enter a unique OrderTag that will be used to associate this creature with\
      \ it's AmbushPoints.</li>\n<li>Place AmbushPoints in the map at places where\
      \ the creature can reach, can watch out for players, and hopefully can attack\
      \ from with some element of suprise. A ledge, a side passage or a hole are likely\
      \ places to Ambush from. Place as many as you like.</li>\n<li>Enter the Tag\
      \ of these AmbushPoints to match your creature's OrderTag. This will associate\
      \ the creature to these AmbushPoints.</li>\n<li>Decide whether to set bFixedStart\
      \ to true on the creature or not. If true, the creature will always start the\
      \ match at the placed position and travel to a random AmbushPoint to ambush\
      \ players. If false, the creature will be teleported to a random AmbushPoint\
      \ at match start.</li>\n<li>Decide whether to set bSniping to true on the various\
      \ AmbushPoints. If true, the creature will likely snipe from that position when\
      \ it sees a player to attack.</li>\n<li>Adjust the SightRadius on the various\
      \ AmbushPoints, if necessary. This is the radius (in UU) that will be used by\
      \ the creature when it is waiting to ambush at this point.</li>\n</ol>\n<h3><span\
      \ class=\"mw-headline\" id=\"Patroling\">Patroling</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=10\"\
      \ title=\"Edit section: Patroling\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>The creature will move from spot to spot in a patrol\
      \ route until a player enemy is seen to attack. After combat, the creature will\
      \ return to the patrol route and continue to patrol.</p>\n<ol>\n<li>Place a\
      \ creature in your map and enter \"Patroling\" in the Orders property.</li>\n\
      <li>Enter a unique OrderTag that will be used to match this creature with a\
      \ starting PatrolPoint. <i>(suggested name, \"Patrol1\")</i></li>\n<li>Place\
      \ a series of PatrolPoints in the map to define the patroling route for this\
      \ creature. The creature will follow the normal path network to get from PatrolPoint\
      \ to PatrolPoint, so you do not need to define each corner. Instead, find places\
      \ that might be good to have this creature pause while patroling. A room, a\
      \ lookout, a switchback or dead end are likely places to place PatrolPoints.\
      \ Place as many as you like.</li>\n<li>Enter the Tag of the first PatrolPoint\
      \ to match the creature's OrderTag. This will associate the creature with this\
      \ patrol route and further associate this PatrolPoint as the creature's start.</li>\n\
      <li>Enter the NextPatrol property of this PatrolPoint to match the Tag of the\
      \ next PatrolPoint in the series along this patrol route. Enter the Tag of the\
      \ next PatrolPoint to match.</li>\n<li>Repeat 4-5 until the patrol route is\
      \ defined. Match the NextPatrol property of the last PatrolPoint with the Tag\
      \ of the first PatrolPoint in the route to complete the loop.</li>\n<li>Decide\
      \ whether to set bFixedStart to true on the creature. If true, the creature\
      \ will always start the match at the placed position and travel to the starting\
      \ PatrolPoint. If false, the creature will be teleported to the starting PatrolPoint\
      \ at match start.</li>\n<li>Decide whether to set bDelayedPatrol to true on\
      \ the creature. If true, the creature will wait at the placed location until\
      \ it is triggered before it will travel to the first PatrolPoint and begin the\
      \ patrol.</li>\n<li>Decide whether the creature should perform a specific animation\
      \ sequence while at this PatrolPoint. The creature can be made to play an animation,\
      \ pause using standard waiting animations or neither and simply move on to the\
      \ next PatrolPoint. If a specific animation sequence is desired, enter the name\
      \ of the sequence in the PatrolAnim property of the PatrolPoint. A list of animation\
      \ sequences can be found in the <a href=\"/Legacy:Mesh_Browser\" title=\"Legacy:Mesh\
      \ Browser\">Mesh Browser</a>. Note that animation sequences are specific to\
      \ the creature used.</li>\n<li>If an animation sequence is used, the creature\
      \ can be made to loop the animation sequence a number of times. Enter the desired\
      \ number of sequence loops in the NumAnims property of the PatrolPoint.</li>\n\
      <li>Decide whether the creature should play a specific sound while performing\
      \ an animation sequence at this PatrolPoint. Enter the sound in the PatrolSound\
      \ property of the PatrolPoint.</li>\n<li>If no PatrolAnim is defined but a pause\
      \ is desired, enter the number of seconds to pause in the PauseTime properties\
      \ of the PatrolPoint.</li>\n</ol>\n<h3><span class=\"mw-headline\" id=\"Guarding\"\
      >Guarding</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=11\" title=\"\
      Edit section: Guarding\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>The creature will guard an item. It will stay at its placed location until\
      \ an enemy player is seen, when it will challenge the player to combat. After\
      \ combat, the creature will return to the placed location and continue to guard\
      \ the item. If the item is touched, the creature will consider the \"toucher\"\
      \ an enemy.</p>\n<ol>\n<li>Place a creature in the map and set its Order property\
      \ to \"Guarding\". It's a good idea to place the creature near the item to be\
      \ guarded, or at least within a line of sight to that item or the area surrounding\
      \ the item.</li>\n<li>Enter a unique Tag on the item that will associate it\
      \ with the creature guarding it. Match the creature's OrderTag to the Tag of\
      \ the item.</li>\n</ol>\n<h3><span class=\"mw-headline\" id=\"PawnSpecific_Orders\"\
      >PawnSpecific Orders</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=12\" title=\"\
      Edit section: PawnSpecific Orders\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Some individual creatures have unique Orders or functions.\
      \ See also the <a href=\"/Legacy:ScriptedPawn\" title=\"Legacy:ScriptedPawn\"\
      >ScriptedPawn</a> subclasses for the various creatures.</p>\n<h3><span class=\"\
      mw-headline\" id=\"CreatureFactory_and_SpawnPoints\">CreatureFactory and SpawnPoints</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=13\" title=\"Edit\
      \ section: CreatureFactory and SpawnPoints\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>CreatureFactory is a subclass of <a href=\"/Legacy:ThingFactory\"\
      \ title=\"Legacy:ThingFactory\">ThingFactory</a>. SpawnPoints are associated\
      \ to factories to provide a suitable place to spawn an actor. CreatureFactories\
      \ are specifically designed to spawn creatures in-game and give appropriate\
      \ settings to various properties.</p>\n<ol>\n<li>Place a CreatureFactory in\
      \ the map. Thing and CreatureFactories can either be triggered externally or\
      \ activated via Touch, just like a Trigger. For this tutorial, place the CreatureFactory\
      \ in a spot where a player is likely to walk by. We will set this CreatureFactory\
      \ to spawn the creature when touched.</li>\n<li>Place a SpawnPoint somewhere\
      \ in the map that will allow access to the bot path network and give enough\
      \ space for the creature to be spawned. Also rotate the SpawnPoint to a good\
      \ orientation for the creature to be spawned.</li>\n<li>Enter a unique Tag on\
      \ the SpawnPoint that will associate it with the CreatureFactory. Match the\
      \ CreatureFactory's Tag to the SpawnPoint Tag.</li>\n<li>Place as many additional\
      \ SpawnPoints as you like, up to a total of 16. Make sure their Tags all match\
      \ the Tag of the CreatureFactory. Spawned creatures will appear randomly at\
      \ one of these SpawnPoints.</li>\n<li>Set the ThingFactory-&gt;Prototype property\
      \ on the CreatureFactory to the desired creature to spawn.</li>\n<li>Set the\
      \ ThingFactory-&gt;MaxItems property on the CreatureFactory to the maximum number\
      \ of creatures this factory will allow in game at one time.</li>\n<li>Set the\
      \ ThingFactory-&gt;Capacity property on the CreatureFactory to the maximum number\
      \ of total creatures to spawn. After this number is reached, the factory will\
      \ shut down. A value of -1 here indicates the factory should never shut down.</li>\n\
      <li>Set the ThingFactory-&gt;Interval property to the (average) number of seconds\
      \ to wait before this factory is ready to spawn the next creature. Note that\
      \ spawning several creature with an interval of zero will likely cause a \"\
      hiccup\", where the engine stalls momentarily while spawning. Set the interval\
      \ to something small instead, like 0.1</li>\n<li>Set the ThingFactory-&gt;bOnlyPlayerTouched\
      \ property on the CreatureFactory to true. For this tutorial, we want the player\
      \ to trigger the factory when it touches it, but we don't want other creatures\
      \ to trigger it. If true, only player pawns are able to activate this factory.</li>\n\
      <li>Decide if the ThingFactory-&gt;bCovert property on the CreatureFactory should\
      \ be set to false. It is set to true by default. If true, the creature will\
      \ only be spawned if a player is unable to see it spawned, otherwise the factory\
      \ will wait. If your SpawnPoint is in plain sight but you'd like creatures to\
      \ spawn at it even if a player sees the creature appear from (seemingly) nowhere,\
      \ this could be set to false.</li>\n<li>Decide if the ThingFactory-&gt;bStoppable\
      \ property on the CreatureFactory should be set to true. If true, the factory\
      \ will spawn creatures if Touched (or triggered) and will stop spawning creatures\
      \ when it is unTouched.</li>\n<li>Set the CreatureFactory-&gt;Orders, OrderTag\
      \ and AlarmTag properties on the CreatureFactory to those desired property settings\
      \ for the spawned creatures.</li>\n<li>If the game is set to CoOp mode, decide\
      \ if extra creatures should be spawned from this factory. Enter the number of\
      \ extra creatures to spawn in the AddedCoopCapacity property on the CreatureFactory.</li>\n\
      </ol>\n<p>NOTE: Creatures spawned from a given SpawnPoint will have their Event\
      \ set to match the Tag of the CreatureFactory (and the SpawnPoint). That way,\
      \ once the creature is killed, it will automatically trigger a new creature\
      \ to be spawned.</p>\n<h2><span class=\"mw-headline\" id=\"External_Links\"\
      >External Links</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=14\" title=\"\
      Edit section: External Links\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Steve_Polge.27s_Docs\"\
      >Steve Polge's Docs</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=15\" title=\"\
      Edit section: Steve Polge's Docs\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<ul>\n<li><a rel=\"nofollow\" class=\"external text\"\
      \ href=\"http://unreal.epicgames.com/AI.htm\">Unreal Creature Care and Feeding\
      \ Guide</a> – The definitive reference.</li>\n</ul>\n<h3><span class=\"mw-headline\"\
      \ id=\"Matthias_Worch.27s_Tutorials\">Matthias Worch's Tutorials</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=16\" title=\"Edit\
      \ section: Matthias Worch's Tutorials\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Matthias Worch, who worked on the Unreal 2 team, has\
      \ written a couple of tutorials that are highly useful. He's even provided a\
      \ small demo level.</p>\n<p><b>Set up dialog and AI scripting for a level</b>\
      \ and <b>Create a basic AI script</b> are the articles of interest here.</p>\n\
      <ul>\n<li><a rel=\"nofollow\" class=\"external text\" href=\"http://www.langsuyar.com/articles/u2_tutorialsmain.html\"\
      >Worch's Unreal 2 Tutorials</a></li>\n</ul>\n<h2><span class=\"mw-headline\"\
      \ id=\"Related_Topics\">Related Topics</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=17\"\
      \ title=\"Edit section: Related Topics\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<ul>\n<li><a href=\"/Legacy:Artificial_Intelligence\"\
      \ title=\"Legacy:Artificial Intelligence\">Artificial Intelligence</a>\n<ul>\n\
      <li><a href=\"/Legacy:Bot_Support\" title=\"Legacy:Bot Support\">Bot Support</a>\n\
      <ul>\n<li><a href=\"/Legacy:Bot_Support_(UT)\" title=\"Legacy:Bot Support (UT)\"\
      >Bot Support (UT)</a></li>\n</ul>\n</li>\n<li><a href=\"/Legacy:Monster_Support\"\
      \ title=\"Legacy:Monster Support\">Monster Support</a></li>\n<li><a href=\"\
      /Legacy:NPC_Support\" title=\"Legacy:NPC Support\">NPC Support</a></li>\n</ul>\n\
      </li>\n<li><a href=\"/Legacy:Pawn_(UT)/AI_Functions\" title=\"Legacy:Pawn (UT)/AI\
      \ Functions\">Pawn (UT)/AI Functions</a></li>\n<li><a href=\"/Legacy:AIScript\"\
      \ title=\"Legacy:AIScript\">AIScript</a></li>\n<li><a href=\"/Legacy:AI_Scripting_Reference\"\
      \ title=\"Legacy:AI Scripting Reference\">AI Scripting Reference</a></li>\n\
      <li><a href=\"/Legacy:Ucs_File\" title=\"Legacy:Ucs File\">Ucs File</a> (U2\
      \ only) <i>?</i></li>\n</ul>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Basic_ScriptedPawn_Tutorial?section=18\" title=\"\
      Edit section: Discussion\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p><b>SuperApe:</b> This tutorial needs to be written. The external links above\
      \ might be used to help write an original tutorial. This tutorial should at\
      \ least cover Patroling and Ambushing.</p>\n<p><b>SuperApe:</b> I've been working\
      \ with the original ScriptedPawn code from UT. I believe I know how all this\
      \ works, but I don't have UT. If no one writes this soon, I will probably take\
      \ a crack at it, based on what I'm seeing in the code.</p>\n<p><b>SuperApe:</b>\
      \ Although I do not have UT, I am now familiar with the code that these AI systems\
      \ ran on, having looked at the code for ScriptedPawn. I am writing this tutorial\
      \ with the stipulation that it may not be complete or completely accurrate.\
      \ However, it should be close at the very least.</p>\n<p><b>SuperApe:</b> Finished\
      \ the tutorial. Let me know if there are any problems.</p>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.057 seconds\nReal time usage: 0.059 seconds\nPreprocessor\
      \ visited node count: 73/1000000\nPreprocessor generated node count: 92/1000000\n\
      Post‐expand include size: 54/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:662-0!*!0!!en!*!*\
      \ and timestamp 20221118015229 and revision id 1950\n -->\n"
  categories:
  - sortkey: "Basic ScriptedPawn Tutorial"
    name: "Legacy_Tutorial"
  - sortkey: "Basic ScriptedPawn Tutorial"
    name: "Legacy_Mapping"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Artificial Intelligence"
  - ns: 100
    exists: true
    name: "Legacy:PatrolPoint"
  - ns: 100
    exists: true
    name: "Legacy:Monster"
  - ns: 100
    exists: true
    name: "Legacy:ScriptedPawn"
  - ns: 100
    exists: true
    name: "Legacy:UT"
  - ns: 100
    exists: true
    name: "Legacy:A UT2004 Monster Tutorial"
  - ns: 100
    exists: true
    name: "Legacy:Bot Pathing"
  - ns: 100
    exists: true
    name: "Legacy:Testing Botplay"
  - ns: 100
    exists: true
    name: "Legacy:Bot Support"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Ucs File"
  - ns: 100
    exists: true
    name: "Legacy:SpawnPoint"
  - ns: 100
    exists: true
    name: "Legacy:Mesh Browser"
  - ns: 100
    exists: true
    name: "Legacy:Bot Support (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Pawn (UT)/AI Functions"
  - ns: 100
    exists: true
    name: "Legacy:HomeBase"
  - ns: 100
    exists: true
    name: "Legacy:CreatureFactory"
  - ns: 100
    exists: true
    name: "Legacy:AIScript"
  - ns: 100
    exists: true
    name: "Legacy:ThingFactory"
  - ns: 100
    exists: true
    name: "Legacy:AmbushPoint"
  - ns: 100
    exists: true
    name: "Legacy:Bot Mind"
  - ns: 100
    exists: true
    name: "Legacy:NPC Support"
  - ns: 100
    exists: true
    name: "Legacy:AlarmPoint"
  - ns: 100
    exists: true
    name: "Legacy:Monster Support"
  - ns: 100
    exists: true
    name: "Legacy:AI Scripting Reference"
  templates: []
  images: []
  externallinks:
  - "http://unreal.epicgames.com/AI.htm"
  - "http://www.langsuyar.com/articles/u2_tutorialsmain.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "Prerequisites"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 223
    anchor: "Prerequisites"
  - toclevel: 1
    level: "2"
    line: "Overview"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 619
    anchor: "Overview"
  - toclevel: 1
    level: "2"
    line: "Tutorial"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 1030
    anchor: "Tutorial"
  - toclevel: 2
    level: "3"
    line: "Setting Up"
    number: "3.1"
    index: "4"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 1375
    anchor: "Setting_Up"
  - toclevel: 3
    level: "4"
    line: "Classes Used"
    number: "3.1.1"
    index: "5"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 1505
    anchor: "Classes_Used"
  - toclevel: 2
    level: "3"
    line: "Retreating"
    number: "3.2"
    index: "6"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 1786
    anchor: "Retreating"
  - toclevel: 2
    level: "3"
    line: "Alarm"
    number: "3.3"
    index: "7"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 2815
    anchor: "Alarm"
  - toclevel: 2
    level: "3"
    line: "Waiting"
    number: "3.4"
    index: "8"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 5596
    anchor: "Waiting"
  - toclevel: 2
    level: "3"
    line: "Ambushing"
    number: "3.5"
    index: "9"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 6098
    anchor: "Ambushing"
  - toclevel: 2
    level: "3"
    line: "Patroling"
    number: "3.6"
    index: "10"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 7474
    anchor: "Patroling"
  - toclevel: 2
    level: "3"
    line: "Guarding"
    number: "3.7"
    index: "11"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 10378
    anchor: "Guarding"
  - toclevel: 2
    level: "3"
    line: "PawnSpecific Orders"
    number: "3.8"
    index: "12"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 11077
    anchor: "PawnSpecific_Orders"
  - toclevel: 2
    level: "3"
    line: "CreatureFactory and SpawnPoints"
    number: "3.9"
    index: "13"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 11253
    anchor: "CreatureFactory_and_SpawnPoints"
  - toclevel: 1
    level: "2"
    line: "External Links"
    number: "4"
    index: "14"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 14796
    anchor: "External_Links"
  - toclevel: 2
    level: "3"
    line: "Steve Polge's Docs"
    number: "4.1"
    index: "15"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 14816
    anchor: "Steve_Polge.27s_Docs"
  - toclevel: 2
    level: "3"
    line: "Matthias Worch's Tutorials"
    number: "4.2"
    index: "16"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 14954
    anchor: "Matthias_Worch.27s_Tutorials"
  - toclevel: 1
    level: "2"
    line: "Related Topics"
    number: "5"
    index: "17"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 15342
    anchor: "Related_Topics"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "6"
    index: "18"
    fromtitle: "Legacy:Basic_ScriptedPawn_Tutorial"
    byteoffset: 15790
    anchor: "Discussion"
  displaytitle: "Legacy:Basic ScriptedPawn Tutorial"
  iwlinks: []
  wikitext:
    text: "This is a tutorial that sets up a UT NPC (Monster) via [[Legacy:ScriptedPawn|ScriptedPawn]].\n\
      \nFor a tutorial on using UT2004 [[Legacy:Monster|Monster]]s, see [[Legacy:A\
      \ UT2004 Monster Tutorial|A UT2004 Monster Tutorial]].\n\n==Prerequisites==\n\
      \nYou should already be familiar with [[Legacy:Bot Pathing|Bot Pathing]], [[Legacy:Testing\
      \ Botplay|Testing Botplay]] and [[Legacy:Bot Mind|Bot Mind]].  Although we're\
      \ not dealing with bots, creatures use the same bot path network and perform\
      \ many similar actions in navigation.  You should also be familiar with the\
      \ properties available on [[Legacy:ScriptedPawn|ScriptedPawn]].\n\n==Overview==\n\
      \n\"Scripting\" [[Legacy:Pawn (UT)|Pawn (UT)]]s was a common practice for mappers\
      \ in [[Legacy:UT|UT]].  Whether scripting advanced bot support or setting up\
      \ monsters to patrol the level, the native AI of the UT Pawns was used in conjuction\
      \ with [[Legacy:AIScript|AIScript]]s to create relatively realistic behavior.\n\
      \nThis tutorial will show how to implement UT creatures, subclasses of ScriptedPawn.\n\
      \n==Tutorial==\n\nThis is a general tutorial and guide designed to demonstrate\
      \ the implementation of several different creatures set to perform several different\
      \ tasks.  After completing this tutorial, you should have a good idea how these\
      \ AI functions work and be able to experiment combining them in different ways,\
      \ with different settings, etc.\n\n===Setting Up===\n\nYou should start with\
      \ a bot pathed map that is working properly.  See also [[Legacy:Bot Pathing|Bot\
      \ Pathing]].\n\n====Classes Used====\n* [[Legacy:ScriptedPawn|ScriptedPawn]]\n\
      * [[Legacy:HomeBase|HomeBase]]\n* [[Legacy:AlarmPoint|AlarmPoint]]\n* [[Legacy:AmbushPoint|AmbushPoint]]\n\
      * [[Legacy:PatrolPoint|PatrolPoint]]\n* [[Legacy:CreatureFactory|CreatureFactory]]\n\
      * [[Legacy:SpawnPoint|SpawnPoint]]\n\n===Retreating===\n\nThis is an automatic\
      \ function rather than an explicit Order.  The creature can be made to retreat\
      \ to a specific spot if hurt or otherwise frightened.\n# Place a creature in\
      \ the map and enter a unique Tag that will be used to associate this creature\
      \ with a HomeBase.\n# Place a HomeBase somewhere in the map.  This will the\
      \ place the creature will retreat to.  Likely places to retreat to include out\
      \ of the way places, spots \"deeper\" into the map's layout or objective sequence,\
      \ or where other creatures can be found to help this creature in combat.\n#\
      \ Enter the Tag of the HomeBase to match the creature's Tag.\n# Decide an appropriate\
      \ Extend to set for the HomeBase.  This is the radius (in UU) that the creature's\
      \ \"home\" extends from the HomeBase actor.  Note that the creature will only\
      \ consider themselves at \"home\" if they are within the Extend and have a line\
      \ of sight to the HomeBase.\n# Decide an appropriate LookDir for the HomeBase.\
      \  This is the direction the creature will face once they are at \"home.\"\n\
      \n===Alarm===\n\nAlthough this is not an explicit Order, Alarm functions can\
      \ direct a creature to perform complex tasks when an enemy player is first seen.\
      \  In practical terms, the creature will attempt to perform these tasks at all\
      \ cost.  After the task is complete, the creature will attack the enemy, if\
      \ still available.  After combat, the creature will return to a RestFormation\
      \ or resume it's normal Orders.\n# Place a creature in the map and enter a unique\
      \ AlarmTag that will be used to associate this creature with it's AlarmPoint.\n\
      # Place an AlarmPoint in a spot that will represent a destination for the task\
      \ the creature is to perform once \"alarmed\".  This could be a spot near other\
      \ creatures to help in combat, it could be an actual alarm trigger (a switch\
      \ the creature activates to set off an audible alarm sound), or it could be\
      \ a better tactical position to attack from.  While the specific tasks the creature\
      \ is to perform can vary, the main idea is that it will travel to this AlarmPoint\
      \ once \"alarmed\".\n# You may add additional AlarmPoints as long as they all\
      \ have a unique Tag.  Place as many additional AlarmPoints as you like.  These\
      \ will make the creature travel from the first AlarmPoint to the next in a series\
      \ until the last AlarmPoint is reached.\n# Enter the Tag of the next AlarmPoint\
      \ in the NextAlarm property of this AlarmPoint.  Move on to the next AlarmPoint\
      \ in the series and continue to enter the NextAlarm property until all are properly\
      \ associated.\n# Decide if the creature should perform a specific animation\
      \ sequence when this AlarmPoint is reached.  If so, enter the name of the animation\
      \ sequence in the AlarmAnim property of the AlarmPoint.  A list of animation\
      \ sequece names can be found in the [[Legacy:Mesh Browser|Mesh Browser]].  Note\
      \ that animation sequences are specific to the creature used.\n# Decide if the\
      \ creature should play a specific sound while at this AlarmPoint.  Enter the\
      \ sound in the AlarmSound property of the AlarmPoint.\n# If no AlarmAnim is\
      \ used, decide if the creature should pause and play default waiting animations\
      \ when this AlarmPoint is reached.  Enter the time to pause (in seconds) in\
      \ the PauseTime property on the AlarmPoint.\n# The creature can be made to shoot\
      \ at any actor when this AlarmPoint is reached.  Enter the Tag of the actor\
      \ in the ShootTarget property on this AlarmPoint.\n\nNote: The AlarmPoint actor\
      \ has many other properties with which to adjust the creature's behavior.  In\
      \ conjunction with other AlarmPoints, Triggers, etc., the creature can be made\
      \ to perform complex behavior once a player enemy is detected.  See also [[Legacy:AlarmPoint|AlarmPoint]].\
      \ ''(See also Steve Polge's guide linked to at the bottom of this page.  Some\
      \ properties on the AlarmPoint page here on the wiki are suspect.)''\n\n===Waiting===\n\
      \nThis is the default Order.  The creature will wait near its location, sometimes\
      \ randomly wandering, until a player enemy is seen to attack.  After combat,\
      \ the creature will return to a waiting state.\n# Place a creature in the map\
      \ and enter \"Waiting\" in the Orders property, if it isn't already set.\n#\
      \ That's it.  You may want to rotate the creature to face a particular direction\
      \ at match start, but after a short while, it will wander and change it's location\
      \ and rotation on its own.\n\n===Ambushing===\n\nThe creature will find a place\
      \ to wait in ambush for a player to attack.  Once combat is over, the creature\
      \ will find another spot to ambush from and again wait for a player to attack.\n\
      # Place a creature in the map and enter \"Ambushing\" in the Orders property.\n\
      # Enter a unique OrderTag that will be used to associate this creature with\
      \ it's AmbushPoints.\n# Place AmbushPoints in the map at places where the creature\
      \ can reach, can watch out for players, and hopefully can attack from with some\
      \ element of suprise.  A ledge, a side passage or a hole are likely places to\
      \ Ambush from.  Place as many as you like.\n# Enter the Tag of these AmbushPoints\
      \ to match your creature's OrderTag.  This will associate the creature to these\
      \ AmbushPoints.\n# Decide whether to set bFixedStart to true on the creature\
      \ or not.  If true, the creature will always start the match at the placed position\
      \ and travel to a random AmbushPoint to ambush players.  If false, the creature\
      \ will be teleported to a random AmbushPoint at match start.\n# Decide whether\
      \ to set bSniping to true on the various AmbushPoints.  If true, the creature\
      \ will likely snipe from that position when it sees a player to attack.\n# Adjust\
      \ the SightRadius on the various AmbushPoints, if necessary.  This is the radius\
      \ (in UU) that will be used by the creature when it is waiting to ambush at\
      \ this point.\n\n===Patroling===\n\nThe creature will move from spot to spot\
      \ in a patrol route until a player enemy is seen to attack.  After combat, the\
      \ creature will return to the patrol route and continue to patrol.\n# Place\
      \ a creature in your map and enter \"Patroling\" in the Orders property.\n#\
      \ Enter a unique OrderTag that will be used to match this creature with a starting\
      \ PatrolPoint. ''(suggested name, \"Patrol1\")''\n# Place a series of PatrolPoints\
      \ in the map to define the patroling route for this creature.  The creature\
      \ will follow the normal path network to get from PatrolPoint to PatrolPoint,\
      \ so you do not need to define each corner.  Instead, find places that might\
      \ be good to have this creature pause while patroling.  A room, a lookout, a\
      \ switchback or dead end are likely places to place PatrolPoints.  Place as\
      \ many as you like.\n# Enter the Tag of the first PatrolPoint to match the creature's\
      \ OrderTag.  This will associate the creature with this patrol route and further\
      \ associate this PatrolPoint as the creature's start.\n# Enter the NextPatrol\
      \ property of this PatrolPoint to match the Tag of the next PatrolPoint in the\
      \ series along this patrol route.  Enter the Tag of the next PatrolPoint to\
      \ match.\n# Repeat 4-5 until the patrol route is defined.  Match the NextPatrol\
      \ property of the last PatrolPoint with the Tag of the first PatrolPoint in\
      \ the route to complete the loop.\n# Decide whether to set bFixedStart to true\
      \ on the creature.  If true, the creature will always start the match at the\
      \ placed position and travel to the starting PatrolPoint.  If false, the creature\
      \ will be teleported to the starting PatrolPoint at match start.\n# Decide whether\
      \ to set bDelayedPatrol to true on the creature.  If true, the creature will\
      \ wait at the placed location until it is triggered before it will travel to\
      \ the first PatrolPoint and begin the patrol.\n# Decide whether the creature\
      \ should perform a specific animation sequence while at this PatrolPoint.  The\
      \ creature can be made to play an animation, pause using standard waiting animations\
      \ or neither and simply move on to the next PatrolPoint.  If a specific animation\
      \ sequence is desired, enter the name of the sequence in the PatrolAnim property\
      \ of the PatrolPoint.  A list of animation sequences can be found in the [[Legacy:Mesh\
      \ Browser|Mesh Browser]].  Note that animation sequences are specific to the\
      \ creature used.\n# If an animation sequence is used, the creature can be made\
      \ to loop the animation sequence a number of times.  Enter the desired number\
      \ of sequence loops in the NumAnims property of the PatrolPoint.\n# Decide whether\
      \ the creature should play a specific sound while performing an animation sequence\
      \ at this PatrolPoint.  Enter the sound in the PatrolSound property of the PatrolPoint.\n\
      # If no PatrolAnim is defined but a pause is desired, enter the number of seconds\
      \ to pause in the PauseTime properties of the PatrolPoint.\n\n===Guarding===\n\
      \nThe creature will guard an item.  It will stay at its placed location until\
      \ an enemy player is seen, when it will challenge the player to combat.  After\
      \ combat, the creature will return to the placed location and continue to guard\
      \ the item.  If the item is touched, the creature will consider the \"toucher\"\
      \ an enemy.\n# Place a creature in the map and set its Order property to \"\
      Guarding\".  It's a good idea to place the creature near the item to be guarded,\
      \ or at least within a line of sight to that item or the area surrounding the\
      \ item.\n# Enter a unique Tag on the item that will associate it with the creature\
      \ guarding it.  Match the creature's OrderTag to the Tag of the item.\n\n===PawnSpecific\
      \ Orders===\n\nSome individual creatures have unique Orders or functions.  See\
      \ also the [[Legacy:ScriptedPawn|ScriptedPawn]] subclasses for the various creatures.\n\
      \n===CreatureFactory and SpawnPoints===\n\nCreatureFactory is a subclass of\
      \ [[Legacy:ThingFactory|ThingFactory]].  SpawnPoints are associated to factories\
      \ to provide a suitable place to spawn an actor.  CreatureFactories are specifically\
      \ designed to spawn creatures in-game and give appropriate settings to various\
      \ properties.\n# Place a CreatureFactory in the map.  Thing and CreatureFactories\
      \ can either be triggered externally or activated via Touch, just like a Trigger.\
      \  For this tutorial, place the CreatureFactory in a spot where a player is\
      \ likely to walk by.  We will set this CreatureFactory to spawn the creature\
      \ when touched.\n# Place a SpawnPoint somewhere in the map that will allow access\
      \ to the bot path network and give enough space for the creature to be spawned.\
      \  Also rotate the SpawnPoint to a good orientation for the creature to be spawned.\n\
      # Enter a unique Tag on the SpawnPoint that will associate it with the CreatureFactory.\
      \  Match the CreatureFactory's Tag to the SpawnPoint Tag.\n# Place as many additional\
      \ SpawnPoints as you like, up to a total of 16.  Make sure their Tags all match\
      \ the Tag of the CreatureFactory.  Spawned creatures will appear randomly at\
      \ one of these SpawnPoints.\n# Set the ThingFactory->Prototype property on the\
      \ CreatureFactory to the desired creature to spawn.\n# Set the ThingFactory->MaxItems\
      \ property on the CreatureFactory to the maximum number of creatures this factory\
      \ will allow in game at one time.\n# Set the ThingFactory->Capacity property\
      \ on the CreatureFactory to the maximum number of total creatures to spawn.\
      \  After this number is reached, the factory will shut down.  A value of -1\
      \ here indicates the factory should never shut down.\n# Set the ThingFactory->Interval\
      \ property to the (average) number of seconds to wait before this factory is\
      \ ready to spawn the next creature.  Note that spawning several creature with\
      \ an interval of zero will likely cause a \"hiccup\", where the engine stalls\
      \ momentarily while spawning.  Set the interval to something small instead,\
      \ like 0.1\n# Set the ThingFactory->bOnlyPlayerTouched property on the CreatureFactory\
      \ to true.  For this tutorial, we want the player to trigger the factory when\
      \ it touches it, but we don't want other creatures to trigger it.  If true,\
      \ only player pawns are able to activate this factory.\n# Decide if the ThingFactory->bCovert\
      \ property on the CreatureFactory should be set to false.  It is set to true\
      \ by default.  If true, the creature will only be spawned if a player is unable\
      \ to see it spawned, otherwise the factory will wait.  If your SpawnPoint is\
      \ in plain sight but you'd like creatures to spawn at it even if a player sees\
      \ the creature appear from (seemingly) nowhere, this could be set to false.\n\
      # Decide if the ThingFactory->bStoppable property on the CreatureFactory should\
      \ be set to true.  If true, the factory will spawn creatures if Touched (or\
      \ triggered) and will stop spawning creatures when it is unTouched.\n# Set the\
      \ CreatureFactory->Orders, OrderTag and AlarmTag properties on the CreatureFactory\
      \ to those desired property settings for the spawned creatures.\n# If the game\
      \ is set to CoOp mode, decide if extra creatures should be spawned from this\
      \ factory.  Enter the number of extra creatures to spawn in the AddedCoopCapacity\
      \ property on the CreatureFactory.\n\nNOTE: Creatures spawned from a given SpawnPoint\
      \ will have their Event set to match the Tag of the CreatureFactory (and the\
      \ SpawnPoint).  That way, once the creature is killed, it will automatically\
      \ trigger a new creature to be spawned.\n\n==External Links==\n\n===Steve Polge's\
      \ Docs===\n* [http://unreal.epicgames.com/AI.htm Unreal Creature Care and Feeding\
      \ Guide] &ndash; The definitive reference.\n\n===Matthias Worch's Tutorials===\n\
      \nMatthias Worch, who worked on the Unreal 2 team, has written a couple of tutorials\
      \ that are highly useful. He's even provided a small demo level.\n\n'''Set up\
      \ dialog and AI scripting for a level''' and '''Create a basic AI script'''\
      \ are the articles of interest here.\n* [http://www.langsuyar.com/articles/u2_tutorialsmain.html\
      \ Worch's Unreal 2 Tutorials]\n\n==Related Topics==\n* [[Legacy:Artificial Intelligence|Artificial\
      \ Intelligence]]\n** [[Legacy:Bot Support|Bot Support]]\n*** [[Legacy:Bot Support\
      \ (UT)|Bot Support (UT)]]\n** [[Legacy:Monster Support|Monster Support]]\n**\
      \ [[Legacy:NPC Support|NPC Support]]\n* [[Legacy:Pawn (UT)/AI Functions|Pawn\
      \ (UT)/AI Functions]]\n* [[Legacy:AIScript|AIScript]]\n* [[Legacy:AI Scripting\
      \ Reference|AI Scripting Reference]]\n* [[Legacy:Ucs File|Ucs File]] (U2 only)\
      \ ''?''\n\n==Discussion==\n\n'''SuperApe:''' This tutorial needs to be written.\
      \  The external links above might be used to help write an original tutorial.\
      \  This tutorial should at least cover Patroling and Ambushing.\n\n'''SuperApe:'''\
      \ I've been working with the original ScriptedPawn code from UT.  I believe\
      \ I know how all this works, but I don't have UT.  If no one writes this soon,\
      \ I will probably take a crack at it, based on what I'm seeing in the code.\n\
      \n'''SuperApe:''' Although I do not have UT, I am now familiar with the code\
      \ that these AI systems ran on, having looked at the code for ScriptedPawn.\
      \  I am writing this tutorial with the stipulation that it may not be complete\
      \ or completely accurrate.  However, it should be close at the very least.\n\
      \n'''SuperApe:''' Finished the tutorial.  Let me know if there are any problems.\n\
      \n[[Category:Legacy Mapping|{{PAGENAME}}]]\n[[Category:Legacy Tutorial|{{PAGENAME}}]]"
  properties: []
  revId: 1950
name: "Legacy:Basic ScriptedPawn Tutorial"
revision:
  revid: 1950
  parentid: 1951
  user: "SuperApe"
  timestamp: 1166891513.000000000
  comment: "*"
timestamp: 1668766787.060907000
