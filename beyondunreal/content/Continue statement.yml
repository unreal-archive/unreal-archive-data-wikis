---
parse:
  title: "Continue statement"
  text:
    text: "<p>The <b>continue</b> statement can be used in <a href=\"/Do\" title=\"\
      Do\" class=\"mw-redirect\">do</a>, <a href=\"/While\" title=\"While\" class=\"\
      mw-redirect\">while</a>, <a href=\"/For\" title=\"For\" class=\"mw-redirect\"\
      >for</a> and <a href=\"/Foreach\" title=\"Foreach\" class=\"mw-redirect\">foreach</a>\
      \ loops to skip to the end of the current iteration step and reevaluate the\
      \ loop condition to check if another iteration should be started. The <b>for</b>\
      \ and <b>foreach</b> loops evaluate their update step first.</p>\n<p><b>Continue</b>\
      \ is usually used to skip the rest of an iteration step if certain preconditions\
      \ for the code are no longer met. Note that it is always possible to wrap the\
      \ code in an <a href=\"/If\" title=\"If\" class=\"mw-redirect\">if</a> block\
      \ instead, but sometimes a simple <b>if</b>...<b>continue</b> statement combination\
      \ is much more elegant and expresses the problem more logically.</p>\n<h2><span\
      \ class=\"mw-headline\" id=\"Syntax\">Syntax</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Continue_statement?section=1\"\
      \ title=\"Edit section: Syntax\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Nothing special here:</p>\n<pre><b>continue;</b>\n\
      </pre>\n<p>Just the keyword \"continue\" followed by the standard semicolon\
      \ to terminate the statement.</p>\n<h2><span class=\"mw-headline\" id=\"Examples\"\
      >Examples</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Continue_statement?section=2\" title=\"Edit section:\
      \ Examples\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>Let's say, you want to perform a certain operation for all NavigationPoint\
      \ actors, but PlayerStarts also receive some kind of additional treatment. Without\
      \ the <b>continue</b> statement you'd probably write:</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">local</span> <span class=\"kw9\">NavigationPoint</span>\
      \ NP;\n \n<span class=\"coMULTI\">/*\nUE1/2 code here!\nFor UE3 you'd use:\n\
      foreach WorldInfo.AllNavigationPoints(class'NavigationPoint', NP)\n*/</span>\n\
      <span class=\"kw2\">for</span> <span class=\"br0\">(</span>NP <span class=\"\
      sy0\">=</span> <span class=\"kw7\">Level</span>.<span class=\"me0\">NavigationPointList</span>;\
      \ NP <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>; NP <span\
      \ class=\"sy0\">=</span> NP.<span class=\"me0\">NextNavigationPoint</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n  <span class=\"co1\"\
      >// generic code for all navpoints here</span>\n \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw9\">PlayerStart</span><span class=\"\
      br0\">(</span>NP<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span> <span class=\"br0\"\
      >{</span>\n    <span class=\"co1\">// specific code for PlayerStarts here</span>\n\
      \  <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>Using the <b>continue</b> statement you could reduce the number of\
      \ nested blocks a bit:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>NP <span class=\"sy0\">=</span>\
      \ <span class=\"kw7\">Level</span>.<span class=\"me0\">NavigationPointList</span>;\
      \ NP <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span>; NP <span\
      \ class=\"sy0\">=</span> NP.<span class=\"me0\">NextNavigationPoint</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n  <span class=\"co1\"\
      >// generic code for all navpoints here</span>\n \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw9\">PlayerStart</span><span class=\"\
      br0\">(</span>NP<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span>\n    <span class=\"\
      kw2\">continue</span>;\n \n  <span class=\"co1\">// specific code for PlayerStarts\
      \ here</span>\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>The resulting\
      \ behavior is the same as in the previous example without <b>continue</b>. Note\
      \ the reversed <b>if</b> condition!</p>\n<p>It really depends on the situation\
      \ whether to use the <b>continue</b> statement in a simple <b>if</b> or an <b>if</b>\
      \ block. Don't just use either of them, just because they work. Think about\
      \ which one makes more sense when trying to understand what the code does.</p>\n\
      <table class=\"navbox nowraplinks\" style=\"\">\n<tr class=\"navbox-header\"\
      >\n<th colspan=\"2\" class=\"navbox-header\" style=\"\">\n<div style=\"position:relative;\
      \ width:100%; white-space:nowrap;\">\n<div class=\"noprint plainlinks\" style=\"\
      background-color:transparent; padding:0; font-weight:normal; font-size:xx-small;\
      \ white-space:nowrap; position:absolute;left:0.5em;\"><a href=\"/Template:Navbox_unrealscript\"\
      \ title=\"Template:Navbox unrealscript\"><span title=\"View this template\"\
      >v</span></a>&#160;•&#160;<a href=\"/Template_talk:Navbox_unrealscript\" title=\"\
      Template talk:Navbox unrealscript\"><span title=\"Discussion about this template\"\
      >d</span></a>&#160;•&#160;<a rel=\"nofollow\" class=\"external text\" href=\"\
      https://wiki.beyondunreal.com/edit/Template:Navbox_unrealscript\"><span title=\"\
      You can edit this template. Please use the preview button before saving.\">e</span></a></div>\n\
      <a href=\"/UnrealScript_reference\" title=\"UnrealScript reference\">UnrealScript\
      \ reference</a></div>\n</th>\n</tr>\n<tr class=\"navbox-body odd\">\n<th class=\"\
      navbox-group\" style=\"\">Declarations</th>\n<td class=\"navbox-body\" style=\"\
      \"><a href=\"/Preprocessor\" title=\"Preprocessor\">Preprocessor</a>&#160;•\
      \ <a href=\"/Classes\" title=\"Classes\">Classes</a>&#160;• <a href=\"/Interfaces\"\
      \ title=\"Interfaces\">Interfaces</a>&#160;• <a href=\"/Cpptext\" title=\"Cpptext\"\
      >Cpptext</a>&#160;• <a href=\"/Constants\" title=\"Constants\">Constants</a>&#160;•\
      \ <a href=\"/Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"\
      Structs\">Structs</a>&#160;• <a href=\"/Variables\" title=\"Variables\">Variables</a>&#160;(<a\
      \ href=\"/Metadata\" title=\"Metadata\">Metadata</a>)&#160;• <a href=\"/Replication_block\"\
      \ title=\"Replication block\">Replication block</a>&#160;• <a href=\"/Operators\"\
      \ title=\"Operators\">Operators</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\"\
      >Delegates</a>&#160;• <a href=\"/Functions\" title=\"Functions\">Functions</a>&#160;•\
      \ <a href=\"/States\" title=\"States\">States</a>&#160;• <a href=\"/Defaultproperties\"\
      \ title=\"Defaultproperties\">Defaultproperties</a>&#160;(<a href=\"/Subobjects\"\
      \ title=\"Subobjects\">Subobjects</a>)</td>\n</tr>\n<tr class=\"navbox-body\
      \ even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Types\" title=\"\
      Types\">Types</a></th>\n<td class=\"navbox-body\" style=\"\"><a href=\"/Bool\"\
      \ title=\"Bool\" class=\"mw-redirect\">bool</a>&#160;• <a href=\"/Byte\" title=\"\
      Byte\" class=\"mw-redirect\">byte</a>&#160;• <a href=\"/Float\" title=\"Float\"\
      \ class=\"mw-redirect\">float</a>&#160;• <a href=\"/Int\" title=\"Int\" class=\"\
      mw-redirect\">int</a>&#160;• <a href=\"/Name\" title=\"Name\" class=\"mw-redirect\"\
      >name</a>&#160;• <a href=\"/String\" title=\"String\">string</a>&#160;• <a href=\"\
      /Types#Reference_types\" title=\"Types\">Object</a>&#160;• <a href=\"/Class_limiter#Class\"\
      \ title=\"Class limiter\" class=\"mw-redirect\">Class</a>&#160;• <a href=\"\
      /Enums\" title=\"Enums\">Enums</a>&#160;• <a href=\"/Structs\" title=\"Structs\"\
      >Structs</a>&#160;(<a href=\"/Vector\" title=\"Vector\">Vector</a>&#160;⋅ <a\
      \ href=\"/Rotator\" title=\"Rotator\">Rotator</a>&#160;⋅ <a href=\"/Quat\" title=\"\
      Quat\" class=\"mw-redirect\">Quat</a>&#160;⋅ <a href=\"/Color\" title=\"Color\"\
      >Color</a>)&#160;• <a href=\"/Static_arrays\" title=\"Static arrays\">Static\
      \ arrays</a>&#160;• <a href=\"/Dynamic_arrays\" title=\"Dynamic arrays\">Dynamic\
      \ arrays</a>&#160;• <a href=\"/Delegates\" title=\"Delegates\">Delegates</a>&#160;•\
      \ <a href=\"/Typecasting\" title=\"Typecasting\">Typecasting</a></td>\n</tr>\n\
      <tr class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"><a href=\"\
      /Literals\" title=\"Literals\">Literals</a></th>\n<td class=\"navbox-body\"\
      \ style=\"\"><a href=\"/Literals#Boolean_values\" title=\"Literals\">Boolean</a>&#160;•\
      \ <a href=\"/Literals#Float_numbers\" title=\"Literals\">Float</a>&#160;• <a\
      \ href=\"/Literals#Integer_numbers\" title=\"Literals\">Integer</a>&#160;• <a\
      \ href=\"/Literals#Names\" title=\"Literals\">Names</a>&#160;• <a href=\"/Literals#Objects\"\
      \ title=\"Literals\">Objects</a> (<a href=\"/None\" title=\"None\" class=\"\
      mw-redirect\">None</a>&#160;⋅ <a href=\"/Self\" title=\"Self\" class=\"mw-redirect\"\
      >Self</a>)&#160;• <a href=\"/Literals#Vectors\" title=\"Literals\">Vectors</a>&#160;•\
      \ <a href=\"/Literals#Rotators\" title=\"Literals\">Rotators</a>&#160;• <a href=\"\
      /Literals#Strings\" title=\"Literals\">Strings</a></td>\n</tr>\n<tr class=\"\
      navbox-body even\">\n<th class=\"navbox-group\" style=\"\"><a href=\"/Flow_control\"\
      \ title=\"Flow control\">Flow</a></th>\n<td class=\"navbox-body\" style=\"\"\
      ><a href=\"/GoTo_statement\" title=\"GoTo statement\">GoTo</a>&#160;• <a href=\"\
      /If_statement\" title=\"If statement\">If</a>&#160;• <a href=\"/Assert_statement\"\
      \ title=\"Assert statement\">Assert</a>&#160;• <a href=\"/Return_statement\"\
      \ title=\"Return statement\">Return</a>&#160;• <a href=\"/Stop_statement\" title=\"\
      Stop statement\">Stop</a>&#160;• <a href=\"/Switch_statement\" title=\"Switch\
      \ statement\">Switch</a>&#160;• <a href=\"/While_loop\" title=\"While loop\"\
      >While</a>&#160;• <a href=\"/Do...Until_loop\" title=\"Do...Until loop\">Do...Until</a>&#160;•\
      \ <a href=\"/For_loop\" title=\"For loop\">For</a>&#160;• <a href=\"/ForEach_loop\"\
      \ title=\"ForEach loop\">ForEach</a>&#160;• <a href=\"/Break_statement\" title=\"\
      Break statement\">Break</a>&#160;• <strong class=\"selflink\">Continue</strong></td>\n\
      </tr>\n<tr class=\"navbox-body odd\">\n<th class=\"navbox-group\" style=\"\"\
      ><a href=\"/Specifiers\" title=\"Specifiers\">Specifiers</a></th>\n<td class=\"\
      navbox-body\" style=\"\"><a href=\"/Function_call_specifiers#Super\" title=\"\
      Function call specifiers\">Super</a>&#160;• <a href=\"/Function_call_specifiers#Global\"\
      \ title=\"Function call specifiers\">Global</a>&#160;• <a href=\"/Functions#Syntax_3\"\
      \ title=\"Functions\">Static</a>&#160;• <a href=\"/Variables#Accessing_variables\"\
      \ title=\"Variables\">Default</a>&#160;• <a href=\"/Constants#Usage\" title=\"\
      Constants\">Const</a></td>\n</tr>\n<tr class=\"navbox-body even\">\n<th class=\"\
      navbox-group\" style=\"\"><a href=\"/UnrealScript\" title=\"UnrealScript\">UnrealScript</a></th>\n\
      <td class=\"navbox-body\" style=\"\"><a href=\"/UnrealScript_syntax\" title=\"\
      UnrealScript syntax\">Syntax</a>&#160;• <a href=\"/UC_File\" title=\"UC File\"\
      >.UC</a>&#160;• <a href=\"/edit/UCI_File?redlink=1\" class=\"new\" title=\"\
      UCI File (page does not exist)\">.UCI</a>&#160;• <a href=\"/UPKG_File\" title=\"\
      UPKG File\">.UPKG</a>&#160;• <a href=\"/Comments\" title=\"Comments\">Comments</a>&#160;•\
      \ <a href=\"/Compiler_directives\" title=\"Compiler directives\">#directives</a>&#160;•\
      \ <a href=\"/edit/Native_coding?redlink=1\" class=\"new\" title=\"Native coding\
      \ (page does not exist)\">Native</a></td>\n</tr>\n</table>\n\n<!-- \nNewPP limit\
      \ report\nCPU time usage: 0.130 seconds\nReal time usage: 0.133 seconds\nPreprocessor\
      \ visited node count: 175/1000000\nPreprocessor generated node count: 913/1000000\n\
      Post‐expand include size: 10654/2097152 bytes\nTemplate argument size: 4195/2097152\
      \ bytes\nHighest expansion depth: 5/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \   28.018      1 - -total\n100.00%   28.018      1 - Template:Navbox_unrealscript\n\
      \ 73.38%   20.559      1 - Template:Navbox\n 12.83%    3.594      1 - Template:Tnavbar\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:23821-0!*!0!!*!*!*\
      \ and timestamp 20221117233308 and revision id 33162\n -->\n"
  categories:
  - sortkey: "Continue statement"
    name: "UnrealScript_reference"
  links:
  - ns: 0
    exists: true
    name: "Compiler directives"
  - ns: 0
    exists: true
    name: "Cpptext"
  - ns: 0
    exists: true
    name: "ForEach loop"
  - ns: 0
    exists: true
    name: "Function call specifiers"
  - ns: 0
    exists: true
    name: "Preprocessor"
  - ns: 0
    exists: true
    name: "Structs"
  - ns: 0
    exists: true
    name: "While loop"
  - ns: 11
    exists: true
    name: "Template talk:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "For"
  - ns: 0
    exists: true
    name: "Replication block"
  - ns: 0
    exists: true
    name: "Quat"
  - ns: 0
    exists: true
    name: "Operators"
  - ns: 0
    exists: false
    name: "Native coding"
  - ns: 0
    exists: true
    name: "Foreach"
  - ns: 0
    exists: true
    name: "Do...Until loop"
  - ns: 0
    exists: true
    name: "Return statement"
  - ns: 0
    exists: true
    name: "Typecasting"
  - ns: 0
    exists: true
    name: "Constants"
  - ns: 0
    exists: true
    name: "If statement"
  - ns: 0
    exists: true
    name: "Comments"
  - ns: 0
    exists: false
    name: "UCI File"
  - ns: 0
    exists: true
    name: "States"
  - ns: 0
    exists: true
    name: "Interfaces"
  - ns: 0
    exists: true
    name: "Name"
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 0
    exists: true
    name: "Literals"
  - ns: 0
    exists: true
    name: "Dynamic arrays"
  - ns: 0
    exists: true
    name: "Self"
  - ns: 0
    exists: true
    name: "Static arrays"
  - ns: 0
    exists: true
    name: "For loop"
  - ns: 0
    exists: true
    name: "Bool"
  - ns: 0
    exists: true
    name: "Rotator"
  - ns: 0
    exists: true
    name: "Functions"
  - ns: 0
    exists: true
    name: "None"
  - ns: 0
    exists: true
    name: "Variables"
  - ns: 0
    exists: true
    name: "While"
  - ns: 0
    exists: true
    name: "Delegates"
  - ns: 0
    exists: true
    name: "Int"
  - ns: 0
    exists: true
    name: "GoTo statement"
  - ns: 0
    exists: true
    name: "Float"
  - ns: 0
    exists: true
    name: "UPKG File"
  - ns: 0
    exists: true
    name: "Switch statement"
  - ns: 0
    exists: true
    name: "Specifiers"
  - ns: 0
    exists: true
    name: "Enums"
  - ns: 0
    exists: true
    name: "Types"
  - ns: 0
    exists: true
    name: "UnrealScript"
  - ns: 0
    exists: true
    name: "UC File"
  - ns: 0
    exists: true
    name: "Assert statement"
  - ns: 0
    exists: true
    name: "String"
  - ns: 0
    exists: true
    name: "UnrealScript reference"
  - ns: 0
    exists: true
    name: "Class limiter"
  - ns: 0
    exists: true
    name: "Classes"
  - ns: 0
    exists: true
    name: "Stop statement"
  - ns: 0
    exists: true
    name: "Flow control"
  - ns: 0
    exists: true
    name: "Defaultproperties"
  - ns: 0
    exists: true
    name: "Color"
  - ns: 0
    exists: true
    name: "Metadata"
  - ns: 0
    exists: true
    name: "Subobjects"
  - ns: 0
    exists: true
    name: "Break statement"
  - ns: 0
    exists: true
    name: "Byte"
  - ns: 0
    exists: true
    name: "UnrealScript syntax"
  - ns: 0
    exists: true
    name: "Do"
  - ns: 0
    exists: true
    name: "Vector"
  - ns: 0
    exists: true
    name: "If"
  templates:
  - ns: 10
    exists: true
    name: "Template:Navbox unrealscript"
  - ns: 10
    exists: true
    name: "Template:Tnavbar"
  - ns: 10
    exists: true
    name: "Template:Navbox"
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Syntax"
    number: "1"
    index: "1"
    fromtitle: "Continue_statement"
    byteoffset: 636
    anchor: "Syntax"
  - toclevel: 1
    level: "2"
    line: "Examples"
    number: "2"
    index: "2"
    fromtitle: "Continue_statement"
    byteoffset: 778
    anchor: "Examples"
  displaytitle: "Continue statement"
  iwlinks: []
  wikitext:
    text: "The '''continue''' statement can be used in [[do]], [[while]], [[for]]\
      \ and [[foreach]] loops to skip to the end of the current iteration step and\
      \ reevaluate the loop condition to check if another iteration should be started.\
      \ The '''for''' and '''foreach''' loops evaluate their update step first.\n\n\
      '''Continue''' is usually used to skip the rest of an iteration step if certain\
      \ preconditions for the code are no longer met. Note that it is always possible\
      \ to wrap the code in an [[if]] block instead, but sometimes a simple '''if'''...'''continue'''\
      \ statement combination is much more elegant and expresses the problem more\
      \ logically.\n\n==Syntax==\nNothing special here:\n '''continue;'''\nJust the\
      \ keyword \"continue\" followed by the standard semicolon to terminate the statement.\n\
      \n==Examples==\nLet's say, you want to perform a certain operation for all NavigationPoint\
      \ actors, but PlayerStarts also receive some kind of additional treatment. Without\
      \ the '''continue''' statement you'd probably write:\n<uscript>\nlocal NavigationPoint\
      \ NP;\n\n/*\nUE1/2 code here!\nFor UE3 you'd use:\nforeach WorldInfo.AllNavigationPoints(class'NavigationPoint',\
      \ NP)\n*/\nfor (NP = Level.NavigationPointList; NP != None; NP = NP.NextNavigationPoint)\
      \ {\n  // generic code for all navpoints here\n\n  if (PlayerStart(NP) != None)\
      \ {\n    // specific code for PlayerStarts here\n  }\n}\n</uscript>\nUsing the\
      \ '''continue''' statement you could reduce the number of nested blocks a bit:\n\
      <uscript>\nfor (NP = Level.NavigationPointList; NP != None; NP = NP.NextNavigationPoint)\
      \ {\n  // generic code for all navpoints here\n\n  if (PlayerStart(NP) == None)\n\
      \    continue;\n\n  // specific code for PlayerStarts here\n}\n</uscript>\n\
      The resulting behavior is the same as in the previous example without '''continue'''.\
      \ Note the reversed '''if''' condition!\n\nIt really depends on the situation\
      \ whether to use the '''continue''' statement in a simple '''if''' or an '''if'''\
      \ block. Don't just use either of them, just because they work. Think about\
      \ which one makes more sense when trying to understand what the code does.\n\
      \n{{navbox unrealscript}}"
  properties: []
  revId: 33162
name: "Continue statement"
revision:
  revid: 33162
  parentid: 0
  user: "Wormbo"
  timestamp: 1224925593.000000000
  comment: "New page: The '''continue''' statement can be used in [[do]], [[while]],\
    \ [[for]] and [[foreach]] loops to skip to the end of the current iteration step\
    \ and reevaluate the loop condition to check if ..."
timestamp: 1668754889.988155000
