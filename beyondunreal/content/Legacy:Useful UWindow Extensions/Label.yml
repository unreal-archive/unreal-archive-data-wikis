---
parse:
  title: "Legacy:Useful UWindow Extensions/Label"
  text:
    text: "<h2><span class=\"mw-headline\" id=\"Auto-Sizing_Checkbox\">Auto-Sizing\
      \ Checkbox</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Useful_UWindow_Extensions/Label?section=1\"\
      \ title=\"Edit section: Auto-Sizing Checkbox\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Labels (<a href=\"/Legacy:UMenuLabelControl\" title=\"\
      Legacy:UMenuLabelControl\">UMenuLabelControl</a>) consists of a caption only.</p>\n\
      <p>Auto-sizing changes the width of the control without changing the location\
      \ of the label.</p>\n<p>With this piece of code you can make sure that Your\
      \ labels do not use up more space than actually needed: to avoid oversized controls\
      \ to cover other controls.</p>\n<p>The width of the control (that You give at\
      \ creation) is ingored in case the text is aligned to the left.</p>\n<p>Here\
      \ is the code:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      kw1\">class</span> UMenuLabelControlAuto <span class=\"kw1\">extends</span>\
      \ UMenuLabelControl;\n \n<span class=\"kw1\">var</span> <span class=\"kw5\"\
      >bool</span> bAutoSize; <span class=\"co1\">// adjust the size of the control\
      \ to its Text's size</span>\n \n<span class=\"kw1\">function</span> BeforePaint<span\
      \ class=\"br0\">(</span><span class=\"kw8\">Canvas</span> C, <span class=\"\
      kw5\">float</span> X, <span class=\"kw5\">float</span> Y<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> W, H;\n\t<span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">BeforePaint</span><span class=\"br0\">(</span>C, X, Y<span class=\"\
      br0\">)</span>;\n \n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>bAutoSize<span\
      \ class=\"br0\">)</span> <span class=\"co1\">// Run autosize code</span>\n \
      \   <span class=\"br0\">{</span>\n        <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>Text<span class=\"sy0\">==</span><span class=\"st0\"\
      >\"\"</span><span class=\"br0\">)</span>\n        <span class=\"br0\">{</span>\n\
      \            W<span class=\"sy0\">=</span><span class=\"nu0\">0</span>;\n  \
      \          H<span class=\"sy0\">=</span><span class=\"nu0\">0</span>;\n\t\t\t\
      WinWidth<span class=\"sy0\">=</span>W;\n\t\t\tWinHeight<span class=\"sy0\">=</span>H;\n\
      \        <span class=\"br0\">}</span>\n\t\t<span class=\"kw2\">else</span>\n\
      \t\t<span class=\"br0\">{</span>\n\t\t\tTextSize<span class=\"br0\">(</span>C,\
      \ Text, W, H<span class=\"br0\">)</span>;\n\t\t\tWinHeight <span class=\"sy0\"\
      >=</span> H<span class=\"sy0\">+</span><span class=\"nu0\">1</span>;\n\t\t\t\
      TextY <span class=\"sy0\">=</span> <span class=\"br0\">(</span>WinHeight <span\
      \ class=\"sy0\">-</span> H<span class=\"br0\">)</span> <span class=\"sy0\">/</span>\
      \ <span class=\"nu0\">2</span>;\n\t\t\t<span class=\"kw2\">switch</span> <span\
      \ class=\"br0\">(</span>Align<span class=\"br0\">)</span>\n\t\t\t<span class=\"\
      br0\">{</span>\n\t\t\t\t<span class=\"kw2\">case</span> TA_Left:\n\t\t\t\t\t\
      WinWidth<span class=\"sy0\">=</span>W<span class=\"sy0\">+</span><span class=\"\
      nu0\">1</span>;\n\t\t\t\t\t<span class=\"kw2\">break</span>;\n\t\t\t\t<span\
      \ class=\"kw2\">case</span> TA_Center:\n\t\t\t\t\tWinLeft<span class=\"sy0\"\
      >+=</span><span class=\"br0\">(</span>WinWidth<span class=\"sy0\">-</span>W<span\
      \ class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span>;\n\
      \t\t\t\t\tWinWidth<span class=\"sy0\">=</span>W;\n\t\t\t\t\tTextX<span class=\"\
      sy0\">=</span><span class=\"nu0\">0</span>;\n\t\t\t\t\t<span class=\"kw2\">break</span>;\n\
      \t\t\t\t<span class=\"kw2\">case</span> TA_Right:\n\t\t\t\t\tWinLeft<span class=\"\
      sy0\">+=</span>WinWidth<span class=\"sy0\">-</span>W;\n\t\t\t\t\tWinWidth<span\
      \ class=\"sy0\">=</span>W;\n\t\t\t\t\tTextX<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">0</span>;\n\t\t\t\t\t<span class=\"kw2\">break</span>;\n\t\t\
      \t<span class=\"br0\">}</span>\n\t\t<span class=\"br0\">}</span>\t\n\t<span\
      \ class=\"br0\">}</span>\n\t<span class=\"kw2\">else</span> <span class=\"co1\"\
      >// Run original UT code</span>\n\t<span class=\"br0\">{</span>\n\t\tTextSize<span\
      \ class=\"br0\">(</span>C, Text, W, H<span class=\"br0\">)</span>;\n\t\tWinHeight\
      \ <span class=\"sy0\">=</span> H<span class=\"sy0\">+</span><span class=\"nu0\"\
      >1</span>;\n\t\tTextY <span class=\"sy0\">=</span> <span class=\"br0\">(</span>WinHeight\
      \ <span class=\"sy0\">-</span> H<span class=\"br0\">)</span> <span class=\"\
      sy0\">/</span> <span class=\"nu0\">2</span>;\n\t\t<span class=\"kw2\">switch</span>\
      \ <span class=\"br0\">(</span>Align<span class=\"br0\">)</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t\t<span class=\"kw2\">case</span> TA_Left:\n\t\t\t\t<span\
      \ class=\"kw2\">break</span>;\n\t\t\t<span class=\"kw2\">case</span> TA_Center:\n\
      \t\t\t\tTextX <span class=\"sy0\">=</span> <span class=\"br0\">(</span>WinWidth\
      \ <span class=\"sy0\">-</span> W<span class=\"br0\">)</span><span class=\"sy0\"\
      >/</span><span class=\"nu0\">2</span>;\n\t\t\t\t<span class=\"kw2\">break</span>;\n\
      \t\t\t<span class=\"kw2\">case</span> TA_Right:\n\t\t\t\tTextX <span class=\"\
      sy0\">=</span> WinWidth <span class=\"sy0\">-</span> W;\n\t\t\t\t<span class=\"\
      kw2\">break</span>;\n\t\t<span class=\"br0\">}</span>\t\n\t<span class=\"br0\"\
      >}</span>\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n\tbAutoSize<span class=\"sy0\">=</span><span class=\"\
      kw6\">false</span>;\n<span class=\"br0\">}</span></pre></div>\n</div>\n<p>And\
      \ here is how you include it in Your source:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\">\t<span class=\"kw5\">int</span> XCoord, YCoord, Width;\n\
      \t<span class=\"kw1\">var</span> UMenuLabelControlAuto Label;\n\t<span class=\"\
      kw1\">var</span> <span class=\"kw1\">localized</span> <span class=\"kw5\">string</span>\
      \ LabelText;\n \n\t<span class=\"co1\">// Some code here that fills in the XCoord,\
      \ YCoord, Width and</span>\n\t<span class=\"co1\">// LabelText values.</span>\n\
      \ \n\tLabel<span class=\"sy0\">=</span>UMenuLabelControlAuto<span class=\"br0\"\
      >(</span>CreateControl<span class=\"br0\">(</span><span class=\"kw1\">class</span><span\
      \ class=\"st0\">'UMenuLabelControlAuto'</span>, XCoord, YCoord, Width, <span\
      \ class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \tLabel.<span class=\"me0\">bAutoSize</span><span class=\"sy0\">=</span><span\
      \ class=\"kw6\">true</span>;\n\tLabel.<span class=\"me0\">Align</span><span\
      \ class=\"sy0\">=</span>TA_Center;\n\tLabel.<span class=\"me0\">SetText</span><span\
      \ class=\"br0\">(</span>LabelText<span class=\"br0\">)</span>;</pre></div>\n\
      </div>\n<hr />\n<p><b>Csimbi:</b> Added clarification on width</p>\n\n<!-- \n\
      NewPP limit report\nCPU time usage: 0.049 seconds\nReal time usage: 0.103 seconds\n\
      Preprocessor visited node count: 8/1000000\nPreprocessor generated node count:\
      \ 48/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate argument size:\
      \ 0/2097152 bytes\nHighest expansion depth: 2/40\nExpensive parser function\
      \ count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:3329-0!*!0!*!*!*!* and timestamp 20221117225307 and revision\
      \ id 8602\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:UMenuLabelControl"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Auto-Sizing Checkbox"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Useful_UWindow_Extensions/Label"
    byteoffset: 0
    anchor: "Auto-Sizing_Checkbox"
  displaytitle: "Legacy:Useful UWindow Extensions/Label"
  iwlinks: []
  wikitext:
    text: "==Auto-Sizing Checkbox ==\n\nLabels ([[Legacy:UMenuLabelControl|UMenuLabelControl]])\
      \ consists of a caption only.\n\nAuto-sizing changes the width of the control\
      \ without changing the location of the label.\n\nWith this piece of code you\
      \ can make sure that Your labels do not use up more space than actually needed:\
      \ to avoid oversized controls to cover other controls.\n\nThe width of the control\
      \ (that You give at creation) is ingored in case the text is aligned to the\
      \ left.\n\nHere is the code:\n\n<uscript>\nclass UMenuLabelControlAuto extends\
      \ UMenuLabelControl;\n\nvar bool bAutoSize; // adjust the size of the control\
      \ to its Text's size\n\nfunction BeforePaint(Canvas C, float X, float Y)\n{\n\
      \tlocal float W, H;\n\tSuper.BeforePaint(C, X, Y);\n\t\n    if (bAutoSize) //\
      \ Run autosize code\n    {\n        if (Text==\"\")\n        {\n           \
      \ W=0;\n            H=0;\n\t\t\tWinWidth=W;\n\t\t\tWinHeight=H;\n        }\n\
      \t\telse\n\t\t{\n\t\t\tTextSize(C, Text, W, H);\n\t\t\tWinHeight = H+1;\n\t\t\
      \tTextY = (WinHeight - H) / 2;\n\t\t\tswitch (Align)\n\t\t\t{\n\t\t\t\tcase\
      \ TA_Left:\n\t\t\t\t\tWinWidth=W+1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TA_Center:\n\
      \t\t\t\t\tWinLeft+=(WinWidth-W)/2;\n\t\t\t\t\tWinWidth=W;\n\t\t\t\t\tTextX=0;\n\
      \t\t\t\t\tbreak;\n\t\t\t\tcase TA_Right:\n\t\t\t\t\tWinLeft+=WinWidth-W;\n\t\
      \t\t\t\tWinWidth=W;\n\t\t\t\t\tTextX=0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\n\
      \t}\n\telse // Run original UT code\n\t{\n\t\tTextSize(C, Text, W, H);\n\t\t\
      WinHeight = H+1;\n\t\tTextY = (WinHeight - H) / 2;\n\t\tswitch (Align)\n\t\t\
      {\n\t\t\tcase TA_Left:\n\t\t\t\tbreak;\n\t\t\tcase TA_Center:\n\t\t\t\tTextX\
      \ = (WinWidth - W)/2;\n\t\t\t\tbreak;\n\t\t\tcase TA_Right:\n\t\t\t\tTextX =\
      \ WinWidth - W;\n\t\t\t\tbreak;\n\t\t}\t\n\t}\n}\n\ndefaultproperties\n{\n\t\
      bAutoSize=false;\n}\n</uscript>\n\nAnd here is how you include it in Your source:\n\
      \n<uscript>\n\tint XCoord, YCoord, Width;\n\tvar UMenuLabelControlAuto Label;\n\
      \tvar localized string LabelText;\n\n\t// Some code here that fills in the XCoord,\
      \ YCoord, Width and\n\t// LabelText values.\n\n\tLabel=UMenuLabelControlAuto(CreateControl(class'UMenuLabelControlAuto',\
      \ XCoord, YCoord, Width, 1));\n\tLabel.bAutoSize=true;\n\tLabel.Align=TA_Center;\n\
      \tLabel.SetText(LabelText);\n</uscript>\n\n----\n\n'''Csimbi:''' Added clarification\
      \ on width"
  properties: []
  revId: 8602
name: "Legacy:Useful UWindow Extensions/Label"
revision:
  revid: 8602
  parentid: 8603
  user: "Esprx01x.nokia.com"
  timestamp: 1070964739.000000000
  comment: "*"
timestamp: 1668787102.978039000
