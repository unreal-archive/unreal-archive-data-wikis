---
parse:
  title: "Legacy:Useful UWindow Extensions/Scrolling Credits"
  text:
    text: "<div class=\"floatright\"><a href=\"/File:Legacy_uwindow-scrollingcredits.gif\"\
      \ class=\"image\"><img alt=\"Legacy uwindow-scrollingcredits.gif\" src=\"/w/images/Legacy_uwindow-scrollingcredits.gif\"\
      \ width=\"360\" height=\"220\" /></a></div>\n<p>The <b>Scrolling Credits</b>\
      \ UWindow widget displays your mod credits in a fashion similar to movie credits.\
      \ You can include text (formatted on a per-line basis) and texture images in\
      \ your credits.</p>\n<p>Users can click the scrolling text to temporarily halt\
      \ it and drag it to manually move it up and down. The control supports clickable\
      \ links.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Interface\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Interface</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"\
      #Methods\"><span class=\"tocnumber\">1.1</span> <span class=\"toctext\">Methods</span></a></li>\n\
      <li class=\"toclevel-2 tocsection-3\"><a href=\"#Properties\"><span class=\"\
      tocnumber\">1.2</span> <span class=\"toctext\">Properties</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-4\"><a href=\"#Code\"><span\
      \ class=\"tocnumber\">2</span> <span class=\"toctext\">Code</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Interface\">Interface</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_UWindow_Extensions/Scrolling_Credits?section=1\"\
      \ title=\"Edit section: Interface\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Methods\">Methods</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_UWindow_Extensions/Scrolling_Credits?section=2\"\
      \ title=\"Edit section: Methods\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>All AddSomething methods return whether the line or\
      \ padding was successfully added or not. The latter can happen if the Lines\
      \ array isn't large enough; simply change its size in its declaration.</p>\n\
      <dl>\n<dt>bool AddLineText(string Text, optional byte Font, optional Color Color,\
      \ optional bool Underline)&#160;</dt>\n<dd>Adds a line of text to the credits,\
      \ optionally specifying font, color and underlining. If no color is given, the\
      \ value of ColorDefault is used (at rendering time, so changes of ColorDefault\
      \ after AddLineText are effective).</dd>\n</dl>\n<dl>\n<dt>bool AddLineUrl(string\
      \ Url, optional byte Font, optional string Text)&#160;</dt>\n<dd>Adds a line\
      \ of text that is displayed as an underlined clickable link, using the color\
      \ specified in the ColorLink property. The optional Text argument is displayed\
      \ as the link's title if specified; otherwise the given URL is displayed itself.\
      \ URLs starting with <code>www.</code>, <code>ftp.</code> and <code>unreal://</code>\
      \ are specifically supported, everything else is directly piped through to the\
      \ <code>start</code> console command.</dd>\n</dl>\n<dl>\n<dt>bool AddLineImage(Texture\
      \ Image, optional int Width, optional int Height)&#160;</dt>\n<dd>Adds a texture\
      \ image to the credits in a separate line. Optionally, the size of the displayed\
      \ texture can be specified; otherwise its natural size is used.</dd>\n</dl>\n\
      <dl>\n<dt>bool AddPadding(int Padding)&#160;</dt>\n<dd>Adds a padding of the\
      \ given amount of pixels between the last added line and the next one.</dd>\n\
      </dl>\n<dl>\n<dt>Clear()&#160;</dt>\n<dd>Clears the credit lines.</dd>\n</dl>\n\
      <dl>\n<dt>Reset()&#160;</dt>\n<dd>Restarts the animation from before the fade-in.</dd>\n\
      </dl>\n<h3><span class=\"mw-headline\" id=\"Properties\">Properties</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Useful_UWindow_Extensions/Scrolling_Credits?section=3\"\
      \ title=\"Edit section: Properties\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>You can set the following properties:</p>\n<dl>\n\
      <dt>ColorDefault, ColorImage, ColorLink&#160;</dt>\n<dd>Colors for default text,\
      \ images (if set to anything else than the default, colorizes the textures that\
      \ are drawn) and link text.</dd>\n</dl>\n<dl>\n<dt>DelayFade, SpeedFade&#160;</dt>\n\
      <dd>Delay before the text is faded in, and the speed of the fade-in (number\
      \ of seconds it takes to complete). If SpeedFade is set to 0.0 (zero), the fade-in\
      \ sequence is skipped.</dd>\n</dl>\n<dl>\n<dt>DelayScroll, SpeedScroll&#160;</dt>\n\
      <dd>Delay after the fade-in and before the scrolling starts, and the scroll\
      \ speed (in pixels per second).</dd>\n</dl>\n<h2><span class=\"mw-headline\"\
      \ id=\"Code\">Code</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Useful_UWindow_Extensions/Scrolling_Credits?section=4\"\
      \ title=\"Edit section: Code\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>The following code was developed by <a href=\"/Legacy:Mychaeel\"\
      \ title=\"Legacy:Mychaeel\">Mychaeel</a> for <a href=\"/Legacy:Jailbreak\" title=\"\
      Legacy:Jailbreak\">Jailbreak</a>. Feel free to use and modify, and please give\
      \ me some credit [sic!] if you do.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// UWindowCreditsControl</span>\n<span class=\"co1\">//\
      \ Copyright 2002 by Mychaeel &lt;mychaeel@planetjailbreak.com&gt;</span>\n<span\
      \ class=\"co1\">// Free for noncommercial use and modification.</span>\n<span\
      \ class=\"co1\">//</span>\n<span class=\"co1\">// Displays scrolling credits,\
      \ both text and textures.</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n \n<span class=\"kw1\">class</span> UWindowCreditsControl <span class=\"\
      kw1\">extends</span> UWindowDialogControl;\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Structures</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">struct</span> TLine <span class=\"br0\">{</span>\n \n\
      \  <span class=\"kw1\">var</span> <span class=\"kw5\">string</span> Text;\n\
      \  <span class=\"kw1\">var</span> <span class=\"kw5\">string</span> Url;\n \
      \ <span class=\"kw1\">var</span> <span class=\"kw5\">byte</span> Font;\n  <span\
      \ class=\"kw1\">var</span> <span class=\"kw5\">Color</span> <span class=\"kw5\"\
      >Color</span>;\n  <span class=\"kw1\">var</span> <span class=\"kw5\">bool</span>\
      \ Underline;\n \n  <span class=\"kw1\">var</span> <span class=\"kw5\">Texture</span>\
      \ Image;\n  <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> Width;\n\
      \  <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> Height;\n \n\
      \  <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> Indent;\n \
      \ <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> Padding;\n \
      \ <span class=\"br0\">}</span>;\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Enumerations</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">enum</span> EAction <span class=\"br0\">{</span>\n \n\
      \  Action_None,\n  Action_Fading,\n  Action_Scrolling,\n  <span class=\"br0\"\
      >}</span>;\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Properties</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"\
      br0\">)</span> <span class=\"kw5\">Color</span> ColorDefault;\n<span class=\"\
      kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span\
      \ class=\"kw5\">Color</span> ColorImage;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">Color</span>\
      \ ColorLink;\n \n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">int</span> OffsetStart;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span> DelayFade;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw5\">float</span>\
      \ DelayScroll;\n<span class=\"kw1\">var</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">float</span> SpeedFade;\n<span\
      \ class=\"kw1\">var</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\
      \ <span class=\"kw5\">float</span> SpeedScroll;\n<span class=\"kw1\">var</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> TLine Lines<span class=\"\
      br0\">[</span><span class=\"nu0\">64</span><span class=\"br0\">]</span>;\n \n\
      \ \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Variables</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">var</span> EAction Action;\n<span class=\"kw1\">var</span>\
      \ EAction ActionPrev;\n \n<span class=\"kw1\">var</span> <span class=\"kw5\"\
      >bool</span> FlagDrag;\n<span class=\"kw1\">var</span> <span class=\"kw5\">bool</span>\
      \ FlagUpdated;\n \n<span class=\"kw1\">var</span> <span class=\"kw5\">float</span>\
      \ Delay;\n<span class=\"kw1\">var</span> <span class=\"kw5\">float</span> Fade;\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">float</span> Offset;\n<span\
      \ class=\"kw1\">var</span> <span class=\"kw5\">float</span> OffsetDrag;\n \n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> CountLines;\n\
      <span class=\"kw1\">var</span> <span class=\"kw5\">int</span> HeightTotal;\n\
      \ \n<span class=\"kw1\">var</span> <span class=\"kw5\">string</span> TextUrlCurrent;\n\
      \ \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// AddLineText</span>\n<span class=\"co1\">//</span>\n<span\
      \ class=\"co1\">// Adds a line of text.</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span> AddLineText<span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span> Text, <span class=\"\
      kw1\">optional</span> <span class=\"kw5\">byte</span> Font,\n              \
      \                         <span class=\"kw1\">optional</span> <span class=\"\
      kw5\">Color</span> <span class=\"kw5\">Color</span>,\n                     \
      \                  <span class=\"kw1\">optional</span> <span class=\"kw5\">bool</span>\
      \ Underline<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n \n  <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>CountLines <span class=\"\
      sy0\">==</span> ArrayCount<span class=\"br0\">(</span>Lines<span class=\"br0\"\
      >)</span> <span class=\"sy0\">||</span> <span class=\"kw3\">Len</span><span\
      \ class=\"br0\">(</span>Text<span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n \n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Text</span>      <span class=\"sy0\">=</span> Text;\n  Lines<span class=\"\
      br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"me0\">Url</span>\
      \       <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span>;\n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Font</span>      <span class=\"sy0\">=</span> Font;\n  Lines<span class=\"\
      br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"kw5\">Color</span>\
      \     <span class=\"sy0\">=</span> <span class=\"kw5\">Color</span>;\n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Underline</span> <span class=\"sy0\">=</span> Underline;\n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Padding</span>   <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\
      \ \n  Lines<span class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Image</span> <span class=\"sy0\">=</span> <span class=\"kw5\"\
      >None</span>;\n \n  CountLines<span class=\"sy0\">++</span>;\n  FlagUpdated\
      \ <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n \n  <span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">true</span>;\n  <span class=\"\
      br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// AddLineUrl</span>\n<span class=\"co1\">//</span>\n<span\
      \ class=\"co1\">// Adds a clickable Internet address.</span>\n<span class=\"\
      co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span> AddLineUrl<span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span> Url, <span class=\"\
      kw1\">optional</span> <span class=\"kw5\">byte</span> Font,\n              \
      \                       <span class=\"kw1\">optional</span> <span class=\"kw5\"\
      >string</span> Text<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \ \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>CountLines <span\
      \ class=\"sy0\">==</span> ArrayCount<span class=\"br0\">(</span>Lines<span class=\"\
      br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw3\">Len</span><span\
      \ class=\"br0\">(</span>Url<span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n    <span\
      \ class=\"kw2\">return</span> <span class=\"kw6\">false</span>;\n \n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Url</span>       <span class=\"sy0\">=</span> Url;\n  Lines<span class=\"\
      br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"me0\">Font</span>\
      \      <span class=\"sy0\">=</span> Font;\n  Lines<span class=\"br0\">[</span>CountLines<span\
      \ class=\"br0\">]</span>.<span class=\"kw5\">Color</span>     <span class=\"\
      sy0\">=</span> ColorLink;\n  Lines<span class=\"br0\">[</span>CountLines<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Underline</span> <span class=\"\
      sy0\">=</span> <span class=\"kw6\">true</span>;\n  Lines<span class=\"br0\"\
      >[</span>CountLines<span class=\"br0\">]</span>.<span class=\"me0\">Padding</span>\
      \   <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>;\n \n  <span class=\"\
      kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">Len</span><span\
      \ class=\"br0\">(</span>Text<span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n    Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Text</span> <span class=\"sy0\">=</span> Url;\n  <span class=\"kw2\">else</span>\n\
      \    Lines<span class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Text</span> <span class=\"sy0\">=</span> Text;\n \n  Lines<span\
      \ class=\"br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"\
      me0\">Image</span> <span class=\"sy0\">=</span> <span class=\"kw5\">None</span>;\n\
      \ \n  CountLines<span class=\"sy0\">++</span>;\n  FlagUpdated <span class=\"\
      sy0\">=</span> <span class=\"kw6\">false</span>;\n \n  <span class=\"kw2\">return</span>\
      \ <span class=\"kw6\">true</span>;\n  <span class=\"br0\">}</span>\n \n \n<span\
      \ class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// AddLineImage</span>\n<span class=\"co1\">//</span>\n\
      <span class=\"co1\">// Adds an image.</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span> AddLineImage<span\
      \ class=\"br0\">(</span><span class=\"kw5\">Texture</span> Image, <span class=\"\
      kw1\">optional</span> <span class=\"kw5\">int</span> Width,\n              \
      \                            <span class=\"kw1\">optional</span> <span class=\"\
      kw5\">int</span> Height<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \ \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>CountLines <span\
      \ class=\"sy0\">==</span> ArrayCount<span class=\"br0\">(</span>Lines<span class=\"\
      br0\">)</span> <span class=\"sy0\">||</span> Image <span class=\"sy0\">==</span>\
      \ <span class=\"kw5\">None</span><span class=\"br0\">)</span>\n    <span class=\"\
      kw2\">return</span> <span class=\"kw6\">false</span>;\n \n  Lines<span class=\"\
      br0\">[</span>CountLines<span class=\"br0\">]</span>.<span class=\"me0\">Image</span>\
      \   <span class=\"sy0\">=</span> Image;\n  Lines<span class=\"br0\">[</span>CountLines<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Width</span>   <span class=\"sy0\"\
      >=</span> Width;\n  Lines<span class=\"br0\">[</span>CountLines<span class=\"\
      br0\">]</span>.<span class=\"me0\">Height</span>  <span class=\"sy0\">=</span>\
      \ Height;\n  Lines<span class=\"br0\">[</span>CountLines<span class=\"br0\"\
      >]</span>.<span class=\"me0\">Padding</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">0</span>;\n \n  Lines<span class=\"br0\">[</span>CountLines<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Text</span> <span class=\"sy0\"\
      >=</span> <span class=\"st0\">\"\"</span>;\n \n  CountLines<span class=\"sy0\"\
      >++</span>;\n  FlagUpdated <span class=\"sy0\">=</span> <span class=\"kw6\"\
      >false</span>;\n \n  <span class=\"kw2\">return</span> <span class=\"kw6\">true</span>;\n\
      \  <span class=\"br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// AddPadding</span>\n<span class=\"co1\">//</span>\n<span\
      \ class=\"co1\">// Adds padding to the last line.</span>\n<span class=\"co1\"\
      >// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span> AddPadding<span\
      \ class=\"br0\">(</span><span class=\"kw5\">int</span> Padding<span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>CountLines <span class=\"sy0\">==</span> <span\
      \ class=\"nu0\">0</span><span class=\"br0\">)</span>\n    <span class=\"kw2\"\
      >return</span> <span class=\"kw6\">false</span>;\n \n  Lines<span class=\"br0\"\
      >[</span>CountLines <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Padding</span> <span class=\"sy0\"\
      >+=</span> Padding;\n  <span class=\"br0\">}</span>\n \n \n<span class=\"co1\"\
      >// ============================================================================</span>\n\
      <span class=\"co1\">// Clear</span>\n<span class=\"co1\">//</span>\n<span class=\"\
      co1\">// Clears the credit lines.</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> Clear<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n \n  Lines<span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Text</span> <span class=\"sy0\">=</span> <span class=\"st0\"\
      >\"\"</span>;\n  Lines<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Image</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw5\">None</span>;\n \n  FlagUpdated <span class=\"\
      sy0\">=</span> <span class=\"kw6\">false</span>;\n  <span class=\"br0\">}</span>\n\
      \ \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Reset</span>\n<span class=\"co1\">//</span>\n<span class=\"\
      co1\">// Resets the scrolling area to its original position, the first line\
      \ being</span>\n<span class=\"co1\">// just below the bottom of the arena.</span>\n\
      <span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> <span class=\"kw4\">Reset</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \ \n  Offset <span class=\"sy0\">=</span> OffsetStart <span class=\"sy0\">-</span>\
      \ WinHeight;\n \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>SpeedFade\
      \ <span class=\"sy0\">==</span> <span class=\"nu0\">0.0</span><span class=\"\
      br0\">)</span>\n    Action <span class=\"sy0\">=</span> Action_Scrolling;\n\
      \  <span class=\"kw2\">else</span>\n    Action <span class=\"sy0\">=</span>\
      \ Action_Fading;\n \n  ActionPrev <span class=\"sy0\">=</span> Action_None;\n\
      \  <span class=\"br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Update</span>\n<span class=\"co1\">//</span>\n<span class=\"\
      co1\">// Calculates the total height of the credits list, retrieves element\
      \ sizes and</span>\n<span class=\"co1\">// determines element indents.</span>\n\
      <span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> Update<span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> <span class=\"kw8\">Canvas</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> IndexLine;\n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> WidthText;\n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">float</span> HeightText;\n \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>FlagUpdated<span class=\"br0\">)</span>\n    <span\
      \ class=\"kw2\">return</span>;\n \n  CountLines <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n  HeightTotal <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n \n  <span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>IndexLine <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\
      \ IndexLine <span class=\"sy0\">&lt;</span> ArrayCount<span class=\"br0\">(</span>Lines<span\
      \ class=\"br0\">)</span>; IndexLine<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Len</span><span class=\"br0\"\
      >(</span>Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Text</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">{</span>\n      <span class=\"kw8\">Canvas</span>.<span class=\"\
      me0\">Font</span> <span class=\"sy0\">=</span> Root.<span class=\"me0\">Fonts</span><span\
      \ class=\"br0\">[</span>Lines<span class=\"br0\">[</span>IndexLine<span class=\"\
      br0\">]</span>.<span class=\"me0\">Font</span><span class=\"br0\">]</span>;\n\
      \      TextSize<span class=\"br0\">(</span><span class=\"kw8\">Canvas</span>,\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Text</span>, WidthText, HeightText<span class=\"br0\">)</span>;\n\
      \ \n      Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Width</span> <span class=\"sy0\">=</span> WidthText;\n     \
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Height</span> <span class=\"sy0\">=</span> HeightText;\n   \
      \   <span class=\"br0\">}</span>\n \n    <span class=\"kw2\">else</span> <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>Lines<span class=\"br0\"\
      >[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Image</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n      <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Width</span>  <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Width</span>  <span class=\"sy0\">=</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Image</span>.<span class=\"me0\"\
      >UClamp</span>;\n      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Height</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span> Lines<span class=\"br0\">[</span>IndexLine<span class=\"\
      br0\">]</span>.<span class=\"me0\">Height</span> <span class=\"sy0\">=</span>\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Image</span>.<span class=\"me0\">VClamp</span>;\n      <span\
      \ class=\"br0\">}</span>\n \n    <span class=\"kw2\">else</span>\n      <span\
      \ class=\"kw2\">break</span>;\n \n    Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Indent</span> <span class=\"sy0\"\
      >=</span> <span class=\"br0\">(</span>WinWidth <span class=\"sy0\">-</span>\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Width</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >/</span> <span class=\"nu0\">2</span>;\n \n    CountLines<span class=\"sy0\"\
      >++</span>;\n    HeightTotal <span class=\"sy0\">+=</span> Lines<span class=\"\
      br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Height</span>\
      \ <span class=\"sy0\">+</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Padding</span>;\n    <span class=\"\
      br0\">}</span>\n \n  <span class=\"kw4\">Reset</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n \n  FlagUpdated <span class=\"sy0\">=</span> <span\
      \ class=\"kw6\">true</span>;\n  <span class=\"br0\">}</span>\n \n \n<span class=\"\
      co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// WindowShown</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> WindowShown<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw4\"\
      >Reset</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;\n \n\
      \  <span class=\"kw6\">Super</span>.<span class=\"me0\">WindowShown</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n  <span class=\"br0\"\
      >}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Tick</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">event</span> <span class=\"kw4\">Tick</span><span class=\"\
      br0\">(</span><span class=\"kw5\">float</span> TimeDelta<span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw2\">if</span> <span\
      \ class=\"br0\">(</span>Action <span class=\"sy0\">!=</span> ActionPrev<span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n    <span class=\"kw2\"\
      >switch</span> <span class=\"br0\">(</span>Action<span class=\"br0\">)</span>\
      \ <span class=\"br0\">{</span>\n      <span class=\"kw2\">case</span> Action_Fading:\
      \     Fade <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>;  Delay\
      \ <span class=\"sy0\">=</span> DelayFade;    <span class=\"kw2\">break</span>;\n\
      \      <span class=\"kw2\">case</span> Action_Scrolling:  Fade <span class=\"\
      sy0\">=</span> <span class=\"nu0\">1.0</span>;  Delay <span class=\"sy0\">=</span>\
      \ DelayScroll;  <span class=\"kw2\">break</span>;\n      <span class=\"br0\"\
      >}</span>\n \n    ActionPrev <span class=\"sy0\">=</span> Action;\n    <span\
      \ class=\"br0\">}</span>\n \n  <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Delay <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.0</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n    Delay <span class=\"\
      sy0\">=</span> <span class=\"kw3\">FMax</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">0.0</span>, Delay <span class=\"sy0\">-</span> TimeDelta<span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw2\">return</span>;\n    <span\
      \ class=\"br0\">}</span>\n \n  <span class=\"kw2\">switch</span> <span class=\"\
      br0\">(</span>Action<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n\
      \    <span class=\"kw2\">case</span> Action_Fading:\n      Fade <span class=\"\
      sy0\">=</span> <span class=\"kw3\">FMin</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">1.0</span>, Fade <span class=\"sy0\">+</span> SpeedFade <span\
      \ class=\"sy0\">*</span> TimeDelta<span class=\"br0\">)</span>;\n      <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>Fade <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">1.0</span><span class=\"br0\">)</span>\n    \
      \    Action <span class=\"sy0\">=</span> Action_Scrolling;\n      <span class=\"\
      kw2\">break</span>;\n \n    <span class=\"kw2\">case</span> Action_Scrolling:\n\
      \      <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"\
      sy0\">!</span>bMouseDown<span class=\"br0\">)</span>\n        Offset <span class=\"\
      sy0\">+=</span> SpeedScroll <span class=\"sy0\">*</span> TimeDelta;\n      <span\
      \ class=\"kw2\">break</span>;\n    <span class=\"br0\">}</span>\n  <span class=\"\
      br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Click</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> Click<span class=\"br0\">(</span><span\
      \ class=\"kw5\">float</span> X, <span class=\"kw5\">float</span> Y<span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw6\">Super</span>.<span\
      \ class=\"me0\">Click</span><span class=\"br0\">(</span>X, Y<span class=\"br0\"\
      >)</span>;\n \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Len</span><span class=\"br0\">(</span>TextUrlCurrent<span class=\"\
      br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n    <span class=\"kw2\">return</span>;\n \n  <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">Left</span><span\
      \ class=\"br0\">(</span>TextUrlCurrent, <span class=\"nu0\">4</span><span class=\"\
      br0\">)</span> ~<span class=\"sy0\">=</span> <span class=\"st0\">\"www.\"</span><span\
      \ class=\"br0\">)</span>\n    GetPlayerOwner<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>.<span class=\"kw4\">ConsoleCommand</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"start http://\"</span> <span class=\"sy0\"\
      >$</span> TextUrlCurrent<span class=\"br0\">)</span>;\n  <span class=\"kw2\"\
      >else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Left</span><span class=\"br0\">(</span>TextUrlCurrent, <span\
      \ class=\"nu0\">4</span><span class=\"br0\">)</span> ~<span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"ftp.\"</span><span class=\"br0\">)</span>\n    GetPlayerOwner<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">ConsoleCommand</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"start ftp://\"</span> <span class=\"\
      sy0\">$</span> TextUrlCurrent<span class=\"br0\">)</span>;\n  <span class=\"\
      kw2\">else</span> <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Left</span><span class=\"br0\">(</span>TextUrlCurrent, <span\
      \ class=\"nu0\">9</span><span class=\"br0\">)</span> ~<span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"unreal://\"</span><span class=\"br0\">)</span>\n   \
      \ GetPlayerOwner<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span\
      \ class=\"me0\">ClientTravel</span><span class=\"br0\">(</span>TextUrlCurrent,\
      \ TRAVEL_Absolute, <span class=\"kw6\">false</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"kw2\">else</span>\n    GetPlayerOwner<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>.<span class=\"kw4\">ConsoleCommand</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"start\"</span> <span class=\"sy0\">@</span>\
      \ TextUrlCurrent<span class=\"br0\">)</span>;\n  <span class=\"br0\">}</span>\n\
      \ \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// BeforePaint</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> BeforePaint<span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> <span class=\"kw8\">Canvas</span>, <span class=\"\
      kw5\">float</span> X, <span class=\"kw5\">float</span> Y<span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n \n  Update<span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span><span class=\"br0\">)</span>;\n \n  <span class=\"\
      kw6\">Super</span>.<span class=\"me0\">BeforePaint</span><span class=\"br0\"\
      >(</span><span class=\"kw8\">Canvas</span>, X, Y<span class=\"br0\">)</span>;\n\
      \  <span class=\"br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Paint</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">function</span> Paint<span class=\"br0\">(</span><span\
      \ class=\"kw8\">Canvas</span> <span class=\"kw8\">Canvas</span>, <span class=\"\
      kw5\">float</span> X, <span class=\"kw5\">float</span> Y<span class=\"br0\"\
      >)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> IndexLine;\n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> OffsetCurrent;\n \n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>bMouseDown<span class=\"br0\">)</span>\n    <span\
      \ class=\"kw2\">if</span> <span class=\"br0\">(</span>FlagDrag<span class=\"\
      br0\">)</span>\n      Offset <span class=\"sy0\">=</span> OffsetDrag <span class=\"\
      sy0\">-</span> Y;\n    <span class=\"kw2\">else</span>\n      OffsetDrag <span\
      \ class=\"sy0\">=</span> Offset <span class=\"sy0\">+</span> Y;\n  FlagDrag\
      \ <span class=\"sy0\">=</span> bMouseDown;\n \n  DrawStretchedTexture<span class=\"\
      br0\">(</span><span class=\"kw8\">Canvas</span>, <span class=\"nu0\">0</span>,\
      \ <span class=\"nu0\">0</span>, WinWidth, WinHeight, <span class=\"kw5\">Texture</span>\
      \ <span class=\"st0\">'UWindow.BlackTexture'</span><span class=\"br0\">)</span>;\n\
      \ \n  OffsetCurrent <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>Offset;\n\
      \ \n  <span class=\"kw2\">for</span> <span class=\"br0\">(</span>IndexLine <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">0</span>; IndexLine <span class=\"\
      sy0\">&lt;</span> CountLines; IndexLine<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>OffsetCurrent <span class=\"sy0\">+</span> Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Height</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n      <span class=\"kw2\">break</span>;\n    OffsetCurrent\
      \ <span class=\"sy0\">+=</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Height</span> <span class=\"sy0\"\
      >+</span> Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Padding</span>;\n    <span class=\"br0\">}</span>\n \n  TextUrlCurrent\
      \ <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span>;\n  <span class=\"\
      kw8\">Canvas</span>.<span class=\"me0\">bNoSmooth</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">false</span>;\n \n  <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>IndexLine <span class=\"sy0\">=</span> IndexLine;\
      \ IndexLine <span class=\"sy0\">&lt;</span> CountLines; IndexLine<span class=\"\
      sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n \
      \   <span class=\"kw2\">if</span> <span class=\"br0\">(</span>OffsetCurrent\
      \ <span class=\"sy0\">&gt;</span> WinHeight<span class=\"br0\">)</span>\n  \
      \    <span class=\"kw2\">break</span>;\n \n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span><span class=\"kw3\">Len</span><span class=\"br0\"\
      >(</span>Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Text</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span\
      \ class=\"br0\">{</span>\n      <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\"\
      >]</span>.<span class=\"kw5\">Color</span>.<span class=\"me0\">R</span> <span\
      \ class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\n\
      \          Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"kw5\">Color</span>.<span class=\"me0\">G</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\n\
      \          Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"kw5\">Color</span>.<span class=\"me0\">B</span> <span class=\"sy0\"\
      >==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n      \
      \  <span class=\"kw8\">Canvas</span>.<span class=\"me0\">DrawColor</span> <span\
      \ class=\"sy0\">=</span> ColorDefault;\n      <span class=\"kw2\">else</span>\n\
      \        <span class=\"kw8\">Canvas</span>.<span class=\"me0\">DrawColor</span>\
      \ <span class=\"sy0\">=</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"kw5\">Color</span>;\n \n      <span class=\"\
      kw8\">Canvas</span>.<span class=\"me0\">DrawColor</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw8\">Canvas</span>.<span class=\"me0\">DrawColor</span>\
      \ <span class=\"sy0\">*</span> Fade;\n      <span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">Font</span> <span class=\"sy0\">=</span> Root.<span class=\"\
      me0\">Fonts</span><span class=\"br0\">[</span>Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Font</span><span class=\"br0\"\
      >]</span>;\n      ClipText<span class=\"br0\">(</span><span class=\"kw8\">Canvas</span>,\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Indent</span>, OffsetCurrent, Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Text</span><span class=\"br0\"\
      >)</span>;\n \n      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Underline</span><span class=\"br0\">)</span>\n        DrawStretchedTexture<span\
      \ class=\"br0\">(</span><span class=\"kw8\">Canvas</span>, Lines<span class=\"\
      br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Indent</span>,\n\
      \                                     Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Height</span> <span class=\"sy0\"\
      >+</span> OffsetCurrent <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>,\n\
      \                                     Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Width</span>,\n               \
      \                      <span class=\"nu0\">1</span>,\n                     \
      \                <span class=\"kw5\">Texture</span> <span class=\"st0\">'UWindow.WhiteTexture'</span><span\
      \ class=\"br0\">)</span>;\n \n      <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span><span class=\"kw3\">Len</span><span class=\"br0\">(</span>Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Url</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span>\
      \ <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span>\n     \
      \     <span class=\"kw3\">Clamp</span><span class=\"br0\">(</span>X, Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Indent</span>, Lines<span class=\"br0\">[</span>IndexLine<span class=\"\
      br0\">]</span>.<span class=\"me0\">Indent</span> <span class=\"sy0\">+</span>\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Width</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >==</span> <span class=\"kw5\">int</span><span class=\"br0\">(</span>X<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\n          <span\
      \ class=\"kw3\">Clamp</span><span class=\"br0\">(</span>Y, OffsetCurrent, OffsetCurrent\
      \ <span class=\"sy0\">+</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Height</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">==</span> <span class=\"kw5\">int</span><span\
      \ class=\"br0\">(</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span>\n\
      \        TextUrlCurrent <span class=\"sy0\">=</span> Lines<span class=\"br0\"\
      >[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Url</span>;\n\
      \      <span class=\"br0\">}</span>\n \n    <span class=\"kw2\">else</span>\
      \ <span class=\"kw2\">if</span> <span class=\"br0\">(</span>Lines<span class=\"\
      br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Image</span>\
      \ <span class=\"sy0\">!=</span> <span class=\"kw5\">None</span><span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n      <span class=\"kw8\">Canvas</span>.<span\
      \ class=\"me0\">DrawColor</span> <span class=\"sy0\">=</span> ColorImage <span\
      \ class=\"sy0\">*</span> Fade;\n      DrawStretchedTexture<span class=\"br0\"\
      >(</span><span class=\"kw8\">Canvas</span>, Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Indent</span>,\n              \
      \                     OffsetCurrent,\n                                   Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Width</span>,\n                                   Lines<span class=\"\
      br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"me0\">Height</span>,\
      \ Lines<span class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Image</span><span class=\"br0\">)</span>;\n      <span class=\"\
      br0\">}</span>\n \n    OffsetCurrent <span class=\"sy0\">+=</span> Lines<span\
      \ class=\"br0\">[</span>IndexLine<span class=\"br0\">]</span>.<span class=\"\
      me0\">Height</span> <span class=\"sy0\">+</span> Lines<span class=\"br0\">[</span>IndexLine<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Padding</span>;\n    <span class=\"\
      br0\">}</span>\n \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"kw3\">Len</span><span class=\"br0\">(</span>TextUrlCurrent<span class=\"\
      br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">)</span>\n    Cursor <span class=\"sy0\">=</span> Root.<span\
      \ class=\"me0\">NormalCursor</span>;\n  <span class=\"kw2\">else</span>\n  \
      \  Cursor <span class=\"sy0\">=</span> Root.<span class=\"me0\">HandCursor</span>;\n\
      \ \n  <span class=\"kw2\">if</span> <span class=\"br0\">(</span>OffsetCurrent\
      \ <span class=\"sy0\">+</span> Lines<span class=\"br0\">[</span>IndexLine <span\
      \ class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span\
      \ class=\"me0\">Height</span> <span class=\"sy0\">&lt;=</span> <span class=\"\
      nu0\">0</span><span class=\"br0\">)</span>\n    <span class=\"kw4\">Reset</span><span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>;\n  <span class=\"br0\"\
      >}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Color Operators</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span\
      \ class=\"kw1\">operator</span><span class=\"br0\">(</span><span class=\"nu0\"\
      >16</span><span class=\"br0\">)</span> <span class=\"kw5\">Color</span> <span\
      \ class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw5\">float</span>\
      \ Fade, <span class=\"kw5\">Color</span> <span class=\"kw5\">Color</span><span\
      \ class=\"br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw5\"\
      >Color</span>.<span class=\"me0\">R</span> <span class=\"sy0\">=</span> <span\
      \ class=\"kw5\">byte</span><span class=\"br0\">(</span><span class=\"kw3\">FClamp</span><span\
      \ class=\"br0\">(</span>Fade, <span class=\"nu0\">0.0</span>, <span class=\"\
      nu0\">1.0</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span\
      \ class=\"kw5\">float</span><span class=\"br0\">(</span><span class=\"kw5\"\
      >Color</span>.<span class=\"me0\">R</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n  <span class=\"kw5\">Color</span>.<span class=\"\
      me0\">G</span> <span class=\"sy0\">=</span> <span class=\"kw5\">byte</span><span\
      \ class=\"br0\">(</span><span class=\"kw3\">FClamp</span><span class=\"br0\"\
      >(</span>Fade, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">1.0</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw5\">float</span><span\
      \ class=\"br0\">(</span><span class=\"kw5\">Color</span>.<span class=\"me0\"\
      >G</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;\n  <span\
      \ class=\"kw5\">Color</span>.<span class=\"me0\">B</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw5\">byte</span><span class=\"br0\">(</span><span class=\"\
      kw3\">FClamp</span><span class=\"br0\">(</span>Fade, <span class=\"nu0\">0.0</span>,\
      \ <span class=\"nu0\">1.0</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">*</span> <span class=\"kw5\">float</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">Color</span>.<span class=\"me0\">B</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n \n  <span class=\"kw2\">return</span>\
      \ <span class=\"kw5\">Color</span>;\n  <span class=\"br0\">}</span>\n \n \n\
      <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">operator</span><span class=\"br0\">(</span><span class=\"nu0\">16</span><span\
      \ class=\"br0\">)</span> <span class=\"kw5\">Color</span> <span class=\"sy0\"\
      >*</span> <span class=\"br0\">(</span><span class=\"kw5\">Color</span> <span\
      \ class=\"kw5\">Color</span>, <span class=\"kw5\">float</span> Fade<span class=\"\
      br0\">)</span> <span class=\"br0\">{</span>\n \n  <span class=\"kw2\">return</span>\
      \ Fade <span class=\"sy0\">*</span> <span class=\"kw5\">Color</span>;\n  <span\
      \ class=\"br0\">}</span>\n \n \n<span class=\"co1\">// ============================================================================</span>\n\
      <span class=\"co1\">// Default Properties</span>\n<span class=\"co1\">// ============================================================================</span>\n\
      \ \n<span class=\"kw1\">defaultproperties</span> <span class=\"br0\">{</span>\n\
      \ \n  ColorDefault<span class=\"sy0\">=</span><span class=\"br0\">(</span>R<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">224</span>,G<span class=\"sy0\"\
      >=</span><span class=\"nu0\">224</span>,B<span class=\"sy0\">=</span><span class=\"\
      nu0\">224</span><span class=\"br0\">)</span>\n  ColorImage<span class=\"sy0\"\
      >=</span><span class=\"br0\">(</span>R<span class=\"sy0\">=</span><span class=\"\
      nu0\">255</span>,G<span class=\"sy0\">=</span><span class=\"nu0\">255</span>,B<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>\n\
      \  ColorLink<span class=\"sy0\">=</span><span class=\"br0\">(</span>R<span class=\"\
      sy0\">=</span><span class=\"nu0\">64</span>,G<span class=\"sy0\">=</span><span\
      \ class=\"nu0\">64</span>,B<span class=\"sy0\">=</span><span class=\"nu0\">255</span><span\
      \ class=\"br0\">)</span>\n \n  DelayFade<span class=\"sy0\">=</span><span class=\"\
      nu0\">0.5</span>\n  DelayScroll<span class=\"sy0\">=</span><span class=\"nu0\"\
      >2.0</span>\n \n  SpeedFade<span class=\"sy0\">=</span><span class=\"nu0\">1.0</span>\n\
      \  SpeedScroll<span class=\"sy0\">=</span><span class=\"nu0\">30.0</span>\n\
      \  <span class=\"br0\">}</span></pre></div>\n</div>\n\n<!-- \nNewPP limit report\n\
      CPU time usage: 0.234 seconds\nReal time usage: 0.542 seconds\nPreprocessor\
      \ visited node count: 18/1000000\nPreprocessor generated node count: 40/1000000\n\
      Post‐expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152\
      \ bytes\nHighest expansion depth: 2/40\nExpensive parser function count: 0/100\n\
      -->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00%\
      \    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:3328-0!*!0!!en!5!*\
      \ and timestamp 20221118155934 and revision id 8601\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:Mychaeel"
  - ns: 100
    exists: true
    name: "Legacy:Jailbreak"
  templates: []
  images:
  - "Legacy_uwindow-scrollingcredits.gif"
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Interface"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Useful_UWindow_Extensions/Scrolling_Credits"
    byteoffset: 396
    anchor: "Interface"
  - toclevel: 2
    level: "3"
    line: "Methods"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Useful_UWindow_Extensions/Scrolling_Credits"
    byteoffset: 412
    anchor: "Methods"
  - toclevel: 2
    level: "3"
    line: "Properties"
    number: "1.2"
    index: "3"
    fromtitle: "Legacy:Useful_UWindow_Extensions/Scrolling_Credits"
    byteoffset: 1928
    anchor: "Properties"
  - toclevel: 1
    level: "2"
    line: "Code"
    number: "2"
    index: "4"
    fromtitle: "Legacy:Useful_UWindow_Extensions/Scrolling_Credits"
    byteoffset: 2489
    anchor: "Code"
  displaytitle: "Legacy:Useful UWindow Extensions/Scrolling Credits"
  iwlinks: []
  wikitext:
    text: "[[Image:Legacy_uwindow-scrollingcredits.gif|right|]]\n\nThe '''Scrolling\
      \ Credits''' UWindow widget displays your mod credits in a fashion similar to\
      \ movie credits.  You can include text (formatted on a per-line basis) and texture\
      \ images in your credits.\n\nUsers can click the scrolling text to temporarily\
      \ halt it and drag it to manually move it up and down.  The control supports\
      \ clickable links.\n\n==Interface ==\n\n===Methods ===\n\nAll AddSomething methods\
      \ return whether the line or padding was successfully added or not.  The latter\
      \ can happen if the Lines array isn't large enough; simply change its size in\
      \ its declaration.\n\n; bool AddLineText(string Text, optional byte Font, optional\
      \ Color Color, optional bool Underline) : Adds a line of text to the credits,\
      \ optionally specifying font, color and underlining.  If no color is given,\
      \ the value of ColorDefault is used (at rendering time, so changes of ColorDefault\
      \ after AddLineText are effective).\n\n; bool AddLineUrl(string Url, optional\
      \ byte Font, optional string Text) : Adds a line of text that is displayed as\
      \ an underlined clickable link, using the color specified in the ColorLink property.\
      \  The optional Text argument is displayed as the link's title if specified;\
      \ otherwise the given URL is displayed itself.  URLs starting with <code>www.</code>,\
      \ <code>ftp.</code> and <code>unreal://</code> are specifically supported, everything\
      \ else is directly piped through to the <code>start</code> console command.\n\
      \n; bool AddLineImage(Texture Image, optional int Width, optional int Height)\
      \ : Adds a texture image to the credits in a separate line.  Optionally, the\
      \ size of the displayed texture can be specified; otherwise its natural size\
      \ is used.\n\n; bool AddPadding(int Padding) : Adds a padding of the given amount\
      \ of pixels between the last added line and the next one.\n\n; Clear() : Clears\
      \ the credit lines.\n\n; Reset() : Restarts the animation from before the fade-in.\n\
      \n===Properties ===\n\nYou can set the following properties:\n\n; ColorDefault,\
      \ ColorImage, ColorLink : Colors for default text, images (if set to anything\
      \ else than the default, colorizes the textures that are drawn) and link text.\n\
      \n; DelayFade, SpeedFade : Delay before the text is faded in, and the speed\
      \ of the fade-in (number of seconds it takes to complete).  If SpeedFade is\
      \ set to 0.0 (zero), the fade-in sequence is skipped.\n\n; DelayScroll, SpeedScroll\
      \ : Delay after the fade-in and before the scrolling starts, and the scroll\
      \ speed (in pixels per second).\n\n==Code ==\n\nThe following code was developed\
      \ by [[Legacy:Mychaeel|Mychaeel]] for [[Legacy:Jailbreak|Jailbreak]].  Feel\
      \ free to use and modify, and please give me some credit  [sic!] if you do.\n\
      \n<uscript>\n// ============================================================================\n\
      // UWindowCreditsControl\n// Copyright 2002 by Mychaeel <mychaeel@planetjailbreak.com>\n\
      // Free for noncommercial use and modification.\n//\n// Displays scrolling credits,\
      \ both text and textures.\n// ============================================================================\n\
      \n\nclass UWindowCreditsControl extends UWindowDialogControl;\n\n\n// ============================================================================\n\
      // Structures\n// ============================================================================\n\
      \nstruct TLine {\n\n  var string Text;\n  var string Url;\n  var byte Font;\n\
      \  var Color Color;\n  var bool Underline;\n\n  var Texture Image;\n  var int\
      \ Width;\n  var int Height;\n  \n  var int Indent;\n  var int Padding;\n  };\n\
      \n\n// ============================================================================\n\
      // Enumerations\n// ============================================================================\n\
      \nenum EAction {\n\n  Action_None,\n  Action_Fading,\n  Action_Scrolling,\n\
      \  };\n\n\n// ============================================================================\n\
      // Properties\n// ============================================================================\n\
      \nvar() Color ColorDefault;\nvar() Color ColorImage;\nvar() Color ColorLink;\n\
      \nvar() int OffsetStart;\nvar() float DelayFade;\nvar() float DelayScroll;\n\
      var() float SpeedFade;\nvar() float SpeedScroll;\nvar() TLine Lines[64];\n\n\
      \n// ============================================================================\n\
      // Variables\n// ============================================================================\n\
      \nvar EAction Action;\nvar EAction ActionPrev;\n\nvar bool FlagDrag;\nvar bool\
      \ FlagUpdated;\n\nvar float Delay;\nvar float Fade;\nvar float Offset;\nvar\
      \ float OffsetDrag;\n\nvar int CountLines;\nvar int HeightTotal;\n\nvar string\
      \ TextUrlCurrent;\n\n\n// ============================================================================\n\
      // AddLineText\n//\n// Adds a line of text.\n// ============================================================================\n\
      \nfunction bool AddLineText(string Text, optional byte Font,\n             \
      \                          optional Color Color,\n                         \
      \              optional bool Underline) {\n\n  if (CountLines == ArrayCount(Lines)\
      \ || Len(Text) == 0)\n    return false;\n\n  Lines[CountLines].Text      = Text;\n\
      \  Lines[CountLines].Url       = \"\";\n  Lines[CountLines].Font      = Font;\n\
      \  Lines[CountLines].Color     = Color;\n  Lines[CountLines].Underline = Underline;\n\
      \  Lines[CountLines].Padding   = 0;\n\n  Lines[CountLines].Image = None;\n\n\
      \  CountLines++;\n  FlagUpdated = false;\n  \n  return true;\n  }\n\n\n// ============================================================================\n\
      // AddLineUrl\n//\n// Adds a clickable Internet address.\n// ============================================================================\n\
      \nfunction bool AddLineUrl(string Url, optional byte Font,\n               \
      \                      optional string Text) {\n\n  if (CountLines == ArrayCount(Lines)\
      \ || Len(Url) == 0)\n    return false;\n\n  Lines[CountLines].Url       = Url;\n\
      \  Lines[CountLines].Font      = Font;\n  Lines[CountLines].Color     = ColorLink;\n\
      \  Lines[CountLines].Underline = true;\n  Lines[CountLines].Padding   = 2;\n\
      \n  if (Len(Text) == 0)\n    Lines[CountLines].Text = Url;\n  else\n    Lines[CountLines].Text\
      \ = Text;\n\n  Lines[CountLines].Image = None;\n\n  CountLines++;\n  FlagUpdated\
      \ = false;\n  \n  return true;\n  }\n\n\n// ============================================================================\n\
      // AddLineImage\n//\n// Adds an image.\n// ============================================================================\n\
      \nfunction bool AddLineImage(Texture Image, optional int Width,\n          \
      \                                optional int Height) {\n\n  if (CountLines\
      \ == ArrayCount(Lines) || Image == None)\n    return false;\n\n  Lines[CountLines].Image\
      \   = Image;\n  Lines[CountLines].Width   = Width;\n  Lines[CountLines].Height\
      \  = Height;\n  Lines[CountLines].Padding = 0;\n\n  Lines[CountLines].Text =\
      \ \"\";\n\n  CountLines++;\n  FlagUpdated = false;\n  \n  return true;\n  }\n\
      \n\n// ============================================================================\n\
      // AddPadding\n//\n// Adds padding to the last line.\n// ============================================================================\n\
      \nfunction bool AddPadding(int Padding) {\n\n  if (CountLines == 0)\n    return\
      \ false;\n  \n  Lines[CountLines - 1].Padding += Padding;\n  }\n\n\n// ============================================================================\n\
      // Clear\n//\n// Clears the credit lines.\n// ============================================================================\n\
      \nfunction Clear() {\n\n  Lines[0].Text = \"\";\n  Lines[0].Image = None;\n\
      \  \n  FlagUpdated = false;\n  }\n\n\n// ============================================================================\n\
      // Reset\n//\n// Resets the scrolling area to its original position, the first\
      \ line being\n// just below the bottom of the arena.\n// ============================================================================\n\
      \nfunction Reset() {\n\n  Offset = OffsetStart - WinHeight;\n\n  if (SpeedFade\
      \ == 0.0)\n    Action = Action_Scrolling;\n  else\n    Action = Action_Fading;\n\
      \n  ActionPrev = Action_None;\n  }\n\n\n// ============================================================================\n\
      // Update\n//\n// Calculates the total height of the credits list, retrieves\
      \ element sizes and\n// determines element indents.\n// ============================================================================\n\
      \nfunction Update(Canvas Canvas) {\n\n  local int IndexLine;\n  local float\
      \ WidthText;\n  local float HeightText;\n\n  if (FlagUpdated)\n    return;\n\
      \n  CountLines = 0;\n  HeightTotal = 0;\n\n  for (IndexLine = 0; IndexLine <\
      \ ArrayCount(Lines); IndexLine++) {\n    if (Len(Lines[IndexLine].Text) > 0)\
      \ {\n      Canvas.Font = Root.Fonts[Lines[IndexLine].Font];\n      TextSize(Canvas,\
      \ Lines[IndexLine].Text, WidthText, HeightText);\n      \n      Lines[IndexLine].Width\
      \ = WidthText;\n      Lines[IndexLine].Height = HeightText;\n      }\n    \n\
      \    else if (Lines[IndexLine].Image != None) {\n      if (Lines[IndexLine].Width\
      \  == 0) Lines[IndexLine].Width  = Lines[IndexLine].Image.UClamp;\n      if\
      \ (Lines[IndexLine].Height == 0) Lines[IndexLine].Height = Lines[IndexLine].Image.VClamp;\n\
      \      }\n\n    else\n      break;\n      \n    Lines[IndexLine].Indent = (WinWidth\
      \ - Lines[IndexLine].Width) / 2;\n\n    CountLines++;\n    HeightTotal += Lines[IndexLine].Height\
      \ + Lines[IndexLine].Padding;\n    }\n\n  Reset();\n\n  FlagUpdated = true;\n\
      \  }\n\n\n// ============================================================================\n\
      // WindowShown\n// ============================================================================\n\
      \nfunction WindowShown() {\n\n  Reset();\n\n  Super.WindowShown();\n  }\n\n\n\
      // ============================================================================\n\
      // Tick\n// ============================================================================\n\
      \nevent Tick(float TimeDelta) {\n\n  if (Action != ActionPrev) {\n    switch\
      \ (Action) {\n      case Action_Fading:     Fade = 0.0;  Delay = DelayFade;\
      \    break;\n      case Action_Scrolling:  Fade = 1.0;  Delay = DelayScroll;\
      \  break;\n      }\n\n    ActionPrev = Action;\n    }\n\n  if (Delay > 0.0)\
      \ {\n    Delay = FMax(0.0, Delay - TimeDelta);\n    return;\n    }\n\n  switch\
      \ (Action) {\n    case Action_Fading:\n      Fade = FMin(1.0, Fade + SpeedFade\
      \ * TimeDelta);\n      if (Fade == 1.0)\n        Action = Action_Scrolling;\n\
      \      break;\n    \n    case Action_Scrolling:\n      if (!bMouseDown)\n  \
      \      Offset += SpeedScroll * TimeDelta;\n      break;\n    }\n  }\n\n\n//\
      \ ============================================================================\n\
      // Click\n// ============================================================================\n\
      \nfunction Click(float X, float Y) {\n\n  Super.Click(X, Y);\n\n  if (Len(TextUrlCurrent)\
      \ == 0)\n    return;\n  \n  if (Left(TextUrlCurrent, 4) ~= \"www.\")\n    GetPlayerOwner().ConsoleCommand(\"\
      start http://\" $ TextUrlCurrent);\n  else if (Left(TextUrlCurrent, 4) ~= \"\
      ftp.\")\n    GetPlayerOwner().ConsoleCommand(\"start ftp://\" $ TextUrlCurrent);\n\
      \  else if (Left(TextUrlCurrent, 9) ~= \"unreal://\")\n    GetPlayerOwner().ClientTravel(TextUrlCurrent,\
      \ TRAVEL_Absolute, false);\n  else\n    GetPlayerOwner().ConsoleCommand(\"start\"\
      \ @ TextUrlCurrent);\n  }\n\n\n// ============================================================================\n\
      // BeforePaint\n// ============================================================================\n\
      \nfunction BeforePaint(Canvas Canvas, float X, float Y) {\n  \n  Update(Canvas);\n\
      \n  Super.BeforePaint(Canvas, X, Y);\n  }\n\n\n// ============================================================================\n\
      // Paint\n// ============================================================================\n\
      \nfunction Paint(Canvas Canvas, float X, float Y) {\n\n  local int IndexLine;\n\
      \  local int OffsetCurrent;\n\n  if (bMouseDown)\n    if (FlagDrag)\n      Offset\
      \ = OffsetDrag - Y;\n    else\n      OffsetDrag = Offset + Y;\n  FlagDrag =\
      \ bMouseDown;\n\n  DrawStretchedTexture(Canvas, 0, 0, WinWidth, WinHeight, Texture\
      \ 'UWindow.BlackTexture');\n\n  OffsetCurrent = -Offset;\n\n  for (IndexLine\
      \ = 0; IndexLine < CountLines; IndexLine++) {\n    if (OffsetCurrent + Lines[IndexLine].Height\
      \ > 0)\n      break;\n    OffsetCurrent += Lines[IndexLine].Height + Lines[IndexLine].Padding;\n\
      \    }\n\n  TextUrlCurrent = \"\";\n  Canvas.bNoSmooth = false;\n\n  for (IndexLine\
      \ = IndexLine; IndexLine < CountLines; IndexLine++) {\n    if (OffsetCurrent\
      \ > WinHeight)\n      break;\n\n    if (Len(Lines[IndexLine].Text) > 0) {\n\
      \      if (Lines[IndexLine].Color.R == 0 &&\n          Lines[IndexLine].Color.G\
      \ == 0 &&\n          Lines[IndexLine].Color.B == 0)\n        Canvas.DrawColor\
      \ = ColorDefault;\n      else\n        Canvas.DrawColor = Lines[IndexLine].Color;\n\
      \n      Canvas.DrawColor = Canvas.DrawColor * Fade;\n      Canvas.Font = Root.Fonts[Lines[IndexLine].Font];\n\
      \      ClipText(Canvas, Lines[IndexLine].Indent, OffsetCurrent, Lines[IndexLine].Text);\n\
      \      \n      if (Lines[IndexLine].Underline)\n        DrawStretchedTexture(Canvas,\
      \ Lines[IndexLine].Indent,\n                                     Lines[IndexLine].Height\
      \ + OffsetCurrent - 1,\n                                     Lines[IndexLine].Width,\n\
      \                                     1,\n                                 \
      \    Texture 'UWindow.WhiteTexture');\n\n      if (Len(Lines[IndexLine].Url)\
      \ > 0 &&\n          Clamp(X, Lines[IndexLine].Indent, Lines[IndexLine].Indent\
      \ + Lines[IndexLine].Width) == int(X) &&\n          Clamp(Y, OffsetCurrent,\
      \ OffsetCurrent + Lines[IndexLine].Height) == int(Y))\n        TextUrlCurrent\
      \ = Lines[IndexLine].Url;\n      }\n    \n    else if (Lines[IndexLine].Image\
      \ != None) {\n      Canvas.DrawColor = ColorImage * Fade;\n      DrawStretchedTexture(Canvas,\
      \ Lines[IndexLine].Indent,\n                                   OffsetCurrent,\n\
      \                                   Lines[IndexLine].Width,\n              \
      \                     Lines[IndexLine].Height, Lines[IndexLine].Image);\n  \
      \    }\n    \n    OffsetCurrent += Lines[IndexLine].Height + Lines[IndexLine].Padding;\n\
      \    }\n\n  if (Len(TextUrlCurrent) == 0)\n    Cursor = Root.NormalCursor;\n\
      \  else\n    Cursor = Root.HandCursor;\n\n  if (OffsetCurrent + Lines[IndexLine\
      \ - 1].Height <= 0)\n    Reset();\n  }\n\n\n// ============================================================================\n\
      // Color Operators\n// ============================================================================\n\
      \nstatic final operator(16) Color * (float Fade, Color Color) {\n\n  Color.R\
      \ = byte(FClamp(Fade, 0.0, 1.0) * float(Color.R));\n  Color.G = byte(FClamp(Fade,\
      \ 0.0, 1.0) * float(Color.G));\n  Color.B = byte(FClamp(Fade, 0.0, 1.0) * float(Color.B));\n\
      \  \n  return Color;\n  }\n\n\nstatic final operator(16) Color * (Color Color,\
      \ float Fade) {\n\n  return Fade * Color;\n  }\n\n\n// ============================================================================\n\
      // Default Properties\n// ============================================================================\n\
      \ndefaultproperties {\n\n  ColorDefault=(R=224,G=224,B=224)\n  ColorImage=(R=255,G=255,B=255)\n\
      \  ColorLink=(R=64,G=64,B=255)\n\n  DelayFade=0.5\n  DelayScroll=2.0\n\n  SpeedFade=1.0\n\
      \  SpeedScroll=30.0\n  }\n</uscript>"
  properties: []
  revId: 8601
name: "Legacy:Useful UWindow Extensions/Scrolling Credits"
revision:
  revid: 8601
  parentid: 0
  user: "Mychaeel"
  timestamp: 1025030546.000000000
  comment: "*"
timestamp: 1668787098.730928000
