---
parse:
  title: "Legacy:Exec Directive (UT)"
  text:
    text: "<p>For UT2003 Imports see&#160;: <a href=\"/Legacy:Exec_Directive\" title=\"\
      Legacy:Exec Directive\">Exec Directive</a></p>\n<p>\"#exec\" directives execute\
      \ console commands at compile time. Every \"#exec\" directive can be executed\
      \ in UnrealEd's <a href=\"/Legacy:Console_Bar\" title=\"Legacy:Console Bar\"\
      >console bar</a>. (without the \"#exec\") Currently in the newer engine builds,\
      \ they are the only method of importing vertex meshes (think .3ds). They are\
      \ also useful for keeping content closely coupled with the code that uses it\
      \ (textures/sounds), or for referenced seperate content packages for organizational\
      \ purposes.</p>\n<p>Look for lines in Editor.log that start with \"Cmd:\" to\
      \ find out about more possibly interesing exec directives.</p>\n<p>See <a href=\"\
      /Legacy:UnrealEd_Console\" title=\"Legacy:UnrealEd Console\">UnrealEd Console</a>\
      \ for more information on this fun stuff!</p>\n<p></p>\n<div id=\"toc\" class=\"\
      toc\">\n<div id=\"toctitle\">\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"\
      toclevel-1 tocsection-1\"><a href=\"#Textures\"><span class=\"tocnumber\">1</span>\
      \ <span class=\"toctext\">Textures</span></a>\n<ul>\n<li class=\"toclevel-2\
      \ tocsection-2\"><a href=\"#Import\"><span class=\"tocnumber\">1.1</span> <span\
      \ class=\"toctext\">Import</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1\
      \ tocsection-3\"><a href=\"#Sounds\"><span class=\"tocnumber\">2</span> <span\
      \ class=\"toctext\">Sounds</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-4\"\
      ><a href=\"#Import_2\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\"\
      >Import</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-5\"\
      ><a href=\"#Packages\"><span class=\"tocnumber\">3</span> <span class=\"toctext\"\
      >Packages</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"\
      #Loading_Other_Packages\"><span class=\"tocnumber\">3.1</span> <span class=\"\
      toctext\">Loading Other Packages</span></a></li>\n<li class=\"toclevel-2 tocsection-7\"\
      ><a href=\"#Position.2C_Rotation_and_Scale\"><span class=\"tocnumber\">3.2</span>\
      \ <span class=\"toctext\">Position, Rotation and Scale</span></a></li>\n<li\
      \ class=\"toclevel-2 tocsection-8\"><a href=\"#Assign_Animations_and_Textures\"\
      ><span class=\"tocnumber\">3.3</span> <span class=\"toctext\">Assign Animations\
      \ and Textures</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-9\"\
      ><a href=\"#Animations\"><span class=\"tocnumber\">4</span> <span class=\"toctext\"\
      >Animations</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-10\"><a href=\"\
      #Import_3\"><span class=\"tocnumber\">4.1</span> <span class=\"toctext\">Import</span></a></li>\n\
      </ul>\n</li>\n<li class=\"toclevel-1 tocsection-11\"><a href=\"#Fonts\"><span\
      \ class=\"tocnumber\">5</span> <span class=\"toctext\">Fonts</span></a>\n<ul>\n\
      <li class=\"toclevel-2 tocsection-12\"><a href=\"#Import_4\"><span class=\"\
      tocnumber\">5.1</span> <span class=\"toctext\">Import</span></a></li>\n</ul>\n\
      </li>\n</ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Textures\"\
      >Textures</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=1\" title=\"Edit\
      \ section: Textures\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Import\">Import</span><span class=\"mw-editsection\"\
      ><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=2\"\
      \ title=\"Edit section: Import\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>Textures may also be imported upon compilation of\
      \ a class or series of classes into a .u package. This is done using the #exec\
      \ preprocessing directive.</p>\n<p>Syntax:</p>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co2\">#exec TEXTURE IMPORT NAME=NameForTextureToImportAs\
      \ FILE=PATH\\TO\\SomeTexture.pcx GROUP=SomeGroup MIPS=OFF FLAGS=2 PALETTE=SomeTexPalette\
      \ LODSET=2</span></pre></div>\n</div>\n<dl>\n<dt>NAME&#160;</dt>\n<dd>Name the\
      \ texture is imported as.</dd>\n<dt>FILE&#160;</dt>\n<dd>Path to the texture\
      \ being imported. Paths are local to the root of the package directory.</dd>\n\
      <dt>GROUP&#160;</dt>\n<dd>(optional) Name of the group the texture is classified\
      \ under (used in, for example, the UEd Texture browser.)</dd>\n<dt>MIPS&#160;</dt>\n\
      <dd>(optional) OFF or ON. Generate <a href=\"/Legacy:MipMap\" title=\"Legacy:MipMap\"\
      >MipMaps</a>.</dd>\n<dt>FLAGS&#160;</dt>\n<dd>(optional) Numerical value. Assigns\
      \ the texture rendering style. Valid styles are:</dd>\n</dl>\n<dl>\n<dt>1</dt>\n\
      <dd>\n<ul>\n<li>Normal</li>\n<li>2: 2-sided (Use this if importing for use as\
      \ a sprite)</li>\n<li>3: Translucent 2-sided</li>\n<li>4: Masked 2-sided</li>\n\
      <li>5: Modulated 2-sided</li>\n</ul>\n</dd>\n</dl>\n<dl>\n<dt>PALETTE&#160;</dt>\n\
      <dd>(optional) Color palette to use if not default.</dd>\n<dt>LODSET&#160;</dt>\n\
      <dd>(optional) Numerical value. Level of detail. Homologous to the LODSet Texture\
      \ property in UEd. Affects texture clarity as dictated by the user's settings.</dd>\n\
      </dl>\n<dl>\n<dt>0</dt>\n<dd>\n<ul>\n<li>no detail settings applied.</li>\n\
      <li>1: LODSET_World – affected by user's World Texture Detail setting.</li>\n\
      <li>2: LODSET_Skin</li>\n</ul>\n</dd>\n</dl>\n<p>Context:</p>\n<div dir=\"ltr\"\
      \ class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\"\
      >\n<pre class=\"de1\"><span class=\"kw1\">class</span> SomeClass <span class=\"\
      kw1\">extends</span> SomeActor;\n \n<span class=\"co2\">#exec TEXTURE IMPORT\
      \ NAME=SomeTex1 FILE=Textures\\SomeTexture.pcx GROUP=Skins FLAGS=2</span>\n\
      <span class=\"co2\">#exec TEXTURE IMPORT NAME=SomeTex2 FILE=Textures\\AnotherTexture.pcx\
      \ GROUP=Skins FLAGS=2</span>\n<span class=\"co2\">#exec TEXTURE IMPORT NAME=SomeTex3\
      \ FILE=Textures\\StillAnotherTexture.pcx GROUP=Skins FLAGS=2</span></pre></div>\n\
      </div>\n<p>Imported textures are addressed as PackageName.Texturename, and available\
      \ via UnrealEd after PackageName is loaded in the Actor browser.</p>\n<p>See\
      \ also <a href=\"/Legacy:Texture_Import_And_Export\" title=\"Legacy:Texture\
      \ Import And Export\">Texture Import And Export</a></p>\n<h2><span class=\"\
      mw-headline\" id=\"Sounds\">Sounds</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=3\"\
      \ title=\"Edit section: Sounds\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Import_2\">Import</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Exec_Directive_(UT)?section=4\" title=\"Edit section:\
      \ Import\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Sounds can be imported in a similar way to textures. Imported sounds must\
      \ be no higher quality than 22,050 Hz, 16 bit mono, and must be uncompressed\
      \ PCM WAV.</p>\n<p>Syntax:</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co2\">#exec AUDIO IMPORT NAME=NameForSoundToImportAs FILE=PATH\\TO\\SomeSound.wav\
      \ GROUP=SomeGroup</span></pre></div>\n</div>\n<dl>\n<dt>NAME&#160;</dt>\n<dd>Name\
      \ the sound is imported as.</dd>\n<dt>FILE&#160;</dt>\n<dd>Path to the sound\
      \ being imported. Paths are local to the root of the package directory.</dd>\n\
      <dt>GROUP&#160;</dt>\n<dd>(optional) Name of the group the sound is classified\
      \ under (used in, for example, the UEd Sound browser.)</dd>\n</dl>\n<p>Imported\
      \ sounds are addressed as PackageName.GroupName.SoundName, and are available\
      \ via UnrealEd after PackageName is loaded in the Actor browser.</p>\n<p>See\
      \ also <a href=\"/Legacy:Importing_Sounds\" title=\"Legacy:Importing Sounds\"\
      >Importing_Sounds</a></p>\n<h2><span class=\"mw-headline\" id=\"Packages\">Packages</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Exec_Directive_(UT)?section=5\" title=\"Edit section:\
      \ Packages\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Loading_Other_Packages\">Loading Other\
      \ Packages</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=6\" title=\"Edit\
      \ section: Loading Other Packages\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>You can use the OBJ LOAD parameters to load a specific\
      \ package at compile time to allow specific objects in that package to be referenced\
      \ if they're not already loaded in the compilation sequence (via prior inclusion\
      \ or EditPackages listing).</p>\n<p>For example, say you have a bunch of textures\
      \ in a seperate .utx so that you don't necessarily have to re-compile a .u package\
      \ everytime you want to update/change/add/remove textures; to insure a class\
      \ accessing the .utx package compiles, you could do something like:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co2\">#exec OBJ LOAD FILE=\"\
      ..\\Textures\\MyTextures.utx\"</span>\n \n<span class=\"kw1\">var</span> <span\
      \ class=\"kw5\">Texture</span> SomeTexture;\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n    SomeTexture<span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'MyTextures.SomeCoolTexture_A'</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>You can use OBJ LOAD to\
      \ load any sort of Unreal package, be it for textures, sounds, animations, or\
      \ even other script packages. Useful sometimes for bypassing annoying dependency\
      \ issues as well (although you should probably just design your code not to\
      \ have these in the first place).</p>\n<p>The PACKAGE flag specifies the package\
      \ which the referenced FILE is compiled into. Setting it equal to the package\
      \ in which the calling class resides will compile the loaded package <b>into</b>\
      \ the compiled package. For example, with a texture package called MyTextures.utx\
      \ and a script MyScript.uc in package MyPackage:</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co2\">#exec OBJ LOAD FILE=\"..\\Textures\\\
      MyTextures.utx\" PACKAGE=MyPackage</span>\n \n<span class=\"kw1\">var</span>\
      \ <span class=\"kw5\">Texture</span> SomeTexture;\n \n<span class=\"kw1\">defaultproperties</span>\n\
      <span class=\"br0\">{</span>\n    SomeTexture<span class=\"sy0\">=</span><span\
      \ class=\"kw5\">Texture</span><span class=\"st0\">'MyPackage.SomeCoolTexture_A'</span>\n\
      <span class=\"br0\">}</span></pre></div>\n</div>\n<p>SomeCoolTexture can then\
      \ be referenced through MyPackage instead of MyTextures, eliminating the need\
      \ for a separate texture package when MyPackage is distributed.</p>\n<p>If you\
      \ want to EXEC OBJ LOAD files, make certain they have different names (i.e.,\
      \ it doesn't like having MyModWeapons.utx and MyModWeapons.uax – it's a circular\
      \ reference and the compiler will hang as it tries to load a package into itself).\
      \ Simple work-around is to just name them like MyModWeaponsSkins.utx and MyModWeaponsSounds.uax.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Position.2C_Rotation_and_Scale\">Position,\
      \ Rotation and Scale</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=7\" title=\"Edit\
      \ section: Position, Rotation and Scale\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\"\
      >\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"\
      co2\">#exec MESH  ORIGIN MESH=Weapon_1st X=0 Y=0 Z=0 YAW=0 PITCH=0 ROLL=0</span>\n\
      <span class=\"co2\">#exec MESHMAP   SCALE MESHMAP=Weapon_1st X=1.0 Y=1.0 Z=1.0</span></pre></div>\n\
      </div>\n<p>In this case the rotation unit is a byte: a full circle is 255.</p>\n\
      <h3><span class=\"mw-headline\" id=\"Assign_Animations_and_Textures\">Assign\
      \ Animations and Textures</span><span class=\"mw-editsection\"><span class=\"\
      mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=8\"\
      \ title=\"Edit section: Assign Animations and Textures\">edit</a><span class=\"\
      mw-editsection-bracket\">]</span></span></h3>\n<div dir=\"ltr\" class=\"mw-geshi\
      \ mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"\
      de1\"><span class=\"co2\">#exec MESH  DEFAULTANIM MESH=Weapon_1st ANIM=WeaponAnim</span></pre></div>\n\
      </div>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"\
      uscript source-uscript\">\n<pre class=\"de1\"><span class=\"co2\">#exec MESHMAP\
      \ SETTEXTURE MESHMAP=Weapon_1st NUM=0 TEXTURE=WeaponTex</span></pre></div>\n\
      </div>\n<dl>\n<dt>NUM&#160;</dt>\n<dd>Material number the texture is assigned\
      \ to on the mesh.</dd>\n</dl>\n<h2><span class=\"mw-headline\" id=\"Animations\"\
      >Animations</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=9\" title=\"Edit\
      \ section: Animations\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <h3><span class=\"mw-headline\" id=\"Import_3\">Import</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=10\"\
      \ title=\"Edit section: Import\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h3>\n<p>You can import .PSA files obtained from the <a href=\"\
      /Legacy:ActorX\" title=\"Legacy:ActorX\">ActorX</a> utility, that are placed\
      \ in the /models folder of your package directory.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"co2\">#exec ANIM  IMPORT ANIM=WeaponAnim ANIMFILE=models\\\
      WeaponAnim.PSA COMPRESS=1 MAXKEYS=999999 IMPORTSEQS=1</span></pre></div>\n</div>\n\
      <dl>\n<dt>ANIM&#160;</dt>\n<dd>Name that the animations are imported as.</dd>\n\
      <dt>ANIMFILE&#160;</dt>\n<dd>Path to the animations being imported. Paths are\
      \ local to the root of the package directory.</dd>\n<dt>GROUP&#160;</dt>\n<dd>(optional)\
      \ Name of the group that the mesh is classified under.</dd>\n<dt>COMPRESS&#160;</dt>\n\
      <dd>Compresses the animations. 1 is normal, uncompressed, lower numbers are\
      \ more compressed.</dd>\n<dt>MAXKEYS&#160;</dt>\n<dd><i>not sure</i></dd>\n\
      <dt>IMPORTSEQS&#160;</dt>\n<dd><i>not sure</i></dd>\n</dl>\n<h2><span class=\"\
      mw-headline\" id=\"Fonts\">Fonts</span><span class=\"mw-editsection\"><span\
      \ class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:Exec_Directive_(UT)?section=11\"\
      \ title=\"Edit section: Fonts\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<h3><span class=\"mw-headline\" id=\"Import_4\">Import</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Exec_Directive_(UT)?section=12\" title=\"Edit section:\
      \ Import\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n\
      <p>Fonts can be created using the TrueTypeFontFactory, you can import any truetype\
      \ font on the machine doing the compilation.</p>\n<p>Basic Syntax:</p>\n<div\
      \ dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript\
      \ source-uscript\">\n<pre class=\"de1\"><span class=\"co2\">#exec NEW TRUETYPEFONTFACTORY\
      \ NAME=SomeName FONTNAME=\"SomeFont\" HEIGHT=SomeSize</span></pre></div>\n</div>\n\
      <dl>\n<dt>NAME&#160;</dt>\n<dd>Name the font is imported as.</dd>\n<dt>FONTNAME&#160;</dt>\n\
      <dd>Name of the font to be imported, such as \"Arial\" or \"Times New Roman\"\
      .</dd>\n<dt>HEIGHT</dt>\n<dd>Height of the characters in the font - think 'font\
      \ size'.</dd>\n</dl>\n<p>Many other parameters for this exist, see <a href=\"\
      /Legacy:TrueTypeFontFactory\" title=\"Legacy:TrueTypeFontFactory\">TrueTypeFontFactory</a>.</p>\n\
      <p>Imported fonts are addressed as PackageName.FontName, and will show up in\
      \ UnrealEd but seem to show every single currently loaded texture (akin to Engine.*Font\
      \ groups).</p>\n<p>See also <a href=\"/Legacy:TrueTypeFontFactory\" title=\"\
      Legacy:TrueTypeFontFactory\">TrueTypeFontFactory</a></p>\n<hr />\n<p><b>Draconx:</b>\
      \ Perhaps readability of this page could be improved by breaking it into subpages\
      \ for each type of import? This whole page really looks like a mess. I'll take\
      \ a look at doing just that tomorrow I suppose, as a comprehensive reference\
      \ to the #exec imports is HIGHLY useful.</p>\n<hr />\n<p><a href=\"/Category:Legacy_Class_(UT)\"\
      \ title=\"Category:Legacy Class (UT)\">Category:Legacy Class (UT)</a><br />\n\
      <a href=\"/Category:Legacy_To_Do\" title=\"Category:Legacy To Do\">Category:Legacy\
      \ To Do</a> – What is UT2003 and which is UT? Remove UT2003 stuff from this\
      \ page</p>\n\n<!-- \nNewPP limit report\nCPU time usage: 0.198 seconds\nReal\
      \ time usage: 0.216 seconds\nPreprocessor visited node count: 134/1000000\n\
      Preprocessor generated node count: 270/1000000\nPost‐expand include size: 38/2097152\
      \ bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion depth: 2/40\n\
      Expensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion expansion\
      \ time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n-->\n\
      \n<!-- Saved in parser cache with key wiki:pcache:idhash:1174-0!*!0!!en!*!*\
      \ and timestamp 20221118151227 and revision id 3065\n -->\n"
  categories:
  - sortkey: "Exec Directive (UT)"
    name: "Legacy_Class_(UT)"
  - sortkey: "Exec Directive (UT)"
    name: "Legacy_To_Do"
  links:
  - ns: 100
    exists: true
    name: "Legacy:Exec Directive"
  - ns: 14
    exists: true
    name: "Category:Legacy Class (UT)"
  - ns: 100
    exists: true
    name: "Legacy:Texture Import And Export"
  - ns: 100
    exists: true
    name: "Legacy:Importing Sounds"
  - ns: 100
    exists: true
    name: "Legacy:MipMap"
  - ns: 14
    exists: true
    name: "Category:Legacy To Do"
  - ns: 100
    exists: true
    name: "Legacy:TrueTypeFontFactory"
  - ns: 100
    exists: true
    name: "Legacy:ActorX"
  - ns: 100
    exists: true
    name: "Legacy:UnrealEd Console"
  - ns: 100
    exists: true
    name: "Legacy:Console Bar"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Textures"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 725
    anchor: "Textures"
  - toclevel: 2
    level: "3"
    line: "Import"
    number: "1.1"
    index: "2"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 739
    anchor: "Import"
  - toclevel: 1
    level: "2"
    line: "Sounds"
    number: "2"
    index: "3"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 2549
    anchor: "Sounds"
  - toclevel: 2
    level: "3"
    line: "Import"
    number: "2.1"
    index: "4"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 2561
    anchor: "Import_2"
  - toclevel: 1
    level: "2"
    line: "Packages"
    number: "3"
    index: "5"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 3311
    anchor: "Packages"
  - toclevel: 2
    level: "3"
    line: "Loading Other Packages"
    number: "3.1"
    index: "6"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 3325
    anchor: "Loading_Other_Packages"
  - toclevel: 2
    level: "3"
    line: "Position, Rotation and Scale"
    number: "3.2"
    index: "7"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 5354
    anchor: "Position.2C_Rotation_and_Scale"
  - toclevel: 2
    level: "3"
    line: "Assign Animations and Textures"
    number: "3.3"
    index: "8"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 5604
    anchor: "Assign_Animations_and_Textures"
  - toclevel: 1
    level: "2"
    line: "Animations"
    number: "4"
    index: "9"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 5870
    anchor: "Animations"
  - toclevel: 2
    level: "3"
    line: "Import"
    number: "4.1"
    index: "10"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 5886
    anchor: "Import_3"
  - toclevel: 1
    level: "2"
    line: "Fonts"
    number: "5"
    index: "11"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 6552
    anchor: "Fonts"
  - toclevel: 2
    level: "3"
    line: "Import"
    number: "5.1"
    index: "12"
    fromtitle: "Legacy:Exec_Directive_(UT)"
    byteoffset: 6563
    anchor: "Import_4"
  displaytitle: "Legacy:Exec Directive (UT)"
  iwlinks: []
  wikitext:
    text: "For UT2003 Imports see : [[Legacy:Exec Directive|Exec Directive]]\n\n\"\
      #exec\" directives execute console commands at compile time. Every \"#exec\"\
      \ directive can be executed in UnrealEd's [[Legacy:Console Bar|console bar]].\
      \ (without the \"#exec\") Currently in the newer engine builds, they are the\
      \ only method of importing vertex meshes (think .3ds).  They are also useful\
      \ for keeping content closely coupled with the code that uses it (textures/sounds),\
      \ or for referenced seperate content packages for organizational purposes.\n\
      \nLook for lines in Editor.log that start with \"Cmd:\" to find out about more\
      \ possibly interesing exec directives.\n\nSee [[Legacy:UnrealEd Console|UnrealEd\
      \ Console]] for more information on this fun stuff!\n\n==Textures==\n\n===Import===\n\
      \nTextures may also be imported upon compilation of a class or series of classes\
      \ into a .u package.  This is done using the #exec preprocessing directive.\n\
      \nSyntax:\n\n<uscript>\n#exec TEXTURE IMPORT NAME=NameForTextureToImportAs FILE=PATH\\\
      TO\\SomeTexture.pcx GROUP=SomeGroup MIPS=OFF FLAGS=2 PALETTE=SomeTexPalette\
      \ LODSET=2\n</uscript>\n\n;NAME : Name the texture is imported as.\n;FILE :\
      \ Path to the texture being imported.  Paths are local to the root of the package\
      \ directory.\n;GROUP : (optional) Name of the group the texture is classified\
      \ under (used in, for example, the UEd Texture browser.)\n;MIPS : (optional)\
      \ OFF or ON.  Generate [[Legacy:MipMap|MipMap]]s.\n;FLAGS : (optional) Numerical\
      \ value.  Assigns the texture rendering style.  Valid styles are:\n;* 1: Normal\
      \ \n;* 2: 2-sided (Use this if importing for use as a sprite)\n;* 3: Translucent\
      \ 2-sided\n;* 4: Masked 2-sided \n;* 5: Modulated 2-sided\n;PALETTE : (optional)\
      \ Color palette to use if not default.\n;LODSET : (optional) Numerical value.\
      \  Level of detail.  Homologous to the LODSet Texture property in UEd.  Affects\
      \ texture clarity as dictated by the user's settings.\n;* 0: no detail settings\
      \ applied.\n;* 1: LODSET_World &ndash; affected by user's World Texture Detail\
      \ setting.\n;* 2: LODSET_Skin \n\nContext:\n\n<uscript>\nclass SomeClass extends\
      \ SomeActor;\n\n#exec TEXTURE IMPORT NAME=SomeTex1 FILE=Textures\\SomeTexture.pcx\
      \ GROUP=Skins FLAGS=2\n#exec TEXTURE IMPORT NAME=SomeTex2 FILE=Textures\\AnotherTexture.pcx\
      \ GROUP=Skins FLAGS=2\n#exec TEXTURE IMPORT NAME=SomeTex3 FILE=Textures\\StillAnotherTexture.pcx\
      \ GROUP=Skins FLAGS=2\n</uscript>\n\nImported textures are addressed as PackageName.Texturename,\
      \ and available via UnrealEd after PackageName is loaded in the Actor browser.\n\
      \nSee also [[Legacy:Texture Import And Export|Texture Import And Export]]\n\n\
      ==Sounds==\n\n===Import===\n\nSounds can be imported in a similar way to textures.\
      \  Imported sounds must be no higher quality than 22,050 Hz, 16 bit mono, and\
      \ must be uncompressed PCM WAV.\n\nSyntax:\n\n<uscript>\n#exec AUDIO IMPORT\
      \ NAME=NameForSoundToImportAs FILE=PATH\\TO\\SomeSound.wav GROUP=SomeGroup\n\
      </uscript>\n\n;NAME : Name the sound is imported as.\n;FILE : Path to the sound\
      \ being imported.  Paths are local to the root of the package directory.\n;GROUP\
      \ : (optional) Name of the group the sound is classified under (used in, for\
      \ example, the UEd Sound browser.)\n\nImported sounds are addressed as PackageName.GroupName.SoundName,\
      \ and are available via UnrealEd after PackageName is loaded in the Actor browser.\n\
      \nSee also [[Legacy:Importing_Sounds|Importing_Sounds]]\n\n==Packages==\n\n\
      ===Loading Other Packages===\n\nYou can use the OBJ LOAD parameters to load\
      \ a specific package at compile time to allow specific objects in that package\
      \ to be referenced if they're not already loaded in the compilation sequence\
      \ (via prior inclusion or EditPackages listing).\n\nFor example, say you have\
      \ a bunch of textures in a seperate .utx so that you don't necessarily have\
      \ to re-compile a .u package everytime you want to update/change/add/remove\
      \ textures; to insure a class accessing the .utx package compiles, you could\
      \ do something like:\n\n<uscript>\n#exec OBJ LOAD FILE=\"..\\Textures\\MyTextures.utx\"\
      \n\nvar Texture SomeTexture;\n\ndefaultproperties\n{\n    SomeTexture=Texture'MyTextures.SomeCoolTexture_A'\n\
      }\n</uscript>\n\nYou can use OBJ LOAD to load any sort of Unreal package, be\
      \ it for textures, sounds, animations, or even other script packages.  Useful\
      \ sometimes for bypassing annoying dependency issues as well (although you should\
      \ probably just design your code not to have these in the first place).\n\n\
      The PACKAGE flag specifies the package which the referenced FILE is compiled\
      \ into.  Setting it equal to the package in which the calling class resides\
      \ will compile the loaded package <b>into</b> the compiled package.  For example,\
      \ with a texture package called MyTextures.utx and a script MyScript.uc in package\
      \ MyPackage:\n\n<uscript>\n#exec OBJ LOAD FILE=\"..\\Textures\\MyTextures.utx\"\
      \ PACKAGE=MyPackage\n\nvar Texture SomeTexture;\n\ndefaultproperties\n{\n  \
      \  SomeTexture=Texture'MyPackage.SomeCoolTexture_A'\n}\n\n</uscript>\n\nSomeCoolTexture\
      \ can then be referenced through MyPackage instead of MyTextures, eliminating\
      \ the need for a separate texture package when MyPackage is distributed.\n\n\
      If you want to EXEC OBJ LOAD files, make certain they have different names (i.e.,\
      \ it doesn't like having MyModWeapons.utx and MyModWeapons.uax &ndash; it's\
      \ a circular reference and the compiler will hang as it tries to load a package\
      \ into itself).  Simple work-around is to just name them like MyModWeaponsSkins.utx\
      \ and MyModWeaponsSounds.uax.\n\n===Position, Rotation and Scale===\n\n<uscript>\n\
      #exec MESH  ORIGIN MESH=Weapon_1st X=0 Y=0 Z=0 YAW=0 PITCH=0 ROLL=0\n#exec MESHMAP\
      \   SCALE MESHMAP=Weapon_1st X=1.0 Y=1.0 Z=1.0\n</uscript>\n\nIn this case the\
      \ rotation unit is a byte: a full circle is 255.\n\n===Assign Animations and\
      \ Textures===\n\n<uscript>#exec MESH  DEFAULTANIM MESH=Weapon_1st ANIM=WeaponAnim</uscript>\n\
      \n<uscript>#exec MESHMAP SETTEXTURE MESHMAP=Weapon_1st NUM=0 TEXTURE=WeaponTex</uscript>\n\
      \n;NUM : Material number the texture is assigned to on the mesh.\n\n==Animations==\n\
      \n===Import===\n\nYou can import .PSA files obtained from the [[Legacy:ActorX|ActorX]]\
      \ utility, that are placed in the /models folder of your package directory.\n\
      \n<uscript>#exec ANIM  IMPORT ANIM=WeaponAnim ANIMFILE=models\\WeaponAnim.PSA\
      \ COMPRESS=1 MAXKEYS=999999 IMPORTSEQS=1</uscript>\n\n;ANIM : Name that the\
      \ animations are imported as.\n;ANIMFILE : Path to the animations being imported.\
      \  Paths are local to the root of the package directory.\n;GROUP : (optional)\
      \ Name of the group that the mesh is classified under.\n;COMPRESS : Compresses\
      \ the animations.  1 is normal, uncompressed, lower numbers are more compressed.\n\
      ;MAXKEYS : ''not sure''\n;IMPORTSEQS : ''not sure''\n\n==Fonts==\n\n===Import===\n\
      \nFonts can be created using the TrueTypeFontFactory, you can import any truetype\
      \ font on the machine doing the compilation.\n\nBasic Syntax:\n\n<uscript>\n\
      #exec NEW TRUETYPEFONTFACTORY NAME=SomeName FONTNAME=\"SomeFont\" HEIGHT=SomeSize\n\
      </uscript>\n\n;NAME : Name the font is imported as.\n;FONTNAME : Name of the\
      \ font to be imported, such as \"Arial\" or \"Times New Roman\".\n;HEIGHT: Height\
      \ of the characters in the font - think 'font size'.\n\nMany other parameters\
      \ for this exist, see [[Legacy:TrueTypeFontFactory|TrueTypeFontFactory]].\n\n\
      Imported fonts are addressed as PackageName.FontName, and will show up in UnrealEd\
      \ but seem to show every single currently loaded texture (akin to Engine.*Font\
      \ groups).\n\nSee also [[Legacy:TrueTypeFontFactory|TrueTypeFontFactory]]\n\n\
      ----\n\n'''Draconx:''' Perhaps readability of this page could be improved by\
      \ breaking it into subpages for each type of import?  This whole page really\
      \ looks like a mess.  I'll take a look at doing just that tomorrow I suppose,\
      \ as a comprehensive reference to the #exec imports is HIGHLY useful.\n\n----\n\
      \n[[:Category:Legacy Class (UT)]]<br />[[:Category:Legacy To Do]] &ndash; What\
      \ is UT2003 and which is UT? Remove UT2003 stuff from this page\n[[Category:Legacy\
      \ Class (UT)|{{PAGENAME}}]]\n[[Category:Legacy To Do|{{PAGENAME}}]]"
  properties: []
  revId: 3065
name: "Legacy:Exec Directive (UT)"
revision:
  revid: 3065
  parentid: 3067
  user: "C-24-18-76-107.client.comcast.net"
  timestamp: 1102453258.000000000
  comment: "*"
timestamp: 1668784348.716267000
