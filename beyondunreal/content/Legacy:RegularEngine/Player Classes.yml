---
parse:
  title: "Legacy:RegularEngine/Player Classes"
  text:
    text: "<p>Player Classes in the RegularEngine allow a mod to give the player a\
      \ choice on how their pawn is setup within the game itself. This could have\
      \ various uses. You may just simply want to offer a controlled way of altering\
      \ appearance (a la Counter-Strike), or different loadouts, or full blown player\
      \ classes (a la Team Fortress).</p>\n<p>RgE's framework is centered around the\
      \ <a href=\"/Legacy:RegularEngine/RegularPawn\" title=\"Legacy:RegularEngine/RegularPawn\"\
      >RegularPawn</a>. The RegularPawn includes a function which manipulates the\
      \ PlayerSetup the pawn recieves. The PlayerSetup is what is usually loaded by\
      \ xUtil based on the xplayers file in your System folder. If you open it up,\
      \ you'll see various player names associated with meshes, skins, etc.</p>\n\
      <p>RegularPawn allows this to happen, but changes pertinent vars based on information\
      \ contained in the <a href=\"/Legacy:RegularEngine/RegularPRI\" title=\"Legacy:RegularEngine/RegularPRI\"\
      >PRI</a> held by the <a href=\"/Legacy:RegularEngine/RegularPlayer\" title=\"\
      Legacy:RegularEngine/RegularPlayer\">PlayerController</a> or the <a href=\"\
      /Legacy:RegularEngine/RegularBot\" title=\"Legacy:RegularEngine/RegularBot\"\
      >Bot's controller</a>.</p>\n<p>So the flow works something like this:</p>\n\
      <ul>\n<li>Player hits RestartPlayer within <a href=\"/Legacy:RegularEngine/RegularGame\"\
      \ title=\"Legacy:RegularEngine/RegularGame\">the gameinfo</a>.</li>\n<li>RestartPlayer\
      \ asks <a href=\"/Legacy:RegularEngine/RegularPRI\" title=\"Legacy:RegularEngine/RegularPRI\"\
      >the PRI</a> if the controller has a valid player class.</li>\n<li>If no, and\
      \ the player is a <a href=\"/Legacy:RegularEngine/RegularPlayer\" title=\"Legacy:RegularEngine/RegularPlayer\"\
      >a human</a>, it opens a <a href=\"/Legacy:RegularEngine/ClassTrader\" title=\"\
      Legacy:RegularEngine/ClassTrader\">menu to choose a new class</a>.</li>\n<li>If\
      \ no, and the player is a <a href=\"/Legacy:RegularEngine/RegularBot\" title=\"\
      Legacy:RegularEngine/RegularBot\">a bot</a>, it asks the bot to choose a class.\
      \ Bots will randomly choose a class on spawn, actually.</li>\n<li>If yes, it\
      \ will allow the controller to spawn a <a href=\"/Legacy:RegularEngine/RegularPawn\"\
      \ title=\"Legacy:RegularEngine/RegularPawn\">a pawn</a> and tell the pawn the\
      \ player class name from <a href=\"/Legacy:RegularEngine/RegularPRI\" title=\"\
      Legacy:RegularEngine/RegularPRI\">the PRI</a>.</li>\n<li><a href=\"/Legacy:RegularEngine/RegularPawn\"\
      \ title=\"Legacy:RegularEngine/RegularPawn\">The pawn</a> then determines what\
      \ variables, like mesh or health or default equipment, to use based on the player\
      \ class and spawns.</li>\n<li>While in game, the <a href=\"/Legacy:RegularEngine/RegularPlayer\"\
      \ title=\"Legacy:RegularEngine/RegularPlayer\">the player</a> can ask to get\
      \ a new class by re-opening the <a href=\"/Legacy:RegularEngine/ClassTrader\"\
      \ title=\"Legacy:RegularEngine/ClassTrader\">the menu</a>.</li>\n<li><a href=\"\
      /Legacy:RegularEngine/RegularPRI\" title=\"Legacy:RegularEngine/RegularPRI\"\
      >The PRI</a> will store the player class selection within a config variable,\
      \ allowing this choice to stay between levels.</li>\n</ul>\n<p>And that's pretty\
      \ much it.</p>\n<p>Sorry but</p>\n<hr />\n<p>Dear Sir or Madam,</p>\n<p>We appreciate\
      \ your submission:</p>\n<p>/regularx/rge.zip</p>\n<p>... however we were unsatisified\
      \ with its pendantic style and sloppy use of jargon. Feel free to resubmit at\
      \ a later date once you have discovered a dictionary and/or a free spell check\
      \ service.</p>\n<p>Good day,</p>\n<p>The Publishers</p>\n<hr />\n<p>Please update?</p>\n\
      \n<!-- \nNewPP limit report\nCPU time usage: 0.020 seconds\nReal time usage:\
      \ 0.021 seconds\nPreprocessor visited node count: 1/1000000\nPreprocessor generated\
      \ node count: 4/1000000\nPost‐expand include size: 0/2097152 bytes\nTemplate\
      \ argument size: 0/2097152 bytes\nHighest expansion depth: 1/40\nExpensive parser\
      \ function count: 0/100\n-->\n\n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n\
      100.00%    0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key\
      \ wiki:pcache:idhash:2673-0!*!0!*!*!*!* and timestamp 20221118014903 and revision\
      \ id 6361\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/RegularPRI"
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/RegularPlayer"
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/RegularBot"
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/RegularGame"
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/RegularPawn"
  - ns: 100
    exists: true
    name: "Legacy:RegularEngine/ClassTrader"
  templates: []
  images: []
  externallinks: []
  sections: []
  displaytitle: "Legacy:RegularEngine/Player Classes"
  iwlinks: []
  wikitext:
    text: "Player Classes in the RegularEngine allow a mod to give the player a choice\
      \ on how their pawn is setup within the game itself.  This could have various\
      \ uses.  You may just simply want to offer a controlled way of altering appearance\
      \ (a la Counter-Strike), or different loadouts, or full blown player classes\
      \ (a la Team Fortress).\n\nRgE's framework is centered around the [[Legacy:RegularEngine/RegularPawn|RegularPawn]].\
      \  The RegularPawn includes a function which manipulates the PlayerSetup the\
      \ pawn recieves.  The PlayerSetup is what is usually loaded by xUtil based on\
      \ the xplayers file in your System folder.  If you open it up, you'll see various\
      \ player names associated with meshes, skins, etc.\n\nRegularPawn allows this\
      \ to happen, but changes pertinent vars based on information contained in the\
      \ [[Legacy:RegularEngine/RegularPRI|PRI]] held by the [[Legacy:RegularEngine/RegularPlayer|PlayerController]]\
      \ or the [[Legacy:RegularEngine/RegularBot|Bot's controller]].\n\nSo the flow\
      \ works something like this:\n\n* Player hits RestartPlayer within [[Legacy:RegularEngine/RegularGame|the\
      \ gameinfo]].\n* RestartPlayer asks [[Legacy:RegularEngine/RegularPRI|the PRI]]\
      \ if the controller has a valid player class.\n* If no, and the player is a\
      \ [[Legacy:RegularEngine/RegularPlayer|a human]], it opens a [[Legacy:RegularEngine/ClassTrader|menu\
      \ to choose a new class]].\n* If no, and the player is a [[Legacy:RegularEngine/RegularBot|a\
      \ bot]], it asks the bot to choose a class.  Bots will randomly choose a class\
      \ on spawn, actually.\n* If yes, it will allow the controller to spawn a [[Legacy:RegularEngine/RegularPawn|a\
      \ pawn]] and tell the pawn the player class name from [[Legacy:RegularEngine/RegularPRI|the\
      \ PRI]].\n* [[Legacy:RegularEngine/RegularPawn|The pawn]] then determines what\
      \ variables, like mesh or health or default equipment, to use based on the player\
      \ class and spawns.\n* While in game, the [[Legacy:RegularEngine/RegularPlayer|the\
      \ player]] can ask to get a new class by re-opening the [[Legacy:RegularEngine/ClassTrader|the\
      \ menu]].\n* [[Legacy:RegularEngine/RegularPRI|The PRI]] will store the player\
      \ class selection within a config variable, allowing this choice to stay between\
      \ levels.\n\nAnd that's pretty much it.\n\nSorry but\n\n----\n\nDear Sir or\
      \ Madam, \n\nWe appreciate your submission:\n\n/regularx/rge.zip\n\n... however\
      \ we were unsatisified with its pendantic style and sloppy use of jargon. Feel\
      \ free to resubmit at a later date once you have discovered a dictionary and/or\
      \ a free spell check service. \n\nGood day, \n\nThe Publishers \n\n----\n\n\
      Please update?"
  properties: []
  revId: 6361
name: "Legacy:RegularEngine/Player Classes"
revision:
  revid: 6361
  parentid: 6362
  user: "203-59-165-104.dyn.iinet.net.au"
  timestamp: 1177729114.000000000
  comment: "*"
timestamp: 1668764129.521197000
