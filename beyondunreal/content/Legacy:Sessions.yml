---
parse:
  title: "Legacy:Sessions"
  text:
    text: "<p>Here's an example on how to implement sessions into your application.</p>\n\
      <p>Sessions are usefull to keep a record of variables per user/session. Sessions\
      \ are often used in web pages to keep track of temporary user settings when\
      \ they visit your site.</p>\n<h2><span class=\"mw-headline\" id=\"Sessions_class\"\
      >Sessions class</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:Sessions?section=1\" title=\"Edit section: Sessions\
      \ class\">edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n\
      <p>This class manages all sessions</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code\
      \ mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n<pre class=\"de1\"\
      ><span class=\"kw1\">class</span> Sessions <span class=\"kw1\">extends</span>\
      \ <span class=\"kw8\">Object</span>;\n \n<span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>Session<span class=\"sy0\">&gt;</span> sessions;\n\
      \ \n<span class=\"co1\">// create a new session</span>\n<span class=\"kw1\"\
      >function</span> Session createSession<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n  sessions.<span class=\"me0\"\
      >length</span> <span class=\"sy0\">=</span> sessions.<span class=\"me0\">length</span><span\
      \ class=\"sy0\">+</span><span class=\"nu0\">1</span>;\n  sessions<span class=\"\
      br0\">[</span>sessions.<span class=\"me0\">length</span><span class=\"sy0\"\
      >-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"\
      sy0\">=</span> <span class=\"kw1\">new</span><span class=\"br0\">(</span><span\
      \ class=\"kw5\">None</span><span class=\"br0\">)</span> <span class=\"kw1\"\
      >class</span><span class=\"st0\">'Session'</span>;\n  sessions<span class=\"\
      br0\">[</span>sessions.<span class=\"me0\">length</span><span class=\"sy0\"\
      >-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"\
      me0\">Hash</span> <span class=\"sy0\">=</span> createSessionHash<span class=\"\
      br0\">(</span><span class=\"br0\">)</span>;\n  <span class=\"kw2\">return</span>\
      \ sessions<span class=\"br0\">[</span>sessions.<span class=\"me0\">length</span><span\
      \ class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"co1\">// get a session by it's\
      \ hash</span>\n<span class=\"kw1\">function</span> Session getSession<span class=\"\
      br0\">(</span><span class=\"kw5\">string</span> hash, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw5\">bool</span> bCreateNew<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n  <span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> i;\n  <span class=\"kw2\">for</span> <span class=\"br0\">(</span>i\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; i <span class=\"\
      sy0\">&lt;</span> sessions.<span class=\"me0\">length</span>; i<span class=\"\
      sy0\">++</span><span class=\"br0\">)</span>\n  <span class=\"br0\">{</span>\n\
      \    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>sessions<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">Hash</span>\
      \ <span class=\"sy0\">==</span> hash<span class=\"br0\">)</span> <span class=\"\
      kw2\">return</span> sessions<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span>;\n  <span class=\"br0\">}</span>\n  <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>bCreateNew<span class=\"br0\">)</span> <span class=\"\
      kw2\">return</span> createSession<span class=\"br0\">(</span><span class=\"\
      br0\">)</span>;\n  <span class=\"kw2\">return</span> <span class=\"kw5\">none</span>;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"co1\">// destroy an existing\
      \ session</span>\n<span class=\"kw1\">function</span> <span class=\"kw5\">bool</span>\
      \ destroySession<span class=\"br0\">(</span>Session session<span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i;\n  <span class=\"kw2\">for</span> <span\
      \ class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\
      \ i <span class=\"sy0\">&lt;</span> sessions.<span class=\"me0\">length</span>;\
      \ i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n  <span class=\"\
      br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>sessions<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">Hash</span>\
      \ <span class=\"sy0\">==</span> session.<span class=\"me0\">Hash</span><span\
      \ class=\"br0\">)</span> \n    <span class=\"br0\">{</span>\n      sessions.<span\
      \ class=\"me0\">Remove</span><span class=\"br0\">(</span>i, <span class=\"nu0\"\
      >1</span><span class=\"br0\">)</span>;\n      <span class=\"kw2\">return</span>\
      \ <span class=\"kw6\">true</span>;\n    <span class=\"br0\">}</span>\n  <span\
      \ class=\"br0\">}</span>\n  <span class=\"kw2\">return</span> <span class=\"\
      kw6\">false</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"co1\">//\
      \ create a unique session hash</span>\n<span class=\"kw1\">function</span> <span\
      \ class=\"kw1\">private</span> <span class=\"kw5\">string</span> createSessionHash<span\
      \ class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \  <span class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n  <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">string</span> temphash;\n \n\
      \  <span class=\"kw2\">do</span> <span class=\"br0\">{</span>\n    temphash\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Right</span><span class=\"\
      br0\">(</span><span class=\"st0\">\"00000\"</span><span class=\"sy0\">$</span>string<span\
      \ class=\"br0\">(</span><span class=\"kw3\">Rand</span><span class=\"br0\">(</span><span\
      \ class=\"nu0\">65536</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"\
      sy0\">$</span>Right<span class=\"br0\">(</span><span class=\"st0\">\"00000\"\
      </span><span class=\"sy0\">$</span>string<span class=\"br0\">(</span><span class=\"\
      kw3\">Rand</span><span class=\"br0\">(</span><span class=\"nu0\">65536</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"nu0\">5</span><span\
      \ class=\"br0\">)</span>;\n    <span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; i\
      \ <span class=\"sy0\">&lt;</span> sessions.<span class=\"me0\">length</span>;\
      \ i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n    <span class=\"\
      br0\">{</span>\n      <span class=\"kw2\">if</span> <span class=\"br0\">(</span>sessions<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">hash</span>\
      \ <span class=\"sy0\">==</span> temphash<span class=\"br0\">)</span> <span class=\"\
      kw2\">break</span>;\n    <span class=\"br0\">}</span>\n  <span class=\"br0\"\
      >}</span> until <span class=\"br0\">(</span>i <span class=\"sy0\">==</span>\
      \ sessions.<span class=\"me0\">length</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"kw2\">return</span> temphash;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Session_class\">Session class</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Sessions?section=2\" title=\"Edit section: Session class\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>This\
      \ class will contain the data for a single session.</p>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"kw1\">class</span> Session <span class=\"kw1\"\
      >extends</span> <span class=\"kw8\">Object</span>;\n \n<span class=\"kw1\">struct</span>\
      \ export KeyValuePair\n<span class=\"br0\">{</span>\n    <span class=\"kw1\"\
      >var</span> <span class=\"kw5\">string</span> Key;\n    <span class=\"kw1\"\
      >var</span> <span class=\"kw5\">string</span> Value;\n<span class=\"br0\">}</span>;\n\
      \ \n<span class=\"co1\">// contains the unique identifier</span>\n<span class=\"\
      kw1\">var</span> <span class=\"kw5\">string</span> hash;\n<span class=\"co1\"\
      >// contains the data for this session</span>\n<span class=\"kw1\">var</span>\
      \ array<span class=\"sy0\">&lt;</span>KeyValuePair<span class=\"sy0\">&gt;</span>\
      \ Data;\n \n<span class=\"co1\">// get the value of a var name, return sdefault\
      \ if not found</span>\n<span class=\"co1\">// bFound is 1 when the value exists,\
      \ 0 otherwise</span>\n<span class=\"kw1\">function</span> <span class=\"kw5\"\
      >string</span> getValue<span class=\"br0\">(</span><span class=\"kw5\">string</span>\
      \ <span class=\"kw5\">name</span>, <span class=\"kw1\">optional</span> <span\
      \ class=\"kw5\">string</span> sdefault, <span class=\"kw1\">optional</span>\
      \ <span class=\"kw1\">out</span> <span class=\"kw5\">int</span> bFound<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw1\"\
      >local</span> <span class=\"kw5\">int</span> i;\n  bFound <span class=\"sy0\"\
      >=</span> <span class=\"kw6\">true</span>;\n  <span class=\"kw2\">for</span>\
      \ <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>; i<span class=\"sy0\">&lt;</span>data.<span class=\"me0\">length</span>;\
      \ i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n  <span class=\"\
      br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"br0\">(</span>data<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">key</span>\
      \ <span class=\"sy0\">==</span> <span class=\"kw5\">name</span><span class=\"\
      br0\">)</span> <span class=\"kw2\">return</span> data<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">value</span>;\n  <span class=\"\
      br0\">}</span>\n  bFound <span class=\"sy0\">=</span> <span class=\"kw6\">false</span>;\n\
      \  <span class=\"kw2\">return</span> sdefault;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"co1\">// Set the value of a var name, if bAddIfNotExists it\
      \ will be added when it doesn't exist</span>\n<span class=\"co1\">// oldValue\
      \ will have the previous value</span>\n<span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">bool</span> setValue<span class=\"br0\">(</span><span class=\"\
      kw5\">string</span> <span class=\"kw5\">name</span>, <span class=\"kw5\">string</span>\
      \ value, <span class=\"kw5\">bool</span> bAddIfNotExists, <span class=\"kw1\"\
      >optional</span> <span class=\"kw1\">out</span> <span class=\"kw5\">string</span>\
      \ oldValue<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> i;\n  <span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>data.<span class=\"\
      me0\">length</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \  <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span> <span class=\"\
      br0\">(</span>data<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span\
      \ class=\"me0\">key</span> <span class=\"sy0\">==</span> <span class=\"kw5\"\
      >name</span><span class=\"br0\">)</span> \n    <span class=\"br0\">{</span>\n\
      \      oldValue <span class=\"sy0\">=</span> data<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>.<span class=\"me0\">value</span>;\n      data<span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">value</span>\
      \ <span class=\"sy0\">=</span> value;\n      <span class=\"kw2\">return</span>\
      \ <span class=\"kw6\">true</span>;\n    <span class=\"br0\">}</span>\n  <span\
      \ class=\"br0\">}</span>\n  <span class=\"kw2\">if</span> <span class=\"br0\"\
      >(</span>bAddIfNotExists<span class=\"br0\">)</span>\n  <span class=\"br0\"\
      >{</span>\n    data.<span class=\"me0\">length</span> <span class=\"sy0\">=</span>\
      \ data.<span class=\"me0\">length</span><span class=\"sy0\">+</span><span class=\"\
      nu0\">1</span>;\n    data<span class=\"br0\">[</span>data.<span class=\"me0\"\
      >length</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>.<span class=\"me0\">Key</span> <span class=\"sy0\"\
      >=</span> <span class=\"kw5\">name</span>;\n    data<span class=\"br0\">[</span>data.<span\
      \ class=\"me0\">length</span><span class=\"sy0\">-</span><span class=\"nu0\"\
      >1</span><span class=\"br0\">]</span>.<span class=\"me0\">Value</span> <span\
      \ class=\"sy0\">=</span> value;\n    <span class=\"kw2\">return</span> <span\
      \ class=\"kw6\">true</span>;\n  <span class=\"br0\">}</span>\n  <span class=\"\
      kw2\">return</span> <span class=\"kw6\">false</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"co1\">// Remove a value from the session</span>\n<span class=\"\
      kw1\">function</span> <span class=\"kw5\">bool</span> removeValue<span class=\"\
      br0\">(</span><span class=\"kw5\">string</span> <span class=\"kw5\">name</span>,\
      \ <span class=\"kw1\">optional</span> <span class=\"kw1\">out</span> <span class=\"\
      kw5\">string</span> oldValue<span class=\"br0\">)</span>\n<span class=\"br0\"\
      >{</span>\n  <span class=\"kw1\">local</span> <span class=\"kw5\">int</span>\
      \ i;\n  <span class=\"kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span>data.<span\
      \ class=\"me0\">length</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n  <span class=\"br0\">{</span>\n    <span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>data<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span>.<span class=\"me0\">key</span> <span class=\"sy0\">==</span>\
      \ <span class=\"kw5\">name</span><span class=\"br0\">)</span> \n    <span class=\"\
      br0\">{</span>\n      oldValue <span class=\"sy0\">=</span> data<span class=\"\
      br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me0\">value</span>;\n\
      \      data.<span class=\"me0\">remove</span><span class=\"br0\">(</span>i,\
      \ <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n      <span class=\"\
      kw2\">return</span> <span class=\"kw6\">true</span>;\n    <span class=\"br0\"\
      >}</span>\n  <span class=\"br0\">}</span>\n  <span class=\"kw2\">return</span>\
      \ <span class=\"kw6\">false</span>;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"Example_usage\">Example usage</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:Sessions?section=3\" title=\"Edit section: Example usage\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Let's\
      \ say you have made a custom <a href=\"/Legacy:QueryHandler\" title=\"Legacy:QueryHandler\"\
      >QueryHandler</a> and you need to keep track of some changes before submitting\
      \ them.</p>\n<div dir=\"ltr\" class=\"mw-geshi mw-code mw-content-ltr\">\n<div\
      \ class=\"uscript source-uscript\">\n<pre class=\"de1\"><span class=\"kw1\"\
      >class</span> MyQueryHandler <span class=\"kw1\">extends</span> xWebQueryHandler;\n\
      \ \n<span class=\"kw1\">var</span> Sessions sessions;\n \n<span class=\"kw1\"\
      >function</span> <span class=\"kw5\">bool</span> Init<span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw6\"\
      >Super</span>.<span class=\"me0\">Init</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">)</span>;\n  sessions <span class=\"sy0\">=</span> <span class=\"\
      kw1\">new</span><span class=\"br0\">(</span><span class=\"kw5\">None</span><span\
      \ class=\"br0\">)</span> <span class=\"kw1\">class</span><span class=\"st0\"\
      >'Sessions'</span>;\n  <span class=\"kw2\">return</span> <span class=\"kw6\"\
      >true</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">bool</span> Query<span class=\"br0\">(</span><span class=\"\
      kw8\">WebRequest</span> Request, <span class=\"kw8\">WebResponse</span> Response<span\
      \ class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n  <span class=\"kw1\"\
      >local</span> session CurSession;\n  <span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">int</span> tempvalue;\n \n  CurSession <span class=\"sy0\">=</span>\
      \ sessions.<span class=\"me0\">getSession</span><span class=\"br0\">(</span>Request.<span\
      \ class=\"me0\">GetVariable</span><span class=\"br0\">(</span><span class=\"\
      st0\">\"sessionID\"</span><span class=\"br0\">)</span>, <span class=\"kw6\"\
      >true</span><span class=\"br0\">)</span>;\n  Response.<span class=\"me0\">Subst</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"sessionID\"</span>, CurSession.<span\
      \ class=\"me0\">hash</span><span class=\"br0\">)</span>; <span class=\"co1\"\
      >// replace %sessionID% with the session hash</span>\n \n  tempvalue <span class=\"\
      sy0\">=</span> <span class=\"kw5\">int</span><span class=\"br0\">(</span>CurSession.<span\
      \ class=\"me0\">getValue</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"pageVisits\"</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n  tempValue<span class=\"sy0\">++</span>;\n  tempvalue\
      \ <span class=\"sy0\">=</span> CurSession.<span class=\"me0\">setValue</span><span\
      \ class=\"br0\">(</span><span class=\"st0\">\"pageVisits\"</span>, <span class=\"\
      kw5\">string</span><span class=\"br0\">(</span>tempvalue<span class=\"br0\"\
      >)</span>, <span class=\"kw6\">true</span><span class=\"br0\">)</span>;\n  Response.<span\
      \ class=\"me0\">Subst</span><span class=\"br0\">(</span><span class=\"st0\"\
      >\"pageVisits\"</span>, <span class=\"kw5\">string</span><span class=\"br0\"\
      >(</span>tempvalue<span class=\"br0\">)</span><span class=\"br0\">)</span>;\n\
      \  <span class=\"co1\">// process the query</span>\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<p>Now you will only have to pass the sessionID to remember the variables</p>\n\
      <p>Example HTML file:</p>\n<pre> &lt;html&gt;\n &lt;body&gt;\n You have visited\
      \ this page %pageVisits% time(s)\n &lt;p&gt; \n &lt;a href=\"?sessionID=%sessionID%\"\
      &gt;include the session ID in a link like this&lt;/a&gt;\n &lt;p&gt;\n or this\
      \ to include it in a form\n &lt;form&gt;\n &lt;input type=\"hidden\" name=\"\
      sessionID\" value=\"%sessionID%\"&gt;\n &lt;input type=\"submit\"&gt;\n &lt;/form&gt;\n\
      \ &lt;/body&gt;\n &lt;/html&gt;\n</pre>\n<!-- \nNewPP limit report\nCPU time\
      \ usage: 0.100 seconds\nReal time usage: 0.102 seconds\nPreprocessor visited\
      \ node count: 32/1000000\nPreprocessor generated node count: 76/1000000\nPost‐\
      expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\n\
      Highest expansion depth: 2/40\nExpensive parser function count: 0/100\n-->\n\
      \n<!-- \nTransclusion expansion time report (%,ms,calls,template)\n100.00% \
      \   0.000      1 - -total\n-->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2809-0!*!0!!*!*!*\
      \ and timestamp 20221118094655 and revision id 7522\n -->\n"
  categories: []
  links:
  - ns: 100
    exists: true
    name: "Legacy:QueryHandler"
  templates: []
  images: []
  externallinks: []
  sections:
  - toclevel: 1
    level: "2"
    line: "Sessions class"
    number: "1"
    index: "1"
    fromtitle: "Legacy:Sessions"
    byteoffset: 246
    anchor: "Sessions_class"
  - toclevel: 1
    level: "2"
    line: "Session class"
    number: "2"
    index: "2"
    fromtitle: "Legacy:Sessions"
    byteoffset: 1553
    anchor: "Session_class"
  - toclevel: 1
    level: "2"
    line: "Example usage"
    number: "3"
    index: "3"
    fromtitle: "Legacy:Sessions"
    byteoffset: 3132
    anchor: "Example_usage"
  displaytitle: "Legacy:Sessions"
  iwlinks: []
  wikitext:
    text: "Here's an example on how to implement sessions into your application.\n\
      \nSessions are usefull to keep a record of variables per user/session. Sessions\
      \ are often used in web pages to keep track of temporary user settings when\
      \ they visit your site.\n\n==Sessions class ==\n\nThis class manages all sessions\n\
      \n<uscript>\nclass Sessions extends Object;\n\nvar array<Session> sessions;\n\
      \n// create a new session\nfunction Session createSession()\n{\n  sessions.length\
      \ = sessions.length+1;\n  sessions[sessions.length-1] = new(None) class'Session';\n\
      \  sessions[sessions.length-1].Hash = createSessionHash();\n  return sessions[sessions.length-1];\n\
      }\n\n// get a session by it's hash\nfunction Session getSession(string hash,\
      \ optional bool bCreateNew)\n{\n  local int i;\n  for (i = 0; i < sessions.length;\
      \ i++)\n  {\n    if (sessions[i].Hash == hash) return sessions[i];\n  }\n  if\
      \ (bCreateNew) return createSession();\n  return none;\n}\n\n// destroy an existing\
      \ session\nfunction bool destroySession(Session session)\n{\n  local int i;\n\
      \  for (i = 0; i < sessions.length; i++)\n  {\n    if (sessions[i].Hash == session.Hash)\
      \ \n    {\n      sessions.Remove(i, 1);\n      return true;\n    }\n  }\n  return\
      \ false;\n}\n\n// create a unique session hash\nfunction private string createSessionHash()\n\
      {\n  local int i;\n  local string temphash;\n\n  do {\n    temphash = Right(\"\
      00000\"$string(Rand(65536)), 5)$Right(\"00000\"$string(Rand(65536)), 5);\n \
      \   for (i = 0; i < sessions.length; i++)\n    {\n      if (sessions[i].hash\
      \ == temphash) break;\n    }\n  } until (i == sessions.length);\n  return temphash;\n\
      }\n</uscript>\n\n==Session class ==\n\nThis class will contain the data for\
      \ a single session.\n\n<uscript>\nclass Session extends Object;\n\nstruct export\
      \ KeyValuePair\n{\n    var string Key;\n    var string Value;\n};\n\n// contains\
      \ the unique identifier\nvar string hash;\n// contains the data for this session\n\
      var array<KeyValuePair> Data;\n\n// get the value of a var name, return sdefault\
      \ if not found\n// bFound is 1 when the value exists, 0 otherwise\nfunction\
      \ string getValue(string name, optional string sdefault, optional out int bFound)\n\
      {\n  local int i;\n  bFound = true;\n  for (i = 0; i<data.length; i++)\n  {\n\
      \    if (data[i].key == name) return data[i].value;\n  }\n  bFound = false;\n\
      \  return sdefault;\n}\n\n// Set the value of a var name, if bAddIfNotExists\
      \ it will be added when it doesn't exist\n// oldValue will have the previous\
      \ value\nfunction bool setValue(string name, string value, bool bAddIfNotExists,\
      \ optional out string oldValue)\n{\n  local int i;\n  for (i = 0; i<data.length;\
      \ i++)\n  {\n    if (data[i].key == name) \n    {\n      oldValue = data[i].value;\n\
      \      data[i].value = value;\n      return true;\n    }\n  }\n  if (bAddIfNotExists)\n\
      \  {\n    data.length = data.length+1;\n    data[data.length-1].Key = name;\n\
      \    data[data.length-1].Value = value;\n    return true;\n  }\n  return false;\n\
      }\n\n// Remove a value from the session\nfunction bool removeValue(string name,\
      \ optional out string oldValue)\n{\n  local int i;\n  for (i = 0; i<data.length;\
      \ i++)\n  {\n    if (data[i].key == name) \n    {\n      oldValue = data[i].value;\n\
      \      data.remove(i, 1);\n      return true;\n    }\n  }\n  return false;\n\
      }\n</uscript>\n\n==Example usage ==\n\nLet's say you have made a custom [[Legacy:QueryHandler|QueryHandler]]\
      \ and you need to keep track of some changes before submitting them.\n\n<uscript>\n\
      class MyQueryHandler extends xWebQueryHandler;\n\nvar Sessions sessions;\n\n\
      function bool Init()\n{\n  Super.Init();\n  sessions = new(None) class'Sessions';\n\
      \  return true;\n}\n\nfunction bool Query(WebRequest Request, WebResponse Response)\n\
      {\n  local session CurSession;\n  local int tempvalue;\n\n  CurSession = sessions.getSession(Request.GetVariable(\"\
      sessionID\"), true);\n  Response.Subst(\"sessionID\", CurSession.hash); // replace\
      \ %sessionID% with the session hash\n\n  tempvalue = int(CurSession.getValue(\"\
      pageVisits\", 0));\n  tempValue++;\n  tempvalue = CurSession.setValue(\"pageVisits\"\
      , string(tempvalue), true);\n  Response.Subst(\"pageVisits\", string(tempvalue));\n\
      \  // process the query\n}\n</uscript>\n\nNow you will only have to pass the\
      \ sessionID to remember the variables\n\nExample HTML file:\n\n  &lt;html>\n\
      \  &lt;body>\n  You have visited this page %pageVisits% time(s)\n  &lt;p> \n\
      \  &lt;a href=\"?sessionID=%sessionID%\">include the session ID in a link like\
      \ this&lt;/a>\n  &lt;p>\n  or this to include it in a form\n  &lt;form>\n  &lt;input\
      \ type=\"hidden\" name=\"sessionID\" value=\"%sessionID%\">\n  &lt;input type=\"\
      submit\">\n  &lt;/form>\n  &lt;/body>\n  &lt;/html>"
  properties: []
  revId: 7522
name: "Legacy:Sessions"
revision:
  revid: 7522
  parentid: 7523
  user: "El Muerte TDS"
  timestamp: 1039426887.000000000
  comment: "*"
timestamp: 1668764816.674526000
