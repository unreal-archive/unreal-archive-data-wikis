---
parse:
  title: "Legacy:MD5"
  text:
    text: "<p>MD5 was developed by <a rel=\"nofollow\" class=\"external text\" href=\"\
      http://theory.lcs.mit.edu/~rivest/homepage.html\">Professor Ronald L. Rivest\
      \ of MIT</a></p>\n<p>The MD5 algorithm takes as input a message of arbitrary\
      \ length and produces as output a 128-bit \"fingerprint\" or \"message digest\"\
      \ of the input. It is conjectured that it is computationally infeasible to produce\
      \ two messages having the same message digest, or to produce any message having\
      \ a given prespecified target message digest. The MD5 algorithm is intended\
      \ for digital signature applications, where a large file must be \"compressed\"\
      \ in a secure manner before being encrypted with a private (secret) key under\
      \ a public-key cryptosystem such as <a href=\"/Legacy:RSA\" title=\"Legacy:RSA\"\
      >RSA</a>.</p>\n<p></p>\n<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\"\
      >\n<h2>Contents</h2>\n</div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a\
      \ href=\"#Code\"><span class=\"tocnumber\">1</span> <span class=\"toctext\"\
      >Code</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#License\"\
      ><span class=\"tocnumber\">2</span> <span class=\"toctext\">License</span></a></li>\n\
      <li class=\"toclevel-1 tocsection-3\"><a href=\"#Discussion\"><span class=\"\
      tocnumber\">3</span> <span class=\"toctext\">Discussion</span></a></li>\n<li\
      \ class=\"toclevel-1 tocsection-4\"><a href=\"#Related_Articles\"><span class=\"\
      tocnumber\">4</span> <span class=\"toctext\">Related Articles</span></a></li>\n\
      </ul>\n</div>\n<p></p>\n<h2><span class=\"mw-headline\" id=\"Code\">Code</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:MD5?section=1\" title=\"Edit section: Code\">edit</a><span\
      \ class=\"mw-editsection-bracket\">]</span></span></h2>\n<div dir=\"ltr\" class=\"\
      mw-geshi mw-code mw-content-ltr\">\n<div class=\"uscript source-uscript\">\n\
      <pre class=\"de1\"><span class=\"coMULTI\">/** MD5 context */</span>\n<span\
      \ class=\"kw1\">struct</span> MD5_CTX\n<span class=\"br0\">{</span>\n\t<span\
      \ class=\"coMULTI\">/** state (ABCD) */</span>\n\t<span class=\"kw1\">var</span>\
      \ array<span class=\"sy0\">&lt;</span>int<span class=\"sy0\">&gt;</span> <span\
      \ class=\"kw1\">state</span>;\n\t<span class=\"coMULTI\">/** number of bits,\
      \ modulo 2^64 (lsb first) */</span>\n\t<span class=\"kw1\">var</span> array<span\
      \ class=\"sy0\">&lt;</span>int<span class=\"sy0\">&gt;</span> count;\n\t<span\
      \ class=\"coMULTI\">/** input buffer */</span>\n\t<span class=\"kw1\">var</span>\
      \ array<span class=\"sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> buffer;\n\
      <span class=\"br0\">}</span>;\n \n<span class=\"coMULTI\">/** return the MD5\
      \ of the input string */</span>\n<span class=\"kw1\">static</span> <span class=\"\
      kw1\">function</span> <span class=\"kw5\">string</span> MD5String <span class=\"\
      br0\">(</span><span class=\"kw5\">string</span> str<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> MD5_CTX context;\n\
      \t<span class=\"kw1\">local</span> array<span class=\"sy0\">&lt;</span>byte<span\
      \ class=\"sy0\">&gt;</span> digest;\n\t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">string</span> Hex;\n\t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">int</span> i;\n \n\tMD5Init <span class=\"br0\">(</span>context<span\
      \ class=\"br0\">)</span>;\n\tMD5Update <span class=\"br0\">(</span>context,\
      \ str, <span class=\"kw3\">Len</span><span class=\"br0\">(</span>str<span class=\"\
      br0\">)</span><span class=\"br0\">)</span>;\n\tdigest.<span class=\"me0\">Length</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">16</span>;\n\tMD5Final <span\
      \ class=\"br0\">(</span>digest, context<span class=\"br0\">)</span>;\n \n\t\
      <span class=\"kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span>\
      \ <span class=\"nu0\">16</span>; i<span class=\"sy0\">++</span><span class=\"\
      br0\">)</span>\n\t\tHex <span class=\"sy0\">=</span> Hex <span class=\"sy0\"\
      >$</span> DecToHex<span class=\"br0\">(</span>digest<span class=\"br0\">[</span>i<span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;\n\
      \ \n\t<span class=\"kw2\">return</span> Hex;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"coMULTI\">/** initialize the MD5 context */</span>\n<span\
      \ class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> MD5Init<span class=\"br0\">(</span><span class=\"kw1\"\
      >out</span> MD5_CTX context<span class=\"br0\">)</span>\n<span class=\"br0\"\
      >{</span>\n\tcontext.<span class=\"me0\">count</span>.<span class=\"me0\">Length</span>\
      \ <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>;\n\tcontext.<span\
      \ class=\"me0\">count</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"\
      nu0\">0</span>;\n\tcontext.<span class=\"me0\">count</span><span class=\"br0\"\
      >[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"\
      sy0\">=</span> <span class=\"nu0\">0</span>;\n\tcontext.<span class=\"kw1\"\
      >state</span>.<span class=\"me0\">Length</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">4</span>;\n\tcontext.<span class=\"kw1\">state</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> 0x67452301;\n\tcontext.<span class=\"kw1\">state</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> 0xefcdab89;\n\tcontext.<span class=\"kw1\">state</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> 0x98badcfe;\n\tcontext.<span class=\"kw1\">state</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> 0x10325476;\n\tcontext.<span class=\"me0\">buffer</span>.<span\
      \ class=\"me0\">Length</span> <span class=\"sy0\">=</span> <span class=\"nu0\"\
      >64</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> MD5Transform<span\
      \ class=\"br0\">(</span><span class=\"kw1\">out</span> array<span class=\"sy0\"\
      >&lt;</span>int<span class=\"sy0\">&gt;</span> Buf, array<span class=\"sy0\"\
      >&lt;</span>byte<span class=\"sy0\">&gt;</span> block<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> A,B,C,D;\n\t<span class=\"kw1\">local</span> array<span class=\"\
      sy0\">&lt;</span>int<span class=\"sy0\">&gt;</span> x;\n \n\tA <span class=\"\
      sy0\">=</span> Buf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>;\n\tB <span class=\"sy0\">=</span> Buf<span class=\"\
      br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>;\n\t\
      C <span class=\"sy0\">=</span> Buf<span class=\"br0\">[</span><span class=\"\
      nu0\">2</span><span class=\"br0\">]</span>;\n\tD <span class=\"sy0\">=</span>\
      \ Buf<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"\
      br0\">]</span>;\n \n\tx.<span class=\"me0\">Length</span> <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">16</span>;\n \n\tDecode <span class=\"br0\">(</span>x,\
      \ block, <span class=\"nu0\">64</span><span class=\"br0\">)</span>;\n \n\t<span\
      \ class=\"coMULTI\">/* Round 1 */</span>\n\tFF <span class=\"br0\">(</span>a,\
      \ b, c, d, x<span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>,  <span class=\"nu0\">7</span>, 0xd76aa478<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 1 */</span>\n\tFF <span class=\"br0\"\
      >(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">12</span>, 0xe8c7b756<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 2 */</span>\n\tFF <span class=\"\
      br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >2</span><span class=\"br0\">]</span>, <span class=\"nu0\">17</span>, 0x242070db<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 3 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">3</span><span class=\"br0\">]</span>, <span class=\"nu0\">22</span>, 0xc1bdceee<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 4 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">4</span><span class=\"br0\">]</span>,  <span class=\"nu0\">7</span>, 0xf57c0faf<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 5 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">5</span><span class=\"br0\">]</span>, <span class=\"nu0\">12</span>, 0x4787c62a<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 6 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">6</span><span class=\"br0\">]</span>, <span class=\"nu0\">17</span>, 0xa8304613<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 7 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">7</span><span class=\"br0\">]</span>, <span class=\"nu0\">22</span>, 0xfd469501<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 8 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">8</span><span class=\"br0\">]</span>,  <span class=\"nu0\">7</span>, 0x698098d8<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 9 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"\
      nu0\">9</span><span class=\"br0\">]</span>, <span class=\"nu0\">12</span>, 0x8b44f7af<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 10 */</span>\n\tFF <span\
      \ class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span class=\"\
      nu0\">10</span><span class=\"br0\">]</span>, <span class=\"nu0\">17</span>,\
      \ 0xffff5bb1<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 11 */</span>\n\
      \tFF <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">11</span><span class=\"br0\">]</span>, <span class=\"nu0\">22</span>,\
      \ 0x895cd7be<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 12 */</span>\n\
      \tFF <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">12</span><span class=\"br0\">]</span>,  <span class=\"nu0\"\
      >7</span>, 0x6b901122<span class=\"br0\">)</span>; <span class=\"coMULTI\">/*\
      \ 13 */</span>\n\tFF <span class=\"br0\">(</span>d, a, b, c, x<span class=\"\
      br0\">[</span><span class=\"nu0\">13</span><span class=\"br0\">]</span>, <span\
      \ class=\"nu0\">12</span>, 0xfd987193<span class=\"br0\">)</span>; <span class=\"\
      coMULTI\">/* 14 */</span>\n\tFF <span class=\"br0\">(</span>c, d, a, b, x<span\
      \ class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"br0\">]</span>,\
      \ <span class=\"nu0\">17</span>, 0xa679438e<span class=\"br0\">)</span>; <span\
      \ class=\"coMULTI\">/* 15 */</span>\n\tFF <span class=\"br0\">(</span>b, c,\
      \ d, a, x<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"\
      br0\">]</span>, <span class=\"nu0\">22</span>, 0x49b40821<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 16 */</span>\n \n\t<span class=\"coMULTI\"\
      >/* Round 2 */</span>\n\tGG <span class=\"br0\">(</span>a, b, c, d, x<span class=\"\
      br0\">[</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>,  <span\
      \ class=\"nu0\">5</span>, 0xf61e2562<span class=\"br0\">)</span>; <span class=\"\
      coMULTI\">/* 17 */</span>\n\tGG <span class=\"br0\">(</span>d, a, b, c, x<span\
      \ class=\"br0\">[</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span>,\
      \  <span class=\"nu0\">9</span>, 0xc040b340<span class=\"br0\">)</span>; <span\
      \ class=\"coMULTI\">/* 18 */</span>\n\tGG <span class=\"br0\">(</span>c, d,\
      \ a, b, x<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"\
      br0\">]</span>, <span class=\"nu0\">14</span>, 0x265e5a51<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 19 */</span>\n\tGG <span class=\"br0\"\
      >(</span>b, c, d, a, x<span class=\"br0\">[</span> <span class=\"nu0\">0</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">20</span>, 0xe9b6c7aa<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 20 */</span>\n\tGG <span class=\"\
      br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >5</span><span class=\"br0\">]</span>,  <span class=\"nu0\">5</span>, 0xd62f105d<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 21 */</span>\n\tGG <span\
      \ class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span><span class=\"\
      nu0\">10</span><span class=\"br0\">]</span>,  <span class=\"nu0\">9</span>,\
      \  0x2441453<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 22 */</span>\n\
      \tGG <span class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">15</span><span class=\"br0\">]</span>, <span class=\"nu0\">14</span>,\
      \ 0xd8a1e681<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 23 */</span>\n\
      \tGG <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">4</span><span class=\"br0\">]</span>, <span class=\"nu0\">20</span>,\
      \ 0xe7d3fbc8<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 24 */</span>\n\
      \tGG <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">9</span><span class=\"br0\">]</span>,  <span class=\"nu0\">5</span>,\
      \ 0x21e1cde6<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 25 */</span>\n\
      \tGG <span class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">14</span><span class=\"br0\">]</span>,  <span class=\"nu0\"\
      >9</span>, 0xc33707d6<span class=\"br0\">)</span>; <span class=\"coMULTI\">/*\
      \ 26 */</span>\n\tGG <span class=\"br0\">(</span>c, d, a, b, x<span class=\"\
      br0\">[</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>, <span\
      \ class=\"nu0\">14</span>, 0xf4d50d87<span class=\"br0\">)</span>; <span class=\"\
      coMULTI\">/* 27 */</span>\n\tGG <span class=\"br0\">(</span>b, c, d, a, x<span\
      \ class=\"br0\">[</span> <span class=\"nu0\">8</span><span class=\"br0\">]</span>,\
      \ <span class=\"nu0\">20</span>, 0x455a14ed<span class=\"br0\">)</span>; <span\
      \ class=\"coMULTI\">/* 28 */</span>\n\tGG <span class=\"br0\">(</span>a, b,\
      \ c, d, x<span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"\
      br0\">]</span>,  <span class=\"nu0\">5</span>, 0xa9e3e905<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 29 */</span>\n\tGG <span class=\"br0\"\
      >(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"nu0\">2</span><span\
      \ class=\"br0\">]</span>,  <span class=\"nu0\">9</span>, 0xfcefa3f8<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 30 */</span>\n\tGG <span class=\"\
      br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >7</span><span class=\"br0\">]</span>, <span class=\"nu0\">14</span>, 0x676f02d9<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 31 */</span>\n\tGG <span\
      \ class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span><span class=\"\
      nu0\">12</span><span class=\"br0\">]</span>, <span class=\"nu0\">20</span>,\
      \ 0x8d2a4c8a<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 32 */</span>\n\
      \ \n\t<span class=\"coMULTI\">/* Round 3 */</span>\n\tHH <span class=\"br0\"\
      >(</span>a, b, c, d, x<span class=\"br0\">[</span> <span class=\"nu0\">5</span><span\
      \ class=\"br0\">]</span>,  <span class=\"nu0\">4</span>, 0xfffa3942<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 33 */</span>\n\tHH <span class=\"\
      br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >8</span><span class=\"br0\">]</span>, <span class=\"nu0\">11</span>, 0x8771f681<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 34 */</span>\n\tHH <span\
      \ class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span class=\"\
      nu0\">11</span><span class=\"br0\">]</span>, <span class=\"nu0\">16</span>,\
      \ 0x6d9d6122<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 35 */</span>\n\
      \tHH <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">14</span><span class=\"br0\">]</span>, <span class=\"nu0\">23</span>,\
      \ 0xfde5380c<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 36 */</span>\n\
      \tHH <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>,  <span class=\"nu0\">4</span>,\
      \ 0xa4beea44<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 37 */</span>\n\
      \tHH <span class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">4</span><span class=\"br0\">]</span>, <span class=\"nu0\">11</span>,\
      \ 0x4bdecfa9<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 38 */</span>\n\
      \tHH <span class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">7</span><span class=\"br0\">]</span>, <span class=\"nu0\">16</span>,\
      \ 0xf6bb4b60<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 39 */</span>\n\
      \tHH <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">10</span><span class=\"br0\">]</span>, <span class=\"nu0\">23</span>,\
      \ 0xbebfbc70<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 40 */</span>\n\
      \tHH <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">13</span><span class=\"br0\">]</span>,  <span class=\"nu0\"\
      >4</span>, 0x289b7ec6<span class=\"br0\">)</span>; <span class=\"coMULTI\">/*\
      \ 41 */</span>\n\tHH <span class=\"br0\">(</span>d, a, b, c, x<span class=\"\
      br0\">[</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>, <span\
      \ class=\"nu0\">11</span>, 0xeaa127fa<span class=\"br0\">)</span>; <span class=\"\
      coMULTI\">/* 42 */</span>\n\tHH <span class=\"br0\">(</span>c, d, a, b, x<span\
      \ class=\"br0\">[</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>,\
      \ <span class=\"nu0\">16</span>, 0xd4ef3085<span class=\"br0\">)</span>; <span\
      \ class=\"coMULTI\">/* 43 */</span>\n\tHH <span class=\"br0\">(</span>b, c,\
      \ d, a, x<span class=\"br0\">[</span> <span class=\"nu0\">6</span><span class=\"\
      br0\">]</span>, <span class=\"nu0\">23</span>,  0x4881d05<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 44 */</span>\n\tHH <span class=\"br0\"\
      >(</span>a, b, c, d, x<span class=\"br0\">[</span> <span class=\"nu0\">9</span><span\
      \ class=\"br0\">]</span>,  <span class=\"nu0\">4</span>, 0xd9d4d039<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 45 */</span>\n\tHH <span class=\"\
      br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span><span class=\"nu0\">12</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">11</span>, 0xe6db99e5<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 46 */</span>\n\tHH <span class=\"\
      br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span class=\"nu0\">15</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">16</span>, 0x1fa27cf8<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 47 */</span>\n\tHH <span class=\"\
      br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >2</span><span class=\"br0\">]</span>, <span class=\"nu0\">23</span>, 0xc4ac5665<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 48 */</span>\n \n\t<span\
      \ class=\"coMULTI\">/* Round 4 */</span>\n\tII <span class=\"br0\">(</span>a,\
      \ b, c, d, x<span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"\
      br0\">]</span>,  <span class=\"nu0\">6</span>, 0xf4292244<span class=\"br0\"\
      >)</span>; <span class=\"coMULTI\">/* 49 */</span>\n\tII <span class=\"br0\"\
      >(</span>d, a, b, c, x<span class=\"br0\">[</span> <span class=\"nu0\">7</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">10</span>, 0x432aff97<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 50 */</span>\n\tII <span class=\"\
      br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span class=\"nu0\">14</span><span\
      \ class=\"br0\">]</span>, <span class=\"nu0\">15</span>, 0xab9423a7<span class=\"\
      br0\">)</span>; <span class=\"coMULTI\">/* 51 */</span>\n\tII <span class=\"\
      br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span class=\"nu0\"\
      >5</span><span class=\"br0\">]</span>, <span class=\"nu0\">21</span>, 0xfc93a039<span\
      \ class=\"br0\">)</span>; <span class=\"coMULTI\">/* 52 */</span>\n\tII <span\
      \ class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span><span class=\"\
      nu0\">12</span><span class=\"br0\">]</span>,  <span class=\"nu0\">6</span>,\
      \ 0x655b59c3<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 53 */</span>\n\
      \tII <span class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span>, <span class=\"nu0\">10</span>,\
      \ 0x8f0ccc92<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 54 */</span>\n\
      \tII <span class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">10</span><span class=\"br0\">]</span>, <span class=\"nu0\">15</span>,\
      \ 0xffeff47d<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 55 */</span>\n\
      \tII <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"nu0\">21</span>,\
      \ 0x85845dd1<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 56 */</span>\n\
      \tII <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">8</span><span class=\"br0\">]</span>,  <span class=\"nu0\">6</span>,\
      \ 0x6fa87e4f<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 57 */</span>\n\
      \tII <span class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">15</span><span class=\"br0\">]</span>, <span class=\"nu0\">10</span>,\
      \ 0xfe2ce6e0<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 58 */</span>\n\
      \tII <span class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">6</span><span class=\"br0\">]</span>, <span class=\"nu0\">15</span>,\
      \ 0xa3014314<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 59 */</span>\n\
      \tII <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">13</span><span class=\"br0\">]</span>, <span class=\"nu0\">21</span>,\
      \ 0x4e0811a1<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 60 */</span>\n\
      \tII <span class=\"br0\">(</span>a, b, c, d, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">4</span><span class=\"br0\">]</span>,  <span class=\"nu0\">6</span>,\
      \ 0xf7537e82<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 61 */</span>\n\
      \tII <span class=\"br0\">(</span>d, a, b, c, x<span class=\"br0\">[</span><span\
      \ class=\"nu0\">11</span><span class=\"br0\">]</span>, <span class=\"nu0\">10</span>,\
      \ 0xbd3af235<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 62 */</span>\n\
      \tII <span class=\"br0\">(</span>c, d, a, b, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">2</span><span class=\"br0\">]</span>, <span class=\"nu0\">15</span>,\
      \ 0x2ad7d2bb<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 63 */</span>\n\
      \tII <span class=\"br0\">(</span>b, c, d, a, x<span class=\"br0\">[</span> <span\
      \ class=\"nu0\">9</span><span class=\"br0\">]</span>, <span class=\"nu0\">21</span>,\
      \ 0xeb86d391<span class=\"br0\">)</span>; <span class=\"coMULTI\">/* 64 */</span>\n\
      \ \n\tBuf<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">+=</span> A;\n\tBuf<span class=\"br0\">[</span><span\
      \ class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span>\
      \ B;\n\tBuf<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"\
      br0\">]</span> <span class=\"sy0\">+=</span> C;\n\tBuf<span class=\"br0\">[</span><span\
      \ class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span>\
      \ D;\n<span class=\"br0\">}</span>\n \n<span class=\"coMULTI\">/** update MD5\
      \ context */</span>\n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> MD5Update<span class=\"br0\">(</span><span\
      \ class=\"kw1\">out</span> MD5_CTX Context, <span class=\"kw5\">string</span>\
      \ Data, <span class=\"kw5\">int</span> inputLen<span class=\"br0\">)</span>\n\
      <span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> <span class=\"\
      kw5\">int</span> i, index, partlen;\n\t<span class=\"kw1\">local</span> array<span\
      \ class=\"sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> tmpbuf;\n \n\t\
      tmpbuf.<span class=\"me0\">Length</span> <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">64</span>;\n\tindex <span class=\"sy0\">=</span> <span class=\"\
      br0\">(</span><span class=\"br0\">(</span>context.<span class=\"me0\">count</span><span\
      \ class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"nu0\">3</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> 0x3F<span class=\"\
      br0\">)</span>;\n\t<span class=\"kw2\">if</span> <span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>context.<span class=\"me0\">count</span><span class=\"\
      br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span\
      \ class=\"sy0\">+=</span> <span class=\"br0\">(</span>inputLen <span class=\"\
      sy0\">&lt;&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\"\
      >(</span>inputLen <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">3</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>\n\t\tcontext.<span class=\"\
      me0\">count</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span><span class=\"sy0\">++</span>;\n\tcontext.<span class=\"\
      me0\">count</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>inputLen\
      \ <span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"nu0\">29</span><span\
      \ class=\"br0\">)</span>;\n\tpartLen <span class=\"sy0\">=</span> <span class=\"\
      nu0\">64</span> <span class=\"sy0\">-</span> index;\n \n\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>inputLen <span class=\"sy0\">&gt;=</span>\
      \ partLen<span class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\t\
      MD5Move<span class=\"br0\">(</span>Data, <span class=\"nu0\">0</span>, context.<span\
      \ class=\"me0\">buffer</span>, index, partLen<span class=\"br0\">)</span>;\n\
      \t\tMD5Transform <span class=\"br0\">(</span>context.<span class=\"kw1\">state</span>,\
      \ context.<span class=\"me0\">buffer</span><span class=\"br0\">)</span>;\n\t\
      \t<span class=\"kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"\
      sy0\">=</span> partLen; i <span class=\"sy0\">+</span> <span class=\"nu0\">63</span>\
      \ <span class=\"sy0\">&lt;</span> inputLen; i <span class=\"sy0\">+=</span>\
      \ <span class=\"nu0\">64</span><span class=\"br0\">)</span>\n\t\t<span class=\"\
      br0\">{</span>\n\t\t\tMD5Move<span class=\"br0\">(</span>Data, i, tmpbuf, <span\
      \ class=\"nu0\">0</span>, <span class=\"nu0\">64</span><span class=\"br0\">)</span>;\n\
      \t\t\tMD5Transform <span class=\"br0\">(</span>context.<span class=\"kw1\">state</span>,\
      \ tmpbuf<span class=\"br0\">)</span>;\n\t\t<span class=\"br0\">}</span>\n\t\t\
      index <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\t<span class=\"\
      br0\">}</span>\n\t<span class=\"kw2\">else</span>\n\t\ti <span class=\"sy0\"\
      >=</span> <span class=\"nu0\">0</span>;\n \n\tMD5Move<span class=\"br0\">(</span>Data,\
      \ i, context.<span class=\"me0\">buffer</span>, index, inputLen<span class=\"\
      sy0\">-</span>i<span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"coMULTI\">/** finalize the MD5 context */</span>\n<span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ MD5Final <span class=\"br0\">(</span><span class=\"kw1\">out</span> array<span\
      \ class=\"sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> digest, <span\
      \ class=\"kw1\">out</span> MD5_CTX context<span class=\"br0\">)</span>\n<span\
      \ class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span> array<span class=\"\
      sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> bits;\n\t<span class=\"\
      kw1\">local</span> <span class=\"kw5\">int</span> i, index, padLen;\n\t<span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">string</span> strbits;\n\t\
      <span class=\"kw1\">local</span> <span class=\"kw5\">string</span> PADDING;\n\
      \ \n\tPADDING <span class=\"sy0\">=</span> <span class=\"kw3\">chr</span><span\
      \ class=\"br0\">(</span>0x80<span class=\"br0\">)</span>;\n\t<span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">1</span>; i <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">64</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \t\tPADDING <span class=\"sy0\">=</span> PADDING<span class=\"sy0\">$</span>chr<span\
      \ class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>;\n\
      \ \n\tEncode <span class=\"br0\">(</span>bits, context.<span class=\"me0\">count</span>,\
      \ <span class=\"nu0\">8</span><span class=\"br0\">)</span>;\n \n\tindex <span\
      \ class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>context.<span\
      \ class=\"me0\">count</span><span class=\"br0\">[</span><span class=\"nu0\"\
      >0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;&gt;</span>\
      \ <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >&amp;</span> 0x3f<span class=\"br0\">)</span>;\n\t<span class=\"kw2\">if</span>\
      \ <span class=\"br0\">(</span>index <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">56</span><span class=\"br0\">)</span>\n\t\tpadLen <span class=\"sy0\"\
      >=</span> <span class=\"br0\">(</span><span class=\"nu0\">56</span> <span class=\"\
      sy0\">-</span> index<span class=\"br0\">)</span>;\n\t<span class=\"kw2\">else</span>\n\
      \t\tpadLen <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"\
      nu0\">120</span> <span class=\"sy0\">-</span> index<span class=\"br0\">)</span>;\n\
      \tMD5Update <span class=\"br0\">(</span>context, PADDING, padLen<span class=\"\
      br0\">)</span>;\n\tstrbits <span class=\"sy0\">=</span> <span class=\"st0\"\
      >\"\"</span>;\n\t<span class=\"kw2\">for</span> <span class=\"br0\">(</span>i<span\
      \ class=\"sy0\">=</span><span class=\"nu0\">0</span>;i<span class=\"sy0\">&lt;</span><span\
      \ class=\"nu0\">8</span>;i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \t\tstrbits <span class=\"sy0\">=</span> strbits<span class=\"sy0\">$</span>Chr<span\
      \ class=\"br0\">(</span>bits<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span><span class=\"br0\">)</span>;\n\tMD5Update <span class=\"br0\">(</span>context,\
      \ strbits, <span class=\"nu0\">8</span><span class=\"br0\">)</span>;\n\tEncode\
      \ <span class=\"br0\">(</span>digest, context.<span class=\"kw1\">state</span>,\
      \ <span class=\"nu0\">16</span><span class=\"br0\">)</span>;\n \n\t<span class=\"\
      kw2\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> <span class=\"\
      nu0\">64</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\tcontext.<span class=\"me0\">buffer</span><span\
      \ class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n\t<span class=\"br0\">}</span>\n<span class=\"\
      br0\">}</span>\n \n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span>\
      \ <span class=\"kw1\">function</span> Encode <span class=\"br0\">(</span><span\
      \ class=\"kw1\">out</span> array<span class=\"sy0\">&lt;</span>byte<span class=\"\
      sy0\">&gt;</span> output, array<span class=\"sy0\">&lt;</span>int<span class=\"\
      sy0\">&gt;</span> input, <span class=\"kw5\">int</span> <span class=\"kw3\"\
      >len</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> i, j;\n \n\ti <span\
      \ class=\"sy0\">=</span> <span class=\"nu0\">0</span>;\n\t<span class=\"kw2\"\
      >for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span\
      \ class=\"nu0\">0</span>; j <span class=\"sy0\">&lt;</span> <span class=\"kw3\"\
      >len</span>; j <span class=\"sy0\">+=</span> <span class=\"nu0\">4</span><span\
      \ class=\"br0\">)</span>\n\t<span class=\"br0\">{</span>\n\t\toutput<span class=\"\
      br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"br0\">(</span>input<span class=\"br0\">[</span>i<span class=\"br0\"\
      >]</span> <span class=\"sy0\">&amp;</span> 0xff<span class=\"br0\">)</span>;\n\
      \t\toutput<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"\
      nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"br0\">(</span><span class=\"br0\">(</span>input<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;</span> <span\
      \ class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span>\
      \ 0xff<span class=\"br0\">)</span>;\n\t\toutput<span class=\"br0\">[</span>j<span\
      \ class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\"\
      >(</span>input<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span\
      \ class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">16</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">&amp;</span> 0xff<span class=\"br0\">)</span>;\n\
      \t\toutput<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"\
      nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span\
      \ class=\"br0\">(</span><span class=\"br0\">(</span>input<span class=\"br0\"\
      >[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;</span> <span\
      \ class=\"nu0\">24</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span>\
      \ 0xff<span class=\"br0\">)</span>;\n\t\ti<span class=\"sy0\">++</span>;\n\t\
      <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n \n \n<span class=\"\
      kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ Decode<span class=\"br0\">(</span><span class=\"kw1\">out</span> array<span\
      \ class=\"sy0\">&lt;</span>int<span class=\"sy0\">&gt;</span> output, array<span\
      \ class=\"sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> input, <span\
      \ class=\"kw5\">int</span> <span class=\"kw3\">len</span><span class=\"br0\"\
      >)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">int</span> i, j;\n \n\ti <span class=\"sy0\">=</span>\
      \ <span class=\"nu0\">0</span>;\n\t<span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; j\
      \ <span class=\"sy0\">&lt;</span> <span class=\"kw3\">len</span>; j <span class=\"\
      sy0\">+=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>\n\t\
      <span class=\"br0\">{</span>\n\t\toutput<span class=\"br0\">[</span>i<span class=\"\
      br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>input<span class=\"br0\">[</span>j<span class=\"br0\"\
      >]</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"\
      br0\">(</span><span class=\"kw5\">int</span><span class=\"br0\">(</span>input<span\
      \ class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span\
      \ class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&lt;</span>\
      \ <span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\"\
      >|</span> <span class=\"br0\">(</span><span class=\"kw5\">int</span><span class=\"\
      br0\">(</span>input<span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span\
      \ class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">16</span><span class=\"\
      br0\">)</span> <span class=\"sy0\">|</span> <span class=\"br0\">(</span><span\
      \ class=\"kw5\">int</span><span class=\"br0\">(</span>input<span class=\"br0\"\
      >[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">3</span><span class=\"\
      br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&lt;</span>\
      \ <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\"\
      >)</span>;\n\t\ti<span class=\"sy0\">++</span>;\n\t<span class=\"br0\">}</span>\n\
      <span class=\"br0\">}</span>\n \n \n<span class=\"kw1\">static</span> <span\
      \ class=\"kw1\">final</span> <span class=\"kw1\">function</span> MD5Move<span\
      \ class=\"br0\">(</span><span class=\"kw5\">string</span> src, <span class=\"\
      kw5\">int</span> srcindex, <span class=\"kw1\">out</span> array<span class=\"\
      sy0\">&lt;</span>byte<span class=\"sy0\">&gt;</span> buffer, <span class=\"\
      kw5\">int</span> bufindex, <span class=\"kw5\">int</span> <span class=\"kw3\"\
      >len</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span\
      \ class=\"kw1\">local</span> <span class=\"kw5\">int</span> i,j;\n \n\tj <span\
      \ class=\"sy0\">=</span> bufindex;\n\t<span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>i <span class=\"sy0\">=</span> srcindex; i <span class=\"sy0\"\
      >&lt;</span> srcindex<span class=\"sy0\">+</span><span class=\"kw3\">len</span>;\
      \ i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\t<span class=\"\
      br0\">{</span>\n\t\tbuffer<span class=\"br0\">[</span>j<span class=\"br0\">]</span>\
      \ <span class=\"sy0\">=</span> <span class=\"kw3\">Asc</span><span class=\"\
      br0\">(</span><span class=\"kw3\">Mid</span><span class=\"br0\">(</span>src,\
      \ i, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"\
      br0\">)</span>;\n\t\tj<span class=\"sy0\">++</span>;\n\t\t<span class=\"kw2\"\
      >if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">==</span> <span\
      \ class=\"nu0\">64</span><span class=\"br0\">)</span>\n\t\t\t<span class=\"\
      kw2\">break</span>;\n\t<span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n\
      \ \n \n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">int</span> ROTATE_LEFT <span\
      \ class=\"br0\">(</span><span class=\"kw5\">int</span> x, <span class=\"kw5\"\
      >int</span> n<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t\
      <span class=\"kw2\">return</span> <span class=\"br0\">(</span><span class=\"\
      br0\">(</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span\
      \ class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">(</span>n<span class=\"\
      br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span\
      \ class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"br0\">(</span><span\
      \ class=\"nu0\">32</span><span class=\"sy0\">-</span><span class=\"br0\">(</span>n<span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\"\
      >static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ <span class=\"kw5\">int</span> F <span class=\"br0\">(</span><span class=\"\
      kw5\">int</span> x, <span class=\"kw5\">int</span> y, <span class=\"kw5\">int</span>\
      \ z<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span\
      \ class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span>\
      \ <span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span> <span class=\"sy0\">|</span> <span class=\"br0\">(</span><span class=\"\
      br0\">(</span>~x<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span>\
      \ <span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"br0\"\
      >)</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span\
      \ class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> <span class=\"kw5\">int</span> G <span class=\"br0\">(</span><span\
      \ class=\"kw5\">int</span> x, <span class=\"kw5\">int</span> y, <span class=\"\
      kw5\">int</span> z<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \t<span class=\"kw2\">return</span> <span class=\"br0\">(</span><span class=\"\
      br0\">(</span>x <span class=\"sy0\">&amp;</span> z<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">|</span> <span class=\"br0\">(</span>y <span class=\"\
      sy0\">&amp;</span> <span class=\"br0\">(</span>~z<span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span><span class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span\
      \ class=\"kw1\">function</span> <span class=\"kw5\">int</span> H <span class=\"\
      br0\">(</span><span class=\"kw5\">int</span> x, <span class=\"kw5\">int</span>\
      \ y, <span class=\"kw5\">int</span> z<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw2\">return</span> <span class=\"br0\">(</span>x\
      \ <span class=\"sy0\">^</span> y <span class=\"sy0\">^</span> z<span class=\"\
      br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\">static</span>\
      \ <span class=\"kw1\">final</span> <span class=\"kw1\">function</span> <span\
      \ class=\"kw5\">int</span> I <span class=\"br0\">(</span><span class=\"kw5\"\
      >int</span> x, <span class=\"kw5\">int</span> y, <span class=\"kw5\">int</span>\
      \ z<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\t<span class=\"\
      kw2\">return</span> <span class=\"br0\">(</span>y <span class=\"sy0\">^</span>\
      \ <span class=\"br0\">(</span>x <span class=\"sy0\">|</span> <span class=\"\
      br0\">(</span>~z<span class=\"br0\">)</span><span class=\"br0\">)</span><span\
      \ class=\"br0\">)</span>;\n<span class=\"br0\">}</span>\n \n<span class=\"kw1\"\
      >static</span> <span class=\"kw1\">final</span> <span class=\"kw1\">function</span>\
      \ FF<span class=\"br0\">(</span><span class=\"kw1\">out</span> <span class=\"\
      kw5\">int</span> a, <span class=\"kw5\">int</span> b, <span class=\"kw5\">int</span>\
      \ c, <span class=\"kw5\">int</span> d, <span class=\"kw5\">int</span> x, <span\
      \ class=\"kw5\">int</span> s, <span class=\"kw5\">int</span> ac<span class=\"\
      br0\">)</span>\n<span class=\"br0\">{</span>\n\ta <span class=\"sy0\">+=</span>\
      \ F<span class=\"br0\">(</span>b, c, d<span class=\"br0\">)</span> <span class=\"\
      sy0\">+</span> x <span class=\"sy0\">+</span> ac;\n\ta <span class=\"sy0\">=</span>\
      \ ROTATE_LEFT <span class=\"br0\">(</span>a, s<span class=\"br0\">)</span>;\n\
      \ta <span class=\"sy0\">+=</span> b;\n<span class=\"br0\">}</span>\n \n<span\
      \ class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"\
      kw1\">function</span> GG<span class=\"br0\">(</span><span class=\"kw1\">out</span>\
      \ <span class=\"kw5\">int</span> a, <span class=\"kw5\">int</span> b, <span\
      \ class=\"kw5\">int</span> c, <span class=\"kw5\">int</span> d, <span class=\"\
      kw5\">int</span> x, <span class=\"kw5\">int</span> s, <span class=\"kw5\">int</span>\
      \ ac<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\ta <span class=\"\
      sy0\">+=</span> G<span class=\"br0\">(</span>b, c, d<span class=\"br0\">)</span>\
      \ <span class=\"sy0\">+</span> x <span class=\"sy0\">+</span> ac;\n\ta <span\
      \ class=\"sy0\">=</span> rotate_left <span class=\"br0\">(</span>a, s<span class=\"\
      br0\">)</span> <span class=\"sy0\">+</span>b;\n<span class=\"br0\">}</span>\n\
      \ \n<span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span\
      \ class=\"kw1\">function</span> HH<span class=\"br0\">(</span><span class=\"\
      kw1\">out</span> <span class=\"kw5\">int</span> a, <span class=\"kw5\">int</span>\
      \ b, <span class=\"kw5\">int</span> c, <span class=\"kw5\">int</span> d, <span\
      \ class=\"kw5\">int</span> x, <span class=\"kw5\">int</span> s, <span class=\"\
      kw5\">int</span> ac<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n\
      \ta <span class=\"sy0\">+=</span> H<span class=\"br0\">(</span>b, c, d<span\
      \ class=\"br0\">)</span> <span class=\"sy0\">+</span> x <span class=\"sy0\"\
      >+</span> ac;\n\ta <span class=\"sy0\">=</span> rotate_left <span class=\"br0\"\
      >(</span>a, s<span class=\"br0\">)</span> <span class=\"sy0\">+</span>b;\n<span\
      \ class=\"br0\">}</span>\n \n<span class=\"kw1\">static</span> <span class=\"\
      kw1\">final</span> <span class=\"kw1\">function</span> II<span class=\"br0\"\
      >(</span><span class=\"kw1\">out</span> <span class=\"kw5\">int</span> a, <span\
      \ class=\"kw5\">int</span> b, <span class=\"kw5\">int</span> c, <span class=\"\
      kw5\">int</span> d, <span class=\"kw5\">int</span> x, <span class=\"kw5\">int</span>\
      \ s, <span class=\"kw5\">int</span> ac<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\ta <span class=\"sy0\">+=</span> I<span class=\"br0\">(</span>b,\
      \ c, d<span class=\"br0\">)</span> <span class=\"sy0\">+</span> x <span class=\"\
      sy0\">+</span> ac;\n\ta <span class=\"sy0\">=</span> rotate_left <span class=\"\
      br0\">(</span>a, s<span class=\"br0\">)</span> <span class=\"sy0\">+</span>b;\n\
      <span class=\"br0\">}</span>\n \n<span class=\"kw1\">static</span> <span class=\"\
      kw1\">final</span> <span class=\"kw1\">function</span> <span class=\"kw5\">string</span>\
      \ DecToHex<span class=\"br0\">(</span><span class=\"kw5\">int</span> dec, <span\
      \ class=\"kw5\">int</span> size<span class=\"br0\">)</span>\n<span class=\"\
      br0\">{</span>\n\t<span class=\"kw1\">const</span> hex <span class=\"sy0\">=</span>\
      \ <span class=\"st0\">\"0123456789ABCDEF\"</span>;\n\t<span class=\"kw1\">local</span>\
      \ <span class=\"kw5\">string</span> s;\n\t<span class=\"kw1\">local</span> <span\
      \ class=\"kw5\">int</span> i;\n \n\t<span class=\"kw2\">for</span> <span class=\"\
      br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; i\
      \ <span class=\"sy0\">&lt;</span> size<span class=\"sy0\">*</span><span class=\"\
      nu0\">2</span>; i<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n\
      \t<span class=\"br0\">{</span>\n\t\ts <span class=\"sy0\">=</span> <span class=\"\
      kw3\">mid</span><span class=\"br0\">(</span>hex, dec <span class=\"sy0\">&amp;</span>\
      \ 0xf, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"\
      sy0\">$</span> s;\n\t\tdec <span class=\"sy0\">=</span> dec <span class=\"sy0\"\
      >&gt;&gt;&gt;</span> <span class=\"nu0\">4</span>;\n\t<span class=\"br0\">}</span>\n\
      \ \n\t<span class=\"kw2\">return</span> s;\n<span class=\"br0\">}</span></pre></div>\n\
      </div>\n<h2><span class=\"mw-headline\" id=\"License\">License</span><span class=\"\
      mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/edit/Legacy:MD5?section=2\"\
      \ title=\"Edit section: License\">edit</a><span class=\"mw-editsection-bracket\"\
      >]</span></span></h2>\n<p>Copyright 2004 (c) Petr Jelinek</p>\n<p>Released under\
      \ the <a href=\"/Legacy:LesserOpenUnrealModLicense\" title=\"Legacy:LesserOpenUnrealModLicense\"\
      >LesserOpenUnrealModLicense</a></p>\n<h2><span class=\"mw-headline\" id=\"Discussion\"\
      >Discussion</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\"\
      >[</span><a href=\"/edit/Legacy:MD5?section=3\" title=\"Edit section: Discussion\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p><b>Wormbo:</b>\
      \ This implementation is suboptimal due to the way UnrealScript's handles parameters\
      \ and function calls. It probably spends 30-50% of the execution time only passing\
      \ parameters and calling functions – two things UnrealScript isn't particularly\
      \ good at (especially with large parameters like the MD5 context here) because\
      \ it involves assigning values to variables.<br />\nI'm currently working on\
      \ implementations of <a href=\"/Legacy:MD5Hash\" title=\"Legacy:MD5Hash\">MD5Hash</a>\
      \ and <a href=\"/Legacy:SHA1Hash\" title=\"Legacy:SHA1Hash\">SHA1Hash</a> for\
      \ UnrealScript and the MD5 algorithm generally out-performs this one by 30-40%.</p>\n\
      <h2><span class=\"mw-headline\" id=\"Related_Articles\">Related Articles</span><span\
      \ class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a\
      \ href=\"/edit/Legacy:MD5?section=4\" title=\"Edit section: Related Articles\"\
      >edit</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<ul>\n\
      <li><a href=\"/Legacy:CRC32\" title=\"Legacy:CRC32\">CRC32</a></li>\n<li><a\
      \ href=\"/Legacy:SHA1\" title=\"Legacy:SHA1\" class=\"mw-redirect\">SHA1</a></li>\n\
      <li><a href=\"http://en.wikipedia.org/wiki/MD5\" class=\"extiw\" title=\"wikipedia:MD5\"\
      >Wikipedia:MD5</a></li>\n</ul>\n\n<!-- \nNewPP limit report\nCPU time usage:\
      \ 0.186 seconds\nReal time usage: 0.211 seconds\nPreprocessor visited node count:\
      \ 26/1000000\nPreprocessor generated node count: 50/1000000\nPost‐expand include\
      \ size: 3/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nHighest expansion\
      \ depth: 2/40\nExpensive parser function count: 0/100\n-->\n\n<!-- \nTransclusion\
      \ expansion time report (%,ms,calls,template)\n100.00%    0.000      1 - -total\n\
      -->\n\n<!-- Saved in parser cache with key wiki:pcache:idhash:2186-0!*!0!!en!*!*\
      \ and timestamp 20221120203215 and revision id 5300\n -->\n"
  categories:
  - sortkey: "MD5"
    name: "Legacy_Algorithm"
  links:
  - ns: 100
    exists: true
    name: "Legacy:LesserOpenUnrealModLicense"
  - ns: 100
    exists: true
    name: "Legacy:SHA1Hash"
  - ns: 100
    exists: true
    name: "Legacy:RSA"
  - ns: 100
    exists: true
    name: "Legacy:MD5Hash"
  - ns: 100
    exists: true
    name: "Legacy:SHA1"
  - ns: 100
    exists: true
    name: "Legacy:CRC32"
  templates: []
  images: []
  externallinks:
  - "http://theory.lcs.mit.edu/~rivest/homepage.html"
  sections:
  - toclevel: 1
    level: "2"
    line: "Code"
    number: "1"
    index: "1"
    fromtitle: "Legacy:MD5"
    byteoffset: 677
    anchor: "Code"
  - toclevel: 1
    level: "2"
    line: "License"
    number: "2"
    index: "2"
    fromtitle: "Legacy:MD5"
    byteoffset: 8622
    anchor: "License"
  - toclevel: 1
    level: "2"
    line: "Discussion"
    number: "3"
    index: "3"
    fromtitle: "Legacy:MD5"
    byteoffset: 8754
    anchor: "Discussion"
  - toclevel: 1
    level: "2"
    line: "Related Articles"
    number: "4"
    index: "4"
    fromtitle: "Legacy:MD5"
    byteoffset: 9344
    anchor: "Related_Articles"
  displaytitle: "Legacy:MD5"
  iwlinks:
  - prefix: "wikipedia"
    url: "http://en.wikipedia.org/wiki/MD5"
    name: "wikipedia:MD5"
  wikitext:
    text: "MD5 was developed by [http://theory.lcs.mit.edu/~rivest/homepage.html Professor\
      \ Ronald L. Rivest  of MIT]\n\nThe MD5 algorithm takes as input a message of\
      \ arbitrary length and produces as output a 128-bit \"fingerprint\" or \"message\
      \ digest\" of the input. It is conjectured that it is computationally infeasible\
      \ to produce two messages having the same message digest, or to produce any\
      \ message having a given prespecified target message digest. The MD5 algorithm\
      \ is intended for digital signature applications, where a large file must be\
      \ \"compressed\" in a secure manner before being encrypted with a private (secret)\
      \ key under a public-key cryptosystem such as [[Legacy:RSA|RSA]].\n\n==Code==\n\
      \n<uscript>\n/** MD5 context */\nstruct MD5_CTX\n{\n\t/** state (ABCD) */\n\t\
      var array<int> state;\n\t/** number of bits, modulo 2^64 (lsb first) */\n\t\
      var array<int> count;\n\t/** input buffer */\n\tvar array<byte> buffer;\n};\n\
      \n/** return the MD5 of the input string */\nstatic function string MD5String\
      \ (string str)\n{\n\tlocal MD5_CTX context;\n\tlocal array<byte> digest;\n\t\
      local string Hex;\n\tlocal int i;\n\n\tMD5Init (context);\n\tMD5Update (context,\
      \ str, Len(str));\n\tdigest.Length = 16;\n\tMD5Final (digest, context);\n\n\t\
      for (i = 0; i < 16; i++)\n\t\tHex = Hex $ DecToHex(digest[i], 1);\n\n\treturn\
      \ Hex;\n}\n\n/** initialize the MD5 context */\nstatic final function MD5Init(out\
      \ MD5_CTX context)\n{\n\tcontext.count.Length = 2;\n\tcontext.count[0] = 0;\n\
      \tcontext.count[1] = 0;\n\tcontext.state.Length = 4;\n\tcontext.state[0] = 0x67452301;\n\
      \tcontext.state[1] = 0xefcdab89;\n\tcontext.state[2] = 0x98badcfe;\n\tcontext.state[3]\
      \ = 0x10325476;\n\tcontext.buffer.Length = 64;\n}\n\nstatic final function MD5Transform(out\
      \ array<int> Buf, array<byte> block)\n{\n\tlocal int A,B,C,D;\n\tlocal array<int>\
      \ x;\n\n\tA = Buf[0];\n\tB = Buf[1];\n\tC = Buf[2];\n\tD = Buf[3];\n\n\tx.Length\
      \ = 16;\n\n\tDecode (x, block, 64);\n\n\t/* Round 1 */\n\tFF (a, b, c, d, x[\
      \ 0],  7, 0xd76aa478); /* 1 */\n\tFF (d, a, b, c, x[ 1], 12, 0xe8c7b756); /*\
      \ 2 */\n\tFF (c, d, a, b, x[ 2], 17, 0x242070db); /* 3 */\n\tFF (b, c, d, a,\
      \ x[ 3], 22, 0xc1bdceee); /* 4 */\n\tFF (a, b, c, d, x[ 4],  7, 0xf57c0faf);\
      \ /* 5 */\n\tFF (d, a, b, c, x[ 5], 12, 0x4787c62a); /* 6 */\n\tFF (c, d, a,\
      \ b, x[ 6], 17, 0xa8304613); /* 7 */\n\tFF (b, c, d, a, x[ 7], 22, 0xfd469501);\
      \ /* 8 */\n\tFF (a, b, c, d, x[ 8],  7, 0x698098d8); /* 9 */\n\tFF (d, a, b,\
      \ c, x[ 9], 12, 0x8b44f7af); /* 10 */\n\tFF (c, d, a, b, x[10], 17, 0xffff5bb1);\
      \ /* 11 */\n\tFF (b, c, d, a, x[11], 22, 0x895cd7be); /* 12 */\n\tFF (a, b,\
      \ c, d, x[12],  7, 0x6b901122); /* 13 */\n\tFF (d, a, b, c, x[13], 12, 0xfd987193);\
      \ /* 14 */\n\tFF (c, d, a, b, x[14], 17, 0xa679438e); /* 15 */\n\tFF (b, c,\
      \ d, a, x[15], 22, 0x49b40821); /* 16 */\n\n\t/* Round 2 */\n\tGG (a, b, c,\
      \ d, x[ 1],  5, 0xf61e2562); /* 17 */\n\tGG (d, a, b, c, x[ 6],  9, 0xc040b340);\
      \ /* 18 */\n\tGG (c, d, a, b, x[11], 14, 0x265e5a51); /* 19 */\n\tGG (b, c,\
      \ d, a, x[ 0], 20, 0xe9b6c7aa); /* 20 */\n\tGG (a, b, c, d, x[ 5],  5, 0xd62f105d);\
      \ /* 21 */\n\tGG (d, a, b, c, x[10],  9,  0x2441453); /* 22 */\n\tGG (c, d,\
      \ a, b, x[15], 14, 0xd8a1e681); /* 23 */\n\tGG (b, c, d, a, x[ 4], 20, 0xe7d3fbc8);\
      \ /* 24 */\n\tGG (a, b, c, d, x[ 9],  5, 0x21e1cde6); /* 25 */\n\tGG (d, a,\
      \ b, c, x[14],  9, 0xc33707d6); /* 26 */\n\tGG (c, d, a, b, x[ 3], 14, 0xf4d50d87);\
      \ /* 27 */\n\tGG (b, c, d, a, x[ 8], 20, 0x455a14ed); /* 28 */\n\tGG (a, b,\
      \ c, d, x[13],  5, 0xa9e3e905); /* 29 */\n\tGG (d, a, b, c, x[ 2],  9, 0xfcefa3f8);\
      \ /* 30 */\n\tGG (c, d, a, b, x[ 7], 14, 0x676f02d9); /* 31 */\n\tGG (b, c,\
      \ d, a, x[12], 20, 0x8d2a4c8a); /* 32 */\n\n\t/* Round 3 */\n\tHH (a, b, c,\
      \ d, x[ 5],  4, 0xfffa3942); /* 33 */\n\tHH (d, a, b, c, x[ 8], 11, 0x8771f681);\
      \ /* 34 */\n\tHH (c, d, a, b, x[11], 16, 0x6d9d6122); /* 35 */\n\tHH (b, c,\
      \ d, a, x[14], 23, 0xfde5380c); /* 36 */\n\tHH (a, b, c, d, x[ 1],  4, 0xa4beea44);\
      \ /* 37 */\n\tHH (d, a, b, c, x[ 4], 11, 0x4bdecfa9); /* 38 */\n\tHH (c, d,\
      \ a, b, x[ 7], 16, 0xf6bb4b60); /* 39 */\n\tHH (b, c, d, a, x[10], 23, 0xbebfbc70);\
      \ /* 40 */\n\tHH (a, b, c, d, x[13],  4, 0x289b7ec6); /* 41 */\n\tHH (d, a,\
      \ b, c, x[ 0], 11, 0xeaa127fa); /* 42 */\n\tHH (c, d, a, b, x[ 3], 16, 0xd4ef3085);\
      \ /* 43 */\n\tHH (b, c, d, a, x[ 6], 23,  0x4881d05); /* 44 */\n\tHH (a, b,\
      \ c, d, x[ 9],  4, 0xd9d4d039); /* 45 */\n\tHH (d, a, b, c, x[12], 11, 0xe6db99e5);\
      \ /* 46 */\n\tHH (c, d, a, b, x[15], 16, 0x1fa27cf8); /* 47 */\n\tHH (b, c,\
      \ d, a, x[ 2], 23, 0xc4ac5665); /* 48 */\n\n\t/* Round 4 */\n\tII (a, b, c,\
      \ d, x[ 0],  6, 0xf4292244); /* 49 */\n\tII (d, a, b, c, x[ 7], 10, 0x432aff97);\
      \ /* 50 */\n\tII (c, d, a, b, x[14], 15, 0xab9423a7); /* 51 */\n\tII (b, c,\
      \ d, a, x[ 5], 21, 0xfc93a039); /* 52 */\n\tII (a, b, c, d, x[12],  6, 0x655b59c3);\
      \ /* 53 */\n\tII (d, a, b, c, x[ 3], 10, 0x8f0ccc92); /* 54 */\n\tII (c, d,\
      \ a, b, x[10], 15, 0xffeff47d); /* 55 */\n\tII (b, c, d, a, x[ 1], 21, 0x85845dd1);\
      \ /* 56 */\n\tII (a, b, c, d, x[ 8],  6, 0x6fa87e4f); /* 57 */\n\tII (d, a,\
      \ b, c, x[15], 10, 0xfe2ce6e0); /* 58 */\n\tII (c, d, a, b, x[ 6], 15, 0xa3014314);\
      \ /* 59 */\n\tII (b, c, d, a, x[13], 21, 0x4e0811a1); /* 60 */\n\tII (a, b,\
      \ c, d, x[ 4],  6, 0xf7537e82); /* 61 */\n\tII (d, a, b, c, x[11], 10, 0xbd3af235);\
      \ /* 62 */\n\tII (c, d, a, b, x[ 2], 15, 0x2ad7d2bb); /* 63 */\n\tII (b, c,\
      \ d, a, x[ 9], 21, 0xeb86d391); /* 64 */\n\n\tBuf[0] += A;\n\tBuf[1] += B;\n\
      \tBuf[2] += C;\n\tBuf[3] += D;\n}\n\n/** update MD5 context */\nstatic final\
      \ function MD5Update(out MD5_CTX Context, string Data, int inputLen)\n{\n\t\
      local int i, index, partlen;\n\tlocal array<byte> tmpbuf;\n\n\ttmpbuf.Length\
      \ = 64;\n\tindex = ((context.count[0] >>> 3) & 0x3F);\n\tif ((context.count[0]\
      \ += (inputLen << 3)) < (inputLen << 3))\n\t\tcontext.count[1]++;\n\tcontext.count[1]\
      \ += (inputLen >>> 29);\n\tpartLen = 64 - index;\n\n\tif (inputLen >= partLen)\n\
      \t{\n\t\tMD5Move(Data, 0, context.buffer, index, partLen);\n\t\tMD5Transform\
      \ (context.state, context.buffer);\n\t\tfor (i = partLen; i + 63 < inputLen;\
      \ i += 64)\n\t\t{\n\t\t\tMD5Move(Data, i, tmpbuf, 0, 64);\n\t\t\tMD5Transform\
      \ (context.state, tmpbuf);\n\t\t}\n\t\tindex = 0;\n\t}\n\telse\n\t\ti = 0;\n\
      \n\tMD5Move(Data, i, context.buffer, index, inputLen-i);\n}\n\n/** finalize\
      \ the MD5 context */\nstatic final function MD5Final (out array<byte> digest,\
      \ out MD5_CTX context)\n{\n\tlocal array<byte> bits;\n\tlocal int i, index,\
      \ padLen;\n\tlocal string strbits;\n\tlocal string PADDING;\n\n\tPADDING = chr(0x80);\n\
      \tfor (i = 1; i < 64; i++)\n\t\tPADDING = PADDING$chr(0);\n\n\tEncode (bits,\
      \ context.count, 8);\n\n\tindex = ((context.count[0] >>> 3) & 0x3f);\n\tif (index\
      \ < 56)\n\t\tpadLen = (56 - index);\n\telse\n\t\tpadLen = (120 - index);\n\t\
      MD5Update (context, PADDING, padLen);\n\tstrbits = \"\";\n\tfor (i=0;i<8;i++)\n\
      \t\tstrbits = strbits$Chr(bits[i]);\n\tMD5Update (context, strbits, 8);\n\t\
      Encode (digest, context.state, 16);\n\n\tfor (i = 0; i < 64; i++)\n\t{\n\t\t\
      context.buffer[i] = 0;\n\t}\n}\n\nstatic final function Encode (out array<byte>\
      \ output, array<int> input, int len)\n{\n\tlocal int i, j;\n\n\ti = 0;\n\tfor\
      \ (j = 0; j < len; j += 4)\n\t{\n\t\toutput[j] = (input[i] & 0xff);\n\t\toutput[j+1]\
      \ = ((input[i] >> 8) & 0xff);\n\t\toutput[j+2] = ((input[i] >> 16) & 0xff);\n\
      \t\toutput[j+3] = ((input[i] >> 24) & 0xff);\n\t\ti++;\n\t}\n}\n\n\nstatic final\
      \ function Decode(out array<int> output, array<byte> input, int len)\n{\n\t\
      local int i, j;\n\n\ti = 0;\n\tfor (j = 0; j < len; j += 4)\n\t{\n\t\toutput[i]\
      \ = ((input[j]) | (int(input[j+1]) << 8) | (int(input[j+2]) << 16) | (int(input[j+3])\
      \ << 24));\n\t\ti++;\n\t}\n}\n\n\nstatic final function MD5Move(string src,\
      \ int srcindex, out array<byte> buffer, int bufindex, int len)\n{\n\tlocal int\
      \ i,j;\n\n\tj = bufindex;\n\tfor (i = srcindex; i < srcindex+len; i++)\n\t{\n\
      \t\tbuffer[j] = Asc(Mid(src, i, 1));\n\t\tj++;\n\t\tif (j == 64)\n\t\t\tbreak;\n\
      \t}\n}\n\n\nstatic final function int ROTATE_LEFT (int x, int n)\n{\n\treturn\
      \ (((x) << (n)) | ((x) >>> (32-(n))));\n}\n\nstatic final function int F (int\
      \ x, int y, int z)\n{\n\treturn (((x) & (y)) | ((~x) & (z)));\n}\n\nstatic final\
      \ function int G (int x, int y, int z)\n{\n\treturn ((x & z) | (y & (~z)));\n\
      }\n\nstatic final function int H (int x, int y, int z)\n{\n\treturn (x ^ y ^\
      \ z);\n}\n\nstatic final function int I (int x, int y, int z)\n{\n\treturn (y\
      \ ^ (x | (~z)));\n}\n\nstatic final function FF(out int a, int b, int c, int\
      \ d, int x, int s, int ac)\n{\n\ta += F(b, c, d) + x + ac;\n\ta = ROTATE_LEFT\
      \ (a, s);\n\ta += b;\n}\n\nstatic final function GG(out int a, int b, int c,\
      \ int d, int x, int s, int ac)\n{\n\ta += G(b, c, d) + x + ac;\n\ta = rotate_left\
      \ (a, s) +b;\n}\n\nstatic final function HH(out int a, int b, int c, int d,\
      \ int x, int s, int ac)\n{\n\ta += H(b, c, d) + x + ac;\n\ta = rotate_left (a,\
      \ s) +b;\n}\n\nstatic final function II(out int a, int b, int c, int d, int\
      \ x, int s, int ac)\n{\n\ta += I(b, c, d) + x + ac;\n\ta = rotate_left (a, s)\
      \ +b;\n}\n\nstatic final function string DecToHex(int dec, int size)\n{\n\t\
      const hex = \"0123456789ABCDEF\";\n\tlocal string s;\n\tlocal int i;\n\n\tfor\
      \ (i = 0; i < size*2; i++)\n\t{\n\t\ts = mid(hex, dec & 0xf, 1) $ s;\n\t\tdec\
      \ = dec >>> 4;\n\t}\n\n\treturn s;\n}\n</uscript>\n\n==License==\n\nCopyright\
      \ 2004 (c) Petr Jelinek\n\nReleased under the [[Legacy:LesserOpenUnrealModLicense|LesserOpenUnrealModLicense]]\
      \ \n\n==Discussion==\n\n'''Wormbo:''' This implementation is suboptimal due\
      \ to the way UnrealScript's handles parameters and function calls. It probably\
      \ spends 30-50% of the execution time only passing parameters and calling functions\
      \ &ndash; two things UnrealScript isn't particularly good at (especially with\
      \ large parameters like the MD5 context here) because it involves assigning\
      \ values to variables.<br />I'm currently working on implementations of [[Legacy:MD5Hash|MD5Hash]]\
      \ and [[Legacy:SHA1Hash|SHA1Hash]] for UnrealScript and the MD5 algorithm generally\
      \ out-performs this one by 30-40%.\n\n==Related Articles==\n* [[Legacy:CRC32|CRC32]]\n\
      * [[Legacy:SHA1|SHA1]]\n* [[Wikipedia:MD5]]\n\n[[Category:Legacy Algorithm|{{PAGENAME}}]]"
  properties: []
  revId: 5300
name: "Legacy:MD5"
revision:
  revid: 5300
  parentid: 5301
  user: "El Muerte"
  timestamp: 1144361984.000000000
  comment: "revert"
timestamp: 1668976076.370805000
